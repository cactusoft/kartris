/****** Object:  Table [dbo].[tblKartrisObjectConfigValue]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisObjectConfigValue](
	[OCV_ObjectConfigID] [smallint] NOT NULL,
	[OCV_ParentID] [bigint] NOT NULL,
	[OCV_Value] [nvarchar](max) NULL,
 CONSTRAINT [PK_tblKartrisObjectConfigValue] PRIMARY KEY NONCLUSTERED 
(
	[OCV_ObjectConfigID] ASC,
	[OCV_ParentID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE UNIQUE CLUSTERED INDEX [idxObjectConfigID_ParentID] ON [dbo].[tblKartrisObjectConfigValue] 
(
	[OCV_ObjectConfigID] ASC,
	[OCV_ParentID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisObjectConfig]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblKartrisObjectConfig](
	[OC_ID] [smallint] IDENTITY(1,1) NOT NULL,
	[OC_Name] [nvarchar](100) NOT NULL,
	[OC_ObjectType] [nvarchar](50) NULL,
	[OC_DataType] [char](1) NULL,
	[OC_DefaultValue] [nvarchar](max) NULL,
	[OC_Description] [nvarchar](255) NULL,
	[OC_MultilineValue] [bit] NULL,
	[OC_VersionAdded] [real] NULL,
 CONSTRAINT [PK_tblKartrisObjectConfig] PRIMARY KEY NONCLUSTERED 
(
	[OC_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE UNIQUE CLUSTERED INDEX [idxOC_Name] ON [dbo].[tblKartrisObjectConfig] 
(
	[OC_Name] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
SET IDENTITY_INSERT [dbo].[tblKartrisObjectConfig] ON
INSERT [dbo].[tblKartrisObjectConfig] ([OC_ID], [OC_Name], [OC_ObjectType], [OC_DataType], [OC_DefaultValue], [OC_Description], [OC_MultilineValue], [OC_VersionAdded]) VALUES (2, N'K:product.addtobasketqty', N'Product', N's', N'', N'add-to-basket quantity field type (dropdown, textbox or none).', 0, 1.4)
INSERT [dbo].[tblKartrisObjectConfig] ([OC_ID], [OC_Name], [OC_ObjectType], [OC_DataType], [OC_DefaultValue], [OC_Description], [OC_MultilineValue], [OC_VersionAdded]) VALUES (1, N'K:product.callforprice', N'Product', N'b', N'0', N'display ''call for price'' and hide ''add'' button.', 0, 1.4)
INSERT [dbo].[tblKartrisObjectConfig] ([OC_ID], [OC_Name], [OC_ObjectType], [OC_DataType], [OC_DefaultValue], [OC_Description], [OC_MultilineValue], [OC_VersionAdded]) VALUES (5, N'K:product.customcontrolname', N'Product', N's', N'', N'name of the custom control to use for calculating item price.', 0, 1.4)
INSERT [dbo].[tblKartrisObjectConfig] ([OC_ID], [OC_Name], [OC_ObjectType], [OC_DataType], [OC_DefaultValue], [OC_Description], [OC_MultilineValue], [OC_VersionAdded]) VALUES (3, N'K:product.unitsize', N'Product', N'n', N'1', N'The unit size in which the item is sold.', 0, 1.4)
INSERT [dbo].[tblKartrisObjectConfig] ([OC_ID], [OC_Name], [OC_ObjectType], [OC_DataType], [OC_DefaultValue], [OC_Description], [OC_MultilineValue], [OC_VersionAdded]) VALUES (4, N'K:product.usecombinationprice', N'Product', N'b', N'0', N'use combination price instead of options prices.', 0, 1.4)
INSERT [dbo].[tblKartrisObjectConfig] ([OC_ID], [OC_Name], [OC_ObjectType], [OC_DataType], [OC_DefaultValue], [OC_Description], [OC_MultilineValue], [OC_VersionAdded]) VALUES (6, N'K:version.extrasku', N'Version', N's', NULL, N'Extra code number for versions (store specific).', 0, 2)
INSERT [dbo].[tblKartrisObjectConfig] ([OC_ID], [OC_Name], [OC_ObjectType], [OC_DataType], [OC_DefaultValue], [OC_Description], [OC_MultilineValue], [OC_VersionAdded]) VALUES (7, N'K:product.showlargeimageinline', N'Product', N'b', N'0', N'Change products images to large view mode instead of being displayed in the image gallery.', 0, 2.5006)
SET IDENTITY_INSERT [dbo].[tblKartrisObjectConfig] OFF
/****** Object:  Table [dbo].[tblKartrisAffiliatePayments]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisAffiliatePayments](
	[AFP_ID] [int] IDENTITY(1,1) NOT NULL,
	[AFP_DateTime] [datetime] NULL,
	[AFP_AffiliateID] [int] NULL,
 CONSTRAINT [aaaaatblKartrisAffiliatePayments_PK] PRIMARY KEY NONCLUSTERED 
(
	[AFP_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE UNIQUE CLUSTERED INDEX [idxAFP_ID] ON [dbo].[tblKartrisAffiliatePayments] 
(
	[AFP_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [AFP_AffiliateID] ON [dbo].[tblKartrisAffiliatePayments] 
(
	[AFP_AffiliateID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [AFP_ID] ON [dbo].[tblKartrisAffiliatePayments] 
(
	[AFP_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisAffiliateLog]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisAffiliateLog](
	[AFLG_ID] [int] IDENTITY(1,1) NOT NULL,
	[AFLG_AffiliateID] [int] NULL,
	[AFLG_Referer] [nvarchar](255) NULL,
	[AFLG_IP] [nvarchar](30) NULL,
	[AFLG_RequestedItem] [nvarchar](255) NULL,
	[AFLG_DateTime] [datetime] NULL,
 CONSTRAINT [aaaaatblKartrisAffiliateLog_PK] PRIMARY KEY NONCLUSTERED 
(
	[AFLG_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE UNIQUE CLUSTERED INDEX [idxAFLG_ID] ON [dbo].[tblKartrisAffiliateLog] 
(
	[AFLG_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [AFLG_AffiliateID] ON [dbo].[tblKartrisAffiliateLog] 
(
	[AFLG_AffiliateID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [AFLOG_ID] ON [dbo].[tblKartrisAffiliateLog] 
(
	[AFLG_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisAdminRelatedTables]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisAdminRelatedTables](
	[ART_TableName] [nvarchar](100) NOT NULL,
	[ART_TableOrderProducts] [tinyint] NULL,
	[ART_TableOrderOrders] [tinyint] NULL,
	[ART_TableOrderSessions] [tinyint] NULL,
	[ART_TableOrderContents] [tinyint] NULL,
	[ART_TableStartingIdentity] [int] NULL,
 CONSTRAINT [PK_tblKartrisAdminOrdersRelatedTables] PRIMARY KEY CLUSTERED 
(
	[ART_TableName] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisAddresses', NULL, 19, NULL, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisAffiliateLog', NULL, 12, NULL, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisAffiliatePayments', NULL, 11, NULL, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisAttributes', 14, NULL, NULL, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisAttributeValues', 7, NULL, NULL, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisBasketOptionValues', 8, 15, 3, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisBasketValues', 15, 16, 4, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisCategories', 23, NULL, NULL, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisCategoryHierarchy', 6, NULL, NULL, NULL, NULL)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisClonedOrders', NULL, 7, NULL, NULL, NULL)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisCoupons', NULL, 17, NULL, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisCustomerGroupPrices', 19, 2, NULL, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisCustomerGroups', NULL, 3, NULL, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisInvoiceRows', NULL, 5, NULL, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisKnowledgebase', NULL, NULL, NULL, 3, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisMediaLinks', 20, NULL, NULL, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisNews', NULL, NULL, NULL, 1, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisObjectConfigValue', 28, NULL, NULL, NULL, NULL)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisOptionGroups', 17, NULL, NULL, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisOptions', 16, NULL, NULL, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisOrderPaymentLink', NULL, 8, NULL, NULL, NULL)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisOrders', NULL, 10, NULL, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisOrdersPromotions', 10, 6, NULL, NULL, NULL)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisPages', NULL, NULL, NULL, 2, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisPayments', NULL, 9, NULL, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisProductCategoryLink', 2, NULL, NULL, NULL, NULL)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisProductOptionGroupLink', 3, NULL, NULL, NULL, NULL)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisProductOptionLink', 4, NULL, NULL, NULL, NULL)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisProducts', 22, NULL, NULL, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisPromotionParts', 9, NULL, NULL, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisPromotions', 13, NULL, NULL, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisQuantityDiscounts', 18, NULL, NULL, NULL, NULL)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisRelatedProducts', 5, NULL, NULL, NULL, NULL)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisReviews', 12, NULL, NULL, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisSavedBaskets', 25, 13, NULL, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisSearchStatistics', 27, NULL, NULL, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisSessions', NULL, 4, 2, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisSessionValues', NULL, 1, 1, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisStatistics', 11, NULL, NULL, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisSuppliers', 24, NULL, NULL, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisSupportTicketMessages', NULL, 20, NULL, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisSupportTickets', NULL, 21, NULL, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisUsers', NULL, 18, NULL, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisVersionOptionLink', 1, NULL, NULL, NULL, NULL)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisVersions', 21, NULL, NULL, NULL, 0)
INSERT [dbo].[tblKartrisAdminRelatedTables] ([ART_TableName], [ART_TableOrderProducts], [ART_TableOrderOrders], [ART_TableOrderSessions], [ART_TableOrderContents], [ART_TableStartingIdentity]) VALUES (N'tblKartrisWishLists', 26, 14, NULL, NULL, 0)
/****** Object:  Table [dbo].[tblKartrisAdminLog]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisAdminLog](
	[AL_ID] [int] IDENTITY(1,1) NOT NULL,
	[AL_DateStamp] [datetime] NULL,
	[AL_LoginName] [nvarchar](100) NULL,
	[AL_Type] [nvarchar](50) NULL,
	[AL_Description] [nvarchar](255) NULL,
	[AL_Query] [nvarchar](max) NULL,
	[AL_RelatedID] [nvarchar](255) NULL,
	[AL_IP] [nvarchar](255) NULL,
 CONSTRAINT [aaaaatblKartrisAdminLog_PK] PRIMARY KEY NONCLUSTERED 
(
	[AL_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE UNIQUE CLUSTERED INDEX [idxAL_ID] ON [dbo].[tblKartrisAdminLog] 
(
	[AL_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [AL_LoginID] ON [dbo].[tblKartrisAdminLog] 
(
	[AL_LoginName] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisAddresses]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisAddresses](
	[ADR_ID] [int] IDENTITY(1,1) NOT NULL,
	[ADR_UserID] [int] NULL,
	[ADR_Label] [nvarchar](50) NULL,
	[ADR_Name] [nvarchar](50) NULL,
	[ADR_Company] [nvarchar](100) NULL,
	[ADR_StreetAddress] [nvarchar](100) NULL,
	[ADR_TownCity] [nvarchar](50) NULL,
	[ADR_County] [nvarchar](50) NULL,
	[ADR_PostCode] [nvarchar](20) NULL,
	[ADR_Country] [int] NULL,
	[ADR_Telephone] [nvarchar](50) NULL,
	[ADR_Type] [nvarchar](1) NULL,
 CONSTRAINT [PK_tblKartrisAddresses] PRIMARY KEY CLUSTERED 
(
	[ADR_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[tblKartrisAddresses] ADD  CONSTRAINT [DF_tblKartrisAddresses_ADR_Type]  DEFAULT ('u') FOR [ADR_Type]
GO

/****** Object:  StoredProcedure [dbo].[spKartrisDB_GetFieldLength]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisDB_GetFieldLength](@tblName as varchar(60), @FieldName as varchar(60))
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	SELECT COL_LENGTH(@tblName, @FieldName)/2 ;

END
GO
/****** Object:  Table [dbo].[tblKartrisConfig]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblKartrisConfig](
	[CFG_Name] [nvarchar](100) NOT NULL,
	[CFG_Value] [nvarchar](255) NULL,
	[CFG_DataType] [char](1) NOT NULL,
	[CFG_DisplayType] [char](1) NULL,
	[CFG_DisplayInfo] [nvarchar](255) NULL,
	[CFG_Description] [nvarchar](255) NULL,
	[CFG_VersionAdded] [real] NULL,
	[CFG_DefaultValue] [nvarchar](255) NULL,
	[CFG_Important] [bit] NULL,
 CONSTRAINT [PK_tblKartrisConfig] PRIMARY KEY CLUSTERED 
(
	[CFG_Name] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
EXEC sys.sp_addextendedproperty @name=N'MS_ColumnHidden', @value=N'False' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig', @level2type=N'COLUMN',@level2name=N'CFG_Name'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_ColumnOrder', @value=0 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig', @level2type=N'COLUMN',@level2name=N'CFG_Name'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_ColumnWidth', @value=-1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig', @level2type=N'COLUMN',@level2name=N'CFG_Name'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_ColumnHidden', @value=N'False' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig', @level2type=N'COLUMN',@level2name=N'CFG_Value'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_ColumnOrder', @value=0 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig', @level2type=N'COLUMN',@level2name=N'CFG_Value'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_ColumnWidth', @value=-1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig', @level2type=N'COLUMN',@level2name=N'CFG_Value'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_ColumnHidden', @value=N'False' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig', @level2type=N'COLUMN',@level2name=N'CFG_DataType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_ColumnOrder', @value=0 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig', @level2type=N'COLUMN',@level2name=N'CFG_DataType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_ColumnWidth', @value=-1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig', @level2type=N'COLUMN',@level2name=N'CFG_DataType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_ColumnHidden', @value=N'False' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig', @level2type=N'COLUMN',@level2name=N'CFG_DisplayType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_ColumnOrder', @value=0 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig', @level2type=N'COLUMN',@level2name=N'CFG_DisplayType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_ColumnWidth', @value=-1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig', @level2type=N'COLUMN',@level2name=N'CFG_DisplayType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_ColumnHidden', @value=N'False' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig', @level2type=N'COLUMN',@level2name=N'CFG_DisplayInfo'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_ColumnOrder', @value=0 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig', @level2type=N'COLUMN',@level2name=N'CFG_DisplayInfo'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_ColumnWidth', @value=-1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig', @level2type=N'COLUMN',@level2name=N'CFG_DisplayInfo'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_ColumnHidden', @value=N'False' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig', @level2type=N'COLUMN',@level2name=N'CFG_Description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_ColumnOrder', @value=0 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig', @level2type=N'COLUMN',@level2name=N'CFG_Description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_ColumnWidth', @value=-1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig', @level2type=N'COLUMN',@level2name=N'CFG_Description'
GO
EXEC sys.sp_addextendedproperty @name=N'Kartris_Version', @value=N'1.0022' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig', @level2type=N'COLUMN',@level2name=N'CFG_VersionAdded'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_ColumnHidden', @value=N'False' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig', @level2type=N'COLUMN',@level2name=N'CFG_VersionAdded'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_ColumnOrder', @value=0 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig', @level2type=N'COLUMN',@level2name=N'CFG_VersionAdded'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_ColumnWidth', @value=-1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig', @level2type=N'COLUMN',@level2name=N'CFG_VersionAdded'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_ColumnHidden', @value=N'False' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig', @level2type=N'COLUMN',@level2name=N'CFG_DefaultValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_ColumnOrder', @value=0 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig', @level2type=N'COLUMN',@level2name=N'CFG_DefaultValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_ColumnWidth', @value=-1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig', @level2type=N'COLUMN',@level2name=N'CFG_DefaultValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DefaultView', @value=0x02 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Filter', @value=NULL , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_OrderBy', @value=N'tblKartrisConfig.CFG_Name' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_OrderByOn', @value=N'True' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Orientation', @value=0x00 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_TableMaxRecords', @value=10000 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig'
GO
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'backend.adminlog.purgedays', N'30', N's', N'n', NULL, N'Determines the number of days used to purge admin logs.', 1, N'30', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'backend.categories.display.pagesize', N'2', N'n', N'n', NULL, N'The page size for the subcategories in the backend.', 1, N'10', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'backend.categories.paging.enabled', N'n', N's', N'b', N'y|n', N'Enable the subcategories'' paging in the backend.', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'backend.categorymenu.levels', N'1', N'n', N'n', NULL, N'Total number of hierarchy levels to show on the back end category list on the left menu. Set to 0 to show all.', 1, N'0', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'backend.display.pagesize', N'15', N'n', N'n', NULL, N'Number of records per page on miscellaneous back end pages', 1.002, N'25', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'backend.expertmode', N'y', N's', N's', N'y|n', N'Turns on some fields for editing in language strings and elsewhere that will only be needed by developers and expert users, especially if extending or modifying Kartris functionality', 1, N'n', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'backend.files.delete.cleanup', N'n', N's', N'b', N'y|n', N'if set to (y), then related files (images/media) will be deleted automatically when deleting items, otherwise (n) will keep the files till they are deleted manually from the DB Admin.', 1.2001, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'backend.imagetypes', N'.jpg,.jpeg,.gif,.png', N's', N'l', N'', N'List of acceptable image file types, comma separated', 1, N'jpg,jpeg,gif,png', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'backend.orders.emailupdates', N'n', N's', N'b', N'y|n', N'Whether to offer the cardholder the option to receive email updates when their order is updated (this however can be overridden on the modify orders page)', 1, N'n', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'backend.orders.invoiceduedays', N'30', N'n', N'n', N'', N'Number of days in which invoices should be paid - used only for showing overdue ones in the back end.', 1, N'30', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'backend.orders.returnstockondelete', N'y', N's', N'b', N'y|n', N'Whether to return stock levels on items in deleted orders', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'backend.orders.unfinished.purgedays', N'7', N'n', N'n', NULL, N'Determines the number of days used to purge unfinished orders', 1, N'14', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'backend.products.display.pagesize', N'5', N'n', N'n', N'', N'The paging size of the products in the backend', 1, N'10', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'backend.products.paging.enabled', N'n', N's', N'b', N'y|n', N'Config. to enable or disable the product''s paging in the backend.', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'backend.search.pagesize', N'25', N'n', N'n', N'', N'Backend search - number of items to display for each search type.', 1, N'', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'backend.stats.purgedays', N'365', N'n', N'n', N'', N'Determines the number of days used to purge statistics. Changing this to less than a year isn''t recommended and result in loss of useful data.', 1, N'365', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.basket.addtobasketdisplay', N'dropdown', N's', N's', N'button|textbox|dropdown', N'Specifies whether the default ''add to basket'' method should be a link, button, textbox or dropdown quantity menu - can be overridden at product level.', 1, N'dropdown', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.basket.addtobasketdropdown.max', N'15', N'n', N't', NULL, N'If dropdown is selected as the addtobasketdisplay type, this sets how the maximum quantity in the dropdown', 1, N'15', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.basket.behaviour', N'2', N's', N's', NULL, N'Determines whether basket addition displays message for number of seconds (if numeric), displays no basket (n) or shows the basket (y)', 1, N'2', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.basket.decimalplaces', N'2', N'n', N'n', N'1|2|3|4|5|n', N'control how many decimal places in the basket quantity', 1.3001, N'2', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.basket.shippingestimate', N'y', N's', N'b', N'y|n', N'whether to show estimate shipping in the basket or not.', 1.4, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.basket.showimages', N'y', N's', N'b', N'y|n', N'Whether to show images in the basket.', 1.1007, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.cataloguemode', N'n', N's', N'b', N'y|n', N'If set to yes, Kartris acts as a catalogue only - all basket features disabled. Note that any links in the skin (like links to the basket) may have to be removed.', 1, N'n', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.categories.display.default', N't', N's', N's', N'n|s|l|t', N'Determines the default category display type - n for normal, s for shortened multi-column format, l for link only, t for text (title + desc only)', 1, N'n', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.categories.display.link.pagesize', N'25', N'n', N'n', N'', N'Number of subcats per page when displaying in link format', 1, N'10', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.categories.display.normal.pagesize', N'5', N'n', N'n', N'', N'Number of subcats per page when displaying in normal format', 1, N'3', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.categories.display.normal.truncatedescription', N'120', N'n', N'n', N'', N'Number of characters to truncate the description on the category in ''normal'' format. 0 for no truncation (show whole description).', 1, N'120', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.categories.display.shortened.pagesize', N'8', N'n', N'n', N'', N'Number of subcats per page when displaying in ''multi-column'' short format', 1, N'3', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.categories.display.shortened.truncatedescription', N'85', N'n', N'n', N'', N'Number of characters to truncate the description on the category in ''shortened'' format. 0 for no truncation (show whole description).', 1, N'60', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.categories.display.sortdefault', N'CH_OrderNo', N's', N't', N'CAT_ID|CAT_Name|CH_OrderNo', N'The default value for how subcategories should be sorted - can be overridden for each parent category. Can be set to CAT_ID, CAT_Name, CH_OrderNo (the latter is for manual sorting).', 1, N'CH_OrderNo', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.categories.display.sortdirection', N'A', N's', N't', N'A|D', N'Sorting direction for the categories (''A''=>ASC or ''D''=>DESC)', 1, N'A', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.categories.display.text.pagesize', N'5', N'n', N'n', N'', N'Number of subcats per page when displaying in text format', 1, N'5', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.categories.display.text.truncatedescription', N'120', N'n', N'n', N'', N'Number of characters to truncate the description on the category in ''text'' format. 0 for no truncation (show whole description).', 1, N'120', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.category.showimage', N'n', N's', N'b', NULL, N'Whether to show an image for the category on category display page', 1, N'n', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.checkout.comments.enabled', N'y', N's', N's', N'y|n', N'Enables the customer comments box at checkout.', 1.0021, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.checkout.confirmation.showtotalsaved', N'y', N's', N'b', N'y|n', N'Whether to show ''you have saved xxx'' in the order email. This is a calculation based on each version RRP setting. If total saved is 0 (or less that 0) then it isn''t shown regardless of this setting.', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.checkout.defaultcountry', N'0', N'n', N'n', N'', N'The country to pre-select on shipping menu', 1, N'0', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.checkout.luhncheck', N'y', N's', N'b', N'y|n', N'Determines whether the check to see if the credit card number format is correct is on or off', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.checkout.orderhandlingcharge', N'0', N'n', N'n', N'', N'An addition order-handling charge that is added on to all orders. Set to 0 to disable.', 1, N'0', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.checkout.orderhandlingchargetaxband', N'2', N'n', N'n', N'', N'Determines which tax rate is applied to the order handling charge. To set or disable the order handling charge, see the orderhandlingcharge config setting.', 1, N'2', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.checkout.orderhandlingchargetaxband2', N'0', N'n', N'n', N'', N'Determines the second tax rate applied to the order handling charge. To set or disable the order handling charge, see the orderhandlingcharge config setting.', 1.4, N'0', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.checkout.ordertracking', N'y', N's', N'b', N'y|n', N'Determines whether the order tracking system is enabled or not - y/n', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.checkout.postcoderequired', N'y', N's', N'b', N'y|n', N'Whether or not your store has postcode as a required field (some countries don''t have postcodes)', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.checkout.savebasket', N'n', N's', N'b', N'y|n', N'Whether the customer gets the option to automatically save their basket when they complete a checkout.', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.checkout.shipping.calcbyweight', N'n', N's', N'b', N'y|n', N'If frontend.checkout.shipping.system is set to ''c'' (internal banded shipping system) then this determines whether to use the order weight or value to lookup the shipping cost.
y = use weight, n = use order value.', 1, N'n', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.checkout.shipping.pickupoption', N'n', N's', N'b', N'y|n', N'Whether to have a ''pickup'' option. If enabled, customers will get an option to select the ''pickup'' option from the available shipping methods, and hence won''t be charged shipping.', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.checkout.shipping.showmethods', N'showspecial', N's', N's', N'always|neveronone|showspecial|never', N'When to show the shipmmethods step on checkout. ''always'' ; ''never''; ''neveronone'' (never show the step if there''s only one available) ''showspecial'' (skip when only one available, except if this is pickup or download). Also see showshippingmethodsdropdown.', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.checkout.shipping.showmethodsdropdown', N'n', N's', N'b', N'y|n', N'Whether to show a shipping method choice dropdown on the final stage of checkout. Won''t show if there''s only one choice. This must be turned on if ''showshippingmethods'' is set to ''never''.', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.checkout.termsandconditions', N'y', N's', N'b', N'y|n', N'Whether to force the user to check a ''I have read an understand the terms & conditions of the site'' checkbox when ordering. Link pops up site terms & conditions (set in lang. string ContentText_TermsAndConditions before you turn this on!).', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.contact.includebasketcontents', N'user', N's', N's', N'always|enquiry|never|user', N'Whether to send the basket contents in the email to the store owner from the contact form. Always, Enquiry (only if customer chooses to ''make enquiry'' from the basket), never and ''user'' (user chooses on contact.asp).', 1, N'always', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.crossselling.peoplewhoboughtthis.max', N'5', N'n', N'n', NULL, N'The maximum number of ''people who bought this product also bought …'' entries on a product display. Set this to 0 to turn the feature off.', 1.0018, N'5', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.crossselling.peoplewhoboughtthis.type', N'n', N's', N'b', N'y|n', N'Whether the ''people who bought…'' list should just go by individual orders (y) or should cover all orders by a customer (n). The former returns less results, and will usually return more relevant results for sites processing large numbers of orders.', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.crossselling.trythesecategories', N'3', N'n', N'n', N'', N'The maximum number of entries to show on the ''try these categories:'' section on the product display (this section shows the other categories this product exists in. Won''t show if there are no other categories).', 1, N'3', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.display.categorymenu.levels', N'3', N'n', N'n', NULL, N'Total number of hierarchy levels to show on the front end category dropdown/list in the skin. Set to 0 to show all.', 1, N'2', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.display.categorymenu.type', N'a', N's', N'b', N'd|a|c', N'''d'' = dropdown/select Menu, ''a'' = accordion, ''c'' = CSS fold-out menu - note that types ''d'' and ''c'' are cached for 5 mins, so changes won''t take immediate effect', 1, N'a', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.display.image.categories.placeholder', N'y', N's', N'b', N'y|n', NULL, 1, N'n', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.display.image.products.placeholder', N'y', N's', N'b', N'y|n', NULL, 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.display.image.promotions.placeholder', N'n', N's', N'b', N'y|n', NULL, 1, N'n', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.display.image.versions.placeholder', N'y', N's', N'b', N'y|n', NULL, 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.display.images.large.height', N'400', N'n', N't', N'', N'Max height of large image in pixels', 1, N'600', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.display.images.large.linktype', N'a', N's', N's', N'a|n', N'The ''large view'' link can either trigger an AJAX popup [a] or a new page [n]', 1.0018, N'a', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.display.images.large.width', N'400', N'n', N't', N'', N'Max width of large image in pixels', 1, N'600', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.display.images.minithumb.height', N'70', N'n', N'n', NULL, N'Max height of miniature thumb image in pixels', 1, N'50', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.display.images.minithumb.width', N'70', N'n', N'n', NULL, N'Max width of miniature thumb image in pixels', 1, N'50', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.display.images.normal.height', N'220', N'n', N't', N'', N'Max height of normal image in pixels', 1, N'220', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.display.images.normal.width', N'220', N'n', N't', N'', N'Max width of normal image in pixels', 1, N'20', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.display.images.thumb.height', N'160', N'n', N't', NULL, N'Max height of thumbnail image in pixels', 1, N'160', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.display.images.thumb.width', N'160', N'n', N't', N'', N'Max width of thumbnail image in pixels', 1, N'160', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.display.images.watermarktext', N'', N's', N't', N'', N'The watermark text to appear in images. To use your shop url set it to [webshopurl]. To disable watermark leave the value blank.', 1.4, N'', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.display.newestproducts', N'4', N'n', N'n', N'', N'The number of newest products to have on the list. 0 to turn off the list.', 1, N'4', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.display.recentproducts', N'8', N'n', N'n', N'', N'Maximum number of recent products to show on product page. Set to 0 to turn this off.', 1, N'8', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.display.recentproducts.display', N'i', N's', N's', N'i|t', N'Display format for recent products: [i] image or [t] text.', 1.1007, N'i', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.display.showtax', N'y', N's', N'l', N'y|n|c', N'n = don''t show tax, y = show tax for prices, c = only show tax at checkout', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.display.topsellers.days', N'25', N'n', N'n', NULL, N'The number of days to use when calculating Top Selling Items. E.g. 30 means if looks at the last 30 days of orders when compiling the list. Set to 0 for all orders.', 1, N'30', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.display.topsellers.quantity', N'4', N'n', N'n', N'', N'The number of best sellers to have on the list. 0 to turn off the list.', 1, N'4', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.display.topsellers.truncate', N'32', N'n', N'n', N'', N'Number of characters to truncate the product names on the ''top selling products'' list. 0 for no truncation (show whole title).', 1, N'32', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.downloads.daysavailable', N'0', N'n', N'n', N'', N'The number of days after the product is ordered that the download is available for. Set to 0 for no limit. Note that if you don''t have instantdownload switched on, the customer may lose days whilst you authorize the order.', 1, N'3', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.downloads.hidden', N'y', N's', N'b', N'y|n', N'If downloads are hidden they are streamed to the page - making the location of the file hidden from the user.If you enable this, then all links to files must be relative and in directories that have IUSR read permissions.', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.downloads.instant', N'n', N's', N'b', N'y|n', N'Determines whether or not downloadable products are instantly available when an order has been put through. If set to ''n'', the the order has to be set as ''dispatched'' before the customer can download the product.', 1, N'n', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.featuredproducts.display.default', N's', N's', N's', N'n|e|s|t', N'The display type for the featured products (front page specials) - [n]ormal/[e]xtended/[s]hortened/[t]abular', 1, N's', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.featuredproducts.display.max', N'4', N'n', N'n', N'n:any number, 0:none, -1:unlimited', N'The maximum no. of featured products to be displayed in the front site.', 1, N'4', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.homepage.specials.display', N's', N's', N's', N's|n|e', N'Determines how the homepage product specials are displayed - Shortened Multi-Column Format, Normal, or Extended (with Version information)', 1, N's', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.knowledgebase.enabled', N'y', N's', N'b', N'y|n', N'Whether to enable the knowledgebase or not', 1.0016, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.languages.default', N'1', N'n', N'n', N'', N'The language that all users use before they specify one', 1, N'1', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.languages.display', N'image', N's', N't', N'dropdown|image|linkshort|linkfull', N'language switch display', 1.1008, N'image', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.minibasket.countversions', N'y', N's', N'b', N'y|n', N'Determines how the number of items display on the minibasket is calculated; y = total number of items, n = number of different items (i.e. rows)', 1, N'n', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.minibasket.compactversion', N'n', N's', N'b', N'y|n', N'Whether to display a compact mini-basket (single line link with total)', 2.5, N'n', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.minibasket.hidelinks', N'n', N's', N's', NULL, N'Hides the view basket, checkout and other links under the minibasket - reduces the height.', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.minibasket.hiderows', N'n', N's', N's', NULL, N'Hides the rows showing each item from the minibasket - useful where you need the basket to be a fixed size and fit into a small area on the site.', 1, N'n', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.minibasket.shippingestimate', N'y', N's', N'b', N'y|n', N'whether to show estimate shipping in the mini basket or not.', 1.4, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.navigationmenu.promotions', N'y', N's', N'b', N'y|n', N'Whether the promotions'' link to appear in the navigation menu', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.navigationmenu.sitenews', N'y', N's', N'b', N'y|n', N'Whether the ''sitenews'' link appears in the navigation menu', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.news.display.truncatestory', N'60', N'n', N'n', NULL, N'Number of characters to truncate description to. Zero for no truncation.', 1, N'60', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.news.max', N'5', N'n', N'n', N'-1:un-limited, n:to show the latest ''n'' news', N'the maximum number of news to be displayed in the front-home page', 1, N'5', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.optiongroups.showdescription', N'y', N's', N's', N'y|n', N'Whether to show the description for option groups in front end or not.', 1.4, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.orders.allowcoupons', N'y', N's', N'b', N'y|n', N'Whether to allow the customers to use discount coupons.', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.orders.allowenquiries', N'y', N's', N'b', N'y|n', N'Determines whether the enquiry system is enabled or not - y/n', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.orders.allowpurchaseoutofstock', N'y', N's', N'b', N'y|n', N'Whether to allow customers to purchase items, even if they are set as out of stock. Stock count will continue to go down in to negative figures.', 1, N'n', 0)
GO
print 'Processed 100 total records'
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.orders.checkinvoicedonpayment', N'y', N's', N'b', N'y|n', N'On a successful payment (a payment gateway has authorized payment), setting this on will automatically check the ''An invoice for payment has been issued'' checkbox for the order.', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.orders.checkreceivedonpayment', N'y', N's', N'b', N'y|n', N'On a successful payment (a payment gateway has authorized payment), setting this to on will automatically check the ''payment has been received'' checkbox for the order.', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.orders.emailcustomer', N'y', N's', N'b', N'y|n', N'Determines whether to send an email confirmation to customer for successful orders', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.orders.emailmerchant', N'y', N's', N'b', N'y|n', N'Determines whether to send an email confirmation to merchant for successful orders', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.orders.minordervalue', N'0', N'n', N'n', NULL, N'Minimum order value that the online store will accept (value before tax, in default currency)', 1, N'0', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.orders.showcommentsoninvoice', N'y', N's', N's', N'y|n', N'Whether to show the customer comments in the order invoice', 1.4, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.payment.debugmode.enabled', N'y', N's', N'b', N'y|n', N'Whether to enable logging of all callback requests. (By default only failed callbacks are always logged)', 1.0011, N'n', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.payment.gatewayslist', N'PO_OfflinePayment::on::false::False::p', N's', N'l', NULL, N'The value of this config setting is created automatically based on the payment systems settings - dont edit this manually.', 1, NULL, 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.products.comparison.enabled', N'y', N's', N'b', N'y|n', N'Turns the product comparison function on and off', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.products.comparison.images', N'y', N's', N'b', N'y|n', N'Whether to show images on the comparison page', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.products.comparison.maximum', N'6', N's', N's', N'', N'Total number of products customers can compare. 0 for no maximum (unlimited)', 1, N'00', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.products.comparison.prices', N'y', N's', N'b', N'y|n', N'Whether to show prices on the comparison page', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.products.comparison.rowlength', N'2', N'n', N'n', N'', N'Number of products to show on each row', 1, N'3', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.products.comparison.suppliers', N'n', N's', N'b', N'y|n', N'Whether to show suppliers on the comparison page', 1, N'n', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.products.display.default', N's', N's', N's', N's|n|e|t', N'Determines the default product display type on category pages - [n]ormal/[e]xtended/[s]hortened/[t]abular', 1, N'e', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.products.display.extended.pagesize', N'3', N'n', N'n', N'', N'Number of products per page when displaying in ''extended'' format', 1, N'3', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.products.display.fromprice', N'y', N's', N's', N'y|p|n', N'Whether to show a ''From'' price on product display: y = From $X.XX, p = $X.XX (i.e. price only), n = No display', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.products.display.normal.pagesize', N'5', N'n', N'n', N'', N'Number of products per category page when display is in normal view', 1, N'5', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.products.display.shortened.pagesize', N'8', N'n', N'n', N'', N'Number of products per page when displaying in ''multi-column'' short format', 1, N'3', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.products.display.shortformat.showdescription', N'n', N's', N'b', N'y|n', N'Whether to show the product description when products are displayed in shortened, multi-column format. This should only be used if your products have short descriptions.', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.products.display.sortdefault', N'P_Name', N's', N't', 'P_ID|P_Name|P_DateCreated|P_LastModified|PCAT_OrderNo', N'The default setting for how products should be sorted - can be overridden for each category. Can be set to P_ID, P_Name, P_DateCreated, P_LastModified, PCAT_OrderNo (the latter is for manual sorting).', 1, N'P_Name', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.products.display.sortdirection', N'A', N's', N't', N'A|D', N'Sorting direction for the products in the category (''A''=>ASC or ''D''=>DESC)', 1, N'A', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.products.display.tabular.pagesize', N'5', N'n', N'n', NULL, NULL, 1, NULL, 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.products.display.truncatedescription', N'120', N'n', N'n', N'', N'Number of characters to truncate the product description on the category, search and specials pages. 0 for no truncation (show whole description).', 1, N'250', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.products.promotions.display', N'plaintext', N's', N's', N'extended|plaintext|off', N'Whether the promotion items on the product page are shown in extended view (with thumbnail) or plain text, or off entirely.', 1, N'plaintext', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.promotions.additionaltext', N'y', N's', N'b', N'y|n', N'On extended view, whether to show extended information (how many promotions per order, total quantity on each version, promotion expiry date.', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.promotions.display', N'extended', N's', N's', N'extended|plaintext', N'Whether the promotions page items are shown in extended view (with thumbnail) or plain text', 1, N'plaintext', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.promotions.enabled', N'y', N's', N'b', N'y|n', N'Whether product promotions are enabled on the front end', 1.0017, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.promotions.maximum', N'2', N'n', N'n', NULL, N'Maximum number of promotions allowed on one order. Set this to 0 for no limit.', 1.0017, N'0', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.promotions.maxperpromotion', N'10', N'n', N'n', NULL, N'Maximum quantity of an individual promotion allowed. Set this to 0 for no limit.', 1.3004, N'10', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.reviews.autopostreviews', N'n', N's', N'b', N'y|n', N'Whether to automatically set ''reviews'' to live on the site. If ''n'', then reviews must first be checked on the backend and set manually to live. It is highly recommended that you don''t turn this feature on!', 1, N'n', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.reviews.dateformat', N'MMMM yyyy', N's', N't', N'', N'The format to use for displaying the date of a review on the front-end.', 1, N'[mn] [yyyy]_ByMohammad', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.reviews.emailnotification', N'y', N's', N'b', N'y|n', N'Whether to send the store owner an email when a new review is submitted.', 1, N'n', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.reviews.enabled', N'y', N's', N'b', N'y|n', N'Site-wide change of whether to enable customer reviews - If turned on (y), this can be customized on a per-product basis.', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.reviews.limit', N'5', N'n', N'n', N'', N'Limits the number of reviews to show on each product - e.g. 3 will only show the 3 latest reviews. Set to 0 for no limit.', 1, N'0', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.reviews.permission', N'all', N's', N's', N'all|customersonly|purchasersonly', N'Set who is allowed to add reviews to products. All allows all site users to add a review; customersonly only allows logged in customers; purchasersonly only allows logged in customers who have purchased the product.', 1, N'all', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.reviews.ratings.enabled', N'y', N's', N's', N'y|n|r', N'Whether to enable customers to add rating with product reviews - ''y'' to allow, ''n'' to turn off, and ''r'' to make them a required field (in which case there is no ''no rating'' option to customers).', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.reviews.ratings.maxvalue', N'5', N'n', N'n', N'', N'Maximum on rating scale for reviews (e.g. 5 will give the user a 1-5 selection). Do not change this feature if ratings are already in the database!', 1, N'5', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.reviews.title', N'yes', N's', N's', N'yes|no|required', N'Whether to enable customers to add ''titles'' on product reviews - ''yes'' to allow, ''no'' to turn off titles, and ''required'' for titles required (customer must enter a title).', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.search.defaultmethod', N'any', N's', N's', N'any|all|exact', N'The default search criteria. This is set on a quicksearch (e.g. the one in the skin) and the default selection on the search form.', 1, N'any', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.search.maxpages', N'10', N'n', N'n', N'', N'Max number of pages of search results (increase with care as there is a performance hit)', 1, N'50', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.search.pagesize', N'10', N'n', N'n', N'', N'Number of products per page of search results (for classic search results format)', 1, N'5', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.supporttickets.enabled', N'y', N's', N'b', N'y|n', N'Enables the support ticket system', 1.0016, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.users.access', N'no', N's', N's', N'yes|no|browse|partial', N'''No'' = full site viewable, ''Yes'' = must login to view site, ''Partial'' = prices & add buttons hidden until login, ''Browse'' = full site viewable, must login to checkout', 1, N'no', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.users.affiliates.commissionduedays', N'30', N'n', N'n', N'', N'Number of days from the day an order is placed when an affiliate commission is flagged as ''overdue''. Only used as indication on the backend.', 1, N'30', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.users.affiliates.commissiononlyonpaid', N'y', N's', N'b', N'y|n', N'Whether to only attribute payment to an affiliate (on both the front and backend) on orders that are flagged as ''paid''.', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.users.emailnewaccountdetails', N'n', N's', N'b', N'y|n', N'Whether to send an email to the customer on account creation. This email send occurs before an order is completed (so if an order is not completed, the customer is still informed about their account).', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.users.mailinglist.enabled', N'n', N's', N'b', N'y|n', N'Whether the mailinglist is enabled', 1, N'n', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.users.myaccount.affiliates.enabled', N'y', N's', N's', N'y|n', N'Whether to show affiliates section in ''my account''.', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.users.myaccount.orderhistory.max', N'10', N'n', N'n', N'', N'Maximum number of orders to show on My Account home page', 1, N'5', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.users.myaccount.savedbaskets.max', N'5', N'n', N'n', N'', N'Maximum number of saved baskets to show on My Account homepage', 1, N'5', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.users.myaccount.wishlists.max', N'5', N'n', N'n', NULL, N'Maximum number of wishlists to show on My Account homepage', 1, N'5', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.users.password.regexp', N'6', N'n', N'n', N'', N'Minimum size allowed for customer codes. To allow any length, set to 0.', 1, N'4', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.users.password.required', N'optional', N's', N's', N'automatic|optional|required', N'How to deal with passwords on new accounts - automatic (password is randomly generated for the customer), optional (if not specificied, randomly generated) or required (customer must enter a password during checkout).', 1, N'required', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.users.wishlists.enabled', N'y', N's', N'b', N'y|n', N'Whether to use the wish list functionality in the store', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.versions.display.default', N'r', N's', N's', N'r|o|p', N'Determines the default version display type - r for rows, p for dropdown with options with titles and prices.', 1, N'r', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.versions.display.showextrasku', N'n', N's', N'b', N'y|n', N'Whether to show the ''extra sku'' on the version display on the front end.', 2, N'n', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.versions.display.showrrp', N'n', N's', N'b', N'y|n', N'Whether to show an ''RRP'' column on the version display on the front end.', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.versions.display.showstock', N'n', N's', N'b', N'y|n', N'Whether to show a ''stock quantity'' column on the version display on the front end.', 1, N'', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.versions.display.sortdefault', N'V_Price', N's', N't', 'V_Name|V_Price|V_Quantity|V_OrderByValue', N'The default setting for how versions should be sorted - can be overridden for each product. Can be set to V_Name, V_Price, V_Quantity or V_OrderByValue (the latter is for manual sorting).', 1, N'V_Name', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.versions.display.sortdirection', N'A', N's', N't', N'A|D', N'', 1, N'A', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.versions.showweight', N'n', N's', N'b', N'y|n', N'Whether to show a ''weight'' column on the version display on the front end.', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.backupfolder', N'c:\KartrisDB_Backup\', N's', N't', NULL, NULL, 1, N'c:\KartrisDB_Backup\', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.databasedateformat', N'[yyyy]/[m]/[d] [24h]:[n0]:[s0]', N's', N't', N'', N'The date format used when inserting data in to the database. On most systems, a reverse date format works fine: however on some, this needs to be changed to your regional date format.', 1, N'[yyyy]/[m]/[d] [24h]:[n0]:[s0]', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.email.enablehtml', N'y', N's', N'b', N'y|n', N'Whether to allow HTML emails', 2, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.email.mailserver', N'localhost', N's', N't', NULL, N'The address of the SMTP mail server of your web host - in most cases can use ''localhost'' but some hosts may require you to use a separate SMTP server they specify.', 1, N'localhost', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.email.method', N'write', N's', N's', N'on|off|write|test', N'Determines which type of email method is used by the site - ''write'' is a test method that shows what mail would be sent as a popup, ''test'' sends to email address set in general.email.testaddress.', 1, N'write', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.email.smtpauthpassword', N'', N's', N't', N'', N'SMTP authentication password - leave blank unless authentication required (some mail methods don''t support this)', 1, N'', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.email.smtpauthusername', N'', N's', N't', N'', N'SMTP authentication username - leave blank unless authentication required (some mail methods don''t support this)', 1, N'', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.email.smtpportnumber', N'25', N'n', N't', N'', N'Port number for SMTP mail sending', 1, N'25', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.email.spoofcontactmail', N'y', N's', N'b', N'y|n', N'Whether or not to use the email address entered by the visitor on the contact form as the ''from'' address. Some hosting (including ours now!) does not permit this for anti-spam reasons.', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.errorlogs.enabled', N'y', N's', N'b', N'y|n', N'Enable or disable error logs in the site', 1, N'n', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.errors.emailadmin', N'y', N's', N'b', N'y|n', N'Whether to receive an email when an error on the site occurs.', 1, N'n', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.fts.enabled', N'n', N's', N't', N'Warning !! should not be modified by user', N'Warning !! (this config should not be modified by user), it will be modified automatically if needed.

indicates if the Full Text Search is enabled', 1.0022, N'n', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.googleanalytics.webpropertyid', N'', N's', N't', NULL, N'This is the Google Analytics web property ID for your site', 1.0021, NULL, 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.imagequality', N'85', N'n', N'n', N'1-99', N'Compression quality for uploaded images. This will allow the uploaded images to be compressed to improve performance and save disk space. To disable image compression set the value to 0 or 100', 2, N'85', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.paging.group.size', N'10', N'n', N'n', NULL, N'General item pager group size', 1.0018, N'10', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.products.hittracking', N'y', N's', N'b', N'y|n', N'Determines whether product hit tracking for the statistics is turned on or off - y/n', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.products.ordertracking', N'y', N's', N'b', N'y|n', N'Determines whether sales tracking for the version statistics is turned on or off', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.quantitydiscounts.bands', N'5', N'n', N'n', N'', N'The number of quantity discounts available to each version. Set to 0 to turn off quantity discounts.', 1, N'', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.quickbooks.pass', N'C3CwKJqSOzp6cHpcI5IWBRS/EegwRiIhUadYeFNATn0=', N's', N't', NULL, N'[DO NOT UPDATE MANUALLY] 
Encrypted password for Quickbooks Web Connector. Go to the Quickbooks Integration page if you want to change this.

[Miscellaneous] -> [Quickbooks Integration]', 1.0017, NULL, 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.security.ssl', N'n', N's', N'b', N'y|n|a|e', N'y = SSL on for essential pages, n = SSL off, a = SSL always on for all pages, e = external SSL (such as Cloudflare)', 1, N'n', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.seofriendlyurls.enabled', N'y', N's', N'b', N'y|n', N'Determines whether to use ''fake'' search-engine friendly URLs.', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.sessions.cookiename', N'Kartris', N's', N't', NULL, N'Name of the cookie used by the cart (see also usecookies)', 1, N'Kartris', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.sessions.expiry', N'1440', N'n', N'n', NULL, N'Expiry for security session values, in minutes. This covers backend and customer login details.', 1, NULL, 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.sessions.usecookies', N'backup', N's', N's', N'yes|no|backup', N'The users session ID can either be passed around in a user cookie ("yes"), in the querystring/form ("no"), or both ("backup"). Changing this setting may log you out of the backend.', 1, N'backup', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.storestatus', N'open', N's', N's', N'open|locked', N'Can be ''open'' or ''locked''. When locked, visitors are redirected to Closed.aspx (logged-in admins can view site still). The play/pause button on the admin toolbar changes this setting too.', 1, N'open', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.tax.euvatcountry', N'GB', N's', N't', NULL, N'The ISO code of the EU country where the store is based. Leave blank if you don''t wish to activate EU VAT.', 1, N'GB', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.tax.euvatnumbercheck', N'y', N's', N'b', N'y|n', N'Whether you wish to activate Kartris''s error checking of EU VAT numbers', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.tax.pricesinctax', N'y', N's', N'b', N'y|n', N'Determines whether prices entered in the back end for versions include tax or not. Please see http://userguide.kartris.com/Default.aspx?headID=370 for more information.', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.tax.shipping', N'shipping', N's', N's', N'shipping|billing', N'Determines whether VAT charging is calculated by shipping address or billing address', 1, N's', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.timeoffset', N'0', N'n', N'n', NULL, N'Offset, in hours, from the current server time to use as the time of the store.', 1, N'0', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.uploadfolder', N'~/uploads/', N's', N't', NULL, N'path to the uploads folder - must include "/" at the end if a folder path', 1, N'~/uploads/', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.useURLname', N'y', N's', N'b', N'y|n', N'Whether to use the URL name field instead of the product/category name in the SEO friendly URLs.', 1, N'y', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.webshopfolder', N'KartrisSolution_GPL/', N's', N't', NULL, N'The folder on your web site where the shop is stored - must include with "/" at the end. If the store is on the root of your web, this setting should be left blank.', 1, N'Kartris/', 1)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.webshopurl', N'http://localhost:54147/KartrisSolution_GPL/', N's', N't', NULL, N'URL of the root of Kartris - this is used in email for direct links to pages - include "/" at end. Can be a folder of an existing web.', 1, N'http://localhost:52038/Kartris/', 1)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.weightunit', N'kg', N's', N't', N'', N'Unit of measurement of weight', 1, N'kg', 0)
GO
print 'Processed 200 total records'
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.pushnotifications.enabled', N'n', N's', N'b', N'y|n', N'Whether to enable sending push notifications to user devices.', 2, N'n', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'backend.homepage.graphs', N'ON', N's', N'b', 'ON|OFF', N'Hides the data summary graphs on the back end home page, suggested on large sites where the queries may time out and put unnecessary load on site.', 2.8004, N'ON', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.services.postcodes4u.username', N'', N's', N't', NULL, N'Your account username for postcodes4u. Leave blank to disable this feature.', 2.9002, N'', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.services.postcodes4u.key', N'', N's', N't', NULL, N'Product key for your postcodes4u account.', 2.9002, N'', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.email.testaddress', N'', N's', N't', NULL, N'Test email address to send all mail to when general.email.method="test"', 2.9002, N'', 0)
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'frontend.navigationmenu.cssids', N'n', N's', N'b', N'y|n', N'Whether to insert unique IDs into links in the navigation menus using the MenuAdapter.vb', 2.9002, N'n', 0)
GO

/****** Object:  Table [dbo].[tblKartrisSessions]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisSessions](
	[SESS_ID] [int] IDENTITY(1,1) NOT NULL,
	[SESS_Code] [nvarchar](20) NOT NULL,
	[SESS_IP] [nvarchar](16) NOT NULL,
	[SESS_DateCreated] [datetime] NOT NULL,
	[SESS_DateLastUpdated] [datetime] NULL,
	[SESS_Expiry] [int] NULL,
 CONSTRAINT [aaaaatblKartrisSessions_PK] PRIMARY KEY NONCLUSTERED 
(
	[SESS_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

CREATE NONCLUSTERED INDEX [SESS_Code] ON [dbo].[tblKartrisSessions] 
(
	[SESS_Code] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [SESS_ID] ON [dbo].[tblKartrisSessions] 
(
	[SESS_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisSearchStatistics]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisSearchStatistics](
	[SS_ID] [bigint] IDENTITY(1,1) NOT NULL,
	[SS_Keyword] [nvarchar](150) NULL,
	[SS_Date] [datetime] NULL,
	[SS_Year] [smallint] NULL,
	[SS_Month] [tinyint] NULL,
	[SS_Day] [tinyint] NULL,
	[SS_Searches] [smallint] NULL,
 CONSTRAINT [PK_tblKartrisSearchStatistics] PRIMARY KEY CLUSTERED 
(
	[SS_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisSearchHelper]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisSearchHelper](
	[SH_ID] [bigint] IDENTITY(1,1) NOT NULL,
	[SH_SessionID] [bigint] NULL,
	[SH_TypeID] [tinyint] NULL,
	[SH_FieldID] [tinyint] NULL,
	[SH_ParentID] [bigint] NULL,
	[SH_TextValue] [nvarchar](max) NULL,
	[SH_ProductID] [int] NULL,
	[SH_Price] [real] NULL,
	[SH_Score] [int] NULL,
	[SH_Keyword] [nvarchar](100) NULL,
 CONSTRAINT [PK_tblKartrisSearchHelper] PRIMARY KEY NONCLUSTERED 
(
	[SH_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE CLUSTERED INDEX [idxSH_Session_Product_Field_ID] ON [dbo].[tblKartrisSearchHelper] 
(
	[SH_SessionID] ASC,
	[SH_ProductID] ASC,
	[SH_FieldID] ASC,
	[SH_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_SearchHelper_TotalScore] ON [dbo].[tblKartrisSearchHelper] 
(
	[SH_Score] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisSavedExports]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisSavedExports](
	[EXPORT_ID] [bigint] IDENTITY(1,1) NOT NULL,
	[EXPORT_Name] [nvarchar](50) NULL,
	[EXPORT_DateCreated] [datetime] NULL,
	[EXPORT_LastModified] [datetime] NULL,
	[EXPORT_Details] [nvarchar](max) NULL,
	[EXPORT_FieldDelimiter] [int] NULL,
	[EXPORT_StringDelimiter] [int] NULL,
 CONSTRAINT [aaaaatblKartrisSavedExports_PK] PRIMARY KEY NONCLUSTERED 
(
	[EXPORT_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE UNIQUE CLUSTERED INDEX [idxEXPORT_ID] ON [dbo].[tblKartrisSavedExports] 
(
	[EXPORT_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [EXPORT_ID] ON [dbo].[tblKartrisSavedExports] 
(
	[EXPORT_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
SET IDENTITY_INSERT [dbo].[tblKartrisSavedExports] ON
INSERT [dbo].[tblKartrisSavedExports] ([EXPORT_ID], [EXPORT_Name], [EXPORT_DateCreated], [EXPORT_LastModified], [EXPORT_Details], [EXPORT_FieldDelimiter], [EXPORT_StringDelimiter]) VALUES (1, N'Products Data For DataTool', CAST(0x00009D5700F612EE AS DateTime), CAST(0x00009D570102B536 AS DateTime), N'EXEC _spKartrisDB_ExportProductRelatedData @LanguageID = 1', 44, 34)
INSERT [dbo].[tblKartrisSavedExports] ([EXPORT_ID], [EXPORT_Name], [EXPORT_DateCreated], [EXPORT_LastModified], [EXPORT_Details], [EXPORT_FieldDelimiter], [EXPORT_StringDelimiter]) VALUES (2, N'Products Export', CAST(0x00009D5700F0F580 AS DateTime), CAST(0x00009D570116735B AS DateTime), N'SELECT * FROM tblKartrisProducts', 44, 34)
INSERT [dbo].[tblKartrisSavedExports] ([EXPORT_ID], [EXPORT_Name], [EXPORT_DateCreated], [EXPORT_LastModified], [EXPORT_Details], [EXPORT_FieldDelimiter], [EXPORT_StringDelimiter]) VALUES (3, N'Category Export', CAST(0x00009D5700F612EE AS DateTime), CAST(0x00009D570102B536 AS DateTime), N'SELECT * FROM tblKartrisCategories', 44, 39)
--Added Exports - Jóni Silva - 12/01/2016 END
INSERT INTO [dbo].[tblKartrisSavedExports] ([EXPORT_ID], [EXPORT_Name], [EXPORT_DateCreated], [EXPORT_LastModified], [EXPORT_Details], [EXPORT_FieldDelimiter], [EXPORT_StringDelimiter]) VALUES (4, N'CustomerGroupPrices', CAST('2016-01-08 15:51:17.577' AS DateTime), CAST('2016-01-08 15:51:17.577' AS DateTime), N'SELECT        vKartrisTypeCustomerGroups.CG_Name, vKartrisTypeCustomerGroups.CG_ID, tblKartrisCustomerGroupPrices.CGP_VersionID, tblKartrisCustomerGroupPrices.CGP_Price FROM            vKartrisTypeCustomerGroups INNER JOIN dbo.tblKartrisCustomerGroupPrices ON vKartrisTypeCustomerGroups.CG_ID = dbo.tblKartrisCustomerGroupPrices.CGP_CustomerGroupID ORDER BY CG_ID, CGP_VersionID, CGP_Price', 44, 39);
INSERT INTO [dbo].[tblKartrisSavedExports] ([EXPORT_ID], [EXPORT_Name], [EXPORT_DateCreated], [EXPORT_LastModified], [EXPORT_Details], [EXPORT_FieldDelimiter], [EXPORT_StringDelimiter]) VALUES (5, N'QuantityDiscounts', CAST('2016-01-08 15:52:08.037' AS DateTime), CAST('2016-01-08 15:52:08.037' AS DateTime), N'SELECT QD_VersionID, QD_Quantity, QD_Price From tblKartrisQuantityDiscounts ORDER BY QD_VersionID', 44, 39);
INSERT INTO [dbo].[tblKartrisSavedExports] ([EXPORT_ID], [EXPORT_Name], [EXPORT_DateCreated], [EXPORT_LastModified], [EXPORT_Details], [EXPORT_FieldDelimiter], [EXPORT_StringDelimiter]) VALUES (6, N'PriceList', CAST('2016-01-12 15:35:29.923' AS DateTime), CAST('2016-01-12 15:35:29.923' AS DateTime), N'SELECT vKartrisTypeVersions.V_CodeNumber, vKartrisTypeVersions.V_Price, vKartrisTypeVersions.V_RRP FROM vKartrisTypeVersions ORDER BY V_CodeNumber', 44, 39);
--Added Exports - Jóni Silva - 12/01/2016 END

SET IDENTITY_INSERT [dbo].[tblKartrisSavedExports] OFF
/****** Object:  Table [dbo].[tblKartrisSavedBaskets]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisSavedBaskets](
	[SBSKT_ID] [int] IDENTITY(1,1) NOT NULL,
	[SBSKT_UserID] [int] NOT NULL,
	[SBSKT_Name] [nvarchar](50) NULL,
	[SBSKT_DateTimeAdded] [smalldatetime] NULL,
	[SBSKT_LastUpdated] [smalldatetime] NULL,
 CONSTRAINT [aaaaatblKartrisSaveBasket_PK] PRIMARY KEY NONCLUSTERED 
(
	[SBSKT_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE UNIQUE CLUSTERED INDEX [idxSBSKT_ID] ON [dbo].[tblKartrisSavedBaskets] 
(
	[SBSKT_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [BSKT_CustomerID] ON [dbo].[tblKartrisSavedBaskets] 
(
	[SBSKT_UserID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [BSKT_ID] ON [dbo].[tblKartrisSavedBaskets] 
(
	[SBSKT_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisCurrencies]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblKartrisCurrencies](
	[CUR_ID] [tinyint] IDENTITY(1,1) NOT NULL,
	[CUR_Symbol] [nvarchar](5) NOT NULL,
	[CUR_ISOCode] [nvarchar](3) NOT NULL,
	[CUR_ISOCodeNumeric] [nvarchar](3) NULL,
	[CUR_ExchangeRate] DECIMAL(18,8) NULL,
	[CUR_HasDecimals] [bit] NOT NULL,
	[CUR_Live] [bit] NOT NULL,
	[CUR_Format] [nvarchar](20) NOT NULL,
	[CUR_IsoFormat] [nvarchar](20) NOT NULL,
	[CUR_DecimalPoint] [char](1) NULL,
	[CUR_RoundNumbers] [tinyint] NOT NULL,
	[CUR_OrderNo] [tinyint] NULL,
 CONSTRAINT [aaaaatblKartrisCurrencies_PK] PRIMARY KEY NONCLUSTERED 
(
	[CUR_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY],
 CONSTRAINT [ISOCode_unique] UNIQUE NONCLUSTERED 
(
	[CUR_ISOCode] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE UNIQUE CLUSTERED INDEX [idxCUR_ID] ON [dbo].[tblKartrisCurrencies] 
(
	[CUR_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [CUR_ID] ON [dbo].[tblKartrisCurrencies] 
(
	[CUR_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [CUR_IsoCode] ON [dbo].[tblKartrisCurrencies] 
(
	[CUR_ISOCode] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
SET IDENTITY_INSERT [dbo].[tblKartrisCurrencies] ON
INSERT [dbo].[tblKartrisCurrencies] ([CUR_ID], [CUR_Symbol], [CUR_ISOCode], [CUR_ISOCodeNumeric], [CUR_ExchangeRate], [CUR_HasDecimals], [CUR_Live], [CUR_Format], [CUR_IsoFormat], [CUR_DecimalPoint], [CUR_RoundNumbers], [CUR_OrderNo]) VALUES (1, N'£', N'GBP', N'826', 1, 1, 1, N'[symbol][value]', N'[iso] [value]', N'.', 2, 2)
INSERT [dbo].[tblKartrisCurrencies] ([CUR_ID], [CUR_Symbol], [CUR_ISOCode], [CUR_ISOCodeNumeric], [CUR_ExchangeRate], [CUR_HasDecimals], [CUR_Live], [CUR_Format], [CUR_IsoFormat], [CUR_DecimalPoint], [CUR_RoundNumbers], [CUR_OrderNo]) VALUES (2, N'$', N'USD', N'840', 0, 1, 0, N'[symbol] [value]', N'[iso] [value]', N'.', 2, 3)
INSERT [dbo].[tblKartrisCurrencies] ([CUR_ID], [CUR_Symbol], [CUR_ISOCode], [CUR_ISOCodeNumeric], [CUR_ExchangeRate], [CUR_HasDecimals], [CUR_Live], [CUR_Format], [CUR_IsoFormat], [CUR_DecimalPoint], [CUR_RoundNumbers], [CUR_OrderNo]) VALUES (3, N'€', N'EUR', N'978', 0, 1, 0, N'[symbol][value]', N'[iso] [value]', N'.', 2, 4)
INSERT [dbo].[tblKartrisCurrencies] ([CUR_ID], [CUR_Symbol], [CUR_ISOCode], [CUR_ISOCodeNumeric], [CUR_ExchangeRate], [CUR_HasDecimals], [CUR_Live], [CUR_Format], [CUR_IsoFormat], [CUR_DecimalPoint], [CUR_RoundNumbers], [CUR_OrderNo]) VALUES (4, N'¥', N'JPY', N'392', 0, 0, 0, N'[symbol][value]', N'[iso] [value]', N'.', 0, 5)
INSERT [dbo].[tblKartrisCurrencies] ([CUR_ID], [CUR_Symbol], [CUR_ISOCode], [CUR_ISOCodeNumeric], [CUR_ExchangeRate], [CUR_HasDecimals], [CUR_Live], [CUR_Format], [CUR_IsoFormat], [CUR_DecimalPoint], [CUR_RoundNumbers], [CUR_OrderNo]) VALUES (5, N'SFr', N'CHF', N'756', 0, 1, 0, N'[symbol] [value]', N'[iso] [value]', N'.', 2, 6)
INSERT [dbo].[tblKartrisCurrencies] ([CUR_ID], [CUR_Symbol], [CUR_ISOCode], [CUR_ISOCodeNumeric], [CUR_ExchangeRate], [CUR_HasDecimals], [CUR_Live], [CUR_Format], [CUR_IsoFormat], [CUR_DecimalPoint], [CUR_RoundNumbers], [CUR_OrderNo]) VALUES (6, N'$', N'AUD', N'036', 0, 1, 0, N'[symbol] [value]', N'[iso] [value]', N'.', 2, 7)
INSERT [dbo].[tblKartrisCurrencies] ([CUR_ID], [CUR_Symbol], [CUR_ISOCode], [CUR_ISOCodeNumeric], [CUR_ExchangeRate], [CUR_HasDecimals], [CUR_Live], [CUR_Format], [CUR_IsoFormat], [CUR_DecimalPoint], [CUR_RoundNumbers], [CUR_OrderNo]) VALUES (7, N'$', N'CAD', N'124', 0, 1, 0, N'[symbol] [value]', N'[iso] [value]', N'.', 2, 8)
INSERT [dbo].[tblKartrisCurrencies] ([CUR_ID], [CUR_Symbol], [CUR_ISOCode], [CUR_ISOCodeNumeric], [CUR_ExchangeRate], [CUR_HasDecimals], [CUR_Live], [CUR_Format], [CUR_IsoFormat], [CUR_DecimalPoint], [CUR_RoundNumbers], [CUR_OrderNo]) VALUES (10, N'$', N'HKD', N'344', 0, 1, 0, N'[symbol] [value]', N'[iso] [value]', N'.', 2, 9)
INSERT [dbo].[tblKartrisCurrencies] ([CUR_ID], [CUR_Symbol], [CUR_ISOCode], [CUR_ISOCodeNumeric], [CUR_ExchangeRate], [CUR_HasDecimals], [CUR_Live], [CUR_Format], [CUR_IsoFormat], [CUR_DecimalPoint], [CUR_RoundNumbers], [CUR_OrderNo]) VALUES (11, N'Rs', N'INR', N'356', 0, 1, 0, N'[symbol] [value]', N'[iso] [value]', N'.', 2, 10)
INSERT [dbo].[tblKartrisCurrencies] ([CUR_ID], [CUR_Symbol], [CUR_ISOCode], [CUR_ISOCodeNumeric], [CUR_ExchangeRate], [CUR_HasDecimals], [CUR_Live], [CUR_Format], [CUR_IsoFormat], [CUR_DecimalPoint], [CUR_RoundNumbers], [CUR_OrderNo]) VALUES (12, N'py6', N'RUB', N'643', 0, 1, 0, N'[symbol] [value]', N'[iso] [value]', N'.', 2, 11)
INSERT [dbo].[tblKartrisCurrencies] ([CUR_ID], [CUR_Symbol], [CUR_ISOCode], [CUR_ISOCodeNumeric], [CUR_ExchangeRate], [CUR_HasDecimals], [CUR_Live], [CUR_Format], [CUR_IsoFormat], [CUR_DecimalPoint], [CUR_RoundNumbers], [CUR_OrderNo]) VALUES (13, N'R$', N'BRL', N'986', 0, 1, 0, N'[symbol] [value]', N'[iso] [value]', N'.', 2, 12)
INSERT [dbo].[tblKartrisCurrencies] ([CUR_ID], [CUR_Symbol], [CUR_ISOCode], [CUR_ISOCodeNumeric], [CUR_ExchangeRate], [CUR_HasDecimals], [CUR_Live], [CUR_Format], [CUR_IsoFormat], [CUR_DecimalPoint], [CUR_RoundNumbers], [CUR_OrderNo]) VALUES (14, N'$', N'SGD', N'702', 0, 1, 0, N'[symbol] [value]', N'[iso] [value]', N'.', 2, 13)
INSERT [dbo].[tblKartrisCurrencies] ([CUR_ID], [CUR_Symbol], [CUR_ISOCode], [CUR_ISOCodeNumeric], [CUR_ExchangeRate], [CUR_HasDecimals], [CUR_Live], [CUR_Format], [CUR_IsoFormat], [CUR_DecimalPoint], [CUR_RoundNumbers], [CUR_OrderNo]) VALUES (15, N'฿', N'BTC', N'999', 0, 1, 0, N'[symbol][value]', N'[iso] [value]', N'.', 8, 14)
SET IDENTITY_INSERT [dbo].[tblKartrisCurrencies] OFF
/****** Object:  Table [dbo].[tblKartrisCreditCards]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisCreditCards](
	[CR_ID] [tinyint] IDENTITY(1,1) NOT NULL,
	[CR_Name] [nvarchar](20) NULL,
	[CR_Accepted] [bit] NULL,
 CONSTRAINT [aaaaatblKartrisCreditCards_PK] PRIMARY KEY NONCLUSTERED 
(
	[CR_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE UNIQUE CLUSTERED INDEX [idxCR_ID] ON [dbo].[tblKartrisCreditCards] 
(
	[CR_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE UNIQUE NONCLUSTERED INDEX [C_ID] ON [dbo].[tblKartrisCreditCards] 
(
	[CR_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
SET IDENTITY_INSERT [dbo].[tblKartrisCreditCards] ON
INSERT [dbo].[tblKartrisCreditCards] ([CR_ID], [CR_Name], [CR_Accepted]) VALUES (1, N'Visa', 1)
INSERT [dbo].[tblKartrisCreditCards] ([CR_ID], [CR_Name], [CR_Accepted]) VALUES (2, N'Mastercard', 1)
INSERT [dbo].[tblKartrisCreditCards] ([CR_ID], [CR_Name], [CR_Accepted]) VALUES (3, N'American Express', 1)
INSERT [dbo].[tblKartrisCreditCards] ([CR_ID], [CR_Name], [CR_Accepted]) VALUES (4, N'Diners Club', 1)
INSERT [dbo].[tblKartrisCreditCards] ([CR_ID], [CR_Name], [CR_Accepted]) VALUES (5, N'Switch', 0)
SET IDENTITY_INSERT [dbo].[tblKartrisCreditCards] OFF
/****** Object:  Table [dbo].[tblKartrisCoupons]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblKartrisCoupons](
	[CP_ID] [smallint] IDENTITY(1,1) NOT NULL,
	[CP_CouponCode] [nvarchar](25) NULL,
	[CP_Reusable] [bit] NULL,
	[CP_Used] [bit] NULL,
	[CP_CreatedTime] [smalldatetime] NULL,
	[CP_StartDate] [smalldatetime] NULL,
	[CP_EndDate] [smalldatetime] NULL,
	[CP_DiscountValue] DECIMAL(18,4) NULL,
	[CP_DiscountType] [char](1) NULL,
	[CP_Enabled] [bit] NULL,
 CONSTRAINT [aaaaatblKartrisCoupons_PK] PRIMARY KEY NONCLUSTERED 
(
	[CP_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY],
 CONSTRAINT [IX_tblKartrisCoupons] UNIQUE NONCLUSTERED 
(
	[CP_CouponCode] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE UNIQUE CLUSTERED INDEX [idxCP_CouponCode] ON [dbo].[tblKartrisCoupons] 
(
	[CP_CouponCode] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [CP_ID] ON [dbo].[tblKartrisCoupons] 
(
	[CP_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisDB_GetInformation]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisDB_GetInformation]
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	SELECT  DB_NAME() as 'DatabaseName', name as 'FileName',  'FILE TYPE' as FileType, 
			size/128 as 'FileSize', CAST(FILEPROPERTY(name, 'SpaceUsed') AS int)/128.0 AS 'UsedSize',
			physical_name as 'FileLocation'
	FROM sys.database_files
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisDB_GetFTSInfo]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisDB_GetFTSInfo]
(
	@kartrisCatalogExist bit OUT,
	@kartrisFTSEnabled bit OUT,
	@kartrisFTSLanguages nvarchar(MAX) OUT,
	@FTSSupported bit OUT
)
AS
BEGIN
		SET NOCOUNT ON;
		SET @kartrisFTSLanguages = '';
		SELECT @kartrisCatalogExist = count(1) FROM sys.fulltext_catalogs WHERE name = 'kartrisCatalog';
		select @kartrisFTSEnabled = DatabaseProperty(db_name(), 'IsFulltextEnabled');
		
		DECLARE @FTSLanguagesCounter as int
		SET @FTSLanguagesCounter = 0;
		DECLARE FTSLanguagesCursor CURSOR FOR
		SELECT name FROM sys.fulltext_languages ORDER BY name;
		DECLARE @LangName as nvarchar(50);
		
		OPEN FTSLanguagesCursor
		FETCH NEXT FROM FTSLanguagesCursor
		INTO @LangName;
		
		WHILE @@FETCH_STATUS = 0
		BEGIN
			SET @kartrisFTSLanguages = @kartrisFTSLanguages + @LangName + '##'
			SET @FTSLanguagesCounter = @FTSLanguagesCounter + 1
			FETCH NEXT FROM FTSLanguagesCursor
			INTO @LangName;
		END
		CLOSE FTSLanguagesCursor
		DEALLOCATE FTSLanguagesCursor
		
		SET @FTSSupported = 1;		
		IF @kartrisCatalogExist = 0 AND @FTSLanguagesCounter = 0
		BEGIN
			SET @FTSSupported = 0;
			CREATE FULLTEXT CATALOG kartris_testCatalog;
			SELECT @kartrisCatalogExist = count(1) FROM sys.fulltext_catalogs WHERE name = 'kartris_testCatalog';
			IF @kartrisCatalogExist = 1
			BEGIN
				SET @FTSSupported = 1;
				DROP FULLTEXT CATALOG kartris_testCatalog;
			END
			SET @kartrisCatalogExist = 0;
		END	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisDB_StopFTS]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisDB_StopFTS]
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	IF EXISTS (SELECT * FROM sys.fulltext_catalogs WHERE name = 'kartrisCatalog')
	BEGIN	
			EXEC sp_fulltext_column    'tblKartrisLanguageElements', 'LE_Value', 'drop';
			EXEC sp_fulltext_table     'tblKartrisLanguageElements', 'drop';
		
			EXEC sp_fulltext_column    'tblKartrisAddresses', 'ADR_Name', 'drop';		
			EXEC sp_fulltext_table     'tblKartrisAddresses', 'drop';
		
			EXEC sp_fulltext_column    'tblKartrisUsers', 'U_EmailAddress', 'drop';
			EXEC sp_fulltext_table     'tblKartrisUsers', 'drop';
		
			EXEC sp_fulltext_column    'dbo.tblKartrisOrders', 'O_PurchaseOrderNo', 'drop';
			EXEC sp_fulltext_table     'dbo.tblKartrisOrders', 'drop';

			EXEC sp_fulltext_column    'tblKartrisConfig', 'CFG_Name', 'drop';		
			EXEC sp_fulltext_table     'tblKartrisConfig', 'drop';
		
			EXEC sp_fulltext_column    'tblKartrisLanguageStrings', 'LS_Name', 'drop';
			EXEC sp_fulltext_column    'tblKartrisLanguageStrings', 'LS_Value', 'drop';
			EXEC sp_fulltext_table     'tblKartrisLanguageStrings', 'drop';
		
			IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[spKartrisDB_SearchFTS]') AND type in (N'P', N'PC'))
			DROP PROCEDURE [dbo].[spKartrisDB_SearchFTS]
	
			IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[_spKartrisDB_AdminSearchFTS]') AND type in (N'P', N'PC'))
			DROP PROCEDURE [dbo].[_spKartrisDB_AdminSearchFTS]

			DROP FULLTEXT CATALOG kartrisCatalog;
			EXEC sp_fulltext_database 'disable';				
					
	END
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisDB_SetupFTS]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisDB_SetupFTS]
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	EXEC sp_fulltext_database 'enable';

	DECLARE @kartrisCatalogExist as int;
	SET @kartrisCatalogExist = 0;
	SELECT @kartrisCatalogExist = count(1) FROM sys.fulltext_catalogs WHERE name = 'kartrisCatalog';
	IF @kartrisCatalogExist = 0 BEGIN CREATE FULLTEXT CATALOG kartrisCatalog END;
	
	EXEC sp_fulltext_table     'dbo.tblKartrisLanguageElements', 'create', 'kartrisCatalog', 'keyLE_ID'
	EXEC sp_fulltext_column    'dbo.tblKartrisLanguageElements', 'LE_Value', 'add'
	EXEC sp_fulltext_table     'dbo.tblKartrisLanguageElements','activate'

	EXEC sp_fulltext_table     'dbo.tblKartrisAddresses', 'create', 'kartrisCatalog', 'PK_tblKartrisAddresses'
	EXEC sp_fulltext_column    'dbo.tblKartrisAddresses', 'ADR_Name', 'add'
	EXEC sp_fulltext_table     'dbo.tblKartrisAddresses','activate'

	EXEC sp_fulltext_table     'dbo.tblKartrisUsers', 'create', 'kartrisCatalog', 'aaaaatblKartrisCustomers_PK'
	EXEC sp_fulltext_column    'dbo.tblKartrisUsers', 'U_EmailAddress', 'add'
	EXEC sp_fulltext_table     'dbo.tblKartrisUsers','activate'

	EXEC sp_fulltext_table     'dbo.tblKartrisOrders', 'create', 'kartrisCatalog', 'aaaaatblKartrisOrders_PK'
	EXEC sp_fulltext_column    'dbo.tblKartrisOrders', 'O_PurchaseOrderNo', 'add'
	EXEC sp_fulltext_table     'dbo.tblKartrisOrders','activate'

	EXEC sp_fulltext_table     'dbo.tblKartrisConfig', 'create', 'kartrisCatalog', 'PK_tblKartrisConfig'
	EXEC sp_fulltext_column    'dbo.tblKartrisConfig', 'CFG_Name', 'add'
	EXEC sp_fulltext_table     'dbo.tblKartrisConfig','activate'

	EXEC sp_fulltext_table     'dbo.tblKartrisLanguageStrings', 'create', 'kartrisCatalog', 'LS_ID'
	EXEC sp_fulltext_column    'dbo.tblKartrisLanguageStrings', 'LS_Name', 'add'
	EXEC sp_fulltext_column    'dbo.tblKartrisLanguageStrings', 'LS_Value', 'add'
	EXEC sp_fulltext_table     'dbo.tblKartrisLanguageStrings','activate'

	ALTER FULLTEXT INDEX ON dbo.tblKartrisLanguageElements SET CHANGE_TRACKING AUTO;
	ALTER FULLTEXT INDEX ON dbo.tblKartrisAddresses SET CHANGE_TRACKING AUTO;
	ALTER FULLTEXT INDEX ON dbo.tblKartrisUsers SET CHANGE_TRACKING AUTO;
	ALTER FULLTEXT INDEX ON dbo.tblKartrisOrders SET CHANGE_TRACKING AUTO;
	ALTER FULLTEXT INDEX ON dbo.tblKartrisConfig SET CHANGE_TRACKING AUTO;
	ALTER FULLTEXT INDEX ON dbo.tblKartrisLanguageStrings SET CHANGE_TRACKING AUTO;

	EXEC sp_fulltext_catalog   'kartrisCatalog', 'start_full'	
  

	IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[spKartrisDB_SearchFTS]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================

CREATE PROCEDURE [dbo].[spKartrisDB_SearchFTS]
(	
	@SearchText as nvarchar(500),
	@keyWordsList as nvarchar(500),
	@LANG_ID as tinyint,
	@PageIndex as smallint,
	@RowsPerPage as tinyint,
	@TotalResultProducts as int OUTPUT,
	@MinPrice as real,
	@MaxPrice as real,
	@Method as nvarchar(10),
	@CustomerGroupID as smallint
)
AS
BEGIN
	SET NOCOUNT ON;
	
	IF @CustomerGroupID IS NULL BEGIN SET @CustomerGroupID = 0 END
	
	-----------------------
	-- Variable Declaration
	-----------------------
	DECLARE @SIndx as int;
	DECLARE @CIndx as int;
	DECLARE @Keyword as nvarchar(150);
	DECLARE @Counter as int;
	
	DECLARE @NoOfVersions as bigint;
	SELECT @NoOfVersions = Count(1)	FROM tblKartrisVersions;
	
	-- Include Products and Attributes if no. of versions > 100,000
	-- Include Versions, Products and Attributes if no. of versions <= 100,000
	DECLARE @DataToSearch as nvarchar(100);
	IF @NoOfVersions > 100000 BEGIN
		SET @DataToSearch = ''(LE_TypeID IN (2,14) AND LE_FieldID IN (1,2,5))''
	END ELSE BEGIN
		SET @DataToSearch = ''(LE_TypeID IN (1,2,14) AND LE_FieldID IN (1,2,5))''
	END
		
	DECLARE @ExactCriteriaNoNoise as nvarchar(500);
	SET @ExactCriteriaNoNoise = Replace(@keyWordsList, '','', '' '');
	
	IF @Method = ''exact'' BEGIN
		-- Searching value of LanguageElements - Add results to search helper (LIKE Operator)
		EXECUTE(''
		INSERT INTO tblKartrisSearchHelper
		SELECT TOP(1000) @@SPID, LE_TypeID, LE_FieldID, LE_ParentID, LE_Value, 
					dbo.fnKartrisLanguageElement_GetProductID(LE_TypeID, LE_ParentID) , 0, 100/LE_FieldID, N'''''' + @KeyWord + ''''''
		FROM       tblKartrisLanguageElements 
		WHERE	LE_LanguageID = '' + @LANG_ID +'' AND '' + @DataToSearch + ''
					AND (	(Contains(LE_Value, N''''"'' + @SearchText + ''"''''))
						 OR	(Contains(LE_Value, N''''"'' + @ExactCriteriaNoNoise + ''"''''))
						)'');
						
		-- Searching version code of Versions - Add results to search helper				
		EXECUTE(''
		INSERT INTO tblKartrisSearchHelper
		SELECT TOP(1000) @@SPID, 1, NULL, V_ID, NULL, V_ProductID, V_Price, 0, N'''''' + @ExactCriteriaNoNoise + ''''''
		FROM         tblKartrisVersions LEFT OUTER JOIN dbo.vKartrisObjectConfigValues 
			ON V_ID = OCV_ParentID AND OC_Name = ''''K:version.extrasku''''
		WHERE     (V_Live = 1) AND (V_CodeNumber LIKE N'''''' + @SearchText + ''%'''' OR OCV_Value LIKE N'''''' + @SearchText + ''%'''')'' );	
	END ELSE BEGIN
		-- Loop through out the list of keywords and search each keyword
		SET @SIndx = 0; SET @Counter = 0;
		WHILE @SIndx <= LEN(@keyWordsList) BEGIN
			SET @Counter = @Counter + 1;	-- keywords counter
			SET @CIndx = CHARINDEX('','', @keyWordsList, @SIndx)	-- Next keyword starting index (1-Based Index)
			IF @CIndx = 0 BEGIN SET @CIndx = LEN(@keyWordsList)+ 1 END	-- If no more keywords, set next starting index to not exist
			SET @KeyWord = SUBSTRING(@keyWordsList, @SIndx, @CIndx - @SIndx)
			
			SET @SIndx = @CIndx + 1;	-- The next starting index
				
			-- Searching value of LanguageElements - Add results to search helper (LIKE Operator)
			EXECUTE(''
			INSERT INTO tblKartrisSearchHelper
			SELECT TOP(1000) @@SPID, LE_TypeID, LE_FieldID, LE_ParentID, LE_Value, 
						dbo.fnKartrisLanguageElement_GetProductID(LE_TypeID, LE_ParentID) , 0, 100/LE_FieldID, N'''''' + @KeyWord + ''''''
			FROM       tblKartrisLanguageElements 
			WHERE	LE_LanguageID = '' + @LANG_ID +'' AND '' + @DataToSearch + ''
					AND (	(Contains(LE_Value, N''''"'' + @SearchText + ''"''''))
						 OR	(Contains(LE_Value, N''''"'' + @ExactCriteriaNoNoise + ''"''''))
						)'');

			-- Searching value of LanguageElements - Add results to search helper (LIKE Operator)
			EXECUTE(''
			INSERT INTO tblKartrisSearchHelper
			SELECT TOP(1000) @@SPID, LE_TypeID, LE_FieldID, LE_ParentID, LE_Value, 
						dbo.fnKartrisLanguageElement_GetProductID(LE_TypeID, LE_ParentID) , 0, 100/LE_FieldID, N'''''' + @KeyWord + ''''''
			FROM       tblKartrisLanguageElements 
			WHERE	LE_LanguageID = '' + @LANG_ID +'' AND '' + @DataToSearch + '' AND (Contains(LE_Value, N'''''' + @KeyWord + '''''')) '');
				
			-- Searching version code of Versions - Add results to search helper				
			EXECUTE(''
			INSERT INTO tblKartrisSearchHelper
			SELECT TOP(1000) @@SPID, 1, NULL, V_ID, NULL, V_ProductID, V_Price, 0, N'''''' + @KeyWord + ''''''
			FROM         tblKartrisVersions LEFT OUTER JOIN dbo.vKartrisObjectConfigValues 
				ON V_ID = OCV_ParentID AND OC_Name = ''''K:version.extrasku''''
			WHERE     (V_Live = 1) AND (V_CodeNumber LIKE N'''''' + @KeyWord + ''%'''' OR OCV_Value LIKE N'''''' + @Keyword + ''%'''')'' );
		END
	END
	

	-- (Advanced Search) Exclude products that are not between the price range
	IF @MinPrice <> -1 AND @MaxPrice <> -1 BEGIN
		UPDATE tblKartrisSearchHelper
		SET SH_Price = dbo.fnKartrisProduct_GetMinPriceWithCG(SH_ProductID, @CustomerGroupID)
		WHERE SH_SessionID = @@SPID;
		DELETE FROM tblKartrisSearchHelper WHERE SH_SessionID = @@SPID AND SH_Price NOT BETWEEN @MinPrice AND @MaxPrice;
	END

	-- Exclude products in which their categories are not live
	DELETE FROM tblKartrisSearchHelper
	WHERE SH_SessionID = @@SPID
		AND SH_ProductID NOT IN (SELECT distinct tblKartrisProductCategoryLink.PCAT_ProductID
								 FROM	tblKartrisCategories INNER JOIN tblKartrisProductCategoryLink 
										ON tblKartrisCategories.CAT_ID = tblKartrisProductCategoryLink.PCAT_CategoryID
								 WHERE  tblKartrisCategories.CAT_Live = 1)

	-- Exclude products that are Not Live or that are not belongs to customer group
	DELETE FROM tblKartrisSearchHelper
	WHERE SH_SessionID = @@SPID 
		AND SH_ProductID IN (	SELECT P_ID 
								FROM dbo.tblKartrisProducts 
								WHERE P_Live = 0 OR (P_CustomerGroupID IS NOT NULL AND P_CustomerGroupID <> @CustomerGroupID)); 

	-- Exclude products that has no Live versions or that are not belongs to customer group
	DELETE FROM tblKartrisSearchHelper
	WHERE SH_SessionID = @@SPID 
		AND SH_ProductID NOT IN (SELECT V_ProductID 
								 FROM dbo.tblKartrisVersions INNER JOIN dbo.tblKartrisProducts ON V_ProductID = P_ID
								 WHERE V_Live = 1 AND (V_CustomerGroupID IS NULL OR V_CustomerGroupID = @CustomerGroupID)); 

	-- Exclude products that are not resulted from non-searchable attributes
	DELETE FROM tblKartrisSearchHelper
	WHERE SH_SessionID = @@SPID AND SH_TypeID = 14 
			AND SH_ParentID IN (SELECT tblKartrisAttributeValues.ATTRIBV_ID
							FROM tblKartrisAttributes INNER JOIN tblKartrisAttributeValues 
							ON tblKartrisAttributes.ATTRIB_ID = tblKartrisAttributeValues.ATTRIBV_AttributeID
							WHERE   tblKartrisAttributes.ATTRIB_ShowSearch = 0);

	
	-- Update the scores of the products with exact match			
	IF @Counter > 1 BEGIN
		UPDATE tblKartrisSearchHelper SET SH_Score = SH_Score + (400) 
		WHERE SH_SessionID = @@SPID AND ((SH_TextValue like N''%'' + @ExactCriteriaNoNoise + ''%'') OR (SH_TextValue like N''%'' + @SearchText + ''%''));
	END
	
	-- Update the scores according to number of versions
	IF @NoOfVersions > 100000 BEGIN
		UPDATE tblKartrisSearchHelper SET SH_Score = SH_Score + (30) WHERE SH_SessionID = @@SPID AND SH_FieldID = 2;
		UPDATE tblKartrisSearchHelper SET SH_Score = SH_Score + (200) WHERE SH_SessionID = @@SPID AND SH_FieldID IN (1, 5);
	END	ELSE BEGIN
		UPDATE tblKartrisSearchHelper SET SH_Score = SH_Score + (30 * SH_TypeID) WHERE SH_SessionID = @@SPID AND SH_TypeID IN (1, 2);
	END
	
	-- Set the starting and ending row numbers
	DECLARE @StartRowNumber as int;
	SET @StartRowNumber = (@PageIndex * @RowsPerPage) + 1;
	DECLARE @EndRowNumber as int;
	SET @EndRowNumber = @StartRowNumber + @RowsPerPage - 1;	

	-- Search method ''ANY'' - Default Search and ''EXACT'' - Advanced Search
	IF @Method = ''any'' OR @Method = ''exact'' BEGIN
		SELECT @TotalResultProducts =  Count(DISTINCT SH_ProductID) FROM tblKartrisSearchHelper WHERE SH_SessionID = @@SPID;
	
		WITH SearchResult as
		(
			SELECT ROW_NUMBER() OVER (ORDER BY TotalScore DESC) as Row, 
					ProductID, TotalScore
			FROM (	SELECT 
						CASE 
						WHEN T1.SH_ProductID IS NULL THEN T2.SH_ProductID
						ELSE T1.SH_ProductID
						END AS ProductID,
						CASE 
						WHEN Score1 IS NULL THEN Score2
						WHEN Score2 IS NULL THEN Score1
						ELSE (Score1 + Score2) 
						END AS TotalScore
					FROM (
							SELECT SH_SessionID, SH_ProductID, Sum(SH_Score) as Score1
							FROM tblKartrisSearchHelper 
							WHERE SH_TypeID = 2 OR SH_TypeID = 14
							GROUP BY SH_SessionID, SH_ProductID
							HAVING SH_SessionID = @@SPID
						) T1 
						FULL OUTER JOIN 
						(
							SELECT SH_SessionID, SH_ProductID, Max(SH_Score) as Score2
							FROM tblKartrisSearchHelper 
							WHERE SH_TypeID = 1
							Group BY SH_SessionID, SH_ProductID
							HAVING SH_SessionID = @@SPID
						) T2 
						ON T1.SH_ProductID = T2.SH_ProductID
				) T3
		)
		SELECT Row, P_ID, P_Name, dbo.fnKartrisDB_TruncateDescription(P_Desc) as P_Desc, 
				dbo.fnKartrisProduct_GetMinPriceWithCG(P_ID, @CustomerGroupID) as MinPrice, TotalScore
		FROM SearchResult INNER JOIN dbo.vKartrisTypeProducts ON SearchResult.ProductID = dbo.vKartrisTypeProducts.P_ID
		WHERE vKartrisTypeProducts.LANG_ID = @LANG_ID AND ROW BETWEEN @StartRowNumber AND @EndRowNumber
		GROUP BY Row, P_ID, P_Name, P_Desc, TotalScore
		ORDER BY TotalScore DESC
	END
	
	-- Search method ''ALL'' - Advanced Search
	IF @Method = ''all'' BEGIN
	
		DECLARE @SortedSearchKeywords as nvarchar(max);
		SELECT @SortedSearchKeywords = COALESCE(@SortedSearchKeywords + '','', '''') + T._ID
		FROM (SELECT TOP(500) _ID FROM dbo.fnTbl_SplitStrings(@keyWordsList) ORDER BY _ID) AS T;

		SELECT @TotalResultProducts =  Count(DISTINCT SH_ProductID) FROM tblKartrisSearchHelper 
		WHERE SH_SessionID = @@SPID AND @SortedSearchKeywords = dbo.fnKartrisSearchHelper_GetKeywordsListByProduct(@@SPID, SH_ProductID);
		
		WITH SearchResult as
		(
			SELECT ROW_NUMBER() OVER (ORDER BY TotalScore DESC) as Row, 
					ProductID, TotalScore
			FROM (	SELECT 
						CASE 
						WHEN T1.SH_ProductID IS NULL THEN T2.SH_ProductID
						ELSE T1.SH_ProductID
						END AS ProductID,
						CASE 
						WHEN Score1 IS NULL THEN Score2
						WHEN Score2 IS NULL THEN Score1
						ELSE (Score1 + Score2) 
						END AS TotalScore
					FROM (
							SELECT SH_SessionID, SH_ProductID, Sum(SH_Score) as Score1
							FROM tblKartrisSearchHelper 
							WHERE SH_TypeID = 2 OR SH_TypeID = 14
							GROUP BY SH_SessionID, SH_ProductID
							HAVING SH_SessionID = @@SPID AND @SortedSearchKeywords = dbo.fnKartrisSearchHelper_GetKeywordsListByProduct(@@SPID, SH_ProductID)
						) T1 
						FULL OUTER JOIN 
						(
							SELECT SH_SessionID, SH_ProductID, Max(SH_Score) as Score2
							FROM tblKartrisSearchHelper 
							WHERE SH_TypeID = 1
							Group BY SH_SessionID, SH_ProductID
							HAVING SH_SessionID = @@SPID AND @SortedSearchKeywords = dbo.fnKartrisSearchHelper_GetKeywordsListByProduct(@@SPID, SH_ProductID)
						) T2 
						ON T1.SH_ProductID = T2.SH_ProductID
				) T3
		)
		SELECT Row, P_ID, P_Name, dbo.fnKartrisDB_TruncateDescription(P_Desc) as P_Desc, 
				dbo.fnKartrisProduct_GetMinPriceWithCG(P_ID, @CustomerGroupID) as MinPrice, TotalScore, 
				dbo.fnKartrisSearchHelper_GetKeywordsListByProduct(@@SPID,P_ID) AS KeywordList
		FROM SearchResult INNER JOIN dbo.vKartrisTypeProducts ON SearchResult.ProductID = dbo.vKartrisTypeProducts.P_ID
		WHERE vKartrisTypeProducts.LANG_ID = @LANG_ID AND ROW BETWEEN @StartRowNumber AND @EndRowNumber
		GROUP BY Row, P_ID, P_Name, P_Desc, TotalScore
		ORDER BY TotalScore DESC
		
	END
	
	-- Clear the result of the current search
	DELETE FROM tblKartrisSearchHelper WHERE SH_SessionID=@@SPID;
	
END' 
END
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[_spKartrisDB_AdminSearchFTS]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisDB_AdminSearchFTS]
(	
	@searchLocation as nvarchar(25),
	@keyWordsList as nvarchar(100),
	@LANG_ID as tinyint,
	@PageIndex as smallint,
	@RowsPerPage as tinyint,
	@TotalResult as int OUTPUT
)
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @SIndx as int;
	DECLARE @CIndx as int;
	DECLARE @KeyWord as nvarchar(30);
	SET @SIndx = 0;
	DECLARE @StartRowNumber as int;
	SET @StartRowNumber = (@PageIndex * @RowsPerPage) + 1;
	DECLARE @EndRowNumber as int;
	SET @EndRowNumber = @StartRowNumber + @RowsPerPage - 1;

	DECLARE @TypeNo as tinyint;
	SET @TypeNo = 0;
	IF @searchLocation = ''products'' BEGIN SET @TypeNo = 2 END
	IF @searchLocation = ''categories'' BEGIN SET @TypeNo = 3 END
	
	--================ PRODUCTS/CATEGORIES ==================
	IF @searchLocation = ''products'' OR @searchLocation = ''categories''
	BEGIN
			CREATE TABLE #_ProdCatSearchTbl(ItemID nvarchar(255) COLLATE DATABASE_DEFAULT, ItemValue nvarchar(MAX) COLLATE DATABASE_DEFAULT)
			WHILE @SIndx <= LEN(@keyWordsList)
			BEGIN
				
				SET @CIndx = CHARINDEX('','', @keyWordsList, @SIndx)
				IF @CIndx = 0 BEGIN SET @CIndx = LEN(@keyWordsList)+1 END
				SET @KeyWord = SUBSTRING(@keyWordsList, @SIndx, @CIndx - @SIndx)
				SET @SIndx = @CIndx + 1;
				INSERT INTO #_ProdCatSearchTbl (ItemID,ItemValue)
				SELECT     CAST(LE_ParentID as nvarchar(255)), LE_Value
				FROM		tblKartrisLanguageElements
				WHERE     (LE_LanguageID = @LANG_ID) AND (LE_TypeID = @TypeNo) AND (LE_FieldID = 1) AND Contains(LE_Value, @KeyWord);
			END

			SELECT @TotalResult =  Count(ItemID) FROM #_ProdCatSearchTbl;

			SELECT     ItemID, ItemValue
			FROM         #_ProdCatSearchTbl
			
			DROP TABLE #_ProdCatSearchTbl;
		END

	--================ VERSIONS ==================
	IF @searchLocation = ''versions''
	BEGIN
		CREATE TABLE #_VersionSearchTbl(VersionID nvarchar(255) COLLATE DATABASE_DEFAULT, VersionName nvarchar(MAX) COLLATE DATABASE_DEFAULT, VersionCode nvarchar(25) COLLATE DATABASE_DEFAULT, ProductID nvarchar(255) COLLATE DATABASE_DEFAULT)
		WHILE @SIndx <= LEN(@keyWordsList)
		BEGIN
			
			SET @CIndx = CHARINDEX('','', @keyWordsList, @SIndx)
			IF @CIndx = 0 BEGIN SET @CIndx = LEN(@keyWordsList)+1 END
			SET @KeyWord = SUBSTRING(@keyWordsList, @SIndx, @CIndx - @SIndx)
			SET @SIndx = @CIndx + 1;
			INSERT INTO #_VersionSearchTbl (VersionID, VersionName, VersionCode, ProductID)
			SELECT     CAST(LE_ParentID as nvarchar(255)), LE_Value, dbo.fnKartrisVersions_GetCodeNumber(LE_ParentID),
						CAST(dbo.fnKartrisVersions_GetProductID(LE_ParentID) as nvarchar(255))
			FROM		tblKartrisLanguageElements
			WHERE     (LE_LanguageID = @LANG_ID) AND (LE_TypeID = 1) AND (LE_FieldID = 1) AND contains(LE_Value, @KeyWord);

			-- SEARCH FOR THE CODE NUMBER
			INSERT INTO #_VersionSearchTbl (VersionID, VersionName, VersionCode, ProductID)
			SELECT     CAST(LE_ParentID as nvarchar(255)), LE_Value, dbo.fnKartrisVersions_GetCodeNumber(LE_ParentID),
						CAST(dbo.fnKartrisVersions_GetProductID(LE_ParentID) as nvarchar(255))
			FROM		tblKartrisLanguageElements
			WHERE     (LE_LanguageID = @LANG_ID) AND (LE_TypeID = 1) AND (LE_FieldID = 1) 
					AND LE_ParentID 
						IN (SELECT V_ID 
							FROM tblKartrisVersions LEFT OUTER JOIN dbo.vKartrisObjectConfigValues 
								ON V_ID = OCV_ParentID AND OC_Name = ''K:version.extrasku''
							WHERE V_CodeNumber Like N''%'' + @KeyWord + ''%'' OR OCV_Value LIKE N''%'' + @Keyword + ''%'');

		END

		SELECT @TotalResult =  Count(VersionID) FROM #_VersionSearchTbl;
		
		SELECT     VersionID, VersionName, VersionCode, ProductID
		FROM         #_VersionSearchTbl
		DROP TABLE #_VersionSearchTbl;
	END

	--================ CUSTOMERS ==================
	IF @searchLocation = ''customers''
	BEGIN
			
			CREATE TABLE #_CustomerSearchTbl(CustomerID nvarchar(255) COLLATE DATABASE_DEFAULT, CustomerName nvarchar(50) COLLATE DATABASE_DEFAULT, CustomerEmail nvarchar(100) COLLATE DATABASE_DEFAULT)
			WHILE @SIndx <= LEN(@keyWordsList)
			BEGIN
				
				SET @CIndx = CHARINDEX('','', @keyWordsList, @SIndx)
				IF @CIndx = 0 BEGIN SET @CIndx = LEN(@keyWordsList)+1 END
				SET @KeyWord = SUBSTRING(@keyWordsList, @SIndx, @CIndx - @SIndx)
				SET @SIndx = @CIndx + 1;

				INSERT INTO #_CustomerSearchTbl (CustomerID, CustomerName, CustomerEmail)
				SELECT     tblKartrisUsers.U_ID, tblKartrisAddresses.ADR_Name, tblKartrisUsers.U_EmailAddress
				FROM         tblKartrisAddresses RIGHT OUTER JOIN
									  tblKartrisUsers ON tblKartrisAddresses.ADR_ID = tblKartrisUsers.U_DefBillingAddressID
				WHERE     Contains(tblKartrisAddresses.ADR_Name, @KeyWord ) OR
						Contains(tblKartrisUsers.U_EmailAddress, @KeyWord );

			END

			SELECT @TotalResult =  Count(CustomerID) FROM #_CustomerSearchTbl;

			SELECT     CustomerID, CustomerName, CustomerEmail
			FROM         #_CustomerSearchTbl
			
			DROP TABLE #_CustomerSearchTbl;
		END

		--================ ORDERS ==================
		IF @searchLocation = ''orders''
		BEGIN
			CREATE TABLE #_OrdersSearchTbl(OrderID int, PurchaseOrderNumber nvarchar(50) COLLATE DATABASE_DEFAULT)
			WHILE @SIndx <= LEN(@keyWordsList)
			BEGIN
				
				SET @CIndx = CHARINDEX('','', @keyWordsList, @SIndx)
				IF @CIndx = 0 BEGIN SET @CIndx = LEN(@keyWordsList)+1 END
				SET @KeyWord = SUBSTRING(@keyWordsList, @SIndx, @CIndx - @SIndx)
				SET @SIndx = @CIndx + 1;

				INSERT INTO #_OrdersSearchTbl (OrderID, PurchaseOrderNumber)
				SELECT     tblKartrisOrders.O_ID, tblKartrisOrders.O_PurchaseOrderNo
				FROM         tblKartrisOrders 
				WHERE     Contains(tblKartrisOrders.O_PurchaseOrderNo,@KeyWord);

				BEGIN TRY
					INSERT INTO #_OrdersSearchTbl (OrderID, PurchaseOrderNumber)
					SELECT     tblKartrisOrders.O_ID, tblKartrisOrders.O_PurchaseOrderNo
					FROM         tblKartrisOrders 
					WHERE     (tblKartrisOrders.O_ID = @KeyWord);
				END TRY
				BEGIN CATCH
				END CATCH

			END

			SELECT @TotalResult =  Count(OrderID) FROM #_OrdersSearchTbl;


			SELECT     OrderID, PurchaseOrderNumber
			FROM         #_OrdersSearchTbl
			
			DROP TABLE #_OrdersSearchTbl;
		END

	--================ CONFIG ==================
	IF @searchLocation = ''config''
	BEGIN
			
		CREATE TABLE #_ConfigSearchTbl(ConfigName nvarchar(100) COLLATE DATABASE_DEFAULT, ConfigValue nvarchar(255) COLLATE DATABASE_DEFAULT)
		WHILE @SIndx <= LEN(@keyWordsList)
		BEGIN
			
			SET @CIndx = CHARINDEX('','', @keyWordsList, @SIndx)
			IF @CIndx = 0 BEGIN SET @CIndx = LEN(@keyWordsList)+1 END
			SET @KeyWord = SUBSTRING(@keyWordsList, @SIndx, @CIndx - @SIndx)
			SET @SIndx = @CIndx + 1;

			INSERT INTO #_ConfigSearchTbl (ConfigName, ConfigValue)
			SELECT     tblKartrisConfig.CFG_Name, tblKartrisConfig.CFG_Value
			FROM         tblKartrisConfig 
			WHERE     Contains(tblKartrisConfig.CFG_Name,@KeyWord);

		END

		SELECT @TotalResult =  Count(ConfigName) FROM #_ConfigSearchTbl;

		SELECT     ConfigName, ConfigValue
		FROM         #_ConfigSearchTbl
		
		DROP TABLE #_ConfigSearchTbl;
	END

	--================ LS ==================
	IF @searchLocation = ''site''
	BEGIN
			
		CREATE TABLE #_LSSearchTbl(LSFB char(1) COLLATE DATABASE_DEFAULT, LSLang tinyint, LSName nvarchar(255) COLLATE DATABASE_DEFAULT, LSValue nvarchar(MAX) COLLATE DATABASE_DEFAULT, LSClass nvarchar(50) COLLATE DATABASE_DEFAULT)
		WHILE @SIndx <= LEN(@keyWordsList)
		BEGIN
			
			SET @CIndx = CHARINDEX('','', @keyWordsList, @SIndx)
			IF @CIndx = 0 BEGIN SET @CIndx = LEN(@keyWordsList)+1 END
			SET @KeyWord = SUBSTRING(@keyWordsList, @SIndx, @CIndx - @SIndx)
			SET @SIndx = @CIndx + 1;

			INSERT INTO #_LSSearchTbl (LSFB, LSLang, LSName, LSValue, LSClass)
			SELECT     tblKartrisLanguageStrings.LS_FrontBack, tblKartrisLanguageStrings.LS_LangID,
						tblKartrisLanguageStrings.LS_Name, tblKartrisLanguageStrings.LS_Value, tblKartrisLanguageStrings.LS_ClassName
			FROM         tblKartrisLanguageStrings 
			WHERE     tblKartrisLanguageStrings.LS_LangID = @LANG_ID AND
					(Contains(tblKartrisLanguageStrings.LS_Name, @KeyWord) OR
						Contains(tblKartrisLanguageStrings.LS_Value, @KeyWord));

		END

		SELECT @TotalResult =  Count(LSName) FROM #_LSSearchTbl;

		SELECT     LSFB, LSLang, LSName, LSValue, LSClass
		FROM         #_LSSearchTbl
		
		DROP TABLE #_LSSearchTbl;
	END
	
	--============== Custom Pages =======================
	IF @searchLocation = ''pages''
	BEGIN
		CREATE TABLE #_CustomPagesSearchTbl(PageID smallint, PageName nvarchar(50) COLLATE DATABASE_DEFAULT)
		WHILE @SIndx <= LEN(@keyWordsList)
		BEGIN
			
			SET @CIndx = CHARINDEX('','', @keyWordsList, @SIndx)
			IF @CIndx = 0 BEGIN SET @CIndx = LEN(@keyWordsList)+1 END
			SET @KeyWord = SUBSTRING(@keyWordsList, @SIndx, @CIndx - @SIndx)
			SET @SIndx = @CIndx + 1;
			
			INSERT INTO #_CustomPagesSearchTbl (PageID, PageName)
			SELECT DISTINCT LE_ParentID, PAGE_Name
			FROM dbo.tblKartrisLanguageElements INNER JOIN dbo.tblKartrisPages
				ON tblKartrisLanguageElements.LE_ParentID = tblKartrisPages.PAGE_ID
			WHERE (LE_LanguageID = @LANG_ID) AND (LE_TypeID = 8) AND Contains(LE_Value, @KeyWord);
			
		END

		SELECT @TotalResult =  Count(DISTINCT PageID) FROM #_CustomPagesSearchTbl;
		

		SELECT  DISTINCT PageID, PageName
		FROM         #_CustomPagesSearchTbl
		DROP TABLE #_CustomPagesSearchTbl;
	END

END
'
END
		
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisDB_ExportOrders]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisDB_ExportOrders]
(
	@StartDate as nvarchar(100),
	@EndDate as nvarchar(100),
	@IncludeDetails as bit,
	@IncludeIncomplete as bit
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DECLARE @Cmd as nvarchar(MAX);
	
	SET @Cmd = 'SELECT     tblKartrisOrders.O_ID, tblKartrisOrders.O_CustomerID, tblKartrisUsers.U_EmailAddress, tblKartrisUsers.U_AccountHolderName, tblKartrisOrders.O_ShippingPrice, 
						   tblKartrisOrders.O_ShippingTax, '
	
	IF @IncludeDetails = 1	BEGIN SET @Cmd = @Cmd + 'tblKartrisOrders.O_Details, ' END

	SET @Cmd = @Cmd + 'tblKartrisOrders.O_DiscountPercentage, tblKartrisOrders.O_AffiliatePercentage, tblKartrisOrders.O_TotalPrice, 
						  tblKartrisOrders.O_Date, tblKartrisOrders.O_PurchaseOrderNo, tblKartrisOrders.O_SecurityID, tblKartrisOrders.O_Sent, tblKartrisOrders.O_Invoiced, 
						  tblKartrisOrders.O_Shipped, tblKartrisOrders.O_Paid,tblKartrisOrders.O_Status, tblKartrisOrders.O_LastModified, tblKartrisOrders.O_WishListID, 
						  tblKartrisOrders.O_CouponCode, tblKartrisOrders.O_CouponDiscountTotal, tblKartrisOrders.O_PricesIncTax, tblKartrisOrders.O_TaxDue, 
						  tblKartrisOrders.O_PaymentGateWay, tblKartrisOrders.O_ReferenceCode, tblKartrisLanguages.LANG_BackName, tblKartrisCurrencies.CUR_Symbol, 
						  tblKartrisOrders.O_TotalPriceGateway, tblKartrisOrders.O_AffiliatePaymentID, tblKartrisOrders.O_AffiliateTotalPrice, tblKartrisOrders.O_SendOrderUpdateEmail
	FROM         tblKartrisOrders INNER JOIN
						  tblKartrisUsers ON tblKartrisOrders.O_CustomerID = tblKartrisUsers.U_ID INNER JOIN
						  tblKartrisLanguages ON tblKartrisOrders.O_LanguageID = tblKartrisLanguages.LANG_ID INNER JOIN
						  tblKartrisCurrencies ON tblKartrisOrders.O_CurrencyID = tblKartrisCurrencies.CUR_ID
	WHERE 1 = 1 '
	
	IF (@StartDate IS NOT NULL) AND (@EndDate IS NOT NULL)
	BEGIN
		IF (isnumeric(@StartDate) = 1) AND (isnumeric(@EndDate) = 1)
			BEGIN
				SET @Cmd = @Cmd + ' AND O_ID > (CAST(' + @StartDate + ' as int)-1) AND O_ID < (CAST('  + @EndDate + ' as int)+1)'
			END
		ELSE
			BEGIN
				SET @Cmd = @Cmd + ' AND O_Date BETWEEN CAST(''' + @StartDate + ''' as DateTime) AND CAST('''  + @EndDate + ''' as DateTime)'
			END
		
	END
	IF @IncludeIncomplete = 0 OR @IncludeIncomplete IS NULL
	BEGIN
		SET @Cmd = @Cmd + ' AND O_Paid = 1 '
	END

	SET @Cmd = @Cmd + ' ORDER BY O_Date'
	
	EXECUTE(@Cmd);
	
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisDB_ExecuteQuery]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisDB_ExecuteQuery]
(	
	@QueryText as nvarchar(MAX)
)
AS
BEGIN
	Execute(@QueryText);
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisDB_CreateBackup]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisDB_CreateBackup]
(
	@BackupPath as nvarchar(200)
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @DBName as nvarchar(50)
	SET @DBName = DB_NAME();
	BACKUP DATABASE @DBName
	TO DISK = @BackupPath;

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisSupportTickets_Search]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisSupportTickets_Search]
(
	@Keyword as nvarchar(100),
	@LangID as smallint,
	@AssignedID as smallint,
	@TypeID as smallint,
	@UserID as int,
	@UserEmail as nvarchar(50),
	@Status as char(1)
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DECLARE @Cmd as nvarchar(MAX);
	SET @Cmd =
	'SELECT DISTINCT tblKartrisSupportTickets.TIC_ID, tblKartrisSupportTickets.TIC_DateOpened, 
			tblKartrisSupportTickets.TIC_DateClosed, tblKartrisSupportTickets.TIC_Subject, 
			tblKartrisSupportTickets.TIC_UserID, tblKartrisSupportTickets.TIC_LoginID, 
			tblKartrisSupportTickets.TIC_SupportTicketTypeID, tblKartrisSupportTickets.TIC_Status, 
			tblKartrisLogins.LOGIN_Username, tblKartrisUsers.U_EmailAddress, 
			MAX(tblKartrisSupportTicketMessages.STM_DateCreated) AS LastMessageDate, 
			tblKartrisSupportTicketTypes.STT_Name, tblKartrisUsers.U_LanguageID, 
			dbo.fnKartrisSupportTicketMessages_IsAwaitingReply(tblKartrisSupportTickets.TIC_ID) As TIC_AwaitingResponse
	FROM	tblKartrisSupportTickets INNER JOIN
		  tblKartrisSupportTicketMessages ON tblKartrisSupportTickets.TIC_ID = tblKartrisSupportTicketMessages.STM_TicketID INNER JOIN
		  tblKartrisUsers ON tblKartrisSupportTickets.TIC_UserID = tblKartrisUsers.U_ID LEFT OUTER JOIN
		  tblKartrisSupportTicketTypes ON tblKartrisSupportTickets.TIC_SupportTicketTypeID = tblKartrisSupportTicketTypes.STT_ID LEFT OUTER JOIN
		  tblKartrisLogins ON tblKartrisSupportTickets.TIC_LoginID = tblKartrisLogins.LOGIN_ID
	[WHERE]
	GROUP BY tblKartrisSupportTickets.TIC_ID, tblKartrisSupportTickets.TIC_DateOpened, tblKartrisSupportTickets.TIC_DateClosed, tblKartrisSupportTickets.TIC_Subject, 
						  tblKartrisSupportTickets.TIC_UserID, tblKartrisSupportTickets.TIC_LoginID, tblKartrisSupportTickets.TIC_SupportTicketTypeID, tblKartrisSupportTickets.TIC_Status, 
						  tblKartrisLogins.LOGIN_Username, tblKartrisUsers.U_EmailAddress, tblKartrisSupportTicketTypes.STT_Name, tblKartrisUsers.U_LanguageID,
							dbo.fnKartrisSupportTicketMessages_IsAwaitingReply(tblKartrisSupportTickets.TIC_ID) 
	HAVING (tblKartrisUsers.U_LanguageID = ' + CAST(@LangID as nvarchar(2)) + ') '
	
	-- Building the condition
	IF (@Keyword <> '') AND (@Keyword IS NOT NULL)	BEGIN
		SET @Cmd = Replace(@Cmd, '[WHERE]',' WHERE (tblKartrisSupportTickets.TIC_Tags LIKE ''%' + @Keyword + '%'' OR
								tblKartrisSupportTicketMessages.STM_Text LIKE ''%' + @Keyword + '%'' OR
								tblKartrisSupportTickets.TIC_Subject LIKE ''%' + @Keyword + '%'') ')
	END	ELSE BEGIN
		SET @Cmd = Replace(@Cmd, '[WHERE]',' ')
	END
	
	IF (@AssignedID <> -1) BEGIN
		SET @Cmd = @Cmd + ' AND  (tblKartrisSupportTickets.TIC_LoginID=' + CAST(@AssignedID as nvarchar(10)) + ') '
	END
	IF (@TypeID <> -1) BEGIN
		SET @Cmd = @Cmd + ' AND  (tblKartrisSupportTickets.TIC_SupportTicketTypeID=' + CAST(@TypeID as nvarchar(10)) + ') '
	END
	IF (@UserID <> -1) BEGIN
		SET @Cmd = @Cmd + ' AND  (tblKartrisSupportTickets.TIC_UserID=' + CAST(@UserID as nvarchar(10)) + ') '
	END ELSE BEGIN
		IF (@UserEmail <> '') AND (@UserEmail IS NOT NULL)BEGIN
			SET @Cmd = @Cmd + ' AND  (tblKartrisUsers.U_EmailAddress LIKE ''%' + @UserEmail + '%'') '
		END
	END
	IF (@Status <> 'a')	BEGIN
		IF (@Status = 'w') BEGIN
			SET @Cmd = @Cmd + ' AND  (tblKartrisSupportTickets.TIC_ID IN 
										(SELECT  DISTINCT tblKartrisSupportTicketMessages.STM_TicketID
										 FROM    tblKartrisSupportTicketMessages INNER JOIN tblKartrisSupportTickets 
											ON tblKartrisSupportTicketMessages.STM_TicketID = tblKartrisSupportTickets.TIC_ID
										 WHERE   dbo.fnKartrisSupportTicketMessages_IsAwaitingReply(tblKartrisSupportTicketMessages.STM_TicketID) = 1 '
			IF (@AssignedID <> -1) BEGIN
				SET @Cmd = @Cmd + ' AND  (tblKartrisSupportTickets.TIC_LoginID=' + CAST(@AssignedID as nvarchar(10)) + ') '
			END	
						
			SET @Cmd = @Cmd + ' ))'
		END ELSE BEGIN
			SET @Cmd = @Cmd + ' AND  (tblKartrisSupportTickets.TIC_Status=''' + @Status + ''') '
		END
	END

	Print @Cmd;
	EXECUTE(@Cmd);

END
GO
/****** Object:  Table [dbo].[tblKartrisAttributes]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblKartrisAttributes](
	[ATTRIB_ID] [int] IDENTITY(1,1) NOT NULL,
	[ATTRIB_Type] [char](1) NULL,
	[ATTRIB_Live] [bit] NOT NULL,
	[ATTRIB_FastEntry] [bit] NOT NULL,
	[ATTRIB_ShowFrontend] [bit] NOT NULL,
	[ATTRIB_ShowSearch] [bit] NOT NULL,
	[ATTRIB_OrderByValue] [tinyint] NULL,
	[ATTRIB_Compare] [char](1) NULL,
	[ATTRIB_Special] [bit] NOT NULL,
 CONSTRAINT [aaaaatblKartrisAttributes_PK] PRIMARY KEY NONCLUSTERED 
(
	[ATTRIB_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE UNIQUE CLUSTERED INDEX [idxAttrib_ID] ON [dbo].[tblKartrisAttributes] 
(
	[ATTRIB_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [PROP_ID] ON [dbo].[tblKartrisAttributes] 
(
	[ATTRIB_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'DEPRECATED, marked for removal' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisAttributes', @level2type=N'COLUMN',@level2name=N'ATTRIB_FastEntry'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'DEPRECATED, marked for removal - pagetitle, metadesc and metakeywords to be handled in language elements' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisAttributes', @level2type=N'COLUMN',@level2name=N'ATTRIB_Special'
GO
/****** Object:  Table [dbo].[tblKartrisTaxRates]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisTaxRates](
	[T_ID] [tinyint] IDENTITY(1,1) NOT NULL,
	[T_Taxrate] DECIMAL(18,4) NOT NULL,
	[T_QBRefCode] [nvarchar](50) NULL,
 CONSTRAINT [aaaaatblKartrisTaxRates_PK] PRIMARY KEY NONCLUSTERED 
(
	[T_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE UNIQUE CLUSTERED INDEX [idxT_ID] ON [dbo].[tblKartrisTaxRates] 
(
	[T_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [T_ID] ON [dbo].[tblKartrisTaxRates] 
(
	[T_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
SET IDENTITY_INSERT [dbo].[tblKartrisTaxRates] ON
INSERT [dbo].[tblKartrisTaxRates] ([T_ID], [T_Taxrate], [T_QBRefCode]) VALUES (1, 0, NULL)
INSERT [dbo].[tblKartrisTaxRates] ([T_ID], [T_Taxrate], [T_QBRefCode]) VALUES (2, 20, NULL)
INSERT [dbo].[tblKartrisTaxRates] ([T_ID], [T_Taxrate], [T_QBRefCode]) VALUES (3, 5, NULL)
INSERT [dbo].[tblKartrisTaxRates] ([T_ID], [T_Taxrate], [T_QBRefCode]) VALUES (4, 0, NULL)
INSERT [dbo].[tblKartrisTaxRates] ([T_ID], [T_Taxrate], [T_QBRefCode]) VALUES (5, 0, NULL)
INSERT [dbo].[tblKartrisTaxRates] ([T_ID], [T_Taxrate], [T_QBRefCode]) VALUES (6, 0, NULL)
INSERT [dbo].[tblKartrisTaxRates] ([T_ID], [T_Taxrate], [T_QBRefCode]) VALUES (7, 0, NULL)
INSERT [dbo].[tblKartrisTaxRates] ([T_ID], [T_Taxrate], [T_QBRefCode]) VALUES (8, 0, NULL)
INSERT [dbo].[tblKartrisTaxRates] ([T_ID], [T_Taxrate], [T_QBRefCode]) VALUES (9, 0, NULL)
INSERT [dbo].[tblKartrisTaxRates] ([T_ID], [T_Taxrate], [T_QBRefCode]) VALUES (10, 0, NULL)
SET IDENTITY_INSERT [dbo].[tblKartrisTaxRates] OFF
/****** Object:  Table [dbo].[tblKartrisLanguageElementTypeFields]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisLanguageElementTypeFields](
	[LET_ID] [tinyint] NOT NULL,
	[LEFN_ID] [tinyint] NOT NULL,
	[LEFN_IsMandatory] [bit] NOT NULL,
 CONSTRAINT [PK_tblKartrisLanguageElementTypeFields] PRIMARY KEY CLUSTERED 
(
	[LET_ID] ASC,
	[LEFN_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (1, 1, 1)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (1, 2, 0)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (2, 1, 1)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (2, 2, 0)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (2, 3, 0)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (2, 4, 0)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (2, 5, 0)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (2, 7, 0)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (2, 8, 0)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (3, 1, 1)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (3, 2, 0)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (3, 3, 0)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (3, 4, 0)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (3, 5, 0)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (3, 8, 0)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (4, 1, 1)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (5, 1, 1)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (6, 1, 1)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (6, 2, 0)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (7, 1, 1)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (8, 3, 0)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (8, 4, 0)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (8, 5, 0)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (8, 6, 1)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (8, 9, 1)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (9, 1, 1)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (9, 2, 0)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (10, 1, 1)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (11, 1, 1)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (12, 1, 1)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (13, 1, 1)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (14, 1, 1)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (15, 6, 0)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (16, 1, 1)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (16, 6, 1)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (16, 7, 0)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (17, 1, 1)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (17, 3, 1)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (17, 4, 0)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (17, 5, 0)
INSERT [dbo].[tblKartrisLanguageElementTypeFields] ([LET_ID], [LEFN_ID], [LEFN_IsMandatory]) VALUES (17, 6, 1)
/****** Object:  StoredProcedure [dbo].[sp__foreachtable]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[sp__foreachtable]

/***	Built from the Microsoft original sp__msForEachTable
****
****	Use at your own risk
***/

  @command1 nvarchar(2000), @replacechar nchar(1) = N'?',
  @command2 nvarchar(2000) = null,
  @command3 nvarchar(2000) = null,
  @whereand nvarchar(2000) = null,
  @precommand nvarchar(2000) = null,
  @postcommand nvarchar(2000) = null

as
  /* This proc returns one or more rows for each table (optionally,
  matching @where), with each table defaulting to its own result set */
  /* @precommand and @postcommand may be used to force a single
  result set via a temp table. */

  /* Preprocessor won't replace within quotes so have to use str(). */
  declare @mscat nvarchar(12)
  select @mscat = ltrim(str(convert(int, 0x0002)))

  if (@precommand is not null)
	  exec(@precommand)

  /* Create the select */

  exec(N'declare hCForEach cursor global for select (object_name(id))
	  from dbo.sysobjects o ' + N' where
	  OBJECTPROPERTY(o.id, N''IsUserTable'') = 1 ' + N' and
	  o.category & ' + @mscat + N' = 0 ' + @whereand)

  declare @retval int
  select @retval = @@error
  if (@retval = 0)
	  exec @retval = sp_MSforeach_worker @command1, @replacechar, @command2, @command3

  if (@retval = 0 and @postcommand is not null)
	  exec(@postcommand)

  return @retval
GO
/****** Object:  UserDefinedFunction [dbo].[fnTbl_SplitStrings]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE FUNCTION [dbo].[fnTbl_SplitStrings]
(	
	@List varchar(max))
RETURNS @ParsedList 
table(_ID varchar(500)) AS BEGIN
	DECLARE @_ID varchar(500), @Pos int    
	SET @List = LTRIM(RTRIM(@List))+ ','    
	SET @Pos = CHARINDEX(',', @List, 1)    
	IF REPLACE(@List, ',', '') <> '' BEGIN        
		WHILE @Pos > 0 BEGIN                
			SET @_ID = LTRIM(RTRIM(LEFT(@List, @Pos - 1)))                
			IF @_ID <> '' BEGIN                        
				INSERT INTO @ParsedList (_ID)                         
				VALUES (Replace(@_ID, '[;]',','))              
			END                
			SET @List = RIGHT(@List, LEN(@List) - @Pos)                
			SET @Pos = CHARINDEX(',', @List, 1)        
		END    
	END     
	RETURN
END
GO
/****** Object:  UserDefinedFunction [dbo].[fnTbl_SplitNumbers]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE FUNCTION [dbo].[fnTbl_SplitNumbers]
(	
	@List varchar(max))
RETURNS @ParsedList 
table(_ID int) AS BEGIN
	DECLARE @_ID varchar(10), @Pos int    
	SET @List = LTRIM(RTRIM(@List))+ ','    
	SET @Pos = CHARINDEX(',', @List, 1)    
	IF REPLACE(@List, ',', '') <> '' BEGIN        
		WHILE @Pos > 0 BEGIN                
			SET @_ID = LTRIM(RTRIM(LEFT(@List, @Pos - 1)))                
			IF @_ID <> '' BEGIN                        
				INSERT INTO @ParsedList (_ID)                         
				VALUES (CAST(@_ID AS int)) --Use Appropriate conversion                
			END                
			SET @List = RIGHT(@List, LEN(@List) - @Pos)                
			SET @Pos = CHARINDEX(',', @List, 1)        
		END    
	END     
	RETURN
END
GO
/****** Object:  Table [dbo].[tblKartrisKnowledgeBase]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisKnowledgeBase](
	[KB_ID] [int] IDENTITY(1,1) NOT NULL,
	[KB_DateCreated] [smalldatetime] NULL,
	[KB_LastUpdated] [smalldatetime] NULL,
	[KB_Live] [bit] NULL,
 CONSTRAINT [PK_tblKartrisKnowledgeBase] PRIMARY KEY CLUSTERED 
(
	[KB_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisInvoiceRows]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisInvoiceRows](
	[IR_ID] [int] IDENTITY(1,1) NOT NULL,
	[IR_OrderNumberID] [int] NULL,
	[IR_VersionCode] [nvarchar](50) NULL,
	[IR_VersionName] [nvarchar](255) NULL,
	[IR_Quantity] [float] NULL,
	[IR_PricePerItem] DECIMAL(18,4) NULL,
	[IR_TaxPerItem] DECIMAL(18,4) NULL,
	[IR_OptionsText] [nvarchar](4000) NULL,
 CONSTRAINT [aaaaatblKartrisInvoiceRows_PK] PRIMARY KEY NONCLUSTERED 
(
	[IR_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE UNIQUE CLUSTERED INDEX [idxIR_ID] ON [dbo].[tblKartrisInvoiceRows] 
(
	[IR_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [OI_ID] ON [dbo].[tblKartrisInvoiceRows] 
(
	[IR_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [OI_VersionCode] ON [dbo].[tblKartrisInvoiceRows] 
(
	[IR_VersionCode] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [OI_VersionID] ON [dbo].[tblKartrisInvoiceRows] 
(
	[IR_OrderNumberID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisWishLists]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisWishLists](
	[WL_ID] [int] IDENTITY(1,1) NOT NULL,
	[WL_UserID] [int] NULL,
	[WL_Name] [nvarchar](255) NULL,
	[WL_PublicPassword] [nvarchar](10) NULL,
	[WL_Message] [nvarchar](max) NULL,
	[WL_DateTimeAdded] [smalldatetime] NULL,
	[WL_LastUpdated] [smalldatetime] NULL,
 CONSTRAINT [aaaaatblKartrisWishList_PK] PRIMARY KEY NONCLUSTERED 
(
	[WL_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE UNIQUE CLUSTERED INDEX [idxWL_ID] ON [dbo].[tblKartrisWishLists] 
(
	[WL_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [WL_CustomerID] ON [dbo].[tblKartrisWishLists] 
(
	[WL_UserID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisLanguageElementFieldNames]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblKartrisLanguageElementFieldNames](
	[LEFN_ID] [tinyint] NOT NULL,
	[LEFN_Name] [varchar](50) NULL,
	[LEFN_DisplayText] [nvarchar](50) NULL,
	[LEFN_CssClass] [nvarchar](50) NULL,
	[LEFN_IsMultiLine] [bit] NOT NULL,
	[LEFN_UseHTMLEditor] [bit] NULL,
	[LEFN_SearchEngineInput] [bit] NULL,
 CONSTRAINT [PK_tblKartrisLanguageElementFieldNames] PRIMARY KEY CLUSTERED 
(
	[LEFN_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
INSERT [dbo].[tblKartrisLanguageElementFieldNames] ([LEFN_ID], [LEFN_Name], [LEFN_DisplayText], [LEFN_CssClass], [LEFN_IsMultiLine], [LEFN_UseHTMLEditor], [LEFN_SearchEngineInput]) VALUES (1, N'Name', N'Name', N'elementname', 0, 0, 0)
INSERT [dbo].[tblKartrisLanguageElementFieldNames] ([LEFN_ID], [LEFN_Name], [LEFN_DisplayText], [LEFN_CssClass], [LEFN_IsMultiLine], [LEFN_UseHTMLEditor], [LEFN_SearchEngineInput]) VALUES (2, N'Desc', N'Description', N'elementdesc', 1, 1, 0)
INSERT [dbo].[tblKartrisLanguageElementFieldNames] ([LEFN_ID], [LEFN_Name], [LEFN_DisplayText], [LEFN_CssClass], [LEFN_IsMultiLine], [LEFN_UseHTMLEditor], [LEFN_SearchEngineInput]) VALUES (3, N'PageTitle', N'Page Title', N'elementpagetitle', 0, 0, 1)
INSERT [dbo].[tblKartrisLanguageElementFieldNames] ([LEFN_ID], [LEFN_Name], [LEFN_DisplayText], [LEFN_CssClass], [LEFN_IsMultiLine], [LEFN_UseHTMLEditor], [LEFN_SearchEngineInput]) VALUES (4, N'MetaDescription', N'Meta Description', N'elementmetadesc', 1, 0, 1)
INSERT [dbo].[tblKartrisLanguageElementFieldNames] ([LEFN_ID], [LEFN_Name], [LEFN_DisplayText], [LEFN_CssClass], [LEFN_IsMultiLine], [LEFN_UseHTMLEditor], [LEFN_SearchEngineInput]) VALUES (5, N'MetaKeywords', N'Meta Keywords', N'elementmetakeywords', 1, 0, 1)
INSERT [dbo].[tblKartrisLanguageElementFieldNames] ([LEFN_ID], [LEFN_Name], [LEFN_DisplayText], [LEFN_CssClass], [LEFN_IsMultiLine], [LEFN_UseHTMLEditor], [LEFN_SearchEngineInput]) VALUES (6, N'Text', N'Text', N'elementtext', 1, 1, 0)
INSERT [dbo].[tblKartrisLanguageElementFieldNames] ([LEFN_ID], [LEFN_Name], [LEFN_DisplayText], [LEFN_CssClass], [LEFN_IsMultiLine], [LEFN_UseHTMLEditor], [LEFN_SearchEngineInput]) VALUES (7, N'StrapLine', N'Strapline', N'elementstrapline', 1, 1, 0)
INSERT [dbo].[tblKartrisLanguageElementFieldNames] ([LEFN_ID], [LEFN_Name], [LEFN_DisplayText], [LEFN_CssClass], [LEFN_IsMultiLine], [LEFN_UseHTMLEditor], [LEFN_SearchEngineInput]) VALUES (8, N'URLName', N'URL Name', N'elementurl', 0, 0, 1)
INSERT [dbo].[tblKartrisLanguageElementFieldNames] ([LEFN_ID], [LEFN_Name], [LEFN_DisplayText], [LEFN_CssClass], [LEFN_IsMultiLine], [LEFN_UseHTMLEditor], [LEFN_SearchEngineInput]) VALUES (9, N'Title', N'Title', N'elementtitle', 0, 0, 0)
/****** Object:  Table [dbo].[tblKartrisDeletedItems]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblKartrisDeletedItems](
	[Deleted_ID] [bigint] NOT NULL,
	[Deleted_Type] [char](1) NOT NULL,
	[Deleted_VersionProduct] [int] NULL,
	[Deleted_DateTime] [datetime] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE UNIQUE CLUSTERED INDEX [idxDeleted_ID_Type] ON [dbo].[tblKartrisDeletedItems] 
(
	[Deleted_ID] ASC,
	[Deleted_Type] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'c (category), p (product), v (version)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisDeletedItems', @level2type=N'COLUMN',@level2name=N'Deleted_Type'
GO
/****** Object:  Table [dbo].[tblKartrisCustomerGroups]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisCustomerGroups](
	[CG_ID] [smallint] IDENTITY(1,1) NOT NULL,
	[CG_Discount] [real] NULL,
	[CG_Live] [bit] NULL,
 CONSTRAINT [aaaaatblKartrisCustomerGroups_PK] PRIMARY KEY NONCLUSTERED 
(
	[CG_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE UNIQUE CLUSTERED INDEX [idx_CG_ID] ON [dbo].[tblKartrisCustomerGroups] 
(
	[CG_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [CG_ID] ON [dbo].[tblKartrisCustomerGroups] 
(
	[CG_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisOrderPaymentLink]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisOrderPaymentLink](
	[OP_PaymentID] [int] NOT NULL,
	[OP_OrderID] [int] NOT NULL,
	[OP_OrderCanceled] [bit] NULL,
 CONSTRAINT [PK_tblKartrisOrdersPaymentsLink] PRIMARY KEY CLUSTERED 
(
	[OP_PaymentID] ASC,
	[OP_OrderID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisOptionGroups]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblKartrisOptionGroups](
	[OPTG_ID] [smallint] IDENTITY(1,1) NOT NULL,
	[OPTG_BackendName] [nvarchar](50) NULL,
	[OPTG_OptionDisplayType] [char](1) NOT NULL,
	[OPTG_DefOrderByValue] [smallint] NULL,
 CONSTRAINT [aaaaatblKartrisOptionGroups_PK] PRIMARY KEY NONCLUSTERED 
(
	[OPTG_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE UNIQUE CLUSTERED INDEX [idxOPTG_ID] ON [dbo].[tblKartrisOptionGroups] 
(
	[OPTG_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [Indx_DefOrderByValue] ON [dbo].[tblKartrisOptionGroups] 
(
	[OPTG_DefOrderByValue] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [OPT_ID] ON [dbo].[tblKartrisOptionGroups] 
(
	[OPTG_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [OPTG_BackendID] ON [dbo].[tblKartrisOptionGroups] 
(
	[OPTG_BackendName] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisLanguages]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisLanguages](
	[LANG_ID] [tinyint] IDENTITY(1,1) NOT NULL,
	[LANG_BackName] [nvarchar](50) NULL,
	[LANG_FrontName] [nvarchar](50) NULL,
	[LANG_SkinLocation] [nvarchar](50) NULL,
	[LANG_LiveFront] [bit] NOT NULL,
	[LANG_LiveBack] [bit] NOT NULL,
	[LANG_EmailFrom] [nvarchar](255) NULL,
	[LANG_EmailTo] [nvarchar](255) NULL,
	[LANG_EmailToContact] [nvarchar](255) NULL,
	[LANG_DateFormat] [nvarchar](50) NULL,
	[LANG_DateAndTimeFormat] [nvarchar](50) NULL,
	[LANG_Culture] [nvarchar](10) NULL,
	[LANG_UICulture] [nvarchar](10) NULL,
	[LANG_Master] [nvarchar](50) NULL,
	[LANG_Theme] [nvarchar](50) NULL,
 CONSTRAINT [PK_tblKartrisLanguages] PRIMARY KEY CLUSTERED 
(
	[LANG_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [LANG_ID] ON [dbo].[tblKartrisLanguages] 
(
	[LANG_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
SET IDENTITY_INSERT [dbo].[tblKartrisLanguages] ON
INSERT [dbo].[tblKartrisLanguages] ([LANG_ID], [LANG_BackName], [LANG_FrontName], [LANG_SkinLocation], [LANG_LiveFront], [LANG_LiveBack], [LANG_EmailFrom], [LANG_EmailTo], [LANG_EmailToContact], [LANG_DateFormat], [LANG_DateAndTimeFormat], [LANG_Culture], [LANG_UICulture], [LANG_Master], [LANG_Theme]) VALUES (1, N'English', N'English', NULL, 1, 1, N'reply@mysite.xyz', N'orders@mysite.xyz', N'contact@mysite.xyz', N'd MMM yy', N'd MMM yy, HH:mm', N'en-GB', N'en', NULL, NULL)
SET IDENTITY_INSERT [dbo].[tblKartrisLanguages] OFF
/****** Object:  Table [dbo].[tblKartrisLanguageElementTypes]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblKartrisLanguageElementTypes](
	[LET_ID] [tinyint] NOT NULL,
	[LET_Name] [varchar](50) NULL,
 CONSTRAINT [PK_tblKartrisTableNames] PRIMARY KEY CLUSTERED 
(
	[LET_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
INSERT [dbo].[tblKartrisLanguageElementTypes] ([LET_ID], [LET_Name]) VALUES (1, N'tblKartrisVersions')
INSERT [dbo].[tblKartrisLanguageElementTypes] ([LET_ID], [LET_Name]) VALUES (2, N'tblKartrisProducts')
INSERT [dbo].[tblKartrisLanguageElementTypes] ([LET_ID], [LET_Name]) VALUES (3, N'tblKartrisCategories')
INSERT [dbo].[tblKartrisLanguageElementTypes] ([LET_ID], [LET_Name]) VALUES (4, N'tblKartrisAttributes')
INSERT [dbo].[tblKartrisLanguageElementTypes] ([LET_ID], [LET_Name]) VALUES (5, N'tblKartrisOptions')
INSERT [dbo].[tblKartrisLanguageElementTypes] ([LET_ID], [LET_Name]) VALUES (6, N'tblKartrisOptionGroups')
INSERT [dbo].[tblKartrisLanguageElementTypes] ([LET_ID], [LET_Name]) VALUES (7, N'tblKartrisPromotions')
INSERT [dbo].[tblKartrisLanguageElementTypes] ([LET_ID], [LET_Name]) VALUES (8, N'tblKartrisPages')
INSERT [dbo].[tblKartrisLanguageElementTypes] ([LET_ID], [LET_Name]) VALUES (9, N'tblKartrisShippingMethods')
INSERT [dbo].[tblKartrisLanguageElementTypes] ([LET_ID], [LET_Name]) VALUES (10, N'tblKartrisShippingZones')
INSERT [dbo].[tblKartrisLanguageElementTypes] ([LET_ID], [LET_Name]) VALUES (11, N'tblKartrisDestination')
INSERT [dbo].[tblKartrisLanguageElementTypes] ([LET_ID], [LET_Name]) VALUES (12, N'tblKartrisCustomerGroups')
INSERT [dbo].[tblKartrisLanguageElementTypes] ([LET_ID], [LET_Name]) VALUES (13, N'tblKartrisCurrencies')
INSERT [dbo].[tblKartrisLanguageElementTypes] ([LET_ID], [LET_Name]) VALUES (14, N'tblKartrisAttributeValues')
INSERT [dbo].[tblKartrisLanguageElementTypes] ([LET_ID], [LET_Name]) VALUES (15, N'tblKartrisPromotionStrings')
INSERT [dbo].[tblKartrisLanguageElementTypes] ([LET_ID], [LET_Name]) VALUES (16, N'tblKartrisNews')
INSERT [dbo].[tblKartrisLanguageElementTypes] ([LET_ID], [LET_Name]) VALUES (17, N'tblKartrisKnowledgeBase')
/****** Object:  Table [dbo].[tblKartrisNews]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisNews](
	[N_ID] [int] IDENTITY(1,1) NOT NULL,
	[N_DateCreated] [smalldatetime] NULL,
	[N_LastUpdated] [smalldatetime] NULL,
 CONSTRAINT [aaaaatblKartrisNews_PK] PRIMARY KEY NONCLUSTERED 
(
	[N_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE UNIQUE CLUSTERED INDEX [idxN_ID] ON [dbo].[tblKartrisNews] 
(
	[N_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisMediaTypes]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisMediaTypes](
	[MT_ID] [smallint] IDENTITY(1,1) NOT NULL,
	[MT_Extension] [nvarchar](20) NOT NULL,
	[MT_DefaultHeight] [int] NULL,
	[MT_DefaultWidth] [int] NULL,
	[MT_DefaultParameters] [nvarchar](1000) NULL,
	[MT_DefaultisDownloadable] [bit] NULL,
	[MT_Embed] [bit] NULL,
	[MT_Inline] [bit] NULL,
 CONSTRAINT [PK_tblKartrisMediaTypes] PRIMARY KEY CLUSTERED 
(
	[MT_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET IDENTITY_INSERT [dbo].[tblKartrisMediaTypes] ON
INSERT [dbo].[tblKartrisMediaTypes] ([MT_ID], [MT_Extension], [MT_DefaultHeight], [MT_DefaultWidth], [MT_DefaultParameters], [MT_DefaultisDownloadable], [MT_Embed], [MT_Inline]) VALUES (1, N'swf', 600, 800, NULL, 1, 0, 0)
INSERT [dbo].[tblKartrisMediaTypes] ([MT_ID], [MT_Extension], [MT_DefaultHeight], [MT_DefaultWidth], [MT_DefaultParameters], [MT_DefaultisDownloadable], [MT_Embed], [MT_Inline]) VALUES (2, N'mp3', 25, 400, N'autostart=0;autoreplay=1;showtime=1;randomplay=1;nopointer=1', 0, 0, 1)
INSERT [dbo].[tblKartrisMediaTypes] ([MT_ID], [MT_Extension], [MT_DefaultHeight], [MT_DefaultWidth], [MT_DefaultParameters], [MT_DefaultisDownloadable], [MT_Embed], [MT_Inline]) VALUES (3, N'youtube', 410, 640, NULL, 0, 1, 0)
INSERT [dbo].[tblKartrisMediaTypes] ([MT_ID], [MT_Extension], [MT_DefaultHeight], [MT_DefaultWidth], [MT_DefaultParameters], [MT_DefaultisDownloadable], [MT_Embed], [MT_Inline]) VALUES (4, N'flv', 600, 800, NULL, 0, 0, 0)
INSERT [dbo].[tblKartrisMediaTypes] ([MT_ID], [MT_Extension], [MT_DefaultHeight], [MT_DefaultWidth], [MT_DefaultParameters], [MT_DefaultisDownloadable], [MT_Embed], [MT_Inline]) VALUES (5, N'pdf', 10, 10, NULL, 1, 0, 0)
INSERT [dbo].[tblKartrisMediaTypes] ([MT_ID], [MT_Extension], [MT_DefaultHeight], [MT_DefaultWidth], [MT_DefaultParameters], [MT_DefaultisDownloadable], [MT_Embed], [MT_Inline]) VALUES (6, N'doc', 10, 10, NULL, 1, 0, 0)
INSERT [dbo].[tblKartrisMediaTypes] ([MT_ID], [MT_Extension], [MT_DefaultHeight], [MT_DefaultWidth], [MT_DefaultParameters], [MT_DefaultisDownloadable], [MT_Embed], [MT_Inline]) VALUES (7, N'html5video', 480, 640, NULL, 0, 0, 0)
INSERT [dbo].[tblKartrisMediaTypes] ([MT_ID], [MT_Extension], [MT_DefaultHeight], [MT_DefaultWidth], [MT_DefaultParameters], [MT_DefaultisDownloadable], [MT_Embed], [MT_Inline]) VALUES (8, N'urlnewtab', 10, 10, NULL, 0, 1, 0)
INSERT [dbo].[tblKartrisMediaTypes] ([MT_ID], [MT_Extension], [MT_DefaultHeight], [MT_DefaultWidth], [MT_DefaultParameters], [MT_DefaultisDownloadable], [MT_Embed], [MT_Inline]) VALUES (9, N'urlpopup', 480, 640, NULL, 0, 1, 0)
INSERT [dbo].[tblKartrisMediaTypes] ([MT_ID], [MT_Extension], [MT_DefaultHeight], [MT_DefaultWidth], [MT_DefaultParameters], [MT_DefaultisDownloadable], [MT_Embed], [MT_Inline]) VALUES (10, N'zip', 10, 10, NULL, 1, 0, 0)
SET IDENTITY_INSERT [dbo].[tblKartrisMediaTypes] OFF
/****** Object:  Table [dbo].[tblKartrisMediaLinks]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisMediaLinks](
	[ML_ID] [int] IDENTITY(1,1) NOT NULL,
	[ML_ParentID] [bigint] NULL,
	[ML_ParentType] [nvarchar](1) NULL,
	[ML_SortOrder] [int] NULL,
	[ML_EmbedSource] [nvarchar](2000) NULL,
	[ML_MediaTypeID] [smallint] NULL,
	[ML_Height] [int] NULL,
	[ML_Width] [int] NULL,
	[ML_isDownloadable] [bit] NULL,
	[ML_Parameters] [nvarchar](1000) NULL,
	[ML_Live] [bit] NULL,
 CONSTRAINT [PK_tblKartrisMediaLinks] PRIMARY KEY CLUSTERED 
(
	[ML_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisLogins]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisLogins](
	[LOGIN_ID] [smallint] IDENTITY(1,1) NOT NULL,
	[LOGIN_Username] [nvarchar](50) NULL,
	[LOGIN_Password] [nvarchar](50) NULL,
	[LOGIN_Live] [bit] NULL,
	[LOGIN_Orders] [bit] NULL,
	[LOGIN_Products] [bit] NULL,
	[LOGIN_Config] [bit] NULL,
	[LOGIN_Protected] [bit] NULL,
	[LOGIN_LanguageID] [tinyint] NULL,
	[LOGIN_EmailAddress] [nvarchar](50) NULL,
	[LOGIN_Tickets] [bit] NULL,
	[LOGIN_SaltValue] [nvarchar](64) NULL,
	[LOGIN_PushNotifications] [nvarchar](max) NULL,
 CONSTRAINT [aaaaatblKartrisLogins_PK] PRIMARY KEY NONCLUSTERED 
(
	[LOGIN_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE UNIQUE CLUSTERED INDEX [idxLOGIN_ID] ON [dbo].[tblKartrisLogins] 
(
	[LOGIN_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [LOGIN_ID] ON [dbo].[tblKartrisLogins] 
(
	[LOGIN_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisSuppliers]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisSuppliers](
	[SUP_ID] [smallint] IDENTITY(1,1) NOT NULL,
	[SUP_Name] [nvarchar](50) NULL,
	[SUP_Live] [bit] NULL,
 CONSTRAINT [aaaaatblKartrisSuppliers_PK] PRIMARY KEY NONCLUSTERED 
(
	[SUP_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE UNIQUE CLUSTERED INDEX [idxSUP_ID] ON [dbo].[tblKartrisSuppliers] 
(
	[SUP_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [SUP_ID] ON [dbo].[tblKartrisSuppliers] 
(
	[SUP_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisStatistics]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblKartrisStatistics](
	[ST_ID] [bigint] IDENTITY(1,1) NOT NULL,
	[ST_Type] [char](1) NULL,
	[ST_ItemParentID] [bigint] NULL,
	[ST_ItemID] [bigint] NULL,
	[ST_Date] [datetime] NULL,
	[ST_IP] [nvarchar](50) NULL,
 CONSTRAINT [aaaaatblKartrisProductStats_PK] PRIMARY KEY NONCLUSTERED 
(
	[ST_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE UNIQUE CLUSTERED INDEX [idxST_ID] ON [dbo].[tblKartrisStatistics] 
(
	[ST_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [PS_ID] ON [dbo].[tblKartrisStatistics] 
(
	[ST_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisSupportTicketTypes]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblKartrisSupportTicketTypes](
	[STT_ID] [int] IDENTITY(1,1) NOT NULL,
	[STT_Name] [nvarchar](50) NULL,
	[STT_Level] [char](1) NULL,
 CONSTRAINT [PK_tblKartrisSupportTicketTypes] PRIMARY KEY CLUSTERED 
(
	[STT_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
SET IDENTITY_INSERT [dbo].[tblKartrisSupportTicketTypes] ON
INSERT [dbo].[tblKartrisSupportTicketTypes] ([STT_ID], [STT_Name], [STT_Level]) VALUES (1, N'Sales Enquiry', N's')
INSERT [dbo].[tblKartrisSupportTicketTypes] ([STT_ID], [STT_Name], [STT_Level]) VALUES (2, N'Product Return', N's')
INSERT [dbo].[tblKartrisSupportTicketTypes] ([STT_ID], [STT_Name], [STT_Level]) VALUES (3, N'Premium Technical Support', N'p')
INSERT [dbo].[tblKartrisSupportTicketTypes] ([STT_ID], [STT_Name], [STT_Level]) VALUES (4, N'Suggestion', N's')
SET IDENTITY_INSERT [dbo].[tblKartrisSupportTicketTypes] OFF
/****** Object:  Table [dbo].[tblKartrisSupportTickets]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblKartrisSupportTickets](
	[TIC_ID] [bigint] IDENTITY(1,1) NOT NULL,
	[TIC_DateOpened] [datetime] NOT NULL,
	[TIC_DateClosed] [datetime] NULL,
	[TIC_Subject] [nvarchar](100) NULL,
	[TIC_UserID] [int] NOT NULL,
	[TIC_LoginID] [smallint] NULL,
	[TIC_SupportTicketTypeID] [smallint] NOT NULL,
	[TIC_Status] [char](1) NOT NULL,
	[TIC_TimeSpent] [int] NOT NULL,
	[TIC_Tags] [nvarchar](200) NULL,
 CONSTRAINT [PK_tblKartrisSupportTickets] PRIMARY KEY CLUSTERED 
(
	[TIC_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'o(open), c(closed), u(unresolved) and n(not sure)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisSupportTickets', @level2type=N'COLUMN',@level2name=N'TIC_Status'
GO
/****** Object:  Table [dbo].[tblKartrisSupportTicketMessages]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisSupportTicketMessages](
	[STM_ID] [bigint] IDENTITY(1,1) NOT NULL,
	[STM_TicketID] [bigint] NULL,
	[STM_LoginID] [smallint] NULL,
	[STM_DateCreated] [datetime] NULL,
	[STM_Text] [nvarchar](max) NULL,
 CONSTRAINT [PK_tblKartrisSupportTicketMessages] PRIMARY KEY CLUSTERED 
(
	[STM_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisPromotionStrings]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblKartrisPromotionStrings](
	[PS_ID] [tinyint] NOT NULL,
	[PS_LanguageStringName] [nvarchar](255) NULL,
	[PS_PartNo] [char](1) NULL,
	[PS_Type] [char](1) NULL,
	[PS_Item] [char](1) NULL,
	[PS_Order] [tinyint] NULL,
 CONSTRAINT [PK_tblKartrisPromotionStrings] PRIMARY KEY CLUSTERED 
(
	[PS_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
INSERT [dbo].[tblKartrisPromotionStrings] ([PS_ID], [PS_LanguageStringName], [PS_PartNo], [PS_Type], [PS_Item], [PS_Order]) VALUES (1, N'ContentText_PromotionTextBuyVersion', N'a', N'q', N'v', 1)
INSERT [dbo].[tblKartrisPromotionStrings] ([PS_ID], [PS_LanguageStringName], [PS_PartNo], [PS_Type], [PS_Item], [PS_Order]) VALUES (2, N'ContentText_PromotionTextBuyCategory', N'a', N'q', N'c', 2)
INSERT [dbo].[tblKartrisPromotionStrings] ([PS_ID], [PS_LanguageStringName], [PS_PartNo], [PS_Type], [PS_Item], [PS_Order]) VALUES (3, N'ContentText_PromotionTextBuyProduct', N'a', N'q', N'p', 3)
INSERT [dbo].[tblKartrisPromotionStrings] ([PS_ID], [PS_LanguageStringName], [PS_PartNo], [PS_Type], [PS_Item], [PS_Order]) VALUES (4, N'ContentText_PromotionTextSpend', N'a', N'v', N'a', 4)
INSERT [dbo].[tblKartrisPromotionStrings] ([PS_ID], [PS_LanguageStringName], [PS_PartNo], [PS_Type], [PS_Item], [PS_Order]) VALUES (5, N'ContentText_PromotionTextGetVersionFree', N'b', N'q', N'v', 1)
INSERT [dbo].[tblKartrisPromotionStrings] ([PS_ID], [PS_LanguageStringName], [PS_PartNo], [PS_Type], [PS_Item], [PS_Order]) VALUES (6, N'ContentText_PromotionTextGetVersionOff', N'b', N'p', N'v', 2)
INSERT [dbo].[tblKartrisPromotionStrings] ([PS_ID], [PS_LanguageStringName], [PS_PartNo], [PS_Type], [PS_Item], [PS_Order]) VALUES (7, N'ContentText_PromotionTextGetOff', N'b', N'v', N'a', 3)
INSERT [dbo].[tblKartrisPromotionStrings] ([PS_ID], [PS_LanguageStringName], [PS_PartNo], [PS_Type], [PS_Item], [PS_Order]) VALUES (8, N'ContentText_PromotionTextGetProductFree', N'b', N'q', N'p', 4)
INSERT [dbo].[tblKartrisPromotionStrings] ([PS_ID], [PS_LanguageStringName], [PS_PartNo], [PS_Type], [PS_Item], [PS_Order]) VALUES (9, N'ContentText_PromotionTextGetProductOff', N'b', N'p', N'p', 5)
INSERT [dbo].[tblKartrisPromotionStrings] ([PS_ID], [PS_LanguageStringName], [PS_PartNo], [PS_Type], [PS_Item], [PS_Order]) VALUES (10, N'ContentText_PromotionTextGetCategoryOff', N'b', N'p', N'c', 6)
/****** Object:  StoredProcedure [dbo].[spKartrisLanguageElements_GetView]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisLanguageElements_GetView]
AS
	SET NOCOUNT OFF;
SELECT * FROM [vLanguageElements];
GO
/****** Object:  Table [dbo].[tblKartrisPayments]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisPayments](
	[Payment_ID] [int] IDENTITY(1,1) NOT NULL,
	[Payment_CustomerID] [int] NULL,
	[Payment_Date] [smalldatetime] NULL,
	[Payment_Amount] DECIMAL(18,4) NULL,
	[Payment_CurrencyID] [tinyint] NULL,
	[Payment_ReferenceNo] [nvarchar](50) NULL,
	[Payment_Gateway] [nvarchar](20) NULL,
	[Payment_CurrencyRate] DECIMAL(18,8) NULL,
 CONSTRAINT Payment_ReferenceNo UNIQUE (Payment_ReferenceNo),	
 CONSTRAINT [PK_tblKartrisPayments] PRIMARY KEY CLUSTERED
(
	[Payment_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisPages]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisPages](
	[PAGE_ID] [smallint] IDENTITY(1,1) NOT NULL,
	[PAGE_Name] [nvarchar](50) NOT NULL,
	[PAGE_ParentID] [smallint] NOT NULL,
	[PAGE_DateCreated] [smalldatetime] NULL,
	[PAGE_LastUpdated] [smalldatetime] NULL,
	[PAGE_Live] [bit] NULL,
 CONSTRAINT [aaaaatblKartrisPages_PK] PRIMARY KEY NONCLUSTERED 
(
	[PAGE_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE UNIQUE CLUSTERED INDEX [idxPAGE_ID] ON [dbo].[tblKartrisPages] 
(
	[PAGE_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_tblKartrisPages] ON [dbo].[tblKartrisPages] 
(
	[PAGE_Name] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [PAGE_ID] ON [dbo].[tblKartrisPages] 
(
	[PAGE_Name] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisBasketValues]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblKartrisBasketValues](
	[BV_ID] [bigint] IDENTITY(1,1) NOT NULL,
	[BV_ParentType] [char](1) NULL,
	[BV_ParentID] [bigint] NOT NULL,
	[BV_VersionID] [bigint] NOT NULL,
	[BV_Quantity] [float] NULL,
	[BV_CustomText] [nvarchar](max) NULL,
	[BV_DateTimeAdded] [smalldatetime] NULL,
	[BV_LastUpdated] [smalldatetime] NULL,
 CONSTRAINT [PK_tblKartrisBasketValues] PRIMARY KEY CLUSTERED 
(
	[BV_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[tblKartrisLanguageStrings]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblKartrisLanguageStrings](
	[LS_FrontBack] [char](1) NOT NULL,
	[LS_Name] [nvarchar](255) NOT NULL,
	[LS_Value] [nvarchar](max) NULL,
	[LS_Description] [nvarchar](255) NULL,
	[LS_VersionAdded] [real] NULL,
	[LS_DefaultValue] [nvarchar](max) NULL,
	[LS_VirtualPath] [nvarchar](50) NULL,
	[LS_ClassName] [nvarchar](50) NULL,
	[LS_LangID] [tinyint] NOT NULL,
	[LS_ID] [bigint] IDENTITY(1,1) NOT NULL,
 CONSTRAINT [PK_tblKartrisLanguageStrings] PRIMARY KEY CLUSTERED 
(
	[LS_FrontBack] ASC,
	[LS_Name] ASC,
	[LS_LangID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE NONCLUSTERED INDEX [_dta_index_tblKartrisLanguageStrings_5_1090818948__K8_K9_2_3_4_7_10] ON [dbo].[tblKartrisLanguageStrings] 
(
	[LS_ClassName] ASC,
	[LS_LangID] ASC
)
INCLUDE ( [LS_Description],
[LS_ID],
[LS_Name],
[LS_Value],
[LS_VirtualPath]) WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE UNIQUE NONCLUSTERED INDEX [LS_ID] ON [dbo].[tblKartrisLanguageStrings] 
(
	[LS_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_InvoiceHeader', N' ', NULL, 2.9004, N'', NULL, N'Invoice',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_InvoiceFooter', N' ', NULL, 2.9004, N'', NULL, N'Invoice',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PrintInvoices', N'Print Invoices', NULL, 2.9004, N'', NULL, N'_Orders',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'AdminBar_AddNewProductHere', N'New Product Here', NULL, 1, N'New Product Here', N'AdminBar.ascx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'AdminBar_EditThisPage', N'Edit this Page', NULL, 1, N'Edit this Page', N'AdminBar.ascx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'AdminBar_NavigateToCategory', N'Navigate to this Category', NULL, 1, N'Navigate to this Category', N'AdminBar.ascx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'AdminLog_ConfigChange', N'Config setting changed!', NULL, 1, N'Config setting changed!', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_Affiliates', N'Affiliates', NULL, 1, N'Affiliates', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_Attributes', N'Product Attributes', N'', 1, N'Product Properties', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_AwaitingDispatch', N'Awaiting Dispatch', N'', 1, N'Awaiting Dispatch', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_AwaitingInvoice', N'Awaiting Invoice', NULL, 1, N'Awaiting Invoice', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_AwaitingPayment', N'Awaiting Payment', N'', 1, N'Awaiting Payment', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_BatchProcess', N'Batch Process', NULL, 1, NULL, NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_ByDay', N'By Day', NULL, 1, N'By Day', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_ByPaymentGateway', N'By Payment Gateway', N'', 1, N'By Payment Gateway', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_Cancelled', N'Cancelled', NULL, 2, N'Cancelled', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_Categories', N'Categories', NULL, 1, N'Categories', NULL, N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_Complete', N'Complete', NULL, 1, N'Complete', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_ConfigSettings', N'Config Settings', NULL, 1, N'Config Settings', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_Configuration', N'Configuration', N'', 1, N'Configuration', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_Coupons', N'Coupons', N'', 1, N'Coupons', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_Currencies', N'Currencies', N'', 1, N'Currencies', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_CustomerGroups', N'Groups', N'', 1, N'', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_CustomerReviewsList', N'Customer Reviews', N'', 1, N'Customer Reviews', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_Customers', N'Customers', N'', 1, N'Customers', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_CustomPages', N'Custom Pages', N'', 1, N'Custom Pages', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_DBAdmin', N'Database Admin', N'', 1, N'Database Admin', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_FeaturedProducts', N'Featured Products', NULL, 1, N'Featured Products', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_Front', N'Front of Site', N'', 1, N'Front of Site', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_GenerateFeeds', N'Generate Feeds', NULL, 1, N'Generate Feeds', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_HitsReport', N'Hits Report', NULL, 1, N'Hits Report', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_Home', N'Home', N'', 1, N'Home', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_Knowledgebase', N'Knowledgebase', NULL, 1, N'Knowledgebase', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_LangEmailSetup', N'Lang. & Email Setup', NULL, 1, N'Lang. & Email Setup', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_Languages', N'Languages / Email', N'', 1, N'Languages / Email', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_LanguageStrings', N'Language Strings', N'', 1, N'Language strings', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_ListFind', N'List / Find', N'', 1, N'List / Find', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_ListRecent', N'Recent / Search', N'', 1, N'Most Recent', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_LiveCurrencyRates', N'Live Currency Rates', N'', 1, N'Live Currency Rates', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_Logins', N'Logins', N'', 1, N'Logins', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_MailingList', N'Mailing List', N'', 1, N'Mailing List', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_MarkupPrices', N'Mark Up Prices', NULL, 1.4, N'Mark Up Prices', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_MediaTypes', N'Media Types', NULL, 1.1011, N'Media Types', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_Miscellaneous', N'Miscellaneous', N'', 1, N'Miscellaneous', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_New', N'New', NULL, 1, N'New', NULL, N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_NewCategory', N'New', NULL, 1, N'New', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_News', N'Front News Items', N'', 1, N'Front News Items', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_OptionGroupsList', N'Option Groups', N'', 1, N'Option Groups', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_Orders', N'Orders', NULL, 1, N'Orders', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_Products', N'Products', N'', 1, N'Products', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_Promotions', N'Promotions', N'', 1, N'', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_QuickBooks', N'QuickBooks Integration', NULL, 1, N'QuickBooks Integration', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_RegionalSetup', N'Regional Setup', N'', 1, N'Regional Setup', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_Reports', N'Reports', NULL, 1, N'Reports', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_Revisions', N'Change Log', NULL, 1, N'Change Log', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_SalesReport', N'Sales Report', NULL, 1, N'Sales Report', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_SearchAll', N'All', N'', 1, N'All', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_ShippingDestinations', N'Countries', N'', 1, N'Countries', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_ShippingRates', N'Shipping', N'', 1, N'Shipping', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_Statistics', N'Statistics', N'', 1, N'Statistics', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_StockLevels', N'Stock Levels', N'', 1, N'Stock Levels', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_StringsTranslation', N'Strings Translation', N'', 1, N'Strings Translation', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_Suppliers', N'Suppliers', N'', 1, N'Suppliers', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_Support', N'Support', NULL, 1, N'Support', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_SupportTickets', N'Support Tickets', NULL, 1, N'Support Tickets', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_SupportTicketTypes', N'Support Ticket Types', NULL, 1, N'Support Ticket Types', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_TaxRates', N'Tax Rates', N'', 1, N'Tax Rates', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_Unfinished', N'Unfinished', N'', 1, N'Unfinished', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_VersionDownloads', N'Version Downloads', NULL, 1, N'Version Downloads', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_Versions', N'Versions', N'', 1, N'', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ActivateAll', N'Activate All', NULL, 1, N'Activate All', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Active', N'Active?', N'', 1, N'Active?', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AddAVersionOfProduct', N'Add a Version of this Product', NULL, 1, N'Add a Version of this Product', NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AddNew', N'Add New', N'DEPRECATING - USE "FormButton_New" INSTEAD!', 1, N'Add New', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AddNewProduct', N'Add New Product', N'', 1, N'Add New Product', N'', N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AddNewShippingMethod', N'Add New Shipping Method', N'', 1, N'', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AddNewShippingZone', N'Add New Shipping Zone', N'', 1, N'', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AddNewSubcategory', N'Add New Category', N'', 1, N'Add New Category', N'', N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AddPayment', N'Add Payment', NULL, 2, N'Add Payment', NULL, N'_Payments',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Addresses', N'Addresses', NULL, 2, N'Addresses', NULL, N'_Customers',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AddShippingZone1', N'Select a zone to add to this shipping method. ', N'', 1, N'', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AddShippingZone2', N'To clone an existing zone''s rates, select it in the second list.', N'', 1, N'', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AddShippingZoneToMethod', N'Add Shipping Zone', N'', 1, N'', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AdminLogs', N'Admin Logs', N'', 1, N'Admin Logs', N'', N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AdminLogsPurge1', N'Click the link below to purge old admin logs that are older than [date]. Make sure you have backups of the database if you think you''ll want to look back at old logs - there''s no way to undo this action!', NULL, 1, N'Click the link below to purge old admin logs that are older than [date]. Make sure you have backups of the database if you think you''ll want to look back at old logs - there''s no way to undo this action!', NULL, N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AdminLogsPurge2', N'DEPRECATED', N'DEPRECATED', 1, N'DEPRECATED', NULL, N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AdminSearchCategories', N'Categories', N'', 1, N'', N'', N'_Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AdminSearchConfig', N'Config Settings', N'', 1, N'', N'', N'_Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AdminSearchCustomers', N'Customers', N'', 1, N'', N'', N'_Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AdminSearchOrders', N'Orders', N'', 1, N'', N'', N'_Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AdminSearchProducts', N'Products', N'', 1, N'', N'', N'_Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AdminSearchSiteText', N'Language Strings', NULL, 1, NULL, NULL, N'_Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AdminSearchVersions', N'Versions', N'', 1, N'', N'', N'_Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AffiliateDetails', N'Affiliate Details', NULL, 1, N'Affiliate Details', NULL, N'_Customers',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AffiliateName', N'Affiliate Name', NULL, 1, N'Affiliate Name', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AllCategories', N'All Categories', NULL, 1.4, N'All Categories', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AllErrorLogs', N'the whole error logs from the site', N'', 1, N'the whole error logs from the site', N'', N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AllHigherOrders', N'All Higher Orders', N'', 1, N'All Higher Orders', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AllMyTickets', N'all my tickets', NULL, 1, N'all my tickets', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AllowConfig', N'User can change config values, shipping, tax, countries and other setup details', N'', 1, N'User can change config values, shipping, tax, countries and other setup details', N'_LoginsList.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AllowOrders', N'User can view/change customers, orders, affiliates and coupons', N'', 1, N'User can view/change customers, orders, affiliates and coupons', N'_LoginsList.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AllowProducts', N'User can view/edit categories, products and versions', N'', 1, N'User can view/edit categories, products and versions', N'_LoginsList.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AllowTickets', N'User can view/change support tickets and knowledgebase articles', NULL, 1, N'User can view/change support tickets and knowledgebase articles', N'_LoginsList.aspx', NULL,1)
GO
print 'Processed 100 total records'
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AllTickets', N'All Tickets', NULL, 1, N'All Tickets', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AllVersions', N'all versions in', NULL, 1.4, N'all versions in', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AlreadyExists', N'This item already exists. You cannot create a duplicate item.', N'', 1, N'This item already exists. You cannot create a duplicate item.', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AlreadyInUse', N'This name is already in use. Please choose an alternative, or to view the existing record ', N'', 1, N'This name is already in use. Please choose an alternative, or to view the existing record ', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Ascending', N'Ascending', N'', 1, N'Ascending', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AssignedTo', N'Assigned To', NULL, 1, N'Assigned To', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AssignedToZone', N'Reassign destinations to', NULL, 1, N'Reassign destinations to', NULL, N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AttributeValues', N'Set attribute values', NULL, 1, N'Set property values', NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AvailableToAll', N'No (Available to all customers)', NULL, 1, NULL, NULL, N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AverageDailyTotal', N'Average Daily Total', NULL, 1, N'Average Daily Total', NULL, N'_Statistics',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_AwaitingResponse', N'Awaiting Response', NULL, 1, N'Awaiting Response', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_BackEnd', N'Back end', N'', 1, N'Back end', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_BackLink', N'Back', N'', 1, N'Back', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_BackSearchNoResults', N'No records were found.', N'', 1, N'', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_BackupAlreadyExists', N'A database backup was already taken today. Do you want to overwrite it?', NULL, 1, N'A database backup was already taken today. Do you want to overwrite it?', NULL, N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_BackupSuccessful', N'[filename] was created successfully.', NULL, 1, N'[filename] was created successfully.', NULL, N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_BackupSuggestion', N'We strongly advise you backup the database before clearing data', NULL, 1, N'We strongly advise you backup the database before clearing data', NULL, N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_BackupUnsuccessful', N'[filename] could not be created. Make sure you have set the required permissions to allow the application to create files in the specified location.', NULL, 1, N'[filename] could not be created. Make sure you have set the required permissions to allow the application to create files in the specified location.', NULL, N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_BadEmail', N'Bad email!', NULL, 1, N'Bad email!', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_BaseCurrencyExpl', N'*This is the base currency and cannot be deleted. All prices entered in the back end are in this currency, and exchange rates for the other currencies are given relative to this.', NULL, 1, N'*This is the base currency and cannot be deleted. All prices entered in the back end are in this currency, and exchange rates for the other currencies are given relative to this.', NULL, N'_Currency',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_BatchProcessText', N'Bulk update order status by day', NULL, 1, N'Bulk update order status by day', N'_OrdersList.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_BelongsToCustomerGroup', N'The item belongs to a customer group and is only visible to members of that group who are logged in', NULL, 1, N'The item belongs to a customer group and is only visible to members of that group who are logged in', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Blank', N'[blank]', NULL, 1, N'[blank]', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_BrowseStockLevelImportFile', N'Browse an xls or csv file to import stock level.<br />
IMPORTANT: Make sure to have at least the following field titles (SKU, Stock Quantity and Warning Level). For example:<br /><br />
SKU,Name,Stock Quantity,Warning Level<br />
"pcpc-5","PC Power Cable - 5m",500,80<br />
"pcpc-10","PC Power Cable - 10m",500,80<br />
"pcpc-15","PC Power Cable - 15m",500,80<br />', NULL, 2, N'Browse an xls or csv file to import stock level.<br />
IMPORTANT: Make sure to have at least the following field titles (SKU, StockQty and WarnLevel). For example:<br /><br />
SKU,Name,Stock Quantity,Warning Level<br />
"pcpc-5","PC Power Cable - 5m",500,80<br />
"pcpc-10","PC Power Cable - 10m",500,80<br />
"pcpc-15","PC Power Cable - 15m",500,80<br />', NULL, N'_StockLevel',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CalculateOrderValue', N'order value', N'', 1, N'', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CalculateWeight', N'weight', N'', 1, N'', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CannotCreateCombinationsText', N'Cannot create combinations unless some options are selected and saved.', N'', 1, N'Cannot create combinations unless some options are selected and saved.', N'', N'_Options',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CardExpiry', N'Card Expiry', N'', 1, N'Card Expiry', N'CreditCardInput.ascx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CardIssueNumber', N'Issue Number', N'', 1, N'Issue Number', N'CreditCardInput.ascx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CardNumber', N'Card Number', N'', 1, N'Card Number', N'CreditCardInput.ascx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CardStartDate', N'Valid From', N'', 1, N'Valid From', N'CreditCardInput.ascx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CardType', N'Card Type', N'', 1, N'Card Type', N'CreditCardInput.ascx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CategoriesMatched', N'Categories (and Subcategories) that matched:', N'DEPRECATED - use backmenu_categories', 1, N'Categories (and Subcategories) that matched:', N'', N'_Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CategoryParent', N'Category Parent', N'', 1, N'Category Parent', N'', N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CategoryStatistics', N'Category Statistics', NULL, 1, N'Category Statistics', NULL, N'_Statistics',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ChangeOptionCombinations', N'Change Option Settings', N'', 1, N'Change Option Settings', N'', N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ChargeTax', N'Tax?', N'', 1, N'Tax?', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Chart', N'Chart', NULL, 1.4, N'Chart', NULL, N'_Statistics',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ClassName', N'Class Name', N'', 1, N'Class Name', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Clear', N'Clear', N'', 1, N'Clear', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ClearData', N'Clear Data', N'', 1, N'Clear Data', N'', N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ClickHere', N'Click here', NULL, 1, N'Click here', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ClosedStatus', N'Closed', NULL, 1, N'Closed', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CloseTheShop', N'Close the Shop', NULL, 1, N'Close the Shop', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CodeNumber', N'Code Number', N'', 1, N'Code Number', N'', N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CommandCompleted', N'Command(s) completed successfully.', NULL, 1, N'Command(s) completed successfully.', NULL, N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Commission', N'Commission', NULL, 1, N'Commission', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CommissionDueThisMonth', N'Commission this Month', NULL, 1, N'Commission this Month', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CommissionOrders', N'Orders', NULL, 1, N'Orders', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ConfigChange2', N'Change', N'', 1, N'Change', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ConfigImportant', N'Important', NULL, 1, N'Important', NULL, N'_Config',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ConfigSettingsMatched', N'Config settings that matched:', N'DEPRECATED use BackMenu_ConfigSettings', 1, N'Config settings that matched:', N'', N'_Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Confirm', N'Confirm', NULL, 1.4, N'Confirm', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Confirmation', N'Confirmation', N'', 1, N'Confirmation', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ConfirmDeleteItem', N'Are you sure you want to delete <strong>[itemname]</strong>?', N'', 1, N'Are you sure you want to delete <strong>[itemname]</strong>?', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ConfirmDeleteItemUnspecified', N'Are you sure you want to delete this item permanently?', N'', 1, N'Are you sure you want to delete this item permanently?', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ConfirmEditOrder', N'Are you sure you want to create a new order with these details? 
(current order will be marked as cancelled)', NULL, 1.2001, NULL, N'_EditOrder.ascx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ConfirmRestartKartris', N'Are you sure you want to restart the site?', N'', 1.3, N'Are you sure you want to restart the site?', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ContactAndMiscDetails', N'Contact & Miscellaneous Details', N'', 1, N'Contact & Miscellaneous Details', N'_UserDetails.ascx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Country', N'Country', N'', 1, N'Country', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CouponCode', N'Coupon Code', N'', 1, N'Coupon Code', N'', N'_Coupons',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CouponCodeAlreadyInUse', N'Coupon code is already in use, select a different code.', N'', 1, N'Coupon code is already in use, select a different code.', N'', N'_Coupons',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CouponNotFound', N'The coupon was not found', N'', 1, N'The coupon was not found', N'', N'_Coupons',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CouponValue', N'Value', N'', 1, N'Value', N'', N'_Coupons',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CreateCombinations', N'Create Individual Combinations', NULL, 1, NULL, NULL, N'_Options',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CreateCombinationsText', N'Creating combinations allows you to track stock levels of each permutation of an options product or allocate a unique item code. You also get statistics for each combination rather than just the base version.', N'', 1, N'Creating combinations allows you to track stock levels of each permutation of an options product or allocate a unique item code. You also get statistics for each combination rather than just the base version.', N'', N'_Options',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Currency', N'Currency', N'', 1, N'Currency', N'Kartris.Master', N'_Currency',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CurrencyDecimalFractions', N'Currency uses decimal fractions?', N'', 1, N'Currency uses decimal fractions?', N'', N'_Currency',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CurrencyFormat', N'Format', N'', 1, N'', N'', N'_Currency',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CurrencyHash', N'Currencies that show a blank value failed when trying to obtain the latest currency rate. Check your currency settings to ensure the ISO code is valid. This may also be due to the currency site being unreachable. Values shown in red are above market exchange rates, values in green are below. ', NULL, 1, N'Currencies that show a blank value failed when trying to obtain the latest currency rate. Check your currency settings to ensure the ISO code is valid. This may also be due to the currency site being unreachable. Values shown in red are above market exchange rates, values in green are below. ', NULL, N'_Currency',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CurrencyIsLive', N'Is this currency live on frontend?', N'DEPRECATED - use ''ContentText_Live''', 1, N'Is this currency live on frontend?', N'', N'_Currency',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CurrentCombinationsOfProduct', N'Current Combinations ', N'Tab Header for the Current Combinations', 1, N'Current Combinations ', N'', N'_Options',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CurrentRate', N'Current Rate', N'', 1, N'Current Rate', N'', N'_Currency',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Customer', N'Customer', NULL, 1, N'Customer', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CustomerBalance', N'Customer Balance', NULL, 1.3, NULL, NULL, N'_Users',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CustomerDetails', N'User Details', N'', 1, N'User Details', N'', N'_Customers',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CustomerEmail', N'Customer Email', N'', 1, N'Customer Email', N'', N'_Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CustomerGroupDesc', N'Click on the name of a customer group to view all customers in that group.', N'', 1, N'', N'_CustomerGroupsList.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CustomerGroupPrices', N'Customer Group Prices', NULL, 1, N'Customer Group Prices', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CustomerGroupPricesExp', N'For each customer group, you can optionally specify a specific price. Set to 0/blank to use the base version price. Groups in italics are currently not live. Click on a group to view/edit.', NULL, 1, N'For each customer group, you can optionally specify a specific price. Set to 0/blank to use the base version price. Groups in italics are currently not live. Click on a group to view/edit.', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CustomerName', N'Customer Name', N'', 1, N'Customer Name', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CustomersAwaitingRefunds', N'Awaiting Refunds: ', NULL, 1.3, NULL, NULL, N'_TaskList',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CustomersInArrears', N'In Arrears: ', NULL, 1.3, NULL, NULL, N'_TaskList',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CustomersMatched', N'Customers that matched:', N'DEPRECATED use BackMenu_Customers', 1, N'Customers that matched:', N'', N'_Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CustomExport', N'Custom Export', NULL, 1, N'Custom Export', NULL, N'_Export',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CustomizationDetails', N'Details', NULL, 1, N'Details', NULL, N'_Versions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_CustomizationType', N'Customization Type', NULL, 1, N'Customization Type', NULL, N'_Versions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DataBaseAdminWarning', N'WARNING: These database admin tools are for advanced users only. Some of these tools disable protection or allow you to clean your database of products or customer data. Be careful when using these tools and ensure your database was backed up recently.', N'', 1, N'WARNING: These database admin tools are for advanced users only. Some of these tools disable protection or allow you to clean your database of products or customer data. Be careful when using these tools and ensure your database was backed up recently.', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DatabaseBackup', N'Database Backup', NULL, 1, N'Database Backup', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DatabaseName', N'Database Name', NULL, 1, N'Database Name', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DataExport', N'Data Export', NULL, 1, N'Data Export', NULL, N'_Export',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DataExportHeader', N'Here you can export orders in CSV format, or create a custom export using a query. See http://userguide.kartris.com/Default.aspx?headID=242 for further details of creating a custom file export of data.', NULL, 1, N'Here you can export orders in CSV format, or create a custom export using a query. See http://userguide.kartris.com/Default.aspx?headID=242 for further details of creating a custom file export of data.', NULL, N'_Export',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Date', N'Date', N'', 1, N'', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DateClosed', N'Date Closed', NULL, 1, N'Date Closed', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DateCreated', N'Date Created', N'', 1, N'Date Created', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DateFormat', N'Date Format', N'', 1, N'', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DateOpened', N'Date Opened', NULL, 1, N'Date Opened', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DateRange', N'Date Range', N'', 1, N'Date Range', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DateTime', N'Date/Time', N'', 1, N'Date/Time', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DateTimeCreated', N'Creation Date/Time', N'', 1, N'Creation Date/Time', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DateTimeFormat', N'Date & Time Format', N'', 1, N'', N'', N'_Kartris',1)
GO
print 'Processed 200 total records'
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Days', N'Days', NULL, 1.4, N'Days', NULL, N'_Statistics',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DBTools', N'Tools', NULL, 1, N'Tools', NULL, N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DeactivateAll', N'Deactivate All', NULL, 1, N'Deactivate All', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DecimalPoint', N'Decimal Point', N'', 1, N'', N'', N'_Currency',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DefaultHeight', N'Default Height', NULL, 1.1011, N'Default Height', NULL, N'_Media',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DefaultParameters', N'Default Parameters', NULL, 1.1011, N'Default Parameters', NULL, N'_Media',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DefaultProdDisplay', N'Default (''frontend.products.display.default'' config setting)', N'', 1, N'Default (''frontend.products.display.default'' config setting)', N'', N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DefaultProdTypeDisplay', N'Default (''frontend.categories.display.default'' config setting)', N'', 1, N'Default (''frontend.categories.display.default'' config setting)', N'', N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DefaultValue', N'Default Value', N'', 1, N'Default Value', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DefaultVerDisplayType', N'Default (''frontend.versions.display.default'' config setting)', N'value is --> d', 1, N'Default (''frontend.versions.display.default'' config setting)', N'', N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DefaultWidth', N'Default Width', NULL, 1.1011, N'Default Width', NULL, N'_Media',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DeleteAll', N'Delete All', NULL, 1, N'Delete All', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DeleteCombinations', N'Delete Option Data', N'', 1, N'', N'', N'_Options',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DeleteCombinationsConfirm', N'Are you sure you want to delete all the combinations data for this product?', NULL, 1, N'Are you sure you want to delete all the combinations data for this product?', NULL, N'_Options',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DeleteCombinationsLink', N'Delete All Option Data', N'', 1, N'Delete All Option Data', N'', N'_Options',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DeleteCombinationsText', N'This will delete the base version, option selections and any combinations. Any statistics relating to these will be removed.', N'', 1, N'This will delete the base version, option selections and any combinations. Any statistics relating to these will be removed.', N'', N'_Options',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DeletedItemsText', N'Your site has some images, media or other files whose parent records were deleted. You can remove these here.', NULL, 1.1011, NULL, NULL, N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DeleteErrorLogs', N'Delete All Error Logs', N'', 1, N'Delete All Error Logs', N'', N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DeleteOptionOneText', N'This will delete this category but only remove child products (and their versions) where they are assigned to this category only.', N'', 1, N'This will delete this category but only remove child products (and their versions) where they are assigned to this category only.', N'', N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DeleteProductOptionsConfirm', N'Are you sure you want to delete all option and combination data for this product?', NULL, 1, N'Are you sure you want to delete all option and combination data for this product?', NULL, N'_Options',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DeleteThisCustomer', N'Delete this customer and their orders permanently', NULL, 1, N'Delete this customer and their orders permanently', N'_UserDetails.ascx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DeleteThisOrder', N'Delete this order permanently', N'', 1, N'Delete this order permanently', N'', N'_Orders',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DeleteThisProduct', N'Delete this product from the shop', N'', 1, N'Delete this product from the shop', N'', N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DeleteThisReview', N'Delete this review from the shop', N'', 1, N'', N'', N'_Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DeleteThisVersion', N'Delete this version from the shop', N'', 1, N'Delete this version from the shop', N'', N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DeliveryType', N'Delivery Type', NULL, 1, N'Delivery Type', NULL, N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Descending', N'Descending', N'', 1, N'Descending', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Description', N'Description', N'', 1, N'Description', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DestFilterAlphabetical', N'Alphabetical', N'', 1, N'Alphabetical', N'', N'_Destinations',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DestFilterISO', N'ISO Groups', N'', 1, N'ISO Groups', N'', N'_Destinations',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DestFilterZones', N'Shipping Zones', N'', 1, N'Shipping Zones', N'', N'_Destinations',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Details', N'Details', N'', 1, N'Details', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Disabled', N'disabled', N'', 1, N'disabled', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DisabledInFrontEnd', N'[name] currently disabled in the front end. ', N'Warning message to the backend user to tell the feature is disabled in the frontend.', 1, N'[name] currently disabled in the front end. ', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DisableThisCoupon', N'Disable', N'', 1, N'Disable this Coupon', N'', N'_Coupons',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DisplayPeriod', N'Display Period', NULL, 1.4, N'Display Period', NULL, N'_Statistics',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DisplayRecords', N'Display Records', NULL, 1.4, N'Display Records', NULL, N'_Statistics',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DisplayType', N'Display Type', NULL, 1.4, N'Display Type', NULL, N'_Statistics',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Downloadable', N'Downloadable?', NULL, 1.1011, N'Downloadable?', NULL, N'_Media',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DownloadableFile', N'Downloadable File', N'', 1, N'Downloadable File', N'', N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Downloads', N'Downloads', NULL, 1, N'Downloads', NULL, N'_Versions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DropDownSelect', N'Please select...', NULL, 1, N'Please select...', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_EditLanguageStrings', N'Edit language strings', N'', 1, N'Edit language strings', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_EditThisCategory', N'Edit this category', N'', 1, N'Edit this category', N'', N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Email', N'Email', N'', 1, N'Email', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_EmailAddressAlreadyExists', N'An account with this <b>email address</b> already exists.', N'', 1, N'', N'', N'Login',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_EmailAddressContact', N'Email Address (Contact Form)', N'', 1, N'', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_EmailAddressOrders', N'Email Address (Orders)', N'', 1, N'', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_EmailAddressReplyTo', N'''Reply To'' Email Address', N'', 1, N'', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Embed', N'Embed?', NULL, 1.1011, N'Embed?', NULL, N'_Media',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_EmbedSource', N'Embed Source', NULL, 1.1011, N'Embed Source', NULL, N'_Media',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Enabled', N'enabled', N'', 1, N'enabled', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_EnableThisCoupon', N'Enable', N'', 1, N'Enable this Coupon', N'', N'_Coupons',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Encrypted', N'{encrypted}', NULL, 1, N'{encrypted}', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_EncryptSettings', N'Encrypt the settings file for security (should always be checked on live sites)', NULL, 1, N'Encrypt the settings file for security (should always be checked on live sites)', NULL, N'_Gateways',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_EndBeforeStartDate', N'The date is invalid or is before the start date.', N'', 1, N'The date is invalid or is before the start date.', N'', N'_Promotions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_EnterAnID', N'(enter ID number)', NULL, 1, N'(enter ID number)', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_EnterCouponCode', N'(enter coupon code or part of coupon code)', N'', 1, N'(enter coupon code or part of coupon code)', N'', N'_Coupons',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_EnterDate', N'(enter date in same format as used below or an order ID)', NULL, 1, N'(enter date in same format as used below)', N'_OrdersList.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_EnterEmailAddress', N'(search on email address, company, billing name or address, or enter a customer ID)', N'', 1, N'(enter email address or part of email address)', N'_CustomersList.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_EnterPaymentDate', N'(enter date in same format as used below or a payment ID)', NULL, 1.4, N'(enter date in same format as used below or a payment ID)', NULL, N'_Payments',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_EnterProdCodeOrKeyword', N'Enter text to search for:', N'DEPRECATED - removed from adminsearch control', 1, N'Enter a product code or keyword text to find products or versions', N'', N'_Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Error', N'Error!', N'Generic error message', 1, N'Error!', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ErrorCantReadSheetFile', N'Error: Can''t read file, make sure the trust level is ''Full'' in web.config and/or file is not used by another process.', NULL, 2, N'Error: Can''t read file, make sure the trust level is ''Full'' in web.config and/or file is not used by another process.', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ErrorCantRestartKartris', N'Error: Can''t restart Kartris. This functionality requires either Full Trust or write access to web.config.', N'', 1.3, N'Error: Can''t restart Kartris. This functionality requires either Full Trust or write access to web.config.', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ErrorChkCategoryAttachementsIII', N'There are still sub categories attached to this master category. Please delete or move (reassign) them first.', N'', 1, N'There are still sub categories attached to this master category. Please delete or move (reassign) them first.', N'', N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ErrorChkUploadFileType', N'The file must be one of the following: jpg, jpeg, gif, png.', N'', 1, N'The file must be one of the following: jpg, jpeg, gif, png.', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ErrorEmptyXLSFile', N'Error: No sheets were found in the uploaded excel file!', NULL, 2, N'Error: No sheets were found in the uploaded excel file!', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ErrorLogMessages', N'Error Log Messages', N'', 1, N'Error Log Messages', N'', N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ErrorLogPath', N'Your error log path is set to :', N'', 1, N'Your error log path is set to :', N'', N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ErrorLogs', N'Error Logs', N'', 1, N'Error Logs', N'', N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ErrorLogSettings', N'Error Log Settings', N'', 1, N'Error Log Settings', N'', N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ErrorLogStatus', N'Your error log status is set to :', N'', 1, N'Your error log status is set to :', N'', N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ErrorMsgCommandNotAllowed', N'Error: command not allowed.', N'Appears when trying to execute a not allowed command.', 1, N'Error: command not allowed.', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ErrorMsgDBAuthentication', N'Database Error: login is not authenticated.', N'ErrorNo:18456', 1, N'Database Error: login is not authenticated.', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ErrorMsgDBAvailability', N'Database Error: database not available.', N'ErrorNo:4060', 1, N'Database Error: database not available.', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ErrorMsgDBChangeViolation', N'Database Error: database change violation.', N'ErrorNo:4929', 1, N'Database Error: database change violation.', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ErrorMsgDBConnectivity', N'Database Error: connectivity problem.', N'ErrorNo:10054', 1, N'Database Error: connectivity problem.', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ErrorMsgDBCustom', N'Error occurred while processing the operation.', N'', 1, N'Error occurred while processing the operation.', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ErrorMsgDBDataTypeViolation', N'Database Error: data-type violation.', N'ErrorNo:245', 1, N'Database Error: data-type violation.', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ErrorMsgDBDuplicateViolation', N'Database Error: duplicate-key violation.', N'ErrorNo:2627, 2601', 1, N'Database Error: duplicate-key violation.', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ErrorMsgDBGeneralError', N'Database Error: A general error has occurred.', N'ErrorNo:-', 1, N'Database Error: A general error has occurred.', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ErrorMsgDBInvalidObject', N'Database Error: invalid object.', N'ErrorNo:2812', 1, N'Database Error: invalid object.', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ErrorMsgDBObjectIsLocked', N'Database Error: the object you are trying to modify is locked, unlock the object then try again.', N'ErrorNo:3609', 1, N'Database Error: the object you are trying to modify is locked, unlock the object then try again.', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ErrorMsgDBPermissionDenied', N'Database Error: permission denied for this user.', N'ErrorNo:229, 230, 262, 300', 1, N'Database Error: permission denied for this user.', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ErrorMsgDBReferenceViolation', N'Database Error: reference-key violation.', N'ErrorNo:547', 1, N'Database Error: reference-key violation.', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ErrorMsgDBValueNotSupplied', N'Database Error: some values are not supplied.', N'ErrorNo:201', 1, N'Database Error: some values are not supplied.', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ErrorMsgFileUpload', N'Error: error occured while uploading the file.', NULL, 1, N'Error: error occured while uploading the file.', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ErrorMsgGeneral', N'Error: An unknown error has occurred. Please check the error logs for any info.', N'General Error.', 1, N'Error: An unknown error has occurred. Please check the error logs for any info.', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ErrorOnlyXLSorCSV', N'Error: Only xls and csv files are allowed.', NULL, 2, N'Error: Only xls and csv files are allowed.', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Errors', N'Please correct the errors indicated', NULL, 1, N'Please correct the errors indicated', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_EstimateTimeSpent', N'Estimate time spent', NULL, 1, N'Estimate time spent', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ExchangeRate', N'Exchange Rate', N'', 1, N'Exchange Rate', N'', N'_Currency',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ExecuteQuery', N'Run Query', NULL, 1, N'Run Query', NULL, N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ExecuteQueryText', N'Enter raw SQL code in the box below. Please ensure you have backed up your database before running raw SQL.', N'', 1, N'Enter raw SQL code in the box below. Please ensure you have backed up your database before running raw SQL.', N'', N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ExecuteQueryWarn', N'WARNING: This is for advanced users only! Using this can completely mess up all your data if you don''t know what you''re doing.', N'', 1, N'WARNING: This is for advanced users only! Using this can completely mess up all your data if you don''t know what you''re doing.', N'', N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Export', N'Export', NULL, 1, N'Export', NULL, N'_Export',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ExportFileName', N'File Name', NULL, 1, N'File Name', NULL, N'_Export',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ExportName', N'Export Name', NULL, 1, N'Export Name', NULL, N'_Export',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ExportQuery', N'Export Query', NULL, 1, N'Export Query', NULL, N'_Export',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ExtendedProdDisplay', N'Extended (with version info)', NULL, 1, N'Extended (with version info)', NULL, N'_Category',1)
GO
print 'Processed 300 total records'
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_FastEntryDescription', N'Attributes set to ''fast entry'' appear on the add/modify product page. This allows you to quickly enter in values. Use this feature if it will be relevant to many of your products, or if you aren''t planning to have many attributes.', N'', 1, N'Properies set to ''fast entry'' appear on the add/modify product page. This allows you to quickly enter in values. Use this feature if it will be relevant to many of your products, or if you aren''t planning to have many properties.', N'', N'_Attributes',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Featured', N'Featured*', NULL, 1, N'Featured*', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_FeaturedText', N'* priority of position on front page.', NULL, 1, N'* priority of position on front page.', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_FeedNotAccessible', N'Feed Not Accessible', NULL, 1, N'Feed Not Accessible', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Field', N'Field', N'', 1, N'Field', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_FieldDelimiter', N'Field Delimiter', NULL, 1, N'Field Delimiter', NULL, N'_Export',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Filename', N'File Name', N'', 1, N'File Name', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_FilePath', N'File Path', NULL, 1, N'File Path', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_FilePermissionsError', N'File permissions settings prevented the operation.', NULL, 1, N'File permissions settings prevented the operation.', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_FileRename', N'File Rename', NULL, 1, N'File Rename', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Files', N'Files', NULL, 1, N'Files', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_FileSize', N'File Size', N'', 1, N'File Size', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_FileType', N'File Type', NULL, 1, N'File Type', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_FileUpload', N'File Upload', NULL, 1, N'File Upload', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_FindACoupon', N'Find a Coupon', N'DEPRECATED', 1, N'Find a Coupon', NULL, N'_Coupons',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_FindACustomer', N'Find a Customer:', NULL, 1, N'Find a Customer:', N'_CustomersList.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_FindAnOrder', N'Find an Order:', N'', 1, N'Find an Order:', N'_OrdersList.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Folder', N'Folder', NULL, 1, N'Folder', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_FollowTablesToDelete', N'The following tables will be cleared of records:', NULL, 1, N'The following tables will be cleared of records:', NULL, N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_From', N'from', NULL, 1.4, N'from', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_FrontEnd', N'Front end', N'', 1, N'Front end', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_FrontOfSite', N'Go to front of site', NULL, 1, N'Go to front of site', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_FrontOrBack', N'Front or Back?', N'', 1, N'Front or Back?', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_FTSNotEnabled', N'Kartris Full-Text Search is not yet enabled on your database. This is required to support proper search functionality on your store in non-western languages. ', NULL, 1, N'Kartris Full-Text Search is not yet enabled on your database. This is required to support proper search functionality on your store in non-western languages. ', NULL, N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_FTSNotSupported', N'Full-Text Search is not supported on your database. If you are using MS SQL Express, we recommend you to upgrade to the Express Edition with Advanced Services. ', NULL, 1, N'Full-Text Search is not supported on your database. If you are using MS SQL Express, we recommend you to upgrade to the Express Edition with Advanced Services. ', NULL, N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Generate', N'Generate', NULL, 1, N'Generate', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_GenerateFeedsDesc', N'The location of files generated will be shown after you click the generate button and the file has been created.', NULL, 1, N'The location of files generated will be shown after you click the generate button and the file has been created.', NULL, N'_Feeds',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_GoogleFile', N'Google Base Feed File', NULL, 1, N'Google Base Feed File', NULL, N'_Feeds',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_HideLink', N'Hide', NULL, 1, N'Hide', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_HTMLEditor', N'HTML Editor', N'', 1, N'HTML Editor', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ID', N'ID', N'ID text used extensively for table lists in the backend', 1, N'ID', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Images', N'Images', NULL, 1, NULL, NULL, N'_Kartris',1)
--Insert Language Strings - Jóni Silva - 11/01/2016 BEGIN
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ImportCustomerGroupPrices', N'Import Customer Group Prices', NULL, 2.9003, N'', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ImportCustomerGroupPricesInfo', N'This is custom functionality, use the CustomerGroupPrices data export to obtain a file in suitable format', NULL, 2.9003, N'This is custom functionality, use the CustomerGroupPrices data export to obtain a file in suitable format', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ImportQuantityDiscounts', N'Import Quantity Discounts', NULL, 2.9003, N'Import Quantity Discounts', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ImportQuantityDiscountsInfo', N'This is custom functionality, use the QuantityDiscounts data export to obtain a file in suitable format', NULL, 2.9003, N'', NULL, N'_MarkupPrices',1)
--Insert Language Strings - Jóni Silva - 11/01/2016 END
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ImportPriceList', N'Import Price List', NULL, 1.4, N'Import Price List', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ImportPriceListInfo', N'Here you can import price lists to update the database. Should be entered in this format:<br />
versioncode1, price1, rrp1<br />
versioncode2, price2, rrp2<br />
versioncode3, price3, rrp3<br />
etc...', NULL, 1.4, N'Here you can import price lists to update the database. Should be entered in this format:<br />
versioncode1, price1, rrp1<br />
versioncode2, price2, rrp2<br />
versioncode3, price3, rrp3<br />
etc...', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ImportStockLevel', N'Import Stock Level', NULL, 2, N'Import Stock Level', NULL, N'_StockLevel',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_InCategory', N'In Category', NULL, 1.4, N'In Category', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_IncludeDetailsField', N'Include details field', NULL, 1, N'Include details field', NULL, N'_Export',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_IncludeIncompleteOrders', N'Include incomplete orders', NULL, 1, N'Include incomplete orders', NULL, N'_Export',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Information', N'Information', N'', 1, N'Information', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_InformCustomers', N'Inform customers of updated orders', N'', 1, NULL, N'_OrdersList.ascx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Inline', N'Inline?', NULL, 1.4, N'Inline?', NULL, N'_Media',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Installed', N'Currently Installed', NULL, 1, N'Currently Installed', NULL, N'_SoftwareUpdate',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_InstalledExplanation', N'This is the version of the core Kartris DLL you are running. You must take care to ensure any ASPX pages and controls and other files are updated to match.', NULL, 1, N'This is the version of the core Kartris DLL you are running. You must take care to ensure any ASPX pages and controls and other files are updated to match.', NULL, N'_SoftwareUpdate',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_IntegratedShipping', N'integrated shipping', N'', 1, N'', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_InvalidCategory', N'Invalid category', N'', 1, N'Invalid category', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_InvalidValue', N'Invalid Value!', NULL, 1, N'Invalid Value!', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_InvoiceDetails', N'Invoice Details', N'', 1, N'Invoice Details', N'_OrderInvoice.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_IP', N'IP', N'', 1, N'IP', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ISOCode', N'ISO', N'', 1, N'ISO', N'', N'_Currency',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ISOCode2Letters', N'ISO (2)', N'Used in the shipping destinations', 1, N'ISO (2)', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ISOCode3Letters', N'ISO (3)', N'Used in the shipping destinations', 1, N'ISO (3)', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ISOCodeNumeric', N'ISO (n)', N'Used in the shipping destinations', 1, N'ISO (n)', NULL, N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_IsoCurrencyFormat', N'ISO Format', N'', 1, N'', N'', N'_Currency',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_IssueInvoice', N'Issue Invoice', N'', 1, N'Issue Invoice', N'', N'_Orders',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ItemSummary', N'Item Summary', N'', 1, N'Item Summary', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_KartrisName', N'Kartris', N'', 1, N'', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_KartrisNews', N'Kartris News', NULL, 1, N'Kartris News', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_LangStringsIntegrityDesc', N'The following lists all language string values that are in the default language table', N'', 1, N'The following lists all language string values that are in the default language table', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Languages', N'Languages', NULL, 1, N'Languages', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_LanguageString', N'Language string', N'', 1, N'Language string', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_LanguageStrings', N'Language strings', N'', 1, N'Language strings', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_LanguageStringsMatched', N'Site text that matched:', N'', 1, N'', N'', N'_Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Last24Hours', N'Last 24 Hours', NULL, 1, N'Last 24 Hours', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Last7Days', N'Last 7 Days', NULL, 1, N'Last 7 Days', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_LastMonth', N'Last Month', NULL, 1, N'Last Month', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_LastTwelveMonths', N'Last 12 Months', N'DEPRECATED', 1, N'Last 12 Months', N'', N'_Stats',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_LastUpdate', N'Last Updated', N'', 1, N'Last Updated', N'', N'_Orders',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_LastUpdated', N'Last Updated', N'', 1, N'Last Updated', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_LastYear', N'Last Year', NULL, 1, N'Last Year', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_LeaveBlankPrices', N'Leave blank for all prices', NULL, 1.4, N'Leave blank for all prices', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_LimitToCustomerGroup', N'Limit By Group', N'', 1, N'Limit By Group', N'', N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_LinkedProducts', N'Linked Products', N'', 1, N'', N'', N'_Suppliers',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_LinkLocation', N'Link Location', NULL, 1, N'Link Location', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_LinkProdTypeDisplay', N'Link Only', NULL, 1, N'Link Only', NULL, N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Links', N'Links', NULL, 1, N'Links', NULL, N'_Versions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ListOrders', N'List Orders', N'', 1, N'List Orders', N'', N'_Customers',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Live', N'Live?', N'', 1, N'Live?', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_LiveCurrenciesNotAccessible', N'Live Currencies Not Accessible', NULL, 1, N'Live Currencies Not Accessible', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_LiveCurrencyRateText', N'This feature lets you lookup currency rates in real time to update your store with.', N'', 1, N'This feature lets you lookup currency rates in real time to update your store with.', N'', N'_Currency',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_LiveCurrencyReadError', N'Error: the request can''t read data.', N'', 1, N'Error: the request can''t read data.', N'', N'_Currency',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_LiveCurrencyRequestError', N'Error: the currency request failed.', NULL, 1, N'Error: the currency request failed.', NULL, N'_Currency',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_LoginBadUser', N'The username and/or password was not recognized.', NULL, 1, N'The username and/or password was not recognized.', N'Default.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_LogQuery', N'SQL Query', N'', 1, N'SQL Query', N'', N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_LogRelatedRecord', N'Related Records', N'', 1, N'Related Records', N'', N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_LogTypeLanguageString', N'Language string', N'', 1, N'Language string', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MarkDown', N'Mark down', NULL, 1.4, N'Mark down', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MarkUp', N'Mark up', NULL, 1.4, N'Mark up', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MarkupCategoriesNotSelected', N'No checkboxes were selected! Please check at least one category or select all categories to mark up.', NULL, 1.4, N'No checkboxes were selected! Please check at least one category or select all categories to mark up.', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MarkupConfirmText', N'Follow are versions that fit your criteria, with the current price and what the new price will be. If you wish to exclude any from the markup, simply uncheck that checkbox.<br /><br />

Please note - there will not be any more confirmation screens!', NULL, 1.4, N'Follow are versions that fit your criteria, with the current price and what the new price will be. If you wish to exclude any from the markup, simply uncheck that checkbox.<br /><br />

Please note - there will not be any more confirmation screens!', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MarkupNoneSelected', N'No checkboxes were selected! Please check at least one version to mark up.', NULL, 1.4, N'No checkboxes were selected! Please check at least one version to mark up.', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MarkupPricesDesc1', N'By using this function, you can mark up or down prices in a specific category or across the whole catalogue, in a set price range. You can change prices by a set value or by a percentage of the old value.', NULL, 1.4, N'By using this function, you can mark up or down prices in a specific category or across the whole catalogue, in a set price range. You can change prices by a set value or by a percentage of the old value.', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MarkupPricesDesc2', N'After configuring the markup and hitting submit, you will see a confirmation screen of which versions will be altered, and what the new value will be. After confirming this, the changes will be made.', NULL, 1.4, N'After configuring the markup and hitting submit, you will see a confirmation screen of which versions will be altered, and what the new value will be. After confirming this, the changes will be made.', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MaximumFeaturedProductsToDisplay', N'Maximum number of featured products to be displayed in the front site is: ', NULL, 1, N'Maximum number of featured products to be displayed in the front site is: ', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MaxNoByte', N'Max. No. should be 255', N'', 1, N'', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MaxNoShort', N'Max. No. should be 32767', N'', 1, N'', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Me', N'Me', NULL, 1, N'Me', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MediaFile', N'Media File', NULL, 1.1011, N'Media File', NULL, N'_Media',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MediaHeight', N'Media Height', NULL, 1.1011, N'Media Height', NULL, N'_Media',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MediaIcon', N'Media Icon', NULL, 1.1011, N'Media Icon', NULL, N'_Media',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MediaParameters', N'Media Parameters', NULL, 1.1011, N'Media Parameters', NULL, N'_Media',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MediaThumb', N'Media Thumb', NULL, 1.1011, N'Media Thumb', NULL, N'_Media',1)
GO
print 'Processed 400 total records'
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MediaType', N'Media Type', NULL, 1.1011, N'Media Type', NULL, N'_Media',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MediaWidth', N'Media Width', NULL, 1.1011, N'Media Width', NULL, N'_Media',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Minutes', N'Minutes', NULL, 1, N'Minutes', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Missing', N'Missing', NULL, 1, N'Missing', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MissingElements', N'Missing Elements', N'', 1.3, N'Missing Elements', N'', N'_Language',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MissingStrings', N'Missing Strings', N'', 1.3, N'Missing Strings', N'', N'_Language',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MLConfirmationDateTime', N'Confirmation Date/Time', N'', 1, N'', N'_UserDetails.ascx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MLConfirmationIP', N'Confirmation IP', N'', 1, N'', N'_UserDetails.ascx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MLFormat', N'Mail Format', N'', 1, N'', N'_UserDetails.ascx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MLSendMail', N'Receive mail', N'', 1, N'', N'_UserDetails.ascx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MLSignupDateTime', N'Signup Date/Time', N'', 1, N'', N'_UserDetails.ascx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MLSignupIP', N'Signup IP', N'', 1, N'', N'_UserDetails.ascx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ModifyThePage', N'Modify the category', N'', 1, N'Modify the category', N'', N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Month', N'Month', N'', 1, N'Month', N'', N'_Stats',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MonthlyTotals', N'Monthly Totals', N'', 1, N'Monthly Totals', N'', N'_Stats',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Months', N'Months', NULL, 1.4, N'Months', NULL, N'_Statistics',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MoveTicketsMessage', N'Move tickets under this type to', NULL, 1, N'Move tickets under this type to', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MustAssignBeforeReply', N'You must assign this ticket to yourself before you can reply.', NULL, 1, N'You must assign this ticket to yourself before you can reply.', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MyOpenTickets', N'my open tickets', NULL, 1, N'my open tickets', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_MyTickets', N'My Tickets', NULL, 1, N'My Tickets', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Name', N'Name', N'', 1, N'Name', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NewCombinationsExist', N'All possible combinations already exist.', NULL, 1, N'All possible combinations already exist.', NULL, N'_Options',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NewCombinationsOfProduct', N'New Combinations', N'Tab Header for the newely created combinations', 1, N'New Combinations', N'', N'_Options',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NewPrice', N'New Price', NULL, 1.4, N'New Price', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NewRate', N'New Rate', N'', 1, N'New Rate', N'', N'_Currency',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NewRRP', N'New RRP', NULL, 2, N'New RRP', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NewsContents', N'Story Text', N'', 1, N'Story Text', N'', N'_News',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NewSearch', N'New Search', N'', 1, N'New Search', N'', N'_Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NewsHeadLine', N'Headline', N'', 1, N'Headline', N'', N'_News',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NewShippingMethod', N'New Shipping Method', NULL, 1, N'New Shipping Method', NULL, N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NewShippingZone', N'New Shipping Zone', NULL, 1, N'New Shipping Zone', NULL, N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NewsStrapLine', N'Strap Line', N'', 1, N'Strap Line', N'', N'_News',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_No', N'No', N'', 1, N'No', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NoCategoriesInTheSite', N'There are no categories yet. In order to create products, you must first create at least one category to map them to.', N'', 1, N'There are no categories yet. In order to create products, you must first create at least one category to map them to.', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NoDownloadInfo', N'No download link or file specified!', NULL, 1, N'No download link or file specified!', NULL, N'_Versions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NoFile', N'No file was found.', N'', 1, N'No file was found.', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NoImages', N'There are currently no uploaded images for this item.', N'', 1, N'There are currently no uploaded images for this item.', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NoItemsFound', N'No items found.', N'', 1, N'No items found.', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_None', N'None', N'', 1, N'None', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NoneVerDisplayType', N'None', N'value is --> l', 1, N'None (ONLY USE IF ONE SINGLE VERSION)', NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NonLinkedFiles', N'Non-Linked Files', NULL, 1, N'Non-Linked Files', NULL, N'_Versions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NonRelatedFiles', N'The following files exist in the upload folder but they are not related to any item.', NULL, 1, N'The following files exist in the upload folder but they are not related to any item.', NULL, N'_Versions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NoOptionsSelected', N'no valid options have been selected', NULL, 1, NULL, NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NoOrdersMadeOnThisDay', N'No orders found.', NULL, 1, N'No orders found.', N'_OrdersList.ascx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NoParentCatsLive', N'None of the parent categories are live', NULL, 1, N'None of the parent categories are live', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NoPricesMarkup', N'No versions match your markup criteria.', NULL, 1.4, N'No versions match your markup criteria.', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NoResults', N'The search returned no results.', NULL, 1, N'The search returned no results.', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NoReviewsWereFound', N'No customer reviews were found.', N'', 1, N'No customer reviews were found.', N'', N'_Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NormalDelivery', N'Normal Physical Shipping Applies', NULL, 1, N'Normal Physical Shipping Applies', NULL, N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NormalImage', N'Image', N'', 1, N'Image', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NormalProdDisplay', N'Normal', NULL, 1, N'Normal', NULL, N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NormalProdTypeDisplay', N'Normal (with description)', NULL, 1, N'Normal (with description)', NULL, N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NoSupplierProducts', N'There are no products currently linked to this supplier.', N'DEPRECATED', 1, N'There are no products currently linked to this supplier.', N'', N'_Suppliers',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NoSuppliersWereFound', N'No suppliers were found.', N'DEPRECATED', 1, N'No suppliers were found.', N'', N'_Suppliers',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NotDeletedFolders', N'The following folders were not deleted:', N'', 1, N'The following folders were not deleted:', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Notes', N'Notes', NULL, 1, N'Notes', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NotSureStatus', N'Not Sure', NULL, 1, N'Not Sure', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NotValidDate', N'Invalid Date!', NULL, 1, N'Invalid Date!', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NoVersions', N'There are no live versions for this product', NULL, 1, N'There are no live versions for this product', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ObjectConfig', N'Object Config', NULL, 1.4, N'Object Config', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OpenStatus', N'Open', NULL, 1, N'Open', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OpenTheShop', N'Open the Shop', NULL, 1, N'Open the Shop', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OperationCompletedSuccessfully', N'Operation Completed Successfully.', N'', 1, N'Operation Completed Successfully.', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OptionCombinations', N'Option Combinations', N'', 1, N'', N'', N'_Options',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OptionInformation', N'Basic Information', N'', 1, N'', N'', N'_Options',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OptionPriceVerDisplayType', N'Dropdown - names and prices', N'value is --> p', 1, N'As Option (list names and prices)', NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Options', N'Options', N'', 1, N'Options', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OptionsVerDisplayType', N'Options', N'value is --> o', 1, N'Options', NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OptionValues', N'Option Values', N'', 1, N'Option Values', N'', N'_Options',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrderCancelCreatedFrom', N'CREATED FROM CANCELLED ORDER ID:', NULL, 1.3, NULL, N'', N'_Orders',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrderCancelReferTo', N'CANCELLED. REFER TO NEW ORDER ID:', NULL, 1.3, NULL, N'', N'_Orders',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrderDate', N'Order Date', N'', 1, N'Order Date', N'', N'_Orders',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrderID', N'Order ID', N'', 1, N'Order ID', N'', N'_Orders',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrderNumber', N'Order Number', N'', 1, N'', N'', N'_Orders',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrderPaymentHistory', N'Order / Payment History', NULL, 1.3, NULL, NULL, N'_Payments',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrderProgress', N'Order Progress', N'', 1, N'Order Progress', N'', N'_Orders',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Orders', N'Orders', NULL, 1, N'Orders', NULL, N'_Statistics',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrdersAffiliateText', N'Displays all the orders that have been payed by the specific affiliate payment.', NULL, 1, N'Displays all the orders that have been payed by the specific affiliate payment.', N'_OrdersList.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrdersBydateText', N'all orders on a specified day', N'', 1, N'all orders on a specified day', N'_OrdersList.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrdersCompleteText', N'orders that have been invoiced, paid and dispatched', N'', 1, N'orders that have been invoiced, paid and dispatched', N'_OrdersList.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrdersCouponsText', N'Lists orders that used the selected coupon.', NULL, 1, N'Lists orders that used the selected coupon.', N'_OrdersList.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrdersDispatchText', N'paid orders waiting to be dispatched', N'', 1, N'paid orders waiting to be dispatched', N'_OrdersList.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrdersEmailText', N'Lists orders by a specific customer.', NULL, 1, N'Lists orders by a specific customer.', N'_OrdersList.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrdersExport', N'Orders Export', NULL, 1, N'Orders Export', NULL, N'_Export',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrdersGatewayText', N'Lists orders by payment gateway. This will allow you to show the last 50 orders from a specific payment method, or to find an order based on the gateway transaction ID (this will help you match up an order form your gateway backend to your Kartris backend)', NULL, 1, N'Lists orders by payment gateway. This will allow you to show the last 50 orders from a specific payment method, or to find an order based on the gateway transaction ID (this will help you match up an order form your gateway backend to your Kartris backend)', N'_OrdersList.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrdersInvoiceText', N'payment not yet invoiced or received', N'', 1, N'payment not yet invoiced or received', N'_OrdersList.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrdersListIndicates', N'Green indicates that payment for this order has been received. Red indicates that this order is overdue on payment.', N'', 1, N'Green indicates that payment for this order has been received. Red indicates that this order is overdue on payment.', N'_OrdersList.ascx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrdersListIndicatesComplete', N' Dark grey indicates orders that are complete (paid and dispatched).', N'', 1, N' Dark grey indicates orders that are complete (paid and dispatched).', N'_OrdersList.ascx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrdersMatched', N'Orders that matched:', N'DEPRECATED use BackMenu_Orders', 1, N'Orders that matched:', N'', N'_Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrdersPaymentText', N'order invoiced but not yet paid', N'', 1, N'order invoiced but not yet paid', N'_OrdersList.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrdersRecentText', N'most recent successfully placed orders', N'', 1, N'most recent successfully placed orders', N'_OrdersList.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrderStatus', N'Order Status', N'', 1, N'Order Status', N'', N'_Orders',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrderStatusCancelled', N'This order has been cancelled', NULL, 2, N'This order has been cancelled', NULL, N'_Orders',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrderStatusInvoiced', N'An invoice for payment has been issued', N'', 1, N'An invoice for payment has been issued', N'', N'_Orders',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrderStatusInvoicedSmall', N'Invoice Issued', N'', 1, N'', N'', N'_Orders',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrderStatusPaid', N'Payment has been received', N'', 1, N'Payment has been received', N'', N'_Orders',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrderStatusPaidSmall', N'Payment received', N'', 1, N'', N'', N'_Orders',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrderStatusSent', N'The order has been sent to the store owner', N'', 1, N'The order has been sent to the store owner', N'', N'_Orders',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrderStatusShipped', N'The order has been dispatched', N'', 1, N'The order has been dispatched', N'', N'_Orders',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrderStatusShippedSmall', N'Order dispatched', N'', 1, N'', N'', N'_Orders',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrdersUnfinishedText', N'abandoned before completion by customer or rejected by gateway', N'', 1, N'abandoned before completion by customer or rejected by gateway', N'_OrdersList.aspx', N'',1)
GO
print 'Processed 500 total records'
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrderText', N'Order Text', N'', 1, N'Order Text', N'', N'_Orders',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrderValue', N'Order Value', N'', 1, N'Order Value', N'', N'_Orders',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrderWeight', N'Order Weight', N'', 1, N'Order Weight', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Overview', N'Overview', N'', 1, N'Overview', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PageIDMustBeUnique', N'50 chars max, A-Z, a-z, 0-9', N'', 1, N'50 chars max, A-Z, a-z, 0-9', N'', N'_Pages',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PaidCommission', N'Paid Commission', NULL, 1, N'Paid Commission', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ParentPage', N'Parent Page', N'', 1, N'Parent Page', N'', N'_Pages',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PartACannotBeEmpty', N'Part ''A'' cannot be empty', N'', 1, N'Part ''A'' cannot be empty', N'', N'_Promotions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PartBCannotBeEmpty', N'ContentText_PartACannotBeEmpty', N'Part ''B'' cannot be empty', 1, N'Part ''B'' cannot be empty', N'', N'_Promotions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PaymentDate', N'Payment Date', NULL, 1.3, N'Payment Date', NULL, N'_Payments',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PaymentDetails', N'Payment Details', NULL, 1.4, N'Payment Details', NULL, N'_Payments',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PaymentGateWay', N'Payment Gateway', N'', 1, N'Payment Gateway', N'', N'_Orders',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PaymentID', N'Payment ID', NULL, 1.3, N'Payment ID', NULL, N'_Payments',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Payments', N'Payments', NULL, 1, N'Payments', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PaymentShippingGateways', N'Payment and Shipping Gateways', N'', 1, N'Payment and Shipping Gateways', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PaymentShippingGatewaysText', N'Here you can set up the details for each payment gateway. If you have recently installed a new payment gateway, make sure you use the ''refresh'' link below so that it becomes visible here.', N'', 1, N'Here you can set up the details for each payment gateway. If you have recently installed a new payment gateway, make sure you use the ''refresh'' link below so that it becomes visible here.', N'_PaymentGateways.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PaymentsRecentText', N'most recent successfully placed payments', NULL, 1.4, N'most recent successfully placed payments', NULL, N'_Payments',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Period', N'Period', NULL, 1, N'Period', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PerItem', N'per item', N'', 1, N'per item', N'', N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Permissions', N'Permissions', N'', 1, N'Permissions', N'', N'_Logins',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PlainText', N'Plain Text', N'', 1, N'Plain Text', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PleaseEnterLoginAndPassword', N'Please enter your login and password below:', NULL, 1, N'Please enter your login and password below:', N'Default.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PleaseEnterValue', N'Please enter a value', N'', 1, N'Please enter a value', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PONumber', N'PO Number', N'', 1, N'PO Number', N'', N'_Orders',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PremiumSupport', N'Premium Support', NULL, 1, N'Premium Support', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Price', N'Price', NULL, 1, N'Price', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PriceListDetails', N'Price List Details', NULL, 1.4, N'Price List Details', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PriceMarkupBy', N'By', NULL, 1.4, N'By', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PriceModification', N'Price Modification', NULL, 1.4, N'Price Modification', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PriceRange', N'Price Range', NULL, 1.4, N'Price Range', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PriceRangeAnd', N' and ', NULL, 1.4, N' and ', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PriceRangeBetween', N'Between', NULL, 1.4, N'Between', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Product', N'Product', N'', 1, N'Product', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ProductAttributes', N'Attributes', N'', 1, N'Attributes', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ProductBaseVersionNotLive', N'There is no base version, or its ''Show on Site'' is unchecked', NULL, 1, N'There is no base version, or its ''Show on Site'' is unchecked', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ProductLimitedToCustomerGroupAsFeatured', N'Product is limited to a customer group, it couldn''t be added as a featured product.', NULL, 1, N'Product is limited to a customer group, it couldn''t be added as a featured product.', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ProductNotLive', N'The item''s ''Show on Site'' is unchecked', NULL, 1, N'The item''s ''Show on Site'' is unchecked', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ProductNotVisible', N'This item is not visible to all front end users', NULL, 1, N'This item is not visible to all front end users', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Products', N'Products', NULL, 1, N'Products', NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ProductsMatched', N'Products that matched:', N'DEPRECATED', 1, N'Products that matched:', N'', N'_Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ProductStatistics', N'Product Statistics', NULL, 1, N'Product Statistics', NULL, N'_Statistics',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ProductType', N'Product Type', N'Added By Mohammad', 1, N'Product Type', NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ProductTypeMultipleVersionDisplay', N'Multiple Version', N'By Mohammad', 1, NULL, NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ProductTypeOptionVersionDisplay', N'Options Product', N'By Mohammad', 1, NULL, NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ProductTypeSingleVersionDisplay', N'Single Version', N'By Mohammad', 1, NULL, NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ProductWillBeHidden', N'(the item might still be hidden if no valid version, within a hidden category, etc.)', NULL, 1, N'(the item might still be hidden if no valid version, within a hidden category, etc.)', NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Promotion', N'Promotion', N'Used in the coupon type drop down list, so it will allow to assign a promotion id to be activated by the coupon.', 1.4, N'Promotion', NULL, N'_Coupons',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PromotionBuy', N'Buy ', N'', 1, N'', N'', N'_Promotions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PromotionGet', N'get ', N'', 1, N'', N'', N'_Promotions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PromotionPart', N'Promotion part', N'', 1, N'Promotion part', N'', N'_Promotion',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PromotionSpendOver', N'Spend ', N'', 1, N'', N'', N'_Promotions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PurgeAdminLogs', N'Purge Old Logs', NULL, 1, N'Purge Old Logs', NULL, N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PurgeUnfinishedOrders', N'Purge unfinished orders from before: ', NULL, 1, N'Purge unfinished orders from before: ', N'_OrdersList.ascx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_QBSeeManual', N'Please see <a href="http://userguide.kartris.com/Default.aspx?headID=371" target="_blank">Kartris User Guide: Quickbooks Integration</a> for more information.', NULL, 1, N'', NULL, N'_QuickBooks',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Qty', N'Qty', N'', 1, N'Qty', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_QtyWarnLevel', N'Qty (Warn Level)', N'DEPRECATED', 1, N'Qty (Warn Level)', N'', N'_StockLevel',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_QuantityDiscountsExp', N'By setting up quantity discounts, prices can drop after a certain number is purchased. Enter the quantity break and the new price for this level. Leave blank for no price break. ', N'', 1, N'', N'', N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_QueryExecuted', N'Query:', N'DEPRECATED I think, used ContentText_LogQuery instead', 1, N'Query:', N'', N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_QueryFailed', N'The query you tried to execute failed:', N'', 1, N'The query you tried to execute failed:', N'', N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_QuerySuccess', N'Your query executed successfully.', N'', 1, N'Your query executed successfully.', N'', N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_RadioLive', N'Live', N'', 1, N'Live', N'', N'_Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_RadioNotLive', N'Disabled', N'', 1, N'Disabled', N'', N'_Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_RadioWaitingAuthorisation', N'Awaiting authorization', N'', 1, N'Awaiting authorization', N'', N'_Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_RawDataHits', N'Raw Data (Hits)', NULL, 1, N'Raw Data (Hits)', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_RawDataSales', N'Raw Data (Sales)', NULL, 1, N'Raw Data (Sales)', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_RecordsAffected', N'Records Affected', NULL, 1, N'Records Affected', NULL, N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_RecordsReturned', N'Records Returned', NULL, 1, N'Records Returned', NULL, N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ReferenceCode', N'Reference Code', N'', 1, N'Reference Code', N'', N'_Orders',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Referrer', N'Referrer', NULL, 1, N'Referrer', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Refresh', N'Refresh', N'', 1, N'Refresh', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_RefreshKartrisCaches', N'Refresh All Kartris Caches', N'', 1.3, N'Refresh All Kartris Caches', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Region', N'Region', NULL, 1, N'Region', NULL, N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_RelatedProducts', N'Related Products', NULL, 1, N'Related Products', NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_RemoveSelected', N'Remove selected', N'', 1, N'Remove selected', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Rename', N'Rename', NULL, 1, N'Rename', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ReplyToTicket', N'Reply', NULL, 1, N'Reply', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_RequiredField', N'Required!', NULL, 1, N'Required!', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_RequiredPlainText', N'Plain Text [Required Field]', NULL, 1, N'Plain Text [Required Field]', NULL, N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_RestartKartris', N'Restart Kartris', N'', 1.3, N'Restart Kartris', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ReviewColors', N'Green indicates that the review is waiting for authorization. Red indicates that the review is disabled (not live on the site).', N'', 1, N'Green indicates that the review is waiting for authorization. Red indicates that the review is disabled (not live on the site).', N'', N'_Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Reviews', N'Reviews', N'', 1, N'Reviews', N'', N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_RoundNumber', N'Round Numbers', N'', 1, N'', N'', N'_Currency',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_RowsVerDisplayType', N'Rows', N'value is --> r', 1, N'Rows', NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_SavedExports', N'Saved Exports', NULL, 1, N'Saved Exports', NULL, N'_Export',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Searchb', N'Search', N'', 1, N'Search', N'', N'_Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_SearchTags', N'Search Tags', NULL, 2, N'Search Tags', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_SecurityNumber', N'Security Number', N'', 1, N'Security Number', N'CreditCardInput.ascx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_SelectAll', N'Select All', NULL, 1, N'Select All', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_SelectedCategories', N'Selected Categories', NULL, 1.4, N'Selected Categories', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_SelectedRelations', N'Relationships', N'', 1, N'Relationships', N'', N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_SelectGateWay', N'Please select a payment gateway and/or enter all or part of a payment gateway transaction ID above.', N'', 1, N'Please select a payment gateway and/or enter all or part of a payment gateway transaction ID above.', N'_OrdersList.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_SelectParentCategory', N'You should select at least 1 parent category.', N'', 1, N'You should select at least 1 parent category.', N'', N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_SendEmailToCustomer', N'Send email update of status to customer', N'', 1, N'Send email update of status to customer', N'', N'_Orders',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_SEO', N'SEO', NULL, 1, N'SEO', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ShareOfHits', N'Share of Hits', N'', 1, N'Share of Hits', N'', N'_Stats',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ShareOfSales', N'Share of Sales', N'', 1, N'Share of Sales', N'', N'_Stats',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ShippingCalculate', N'Integrated shipping set to calculate by ', N'', 1, N'', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ShippingDestinations', N'Destinations', N'used to be shown in the buttons in the zones'' list.', 1, N'Destinations', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ShippingDisabled', N'disabled', N'', 1, N'', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ShippingGateway', N'Shipping Gateway', NULL, 1.1011, N'Shipping Gateway', NULL, N'_Orders',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ShippingMethod', N'Shipping Method', N'', 1, N'Shipping Method', N'', N'_Shipping',1)
GO
print 'Processed 600 total records'
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ShippingMethodInformation', N'Shipping Method Information', N'Will be used in the _shipping page as header of the shipping method info.', 1, N'', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ShippingMethods', N'Shipping Methods', N'', 1, N'', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ShippingMethodsText', N'Click on the name of the shipping method to view the shipping rates set up, or the edit button to change the method.', N'', 1, N'', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ShippingRates', N'Rates', N'"rates" button in the shipping methods list, "_shipping" page.', 1, N'', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ShippingSystem', N'Your shipping system is currently set to ', N'', 1, N'', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ShippingZone', N'Shipping Zone', N'', 1, N'Shipping Zone', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ShippingZone2', N'To clone an existing zone''s rates, select it in the second list.', N'', 1, N'', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ShippingZones', N'Shipping Zones', N'', 1, N'', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ShippingZonesText', N'Click on the name of a shipping zone to see all destinations set up to this zone, or the edit button to change the zone.', N'', 1, N'', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ShortenedProdDisplay', N'Shortened Multi-Column', NULL, 1, N'Shortened Multi-Column', NULL, N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ShortenedProdTypeDisplay', N'Shortened Multi-Column', NULL, 1, N'Shortened Multi-Column', NULL, N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ShowOrder', N'Show Order', NULL, 1, N'Show Order', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_SitemapFile', N'Sitemap File', NULL, 1, N'Sitemap File', NULL, N'_Feeds',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_SoftwareUpdateNotAccessible', N'Software Update Details Not Accessible', NULL, 1, N'Software Update Details Not Accessible', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_SorByValue', N'Sort By Value', N'DELETE and use _Kartris, FormLabel_OrderByValue instead', 1, N'', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_SortDirection', N'Sort Direction', N'', 1, N'Sort Direction', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_SpecialUseNote', N'This attribute is ''special use'' and will be used in generating a required attribute in the GoogleBase Feed for your products.<br/>
IMPORTANT:<br/>
1. The attribute name should be identical to the desired Google attribute specified <a href="http://www.google.com/support/merchants/bin/answer.py?answer=188494" target="_blank">here</a>.<br/>
2. If the attribute name contains a space, it should be replaced by an underscore "_", for example "shipping weight" becomes "shipping_weight".<br/>
3. If the attribute is numeric then it should be prefixed by "g:", for example "g:tax", "g:shipping_weight".', N'', 1.3, N'This attribute is ''special use'' and will be used in generating a required attribute in the GoogleBase Feed for your products.<br/>
IMPORTANT:<br/>
1. The attribute name should be identical to the desired Google attribute specified <a href="http://www.google.com/support/merchants/bin/answer.py?answer=188494" target="_blank">here</a>.<br/>
2. If the attribute name contains a space, it should be replaced by an underscore "_", for example "shipping weight" becomes "shipping_weight".<br/>
3. If the attribute is numeric then it should be prefixed by "g:", for example "g:tax", "g:shipping_weight".', N'', N'_Attributes',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_StandardSupport', N'Free', NULL, 1, N'Free', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Status', N'Status', N'', 1, N'Status', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_StockLevelPagetext', N'Items shown in order of the seriousness of shortage. Red indicates items that are completely out of stock. Filter items by supplier and use the "export to CSV" to get a copy of this data, which can be used to contact the supplier.', N'', 1, N'Items shown in order of the seriousness of shortage. Red indicates items that are completely out of stock.

Remember that stock tracking for an item is disabled if its warning level quantity is set to zero. So you can have certain items in the stock tracking system, and other items excluded. You might typically want large items that you carry few of in stock to be tracked. But small items with a large turnover, or services where you have an unlimited supply may not need to be tracked. With stock tracking, you must take time to refresh the stock levels on the web site - so excluding items where tracking is unnecessary can save much time.', N'', N'_StockLevel',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_StockTrackingText', N'Enable stock tracking on this item', NULL, 1, NULL, NULL, N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_StoreHits', N'Store Hits', NULL, 1, N'Store Hits', NULL, N'_Statistics',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_StringDelimiter', N'String Delimiter', NULL, 1, N'String Delimiter', NULL, N'_Export',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_SubCategories', N'Subcategories', NULL, 1, N'Subcategories', NULL, N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_SupplierName', N'Supplier Name', N'', 1, N'', N'', N'_Suppliers',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_SupplierText', N'Enter in the supplier name below to create/modify a new supplier record. If a supplier is not set ''live'', all products linked to this supplier will be disabled form the site.', N'', 1, N'Enter in the supplier name below to create/modify a new supplier record. If a supplier is not set ''live'', all products linked to this supplier will be disabled form the site.', N'', N'_Suppliers',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_SupportExpiresMessage', N'Your premium support expires on [date].', NULL, 1, N'Your premium support expires on [date].', NULL, N'Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_SupportLevel', N'Support Level', NULL, 1, N'Support Level', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_SupportType', N'Support Type', NULL, 1, N'Support Type', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_SwitchToHits', N'Hits', N'', 1, N'Hits', N'', N'_Stats',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Symbol', N'Symbol', N'', 1, N'Symbol', N'', N'_Currency',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Tab', N'[tab]', NULL, 1, N'[tab]', NULL, N'_Export',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Table', N'Table', NULL, 1.4, N'Table', NULL, N'_Statistics',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TableName', N'Table', N'', 1, N'Table', N'', N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TabularProdDisplay', N'Tabular (tiny thumb image, line of text)', NULL, 1, N'Tabular (tiny thumb image, line of text)', NULL, N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Tax', N'Tax', N'', 1, N'Tax', N'', N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TaxWizBaseCurrencyQuestion', N'What is the base currency you work in?', NULL, 1.4, N'What is the base currency you work in?', NULL, N'_RegionalWizard',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TaxWizCanadaBaseProviceQuestion', N'What province or territory is your business based in?', NULL, 1.4, N'What province or territory is your business based in?', NULL, N'_RegionalWizard',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TaxWizCanadaConfirmTaxRates', N'Confirm the various tax rates below', NULL, 1.4, N'Confirm the various tax rates below', NULL, N'_RegionalWizard',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TaxWizCanadaGST', N'GST', NULL, 1.4, N'GST', NULL, N'_RegionalWizard',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TaxWizCanadaPST', N'PST', NULL, 1.4, N'PST', NULL, N'_RegionalWizard',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TaxWizCanadaPSTChargedOnGST', N'PST charged on GST?', NULL, 1.4, N'PST charged on GST?', NULL, N'_RegionalWizard',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TaxWizEUBaseCountryQuestion', N'What country is your store based in?', NULL, 1.4, N'What country is your store based in?', NULL, N'_RegionalWizard',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TaxWizEUVATRateQuestion', N'What is the primary VAT rate in this country?', NULL, 1.4, N'What is the primary VAT rate in this country?', NULL, N'_RegionalWizard',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TaxWizEUVATRegisteredQuestion', N'Is your business VAT-Registered?', NULL, 1.4, N'Is your business VAT-Registered?', NULL, N'_RegionalWizard',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TaxWizSimpleBaseCountryQuestion', N'What country is your business based in?', NULL, 1.4, N'What country is your business based in?', NULL, N'_RegionalWizard',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TaxWizSimpleTaxRateQuestion', N'What is the tax rate in this country?', NULL, 1.4, N'What is the tax rate in this country?', NULL, N'_RegionalWizard',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TaxWizUSBaseStateQuestion', N'What state is your business based in?', NULL, 1.4, N'What state is your business based in?', NULL, N'_RegionalWizard',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TaxWizUSStateTaxRateQuestion', N'What is the sales tax rate in this state?', NULL, 1.4, N'What is the sales tax rate in this state?', NULL, N'_RegionalWizard',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TazWizConfigRecommend', N'We recommend the following settings:', NULL, 1.4, N'We recommend the following settings:', NULL, N'_RegionalWizard',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TempFolder', N'Temp Folder', NULL, 1, N'Temp Folder', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Terms', N'Terms', NULL, 1.4, N'Terms', NULL, N'_Statistics',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TextProdTypeDisplay', N'Text', NULL, 1, N'Text', NULL, N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TheShopIsClosed', N'The Shop is Closed', NULL, 1, N'The Shop is Closed', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TheShopIsOpen', N'The Shop is Open', NULL, 1, N'The Shop is Open', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ThisCustomerTickets', N'This customer''s recent tickets', NULL, 2, N'This customer''s recent tickets', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TicketColors', N'Yellow indicates a ticket awaiting a reply from you (includes new tickets).<br/>Green indicates an open ticket assigned to someone else.<br/>Red indicates an unresolved/unsure ticket.', NULL, 1, N'Yellow indicates a ticket awaiting a reply from you (includes new tickets).<br/>Green indicates an open ticket assigned to someone else.<br/>Red indicates an unresolved/unsure ticket.', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TicketDetails', N'Ticket Details', NULL, 1, N'Ticket Details', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TicketMessages', N'Ticket Messages', NULL, 1, N'Ticket Messages', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TicketNumber', N'Ticket Number', NULL, 1, N'Ticket Number', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TicketSubject', N'Ticket Subject', NULL, 1, N'Ticket Subject', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TimeSpent', N'Time spent', NULL, 1, N'Time spent', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ToDoList', N'To Do List', N'', 1, N'', N'', N'_TaskList',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ToDoListAffiliates1', N'Approve Affiliates', NULL, 1, N'Approve Affiliates', NULL, N'_TaskList',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ToDoListAffiliates3', N'Waiting:', NULL, 1, N'Waiting:', NULL, N'_TaskList',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ToDoListOrders1', N'Update Orders', NULL, 1, NULL, NULL, N'_TaskList',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ToDoListOrders2', N'To Invoice:', NULL, 1, NULL, NULL, N'_TaskList',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ToDoListOrders3', N'Need Payment: ', N'', 1, N'', N'', N'_TaskList',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ToDoListOrders4', N'To Dispatch:', NULL, 1, N'To Dispatch:', NULL, N'_TaskList',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ToDoListReviews1', N'Moderate new reviews', N'', 1, N'', N'', N'_TaskList',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ToDoListReviews3', N'Waiting:', NULL, 1, N'Waiting:', NULL, N'_TaskList',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ToDoListStock1', N'Update Stock', NULL, 1, N'Update Stock', NULL, N'_TaskList',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ToDoListStock3', N'Warnings:', NULL, 1, NULL, NULL, N'_TaskList',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ToDoListStock4', N'Out of Stock:', NULL, 1, NULL, NULL, N'_TaskList',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TooManyCombos', N'The result of the option groups and selected will create more than the maximum allowed individual combinations for one product', N'', 1, N'', N'', N'_Options',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TopSearchTerms', N'Top Search Terms', NULL, 1, N'Top Search Terms', NULL, N'_Statistics',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Total', N'Total', N'', 1, N'Total', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TotalHitsForAboveMonth', N'Total hits for the above month:', NULL, 1, N'Total hits for the above month:', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TotalMessages', N'Total Messages', NULL, 1, N'Total Messages', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TotalNumberOfHits', N'Total Number of Hits', NULL, 1, N'Total Number of Hits', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TotalOrderValue', N'Total Order Value', NULL, 1, N'Total Order Value', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TotalSalesForAboveMonth', N'Total sales for the above month:', NULL, 1, N'Total sales for the above month:', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TotalSearches', N'Total Searches', NULL, 1.4, N'Total Searches', NULL, N'_Statistics',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TotalTickets', N'Total Tickets', NULL, 1, N'Total Tickets', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TotalTime', N'Total Time', NULL, 1, N'Total Time', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TotalTimeSpent', N'Total time spent', NULL, 1, N'Total time spent', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TotalTurnover', N'Total Turnover', NULL, 1.4, N'Total Turnover', NULL, N'_Statistics',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_TransID', N'Trans. ID#', N'', 1, N'Trans. ID#', N'_OrdersList.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Turnover', N'Turnover', NULL, 1.4, N'Turnover', NULL, N'_Statistics',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Type', N'Type', N'', 1, N'Type', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Unassigned', N'Unassigned', NULL, 1, N'Unassigned', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_UnassignedTickets', N'Unassigned ', NULL, 1, N'Unassigned ', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Unlimited', N'Unlimited', NULL, 1, N'Unlimited', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_UnpaidCommission', N'Unpaid Commission', NULL, 1, N'Unpaid Commission', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_UnPaidCommissionText', N'This lists any commissions earned that have not yet been paid. You can mark any as ''paid'' by checking the box and clicking the button below.', NULL, 1, N'This lists any commissions earned that have not yet been paid. You can mark any as ''paid'' by checking the box and clicking the button below.', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_UnresolvedStatus', N'Unresolved', NULL, 1, N'Unresolved', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_UpdateSaved', N'Update successful!', NULL, 1, N'Update successful!', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Upload', N'Upload', NULL, 1, N'Upload', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_UploadFolder', N'Upload Folder', NULL, 1, N'Upload Folder', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_UploadFromFile', N'Upload From File', NULL, 1.4, N'Upload From File', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_UPS', N'UPS', N'', 1, N'', N'', N'_Shipping',1)
GO
print 'Processed 700 total records'
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Upto', N'Up to', N'', 1, N'Up to', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_UserNameAlreadyExist', N'An account with this user name is already in use. Please choose an alternative one.', NULL, 1, N'An account with this user name is already in use. Please choose an alternative one.', NULL, N'_Login',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_USmultistateTaxIsUsed', N'Kartris is set to use the US/simple tax model. In this case, tax rates are set at the country/state level.', NULL, 1, N'Kartris is set to use the US/simple tax model. In this case, tax rates are set at the country/state level.', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Value', N'Value', N'', 1, N'Value', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ValuesShownExCoupons', N'All the values shown exclude coupons, customer discounts, tax and shipping.', NULL, 1, N'All the values shown exclude coupons, customer discounts, tax and shipping.', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Version', N'Version', NULL, 1.4, N'Version', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_VersionAdded', N'Version Added', NULL, 1, N'Version Added', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_VersionDownloadsPageText', N'Following is a list of all live versions that are ''downloadable''; i.e. they have been configured with a link or an uploaded file to be downloaded by the customer.<br /><br />

This list can be useful for checking that the downloads are still active and the files are correct.', N'Description of the Version Downloads page.', 1, N'Following is a list of all live versions that are ''downloadable''; i.e. they have been configured with a link or an uploaded file to be downloaded by the customer.<br /><br />

This list can be useful for checking that the downloads are still active and the files are correct.', NULL, N'_Versions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_VersionsAbove', N'versions above', NULL, 1.4, N'versions above', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_VersionsBelow', N'versions below', NULL, 1.4, N'versions below', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_VersionsBetween', N'versions between', NULL, 1.4, N'versions between', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_VersionsMatched', N'Versions that matched:', N'DEPRECATED use BackMenu_Versions', 1, N'Versions that matched:', N'', N'_Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_VersionsToMarkUp', N'Versions to mark up', NULL, 1.4, N'Versions to mark up', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ViewCouponUsed', N'View Coupon Used', N'', 1, N'View Coupon Used', N'', N'_Orders',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ViewDetails', N'View Details', NULL, 1, N'View Details', NULL, N'_SoftwareUpdate',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ViewFile', N'View generated file', NULL, 1, N'View generated file', NULL, N'_Feeds',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_VirtualPath', N'Virtual Path', N'', 1, N'Virtual Path', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Waiting', N'Waiting:', NULL, 1, N'Waiting:', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_WarnLevel', N'Warn Level', N'DEPRECATED, use FormLabel_WarningLevel', 1, N'Warn Level', N'', N'_StockLevel',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Yes', N'Yes', N'', 1, N'Yes', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_YourSoftwareIsUpToDate', N'You are running the latest version.', NULL, 1, N'You are running the latest version.', NULL, N'_SoftwareUpdate',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Zone', N'Zone', N'', 1, N'Zone', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ZoneToAdd', N'Zone To add:', N'', 1, N'', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_ZoneToCopy', N'Zone To copy:', N'', 1, N'', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'EmailText_OrderStatusUpdated', N'The status for your one of your orders has been updated.
=====================
[order_status]
=====================', NULL, 1, N'The status for your one of your orders has been updated. To view the status of this order simply click the link below.', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'EmailText_OrderUpdateFrom', N'Order Update From', NULL, 1, N'Order Update From', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormButton_Add', N'Add', N'', 1, N'Add', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormButton_Back', N'Back', N'', 1, N'', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormButton_Cancel', N'Cancel', N'', 1, N'Cancel', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormButton_Change', N'Change', N'', 1, N'Change', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormButton_Check', N'Check', N'', 1, N'Check', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormButton_Clone', N'Clone', N'', 1, N'Clone', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormButton_CopyItemsToBasket', N'Copy original order items to basket', NULL, 1.2001, NULL, N'_EditOrder.ascx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormButton_CreateAttribute', N'Create New Attribute', N'DEPRECATE - use _Kartris, FormButton_New', 1, N'Create New Attribute', N'', N'_Attributes',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormButton_CreateCombos', N'Create Combinations', N'', 1, N'Create Combinations', N'', N'_Options',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormButton_CreatePromotion', N'Create New Promotion', N'DELETE - use  ContentText_AddNew ', 1, N'', N'', N'_Promotions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormButton_Delete', N'Delete', N'', 1, N'Delete', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormButton_DeleteCombinations', N'Delete Combinations', N'', 1, N'', N'', N'_Options',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormButton_Edit', N'Edit', N'', 1, N'Edit', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormButton_ExecuteQuery', N'Execute', N'', 1, N'Execute', N'', N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormButton_Logout', N'Log Out', NULL, 1, N'Log Out', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormButton_New', N'New', N'', 1, N'New', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormButton_Preview', N'Preview', NULL, 1, N'Preview', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormButton_QBCreateQWCFile', N'Create .qwc File', NULL, 1, N'Create .qwc File', NULL, N'_QuickBooks',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormButton_Remove', N'Remove', N'', 1, N'Remove', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormButton_Reset', N'Reset', N'', 1, N'', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormButton_Save', N'Save', N'', 1, N'Save', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormButton_Search', N'Search', N'', 1, N'Search', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormButton_Select', N'Select', NULL, 1, N'Select', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormButton_SetAsPaid', N'Set As Paid', NULL, 1, N'Set As Paid', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormButton_Submit', N'Submit', NULL, 1, N'Submit', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormButton_Update', N'Update', N'', 1, N'Update', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_Approved', N'Approved for special payments?', N'', 1, N'Approved?', N'', N'_Customers',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_AttributeName', N'Attribute Name', N'', 1, N'Property Name', N'', N'_Attributes',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_AttributeType', N'Value Type', N'', 1, N'', N'', N'_Attributes',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_AttributeTypeCheckbox', N'Yes/No', N'', 1, NULL, NULL, N'_Attributes',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_AttributeTypeDropdown', N'Dropdown', NULL, 1, NULL, NULL, N'_Attributes',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_AttributeTypeText', N'Text', NULL, 1, NULL, NULL, N'_Attributes',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_BackName', N'Back End Name', N'', 1, N'Back End Name', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_BillingAddress', N'Billing Address', N'', 1, N'Billing Address', N'', N'_Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_CardholderEUVatNum', N'EU V.A.T. Number', N'', 1, N'EU V.A.T. Number', N'', N'_Orders',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_CategoryName', N'Category Name', N'', 1, N'Category Name', N'', N'_Stats',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_ChangeFrequency', N'Change Frequency: ', NULL, 1, N'Change Frequency: ', NULL, N'_Feeds',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_CodeNumer', N'SKU', N'', 1, N'SKU', N'', N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_Combinations', N'Combinations', N'', 1, N'Combinations', N'', N'_Options',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_Commission', N'Affiliate Commission (%)', N'', 1, N'Commission (%)', N'', N'_Customers',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_Compare', N'Show on comparison table?', NULL, 1, NULL, NULL, N'_Attributes',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_CompareAlways', N'Always show', NULL, 1, NULL, NULL, N'_Attributes',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_CompareEvery', N'If every product uses the attribute.', NULL, 1, NULL, NULL, N'_Attributes',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_CompareNever', N'Don''t show at all', NULL, 1, NULL, NULL, N'_Attributes',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_CompareOne', N'If one of more products uses the attribute.', NULL, 1, NULL, NULL, N'_Attributes',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_Condition', N'Condition: ', NULL, 1, N'Condition: ', NULL, N'_Feeds',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_ConfigOrderByCategories', N'Default (''frontend.categories.display.sortdefault'' config setting)', NULL, 1, N'Default (''frontend.categories.display.sortdefault'' config setting)', NULL, N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_ConfigOrderByCategoryID', N'Category ID', NULL, 1, N'Category ID', NULL, N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_ConfigOrderByCategoryName', N'Category Name', NULL, 1, N'Category Name', NULL, N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_ConfigOrderByCategoryParentSort', N'Category Parent Sort', NULL, 1, N'Category Parent Sort', NULL, N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_ConfigOrderByProductCategoryLink', N'Product Category Sort', N'Newly Added for _Category By Mohammad', 1, N'Product Category Sort', NULL, N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_ConfigOrderByProductCreationDate', N'Product Creation Date', N'Newly Added for _Category By Mohammad', 1, N'Product Creation Date', NULL, N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_ConfigOrderByProductID', N'Product ID', N'Newly Added for _Category By Mohammad', 1, N'Product ID', NULL, N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_ConfigOrderByProductLastModificationDate', N'Product Last Modified Date', N'Newly Added for _Category By Mohammad', 1, N'Product Last Modified Date', NULL, N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_ConfigOrderByProductName', N'Product Name', N'Newly Added for _Category By Mohammad', 1, N'Product Name', NULL, N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_ConfigOrderByProducts', N'Default (''frontend.products.display.sortdefault'' config setting)', N'', 1, N'Default (''frontend.products.display.sortdefault'' config setting)', N'', N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_ConfigOrderByVersions', N'Default (''frontend.versions.display.sortdefault'' config setting)', N'value is --> d', 1, N'Default (''frontend.versions.display.sortdefault'' config setting)', N'', N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_CouponQuantity', N'Quantity of Coupons', N'', 1, N'Quantity of Coupons', N'', N'_Coupons',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_CustomerGroup', N'Customer Group', N'', 1, N'', N'', N'_Customers',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_CustomerID', N'Customer ID', N'', 1, N'Customer ID', N'', N'_Customers',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_CustomerReviews', N'Reviews', N'', 1, N'Reviews', N'', N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_CustomerReviewsNo', N'Disabled', NULL, 1, N'Disabled', NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_CustomerReviewsNoVersionExpl', N'Enabled (no versions) means that a customer can''t associate a review with a specific version (''This review applies to the xxxx version''). Use this for products with many versions or similar versions.', NULL, 1, N'Enabled (no versions) means that a customer can''t associate a review with a specific version (''This review applies to the xxxx version''). Use this for products with many versions or similar versions.', NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_CustomerReviewsNoVersions', N'Enabled (no versions)', NULL, 1, N'Enabled (no versions)', NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_CustomerReviewsYes', N'Enabled', NULL, 1, N'Enabled', NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_DataType', N'Data Type', N'', 1, N'Data Type', N'', N'_Config',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_DeliveryTime', N'Delivery Time (days)', NULL, 1, N'Delivery Time (days)', NULL, N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_Description', N'Description', NULL, 1, N'Description', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_Discount', N'Discount (%)', N'', 1, N'Discount (%)', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_DisplayInfo', N'Display Info', N'', 1, N'Display Info', N'', N'_Config',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_DisplayType', N'Display Type', N'', 1, N'Display Type', N'', N'_Config',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_DownLoadURL', N'Link to Downloadable File', NULL, 1, N'Link to Downloadable File', NULL, N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_EndDate', N'End Date', N'', 1, N'End Date', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_FastEntry', N'Fast entry?', N'', 1, N'Fast entry?', N'', N'_Attributes',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_Featured', N'Featured', NULL, 1, N'Featured', NULL, N'_Product',1)
GO
print 'Processed 800 total records'
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_FeedType', N'Feed Type: ', NULL, 1, N'Feed Type: ', NULL, N'_Feeds',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_FreeShipping', N'Free Shipping', N'', 1, N'Free Shipping', N'', N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_FrontName', N'Front name', N'', 1, N'Front name', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_IsAffiliate', N'Is Affiliate?', N'', 1, N'', N'', N'_Customers',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_IsDefault', N'Default', N'Header of the Options View/Edit', 1, N'Default', N'', N'_Options',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_IsOptional', N'Optional', N'', 1, N'', N'', N'_Options',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_Language', N'Language', N'', 1, N'Language', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_LanguageCulture', N'Language Culture', N'', 1, N'', N'', N'_Language',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_LanguageUICulture', N'Language UI Culture', N'', 1, N'', N'', N'_Language',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_Live', N'Live?', N'', 1, N'Live?', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_LiveBack', N'Feature in Back End?', N'', 1, N'Feature in Back End?', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_LiveFront', N'Live on the frontend?', N'DEPRECATING - USE ContentText_Live (_Kartris) INSTEAD', 1, N'Live on the frontend?', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_MasterPage', N'Master Page', NULL, 1, N'Master Page', NULL, N'_Language',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_Name', N'Name', N'', 1, N'Name', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_NameOrderByVersions', N'Version Name', N'By Mohammad', 1, NULL, NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_OptionDisplayType', N'Option Display Type', N'', 1, N'Option Display Type', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_OrderByValue', N'Sort Value', N'This is an arbitrary value used to sort products, versions and categories (if the &amp;#39;SortByValue&amp;#39; field is the selected one for ordering)', 1, N'Arbitrary ''Order By'' Value', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_OrderProductsBy', N'Sort Products By', N'', 1, N'Sort Products By', N'', N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_OrderSubcatBy', N'Sort Subcat By', NULL, 1, N'Sort Subcat By', NULL, N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_OrderVersionsBy', N'Sort Versions By', N'Determines which field in the tblKartrisVersions table is used to order versions by', 1, N'Order Versions By', NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_PageTitle', N'Page Title', N'', 1, N'Page Title', N'', N'_Pages',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_Password', N'Password', N'', 1, N'Password', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_Price', N'Price', N'', 1, N'Price', N'', N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_PriceChange', N'Price +/-', N'', 1, N'Price +/-', N'', N'_Options',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_PriceExTax', N'Price (Ex Tax)', N'', 1, N'Price (Ex Tax)', N'', N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_PriceIncTax', N'Price (Inc Tax)', NULL, 1, N'Price (Inc Tax)', NULL, N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_PriceOrderByVersions', N'Version Price', N'By Mohammad', 1, NULL, NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_Product', N'Product Selection', N'', 1, N'Product Selection', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_ProductDisplayType', N'Product Display Type', N'', 1, N'Product Display Type', N'', N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_PromotionEndDate', N'End Date', N'DELETE THIS - NOW USE _Kartris: ContentText_DateRange', 1, N'', N'', N'_Promotions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_PromotionLive', N'Active?', N'DEPRECATED - replaced with _Kartris: ContentText_Active', 1, N'', N'', N'_Promotions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_PromotionMaxQty', N'Max. Qty', N'', 1, N'', N'', N'_Promotions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_PromotionOrderNo', N'Order No.', N'', 1, N'', N'', N'_Promotions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_PromotionStartDate', N'Start Date', N'DELETE THIS - NOW USE _Kartris: ContentText_DateRange', 1, N'', N'', N'_Promotions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_PromotionText', N'Promotion Text', N'', 1, N'Promotion Text', N'', N'_Promotions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_QBPollInterval', N'Poll Interval', NULL, 1, N'Poll Interval', NULL, N'_QuickBooks',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_Qty', N'Qty', N'', 1, N'Qty', N'', N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_Reusable', N'Reusable?', N'', 1, N'Reusable?', N'', N'_Coupons',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_ReviewEmail', N'Customer Email', N'', 1, N'Customer Email', N'', N'_Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_ReviewLocation', N'Customer Location', N'', 1, N'Customer Location', N'', N'_Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_ReviewName', N'Customer Name', N'', 1, N'Customer Name', N'', N'_Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_ReviewRating', N'Rating', N'', 1, N'Rating', N'', N'_Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_ReviewText', N'Review', N'', 1, N'Review', N'', N'_Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_ReviewTitle', N'Title', N'', 1, N'Title', N'', N'_Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_RRP', N'RRP', NULL, 1, N'RRP', NULL, N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_Selected', N'Selected?', N'', 1, N'Selected?', N'', N'_Options',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_ShippingAddress', N'Shipping Address', N'', 1, N'Shipping Address', N'', N'_Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_ShowFrontend', N'Show on product page?', N'', 1, N'Show on product page?', N'', N'_Attributes',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_ShowOnSite', N'Show On Site?', N'', 1, N'Show On Site?', N'', N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_ShowSearch', N'Include in search?', NULL, 1, N'Include in search?', NULL, N'_Attributes',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_SkinLocation', N'Skin location', N'', 1, N'Skin location', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_SpecialPageTitle', N'Page Title', N'', 1, N'', N'', N'_Pages',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_SpecialUse', N'Google Feed Special?', N'', 1, N'Google Feed Special?', N'', N'_Attributes',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_StartDate', N'Start Date', N'', 1, N'Start Date', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_Status', N'Status', N'', 1, N'Status', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_StockQuantity', N'Stock Quantity', N'', 1, N'Stock Quantity', N'', N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_StockTracking', N'Stock Tracking', NULL, 1, NULL, NULL, N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_SubCatDisplayType', N'Subcat Display Type', N'', 1, N'Subcat Display Type', N'', N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_Supplier', N'Supplier', NULL, 1, N'Supplier', NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_SupportEndDate', N'Support End Date', NULL, 1, N'Support End Date', NULL, N'_Customers',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_TabCategoryImages', N'Images', N'by Mohammad ''Tab Header''', 1, N'Category Images', NULL, N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_TabCategoryInformation', N'Category Information', N'by Mohammad ''Tab Header''', 1, N'Category Information', NULL, N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_TabProductAttributes', N'Attributes', N'by Mohammad ''Tab Header''', 1, N'Product Attributes', NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_TabProductImages', N'Images', N'by Mohammad ''Tab Header''', 1, N'Product Images', NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_TabProductInformation', N'Product Info', N'Tab Header', 1, N'Product Info', N'', N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_TabProductMedia', N'Media', NULL, 1.1011, N'Media', NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_TabProductOptions', N'Options', N'by Mohammad ''Tab Header''', 1, N'Product Options', NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_TabProductRelatedProducts', N'Related Products', N'by Mohammad ''Tab Header''', 1, N'Related Products', NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_TabProductReviews', N'Reviews', N'by Mohammad ''Tab Header''', 1, N'Reviews', N'', N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_TabProductVersions', N'Versions', N'by Mohammad (Tab Header)', 1, N'Versions', NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_TabQuantityDiscount', N'Quantity Discount', N'', 1, N'Quantity Discount', N'', N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_TabVersionImages', N'Version Images', N'by Mohammad (Tab Header)', 1, NULL, NULL, N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_TabVersionInformation', N'Version Information', N'by Mohammad (Tab Header)', 1, N'', N'', N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_TabVersionOptions', N'Versions and options', N'', 1, N'Versions and options', N'', N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_TaxBand', N'Tax Band', NULL, 1, N'Tax Band', NULL, N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_TaxRegime', N'Tax Regime:', NULL, 1.4, N'Tax Regime:', NULL, N'_RegionalWizard',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_Theme', N'Theme', NULL, 1, N'Theme', NULL, N'_Language',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_Title', N'Product Name', N'', 1, N'Product Name', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_Used', N'Used?', N'', 1, N'Used?', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_Username', N'Username', N'', 1, N'Username', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_ValueOrderByVersions', N'Version Sort Value', N'sort versions by the sort value specified for each version', 1, N'Version Sort Value', NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_VersionDisplayType', N'Version Display Type', NULL, 1, N'Version Display Type', NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_VersionName', N'Version Name', N'', 1, N'Version Name', N'', N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_VersionType', N'Version Type', N'', 1, N'Version Type', N'', N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_VersionWeight', N'Weight', N'', 1, NULL, NULL, N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_WarningLevel', N'Warning Level', NULL, 1, N'Warning Level', NULL, N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormLabel_WeightChange', N'Weight +/-', N'', 1, N'Weight +/-', N'', N'_Options',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'FormSupport_ExportStockWarnings', N'Export to CSV', N'', 1, N'', N'', N'_StockLevel',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ImageLabel_CloneThisVersion', N'Clone this version', N'Alt tag for commonly used clone version image in the backend', 1, N'Clone this version', NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ImageLabel_EditThisProduct', N'Edit this product', N'Alt tag for commonly used edit product image in the backend', 1, N'Edit this product', NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ImageLabel_EditThisVersion', N'Edit this version', N'Alt tag for commonly used edit version image in the backend', 1, N'Edit this version', NULL, N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ImageLabel_MarkUnpaid', N'Mark as Unpaid', NULL, 1, N'Mark as Unpaid', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ImageLabel_PermConfig', N'Permissions: Configuration', N'', 1, N'Permissions: Configuration', N'', N'_Logins',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ImageLabel_PermOrders', N'Permissions: Orders', N'', 1, N'Permissions: Orders', N'', N'_Logins',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ImageLabel_PermProducts', N'Permissions: Products', N'', 1, N'Permissions: Products', N'', N'_Logins',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ImageLabel_PermSupport', N'Permissions: Support', NULL, 1, N'Permissions: Support', NULL, N'_Logins',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ImageLabel_RemoveDiscount', N'remove this quantity discount from list', N'', 1, N'', N'', N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ImageLabel_RemoveRelatedProduct', N'remove this product from list', N'', 1, N'', N'', N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ImageLabel_ViewThisCustomer', N'View this Customer', N'Alt tag for view customer image in the backend', 1, N'View this Customer', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_AffiliateHitsReport', N'Affiliate Hits Report', NULL, 1, N'Affiliate Hits Report', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_AffiliateReportFor', N'Affiliate Payment Report', NULL, 1, N'Affiliate Payment Report', NULL, N'_Kartris',1)
GO
print 'Processed 900 total records'
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_Affiliates', N'Affiliates', N'List / Find Affiliates page title', 1, N'Affiliates', N'', N'_Customers',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_AffiliateSalesReport', N'Affiliate Sales Report', NULL, 1, N'Affiliate Sales Report', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_AffiliateStats', N'Affiliate Stats', NULL, 1, N'Affiliate Stats', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_BackEnd', N'Back end', N'', 1, N'Back end', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_BatchProcess', N'By Day (Batch Process)', N'', 1, NULL, N'_OrdersList.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_CloneVersion', N'Clone Version', N'', 1, N'Clone Version', N'', N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_Coupons', N'Coupons', N'', 1, N'Coupons', N'', N'_Coupons',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_Currencies', N'Currencies', N'', 1, N'Currencies', N'', N'_Currency',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_CustomerDetails', N'User Details', N'', 1, N'User Details', N'_ModifyCustomerStatus.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_CustomerGroups', N'Customer Groups', N'', 1, N'', N'_CustomerGroupsList.aspx', N'_Customers',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_Customers', N'Customers', N'', 1, N'Customers', N'_CustomersList.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_DatabaseInformation', N'Database Information', NULL, 1, N'Database Information', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_DefineRelatedProducts', N'Define Related Products', N'', 1, N'Define Related Products', N'', N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_EditLogin', N'Edit Login', N'DEPRECATED - no title needed', 1, N'Edit Login', N'_LoginsList.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_EditOrder', N'Edit Order', NULL, 1.2001, NULL, N'_ModifyOrder.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_EditPayment', N'Edit Payment', NULL, 1.4, N'Edit Payment', NULL, N'_Payments',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_FeaturedProducts', N'Featured Products', NULL, 1, N'Featured Products', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_FrontNewsItems', N'Front News Items', N'', 1, N'Front News Items', N'', N'_News',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_GenerateFeeds', N'Generate Feeds', NULL, 1, N'Generate Feeds', NULL, N'_Feeds',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_Invoice', N'Invoice', N'', 1, N'Invoice', N'', N'_Invoice',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_KnowledgeBase', N'Knowledgebase', NULL, 1, N'Knowledgebase', NULL, N'_Knowledgebase',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_Languages', N'Languages', N'', 1, N'Languages', N'', N'_Language',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_LiveCurrencyRateUpdate', N'Live Rate Update', N'', 1, N'Live Rate Update', N'', N'_Currency',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_Logins', N'Logins', N'', 1, N'Logins', N'_LoginsList.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_MailingList', N'Mailing List', N'', 1, N'Mailing List', N'', N'_Customers',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_MarkupPrices', N'Markup Prices', NULL, 1.4, N'Markup Prices', NULL, N'_MarkupPrices',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_MediaTypes', N'Media Types', NULL, 1.1011, N'Media Types', NULL, N'_Media',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_NewCategory', N'New Category', N'', 1, N'New Category', N'', N'_Category',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_NewProduct', N'New Product', N'', 1, N'New Product', N'', N'_Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_NewVersion', N'New Version', N'', 1, N'New Version', N'', N'_Version',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_OptionGroups', N'Option Groups', N'', 1, N'Option Groups', N'', N'_Options',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_OrderDetails', N'Order Details', NULL, 1, N'Order Details', NULL, N'_Orders',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_Orders', N'Orders', NULL, 1, N'Orders', N'_OrdersList.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_OrdersAffiliate', N'Affiliate Payment', NULL, 1, N'Affiliate Payment', N'_OrdersList.aspx', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_OrdersBydate', N'By Day', NULL, 1, N'By Day', N'_OrdersList.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_OrdersComplete', N'Complete', NULL, 1, N'Complete', N'_OrdersList.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_OrdersCustomerEmail', N'Customer', N'', 1, N'Customer', N'_OrdersList.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_OrdersDispatch', N'Awaiting Dispatch', NULL, 1, N'Awaiting Dispatch', N'_OrdersList.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_OrdersGateway', N'By Payment Gateway', NULL, 1, N'By Payment Gateway', N'_OrdersList.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_OrdersInvoice', N'Awaiting Invoice', NULL, 1, N'Awaiting Invoice', N'_OrdersList.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_OrdersPayment', N'Awaiting Payment', NULL, 1, N'Awaiting Payment', N'_OrdersList.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_OrdersRecent', N'Recent', N'', 1, N'Recent', N'_OrdersList.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_OrdersUnfinished', N'Unfinished', NULL, 1, N'Unfinished', N'_OrdersList.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_Pages', N'Custom Pages', N'', 1, N'Custom Pages', N'', N'_Pages',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_PaymentsRecent', N'Recent', NULL, 1.4, N'', NULL, N'_Payments',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_Problems', N'Problems...', N'', 1, N'Problems...', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_Promotions', N'Promotions', N'', 1, N'', N'', N'_Promotions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_PurgeOldAdminLogs', N'Purge Old Admin Logs', NULL, 1, N'Purge Old Admin Logs', NULL, N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_QBIntegration', N'QuickBooks Integration', NULL, 1, N'QuickBooks Integration', NULL, N'_QuickBooks',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_RegionalSetupWizard', N'Regional Setup Wizard', NULL, 1.4, N'Regional Setup Wizard', NULL, N'_RegionalWizard',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_Reviews', N'Customer Reviews', N'', 1, N'Customer Reviews', N'', N'_Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_SearchResults', N'Search Results', N'', 1, N'Search Results', N'', N'_Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_Shipping', N'Shipping', N'', 1, N'Shipping', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_ShippingDestinationCountries', N'Countries', N'', 1, N'Countries', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_ShippingRates', N'Shipping Rates', N'', 1, N'Shipping Rates', N'', N'_Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_SoftwareUpdate', N'Software Update', NULL, 1, N'Software Update', NULL, N'_SoftwareUpdate',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_StockLevelWarnings', N'Stock Level Warnings', N'', 1, N'Stock Level Warnings', N'', N'_StockLevel',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_Suppliers', N'Suppliers', N'', 1, N'Suppliers', N'', N'_Suppliers',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_SupportTickets', N'Support Tickets', NULL, 1, N'Support Tickets', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_SupportTicketTypes', N'Support Ticket Types', NULL, 1, N'Support Ticket Types', NULL, N'_Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_TaxRates', N'Tax Rates', N'', 1, N'Tax Rates', N'', N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_Updated', N'Updated!', NULL, 1, N'Updated!', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_VersionDownloads', N'Version Downloads', NULL, 1, N'Version Downloads', NULL, N'_Versions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_WelcomeToKartris', N'Welcome to Kartris', NULL, 1, N'Welcome to Kartris', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'Step3_UserInstance', N'Use User Instance (SQL Server Express only) - this simplifies setup by using the .MDF database file within the App_Data folder of the web site', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'SubHeading_FullTextSearch', N'Full-Text Search', NULL, 1, N'Full-Text Search', NULL, N'_DBAdmin',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'AdminBar_ModifyNews', N'Add/Update News', NULL, 1, N'Add/Update News', N'AdminBar.ascx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'AdminBar_Title', N'Admin Bar', NULL, 1, N'Admin Bar', N'AdminBar.ascx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'AdminBar_ViewBackend', N'Back End', NULL, 1, N'Back End', N'AdminBar.ascx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'CannotUpdateWebConfigNote', N'*Note: The ASP.NET Process Account (NETWORK SERVICE or ASPNET) on your server doesn''t have write permissions to the Kartris application folder thus preventing this Setup page from automatically updating your web.config file. You can still download a copy of the output web.config at the end of the setup to do the update manually.', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ClickNextToUpdate.Text', N'Click on &#39;Next&#39; to update the settings.', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Config_OrderDescription', N'Order from Kartris', N'Description of the order', 1, N'Order from Kartris', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Config_OwnerName', N'Kartris v1', NULL, 1, N'Kartris v1', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Config_Subjectline', N'Response from Kartris', N'Subject line of order placement confirmation to buyer', 1, N'Response from Kartris', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Config_Subjectline2', N'Order from Kartris', N'Subject line of order to shop owner', 1, N'Order from Kartris', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Config_Subjectline3', N'Kartris Mailing List', N'Subject line of email sent from the mailing list', 1, N'Kartris Mailing List', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Config_Subjectline4', N'Kartris Contact Us Form.', N'Subject line of email sent to the store owner after someone fills in the contact us form.', 1, N'Kartris Contact Us Form.', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Config_Subjectline5', N'New Account On Kartris', NULL, 1, NULL, NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Config_Subjectline6', N'Kartris Tickets: New Ticket (#[ticketno])', NULL, 1, N'Kartris Tickets: New Ticket (#[ticketno])', NULL, N'Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Config_Subjectline7', N'Kartris Tickets: Reply to ticket (#[ticketno])', NULL, 1, N'Kartris Tickets: Reply to ticket (#[ticketno])', NULL, N'Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Config_Webshopname', N'Kartris', NULL, 1, N'Kartris', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ConnectionString.Text', N'Connection String:', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_404', N'We''re sorry, the page you''ve requested does not exist on our site.', N'', 1, N'', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_AboutKnowledgebase', N'The knowledgebase lets you search for answers to common problems and issues customers might experience.', NULL, 1, N'The knowledgebase lets you search for answers to common problems and issues customers might experience.', NULL, N'Knowledgebase',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_AddEditAddress', N'Add a new address', NULL, 1, N'Add/Edit Address', NULL, N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_AddNew', N'New', N'', 1, N'New', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_AddressAndPhoneContact', N'[Edit the ''ContentText_AddressAndPhoneContact'' language string in the back end to replace this text with your contact street address and phone number(s)]', N'Address and phone number details displayed on Contact.aspx', 1, N'[Edit the ''ContentText_AddressAndPhoneContact'' language string in the back end to replace this text with your contact street address and phone number(s)]', NULL, N'ContactUs',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_AddReview', N'Fill in the form below to add your review for <strong>[itemname]</strong>', N'', 1, N'Fill in the form below to add your review for <strong>[itemname]</strong>', N'', N'Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_AffiliateApplicationDetail', N'Your application to be an affiliate has been made. If the store owner approves you, you will be sent an email. You will then need to login to your account to check details of how to format links to the site in order to credit you with referrals.', NULL, 1, NULL, NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_AffiliateApplicationPending', N'Your affiliate application is pending.', NULL, 1, NULL, NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_AffiliateLinkText', N'To promote the store through your site and generate sales, use the special link below:', NULL, 1, NULL, NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_AffiliateReferrals', N'Affiliate Referrals', NULL, 1, NULL, NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Alert', N'Alert!', NULL, 1, N'Alert!', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_AllRequiredPurchased', N'Purchased', NULL, 1, N'Purchased', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_AlreadyHaveAccount', N'<strong>Existing Customer</strong> - I have ordered or created an account before', N'', 1, N'<strong>Existing Customer</strong> - I have ordered or created an account before', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_AltOutOfStock', N'Out of Stock', N'alt text for ''out of stock'' image', 1, N'Out of Stock', NULL, N'Versions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Amount', N'Amount', NULL, 1, N'Amount', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ApplyCouponCode', N'Coupon Code', NULL, 1, NULL, NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_AttributeName', N'Attribute Name', N'', 1, N'Attribute Name', N'', N'Attributes',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Attributes', N'Product Details', NULL, 1, N'Product Information', NULL, N'Attributes',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_AttributeValue', N'Value', N'', 1, N'Value', N'', N'Attributes',1)
GO
print 'Processed 1000 total records'
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_BadEmail', N'Invalid email!', NULL, 1, N'Invalid email!', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Basket', N'Basket', N'Used in the navigation bar when browsing categories and products', 1, N'Basket', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_BasketEmptied', N'Your basket has been emptied.', NULL, 1, N'Your basket has been emptied.', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_BasketEmpty', N'Your basket is empty.', NULL, 1, N'Your basket is empty.', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_BasketItemRemoved', N'(removed)', NULL, 1, NULL, NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_BasketName', N'Basket Name', NULL, 1, N'Basket Name', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_BasketNamePassword', N'Basket Name', NULL, 1, N'Basket Name/Password', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_BasketSuccessfullyRecovered', N'Your basket has been successfully recovered. Items that were in your basket but are no longer available will have been automatically removed. Also, the price and/or specification of some items may have changed since you saved the basket. ', NULL, 1, N'Your basket has been successfully recovered. Items that were in your basket but are no longer available will have been automatically removed. Also, the price and/or specification of some items may have changed since you saved the basket. ', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_BasketSuccessfullyRecovered2', N'We would therefore advise you check all items in your basket are acceptable before checking out', NULL, 1, N'We would therefore advise you check all items in your basket are acceptable before checking out', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_BasketSuccessfullySaved', N'The contents of your basket have been successfully saved to the database. Remember the following details in order to recover your basket at a later date.', NULL, 1, N'The contents of your basket have been successfully saved to the database. Remember the following details in order to recover your basket at a later date.', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_BasketTableSummary', N'Details of your shopping basket', NULL, 1, NULL, NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_BillingAddress', N'Billing Address', NULL, 1, N'Billing Address', NULL, N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_BreadcrumbSeparator', N' ', NULL, 1, N' » ', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_BrowseCategories', N'Browse', NULL, 1, N'Browse', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ButMustBeLessThan', N'characters, but must be less than', N'used in the errorcheck for length', 1, N'characters, but must be less than', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CallForPrice', N'Call', N'', 1.3, N'Call', N'', N'Versions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CanAlsoBeUsedAsBillingAddress', N'This can also be used as a billing address', N'', 1, N'This can also be used as a billing address', N'', N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CanAlsoBeUsedAsShippingAddress', N'This can also be used as a shipping address', N'', 1, N'This can also be used as a shipping address', N'', N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CanCustomize', N'This item can be customized!', N'', 1, N'This item can be customized!', N'', N'Products',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CarryOnShopping', N'Carry On Shopping', NULL, 1, N'Carry On Shopping', NULL, N'Products',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Categories', N'Categories', NULL, 1, N'Categories', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CategoryAsDropdownDefault', N'select one...', N'Used as the default display on category and other dropdown menus', 1, N'select one...', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Change', N'Change', NULL, 1, NULL, NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ChangeCustomerCode', N'Change Details', NULL, 1, N'Change Password', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ChangePasswordLink', N'Change password link: ', NULL, 1, N'Change password link: ', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ChooseNamePassword', N'Please choose a name for the basket and then click ''save''.', NULL, 1, N'Please choose a name/password for the basket and enter your email address below. These details will be needed later when you recover the basket contents.', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ChoosePassword', N'Choose a password to use with this account.', N'', 1, N'Choose a password to use with this account.', N'', N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ClearAll', N'Clear all', NULL, 1, N'Clear all', NULL, N'Comparison',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Close', N'Close', N'', 1, N'Close', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CodeNumberSmall', N'Code No.', NULL, 1, N'Code No.', N'Customer.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Commission', N'Commission', NULL, 1, N'Commission', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CommissionDueThisMonth', N'Commission this Month', NULL, 1, N'Commission this Month', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CompareRemove', N'Remove', NULL, 1, NULL, NULL, N'Products',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ConfirmEmail', N'A confirmation email has been sent to you.', NULL, 1, N'A confirmation email has been sent to you.', NULL, N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ContentNotAvailable', N'Apologies, this content is currently not accessible.', NULL, 1, N'Apologies, this content is currently not accessible.', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ContinueShopping', N'Continue Shopping', N'Displayed on the basket page when an item is added.', 1, N'Continue Shopping', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CorrectErrors', N'Problems...', NULL, 1, N'Problems...', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CouponDiscount', N'Coupon Discount', NULL, 1, N'Coupon Discount', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CouponDoesntExist', N'The coupon code you gave does not exist.', NULL, 1, N'The coupon code you gave does not exist.', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CouponExpended', N'The coupon code you gave is not reusable and has already been used.', NULL, 1, N'The coupon code you gave is not reusable and has already been used.', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CouponExpired', N'The coupon code you gave has expired.', NULL, 1, N'The coupon code you gave has expired.', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CouponNotYetValid', N'The coupon code you gave is not yet valid.', NULL, 1, N'The coupon code you gave is not yet valid.', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CreateAccount', N'Create Account', NULL, 1, N'Create Account', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CreateAccountExplanation', N'To create wish lists and save basket contents you must have an account.', NULL, 1, NULL, NULL, N'Login',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CreateNewAccount', N'Create a new account', NULL, 1, NULL, NULL, N'Login',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CreditCardDetails', N'Credit Card Details', NULL, 1, N'Credit Card Details', NULL, N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Currency', N'Currency', NULL, 1, N'Currency', NULL, N'Template',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CustomerAccount', N'Customer Account', N'', 1, N'Customer Account', N'KartrisLogin.ascx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CustomerAdded', N'Your account was created!', NULL, 1, N'Login', NULL, N'Login',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CustomerCode', N'Password', NULL, 1, N'Password', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CustomerCodeClickHere', N'click here', NULL, 1, N'click here', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CustomerCodeIncorrect', N'Your [label] was incorrect.', NULL, 1, N'Your [label] was incorrect.', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CustomerCodesDifferent', N'The passwords do not match.', N'', 1, N'The 2 password fields do not match.', N'CustomerDetails.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CustomerDiscount', N'Customer Discount', NULL, 1, N'Customer Discount', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CustomerDiscountText1', N'Your account has a discount of  ', NULL, 1, N'Your account has a discount of <b>', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CustomerDiscountText2', N' available on all orders. This will be shown on the basket and automatically applied when you check out.', NULL, 1, N'%</b> available on all orders. This will be shown on the basket and automatically applied when you check out.', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CustomerName', N'Customer Name', NULL, 1, N'Customer Name', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CustomerNumberEmailSent', N'A password reset link has been sent to ', NULL, 1, N'A password reset link has been sent to ', N'KartrisLogin.ascx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CustomerReviews', N'Customer Reviews', NULL, 1, N'Customer Reviews', NULL, N'Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Customization', N'Customization', N'', 1, N'Customization', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CustomizationDetails', N'Customization Details', N'', 1, N'Customization Details', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CustomizationExplanation', N'Enter customization text in the field below.', NULL, 1, N'This item can be customized with your own text. The additional price for this is shown below. If you wish to customize it, enter your text in the space provided and click ''save''.', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Customize', N'Customize', NULL, 1, N'Customize', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_CustomizeNoThanks', N'No thanks, I don''t want to customize this item', N'', 1, N'No thanks, I don''t want to customize this item', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_DateSaved', N'Date Saved', NULL, 1, N'Date Saved', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_DateTime', N'Date/Time', NULL, 1, N'Date/Time', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_DefaultBillingAddress', N'Default Billing Address', N'', 1, N'Default Billing Address', N'', N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_DefaultMetaDescription', N'default meta description  (ContentText_DefaultMetaDescription)', N'The default meta description for all pages.', 1, N'default meta description (ContentText_DefaultMetaDescription)', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_DefaultMetaKeywords', N'default meta keywords (ContentText_DefaultMetaKeywords)', N'The default meta keywords for all pages.', 1, N'default meta keywords (ContentText_DefaultMetaKeywords)', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_DefaultShippingAddress', N'Default Shipping Address', N'', 1, N'', N'', N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Delete', N'Delete', NULL, 1, N'Delete', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Discount', N'Customer Discount', NULL, 1, N'Customer Discount', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_DiscountsAvailable', N'Discounts are available for this product if purchased in bulk.', NULL, 1, N'Discounts are available for this product if purchased in bulk.', NULL, N'Versions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Download', N'Download', NULL, 1, N'Download', N'Customer.aspx', N'Media',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_DownloadExplanation', N'Below are items you have previously purchased which are available for download.', NULL, 1, N'Below are items you have previously purchased which are available for download.', N'Customer.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_DropdownSelectDefault', N'Please select...', NULL, 1, N'Please select...', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Each', N'each', N'used in the order string detailing the items in the order', 1, N'each', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Edit', N'Edit', NULL, 1, NULL, NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ElectronicShippingDesc', N'All the products in your basket are either downloadable or not subject to shipping.<br /><br />

Once your payment is complete and has been authorized, any downloads purchased will be available in your account area.', NULL, 1, N'All the products in your basket are either downloadable or not subject to shipping.<br /><br />

Once your payment is complete and has been authorized, any downloads purchased will be available in your account area.', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_EmailAddressAlreadyExists', N'The <b>email address</b> already exists. You should login to the existing account or request the password if you have forgotten it.', N'', 1, N'The <b>email address</b> already exists. You should login to the existing account or request the password if you have forgotten it.', N'KartrisLogin.ascx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_EmailAddressHasAccount', N'This order has been submitted already within the last few minutes.', NULL, 1, N'This order has been submitted already within the last few minutes.', NULL, N'Login',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_EmailAddressHasAccountDesc', N'There is already an account for this email so you cannot create another. Please login to this existing account instead. If you have forgotten the password, please use the ''forgotten password'' feature to have it sent to you.', NULL, 1, N'The email address has been used before to make an order. To use the same account you must give the password. If you don''t have this, you may request it using the ''forgotten password'' feature below.', NULL, N'Login',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_EmailAddressNotValid', N'The email address is not valid. It must be of the form', NULL, 1, N'The email address is not valid. It must be of the form', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_EmailAlreadySignedUp', N'You already have an account with a confirmed email address. Please login to ''my account'' and change your mailing preferences from there.', NULL, 1, N'You are already signed up to the mailing list', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_EmailNotSignedUp', N'Your email address is unconfirmed. You must go through the verification process if you wish to be added to the mailing list.', NULL, 1, NULL, NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_EmailNotVerified', N'Your email address has not yet been verified. You must verify your email address by clicking the link in the verification email sent to you. If you lost the first verification email, use the link below to send another.', NULL, 1, NULL, NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_EmailsMustMatch', N'The email addresses must match', N'', 1, N'The email addresses must match', N'KartrisLogin.ascx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_EmailVerified', N'Your email address has been opt-in verified.', NULL, 1, NULL, NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_EmptyShoppingBasketConfirm', N'Are you sure you want to delete the contents of your shopping basket?', NULL, 1, N'Are you sure you want to delete the contents of your shopping basket?', NULL, N'basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_EnterCouponLink', N'Add a coupon', N'Text for add a coupon link on checkout pages', 1, NULL, NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_EnterEmailAddress', N'<strong>Enter your email address: </strong>', N'', 1, N'You must enter an email address in order to proceed.', N'KartrisLogin.ascx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_EnterEUVat', N'EU VAT Number (if you have one)', NULL, 1, NULL, N'Checkout.aspx', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_EnterKeywords', N'Please enter one or more keywords to search for', N'DEPRECATED', 1, N'Please enter one or more keywords to search for', NULL, N'Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Error', N'Error!', NULL, 1, N'Error!', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Errors', N'Please correct the errors above', NULL, 1, N'Please correct the errors above', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ErrorTermsNotChecked', N'You have not agreed to the <b>Terms and Conditions</b>.', NULL, 1, N'You have not agreed to the <b>terms and conditions</b>.', NULL, N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ErrorText', N'An error has occurred. We apologise for the inconvenience.', NULL, 1, N'An error has occurred. We apologise for the inconvenience.', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_EstimateShipping', N'Estimate Shipping', NULL, 1.4, N'Estimate Shipping', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ExcludedSearchKeywords', N'the,this,in,is,it,a,and,of,for,that,those,these,(),[]', N'These are the list of words that should be excluded from the search keywords', 1, N'the,this,in,is,it,a,and,of,for,that,those,these,(),[]', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ExTax', N'Ex Tax', NULL, 1, N'Ex Tax', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ExtendedProdTypeDisplay', N'Extended (with description and image)', NULL, 1, N'Extended (with description and image)', NULL, N'_Category',1)
GO
print 'Processed 1100 total records'
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_FakeOrTestStatus', N'The gateway selected is currently in ''fake'' or ''test'' status. These gateways are only available to users logged in to the backend.', NULL, 1, N'The gateway selected is currently in ''fake'' or ''test'' status. These gateways are only available to users logged in to the backend.', NULL, N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_FeaturedProducts', N'Featured Products', N'', 1, N'', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ForgottenCustomerNumberDesc', N'If you have an account but have lost your password, we can email a password recovery link to you now.', N'', 1, N'If you have an account but have lost your password, we can email it to you now', N'', N'Login',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_GatewayFake', N'The gateway is currently in ''fake'' mode.', NULL, 1, N'The gateway is currently in ''fake'' mode.', N'CheckoutProcess.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_GatewayTestForwarding', N'Hit the submit button below to submit the data to the payment gateway. <br />You can view the page source to check the data is being submitted correctly.<br />This message is only shown when the gateway status is set to TEST - the submission is automatic when live.', NULL, 1, NULL, N'CheckoutProcess.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_GoBack', N'Go back', N'', 1, N'Go back', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_HiddenPriceText', N'Please Login', N'', 1, N'', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Home', N'Home', N'Used in the navigation bar when browsing categories and products', 1, N'Home', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_HTMLNotAllowed', N'HTML is not allowed!', NULL, 1, N'HTML is not allowed!', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_IfGiven', N'if present', N'', 1, N'if present', N'CreditCardInput.ascx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_IncludeBasketInEmail', N'Include basket contents in email?', NULL, 1, N'Include basket contents in email?', NULL, N'ContactUs',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_IncTax', N'Inc Tax', NULL, 1, N'Inc Tax', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_InvalidValue', N'Invalid Value!', NULL, 1, N'Invalid Value!', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_InvoiceDetails', N'Invoice Details', NULL, 1, N'Invoice Details', NULL, N'Invoice',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_IsBlank', N'is blank', N'used in the errorcheck for blank values', 1, N'is blank', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_IsCurrently', N'is currently', N'used in the errorcheck for length', 1, N'is currently', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_IsNotNumeric', N' is not numeric', N'', 1, N' is not numeric', N'', N'Error',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Item', N'Item', NULL, 1, N'Item', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ItemLabel', N'Item Label', NULL, 1, N'Item Label', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ItemsAdded', N'Adding item(s) to basket...', NULL, 1, N'Adding item(s) to basket...', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ItemsUpdated', N'Updating item(s) to basket...', NULL, 1, N'Updating item(s) to basket...', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Keywords', N'Keywords', NULL, 1, N'Keywords', NULL, N'Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_KnowledgebaseListing', N'Full Knowledgebase Listing', NULL, 1, N'Full Knowledgebase Listing', NULL, N'Knowledgebase',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Language', N'Language', NULL, 1, N'Language', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_LargeView', N'Large View', N'', 1, N'Large View', NULL, N'Product',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_LastUpdate', N'Last update', NULL, 1, N'Last update', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_LinkExpiredOrIncorrect', N'The link has expired or was incorrect.', NULL, 1, N'The link has expired or was incorrect.', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Load', N'Load', NULL, 1, N'Load', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_LoggedInAs', N'Welcome', N'', 1, N'Welcome', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_LoginStatus', N'logged in', N'', 1, N'logged in', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_LogInToSite', N'To view the site you must first log in to your account. Please enter in your email address and password to gain access to the site.', NULL, 1, N'To view the site you must first log in to your account. Please enter in your email address and password to gain access to the site.', N'CustomerAccount.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_LogMeOut', N'Log Out', N'', 1, N'Log Out', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_LookupPage', N'Log Me Out / Change Account', N'', 1, N'Log Me Out / Change Account', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_MailWasSent', N'Thank you. Your message has been sent!', NULL, 1, N'Thank you. Your message has been sent!', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ManageAddresses', N'Manage Addresses', N'', 1, N'', N'', N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_MediaGallery', N'Media Gallery', NULL, 1, N'Media Gallery', NULL, N'Media',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_MiniBasket_WhereApplicable', N'*where applicable', NULL, 1, N'*where applicable', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_MinibasketCheckout', N'Checkout', NULL, 1, N'Checkout', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_MinibasketCheckoutAltText', N'Check out and pay for the goods', NULL, 1, N'Check out and pay for the goods', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_MinibasketExTax', N'Ex Tax', NULL, 1, N'Ex Tax', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_MinibasketHidden', N'Order in progress...', N'When in the ordering section of Kartris, the basket is hidden so as not to confuse the user (since the order details have shipping, etc. added so the prices may not tally)', 1, N'Order in progress...', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_MinibasketIncludingTax', N'Inc Tax', NULL, 1, N'Inc Tax', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_MinibasketIsEmpty', N'Your basket is empty', NULL, 1, N'your basket is empty', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_MinibasketMakeEnquiry', N'Make Enquiry', NULL, 1, N'Make Enquiry', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_MinibasketMakeEnquiryAltText', N'Make an enquiry about the items in your basket', NULL, 1, N'Make an enquiry about the items in your basket', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_MinibasketMinimumOrderValue', N'Your current order is below our minimum order value', NULL, 1, N'Your current order is below our minimum order value', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_MinibasketNumberOfItems', N'No of items:', NULL, 1, N'No of items:', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_MinibasketRecoverBasket', N'Recover Basket', NULL, 1, N'Recover Basket', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_MinibasketRecoverBasketAltText', N'Recover a previously saved basket', NULL, 1, N'Recover a previously saved basket', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_MinibasketSaveBasket', N'Save Basket', NULL, 1, N'Save Basket', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_MinibasketSaveBasketAltText', N'Save basket contents to database', NULL, 1, N'Save basket contents to database', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_MinibasketTotal', N'Total', NULL, 1, N'Total', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_MinibasketViewBasket', N'View Basket', NULL, 1, N'View Basket', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_MinibasketViewBasketAltText', N'Show me the contents of my basket', NULL, 1, N'Show me the contents of my basket', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_MinibasketWishList', N'Create Wish List', NULL, 1, NULL, NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_MinibasketWishListAltText', N'Create a wish list from the current basket contents', NULL, 1, NULL, NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Month', N'Month', NULL, 1, N'Month', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_MorePromotionsLink', N'View more promotions &#187;', NULL, 1, NULL, NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_MyAccountDesc', N'Check order status or view stored shopping lists if you have previously ordered here.', NULL, 1, N'Check order status or view stored shopping lists if you have previously ordered here.', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NameDetails', N'Name / Details', N'', 1, N'Name / Details', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NewCustomers', N'<strong>New Customer</strong>', N'', 1, N'<strong>New Customer</strong>', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NewProductsList', N'New Products', NULL, 1, N'New Products', N'Kartris.Master', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NewSearch', N'New Search', NULL, 1, N'New Search', NULL, N'Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NewsletterSignup', N'Thank you for signing up for the newsletter. You won''t be added to the mailing list until you confirm your email address by clicking the link in the confirmation email that has just been sent to you.', NULL, 1, N'Thank you for signing up for the newsletter. You won''t be added to the mailing list until you confirm your email address by clicking the link in the confirmation email that has just been sent to you.', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_No', N'No', N'', 1, N'No', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NoAddress', N'None specified', N'', 1, N'None specified', N'', N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NoBillingAddress', N'No billing address given', NULL, 1, N'No billing address given', NULL, N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NoEmailAddress', N'You must enter an email address in order to proceed', NULL, 1, N'You must enter an email address in order to proceed', NULL, N'Login',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NoEmailAddressEntered', N'<label> is blank.', NULL, 1, N'You have not entered an email address', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NoItems', N'No items found.', NULL, 1, N'No items found.', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NoMatch', N'The email address or password are incorrect; no account could be found with matching details. Please use the ''forgotten password'' link if you need to recover the password for your account.', NULL, 1, N'The email address or password are incorrect; no account could be found with matching details. Please use the ''forgotten password'' link if you need to recover the password for your account.', NULL, N'Login',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NoMatch2', N' If you have forgotten your password, use the box at the foot of this page to have it sent to you by email. If you have not ordered from this site before, leave the password box blank.', NULL, 1, N' If you have forgotten your password, use the box at the foot of this page to have it sent to you by email. If you have not ordered from this site before, leave the password box blank.', NULL, N'Login',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_None', N'None', NULL, 1, NULL, NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NoPromotions', N'There are currently no promotions running.', NULL, 1, N'There are currently no promotions running.', NULL, N'Promotions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NoResults', N'[MARKED FOR DELETION]', NULL, 1, N'None of the keywords were found. Try again or navigate using the product category links.', NULL, N'Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NoReviews', N'There are currently no reviews of this product.', NULL, 1, NULL, NULL, N'Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NoSavedBaskets', N'You currently have no saved baskets', NULL, 1, N'You currently have no saved baskets', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NoSelection', N'No selection made.', N'', 1, N'No selection made.', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NoShippingAddress', N'No shipping address given', NULL, 1, N'No shipping address given', NULL, N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NoShippingSelected', N'No shipping selected', NULL, 1, N'No shipping selected', NULL, N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NotAddedToMailingList', N'As you requested, you have not been added to the mailing list', NULL, 1, N'As you requested, you have not been added to the mailing list', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NotAffiliateYet', N'You are not presently an affiliate. To become an affiliate and earn commission on sales you generate,', NULL, 1, NULL, NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NotFoundInDB', N'There is no account for this email address', NULL, 1, N'There is no account for this email address', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NotLoggedIn', N'not logged in', N'', 1, N'not logged in', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NoValidCombinations', N'Please make a valid selection for all options', NULL, 1.4, N'Please make a valid selection for all options', NULL, N'Options',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NoWishLists', N'You currently have no wish lists', NULL, 1, NULL, NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_OK', N'OK', NULL, 1, N'OK', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_OptionsMissingSelection', N'Please ensure you make a selection for the following options:', NULL, 1, N'Please ensure you make a selection for the following options:', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_OrderAmount', N'Order Amount', NULL, 1, N'Order Amount', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_OrderDate', N'Order Date', NULL, 1, N'Order Date', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_OrderDetails', N'Details', NULL, 1, NULL, NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_OrderEmails', N'Order Emails', NULL, 1, N'Order Emails', NULL, N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_OrderEmailsText', N'Optionally, you may receive an email from the store whenever there has been an update to your order. ', NULL, 1, N'Optionally, you may receive an email from the store whenever there has been an update to your order. ', NULL, N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_OrderEmailsYes', N'Yes, please send me emails whenever the status for this order is updated.', NULL, 1, N'Yes, please send me emails whenever the status for this order is updated.', NULL, N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_OrderHandlingCharge', N'Order Handling Charge', NULL, 1, N'Order Handling Charge', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_OrderMultiplesOfUnitsize', N'This item must be ordered in multiples of [unitsize]', N'Popup message appears when trying to add an in-valid quantity (not multiple of UnitSize) to basket.', 1.4, N'This item must be ordered in multiples of [unitsize]', NULL, N'ObjectConfig',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_OrderNotFound', N'You have not completed any orders.', N'', 1, N'You have not completed any orders.', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_OrderNumber', N'Order Number', NULL, 1, N'Order Number', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_OrderProgress', N'Order Progress', NULL, 1, N'Order Progress', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_OrdersBelowRecent', N'Your recent orders are shown below.', NULL, 1, NULL, NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_OrderStatus', N'Order Status', NULL, 1, N'Order Status', NULL, N'Kartris',1)
GO
print 'Processed 1200 total records'
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_OrderStatusCancelled', N'The order has been cancelled', NULL, 2, N'The order has been cancelled', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_OrderStatusInvoiced', N'An invoice for payment has been issued', NULL, 1, N'An invoice for payment has been issued', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_OrderStatusPaid', N'Payment has been received', NULL, 1, N'Payment has been received', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_OrderStatusSent', N'The order has been sent to the store owner', NULL, 1, N'The order has been sent to the store owner', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_OrderStatusShipped', N'The order has been dispatched', NULL, 1, N'The order has been dispatched', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_OrderValue', N'Order Value', NULL, 1, N'Order Value', NULL, N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_OutOfStock', N'The selected item is in short supply and you require more than we currently have in stock. The quantities have been reduced to our current stock level which is the maximum amount we can supply at present.', N'Display that explains that you can''t have that many in your basket', 1, N'Highlighted items are in short supply and you require more than we currently have in stock. The quantities have been reduced to our current stock level which is the maximum amount we can supply at present.', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_OutOfStockElectronic', N'The selected item is either a download, so only 1 item in the basket is required, or the item is in short supply. The quantities have been reduced to reflect this.', NULL, 1, NULL, NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Paid', N'Paid?', N'Whether an Affiliate has been paid (on affiliate_stats2.asp)', 1, N'Paid?', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_PasswordRequestAlreadySubmitted', N'A password reset request was recently sent for this email address. Please check your email.', NULL, 1, N'A password reset request was recently sent for this email address. Please check your email.', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_PasswordsMustMatch', N'The passwords must match', N'', 1, N'The passwords must match', N'KartrisLogin.ascx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_PasswordUpdated', N'Your password was updated. You can login with the new details now.', NULL, 1, N'Your password was updated. You can login with the new details now.', NULL, N'Login',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Payment', N'Payment', NULL, 1, N'Payment', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_PaymentsMade', N'Payments Made', NULL, 1, N'Payments Made', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_PaymentsMadeText', N'Payments made to you of commission earned.', NULL, 1, N'Payments made to you of commission earned.', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_PeopleWhoBought', N'People who bought this product also bought', NULL, 1, N'People who bought this product also bought', NULL, N'Products',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_PleaseWait', N'Please wait…', NULL, 1, N'Please wait…', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Po', N'Pay by PO, cheque or other offline method', NULL, 1, N'Pay by PO, cheque or other offline method', NULL, N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_PONumber', N'PO Number', NULL, 1, N'PO Number', NULL, N'Invoice',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_PreferencesChanged', N'Your preferences were changed.', NULL, 1, N'Your preferences were changed.', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_PreviousOrder', N'If you have set up an account or ordered previously, you can sign in here. Your account lets you access many features such as saving wishlists and baskets, viewing order history, receiving and viewing affiliate commission and mailing list membership.', NULL, 1, N'If you have previously made an order or have a customer account, you may login here. This will allow you see the status of order you have made and any saved shopping baskets.', NULL, N'Login',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Price', N'Price', NULL, 1, N'Price', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Proceed', N'Proceed', NULL, 1, N'Proceed', NULL, N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ProductCode', N'SKU', N'', 1, N'SKU', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ProductComparison', N'The product comparison tool allows you to compare two or more products. Products can be added to the comparison table from the category or product page. ', NULL, 1, N'To compare two or more products, add them blah blah blah do something really cool tralalal ablah lblahbalah.', NULL, N'Products',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ProductOptions', N'Product Options', N'', 1, N'', N'', N'_Options',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ProductPriceFrom', N'From ', NULL, 1, NULL, NULL, N'Products',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Products', N'Products', NULL, 1, N'Products', NULL, N'Products',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Promotion', N'Promotion', N'', 1, N'Promotion', N'', N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_PromotionDiscount', N'Promotion Discount', NULL, 1, NULL, NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_PromotionTextBuyCategory', N'Buy [X] of items from category [C]', NULL, 1.4, NULL, NULL, N'Promotions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_PromotionTextBuyProduct', N'Buy [X] of [P]', NULL, 1.4, NULL, NULL, N'Promotions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_PromotionTextBuyVersion', N'Buy [X] of version [V]', NULL, 1.4, NULL, NULL, N'Promotions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_PromotionTextGetCategoryOff', N'get [X]% off an item from category [C]', NULL, 1.4, NULL, NULL, N'Promotions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_PromotionTextGetOff', N'get [£][X] off', NULL, 1.4, NULL, NULL, N'Promotions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_PromotionTextGetProductFree', N'get [X] of [P]', NULL, 1.4, NULL, NULL, N'Promotions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_PromotionTextGetProductOff', N'get [X]% off [P]', NULL, 1.4, NULL, NULL, N'Promotions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_PromotionTextGetVersionFree', N'get [X] of [V] for free', NULL, 1.4, NULL, NULL, N'Promotions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_PromotionTextGetVersionOff', N'get [X]% off [V]', NULL, 1.4, NULL, NULL, N'Promotions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_PromotionTextSpend', N'Spend [£][X]', NULL, 1.4, NULL, NULL, N'Promotions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Qty', N'Qty', NULL, 1, N'Qty', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Quantity', N'Quantity', N'speed order label', 1, N'Quantity', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_RawDataHits', N'Hits from Affiliate Link', NULL, 1, N'Hits from Affiliate Link', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_RawDataSales', N'Sales from Affiliate Link', NULL, 1, N'Sales from Affiliate Link', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_RecentlyViewedProducts', N'Recently viewed products', N'', 1, N'Recently viewed products', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_RecoverExistingWishList', N'To create a wish list, put items in your basket and then click ''Save Wish List'' below. If you wish to edit a wish list, you can first <em>Load</em> it into your basket to make any adjustments to required items, and then click ''Edit''. Click on the name of the wishlist to view what items are on the list.', NULL, 1, N'To recover an existing wish list, enter your email address and private password below and click ''Recover''. <br /><br />To save changes to your wish list, enter your email address and private password below and click ''Save''.', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_RelatedProducts', N'Related products', N'related products subtitle', 1, N'Related Products', NULL, N'Products',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_RemindMe', N'Remind Me', NULL, 1, N'Remind Me', NULL, N'Login',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_RequiredField', N'Required!', NULL, 1, N'Required!', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ReturnToHomepage', N'Return to our homepage.', N'', 1, N'Return to our homepage.', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ReviewAdded3', N'Thank you! Your review for <strong>[itemname]</strong> was successfully received. Please be patient if it does not go live immediately.', N'', 1, N'Thank you! Your review for <strong>[itemname]</strong> was successfully received. Please be patient if it does not go live immediately.', N'', N'Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ReviewedBy', N'Reviewed by ', NULL, 1, N'Reviewed by ', NULL, N'Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_RRP', N'RRP', NULL, 1, N'RRP', NULL, N'Versions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SalesReceipt', N'Sales Receipt', N'', 1, N'Sales Receipt', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SameShippingAsBilling', N'Ship to the same address as my billing address.', N'', 1, NULL, NULL, N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SaveBasket', N'Save Basket', NULL, 1, NULL, NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SaveBasketOnCheckout', N'In you wish, we can save a copy of this basket for you. Saved baskets are listed in the My Account section, where you can quickly re-order the same basket again.', NULL, 1, NULL, NULL, N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SaveBasketYes', N'Yes, please save a copy of this basket for me.', NULL, 1, NULL, NULL, N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SavedAddresses', N'Saved Addresses', N'', 1, N'', N'', N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SaveRecoverBasketContentsDesc', N'The save/recover basket feature allows basket contents to be saved to our database. These can then be reloaded later. ', NULL, 1, N'The save/recover basket feature allows basket contents to be saved to our database. These can then be reloaded later. ', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SaveRecoverBasketContentsDesc2', N'This way, you can save several regular orders and instantly reload them to your basket. Alternatively, you might have an order you wish to pay for later, possible from a different computer.', N'DEPRECATED - unnecessary text.', 1, N'This way, you can save several regular orders and instantly reload them to your basket. Alternatively, you might have an order you wish to pay for later, possible from a different computer.', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SaveRecoverBasketDesc', N'Store and recover any number of regular orders or just your current basket contents for use later.', NULL, 1, N'Store and recover any number of regular orders or just your current basket contents for use later.', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SaveWishList', N'Save Wish List', NULL, 1, NULL, NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SaveWishListDesc', N'Create a wish list from the current contents of your shopping basket.', NULL, 1, NULL, NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Search', N'Search', N'Used in the navigation bar when browsing categories and products', 1, N'Search', N'Kartris.Master', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SearchMethodAll', N'all words', N'display text for search method (all) in the advanced search', 1.3, N'all words', N'', N'Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SearchMethodAny', N'one or more word(s)', N'display text for search method (any) in the advanced search', 1.3, N'one or more word(s)', N'', N'Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SearchMethodExact', N'exact wording or phrase', N'display text for search method (exact) in the advanced search', 1.3, N'exact wording or phrase', N'', N'Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SearchNothing', N'Your search contained only common short words or single letters which are removed prior to searching, and so no results were returned.', NULL, 1, N'Your search contained only common short words or single letters which are removed prior to searching, and so no results were returned.', NULL, N'Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SearchResults', N'Search Results', N'Used in the navigation bar when browsing categories and products', 1, N'Search Results', NULL, N'Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SearchSummaryTemplate', N'Your search for ''<strong>[searchterms]</strong>'' produced <strong>[matches]</strong> match(es)', NULL, 1, N'Your search for <strong>[searchterms]</strong> produced <strong>[matches]</strong> match(es)', NULL, N'Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SeeFriendsWishList', N'View a Friend''s Wish List', NULL, 1, N'View a Friend''s Wish List', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SeeFriendsWishList2', N'Please enter the friend''s email address and the public password to login to their wish list.', NULL, 1, N'Please enter the friend''s email address and the public password and click ''Recover''.', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SendMailsHTML', N'send mails as HTML', NULL, 1, N'send mails as HTML', NULL, N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SendMailsOff', N'no mailing list mails', NULL, 1, NULL, NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SendMailsPlain', N'send mails as plain text', NULL, 1, N'send mails as plain text', NULL, N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SendVerificationMail', N'Send a verification email to my address ', NULL, 1, NULL, NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SetAsDefault', N'Set as default', N'', 1, N'Set as default', N'', N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ShareOfHits', N'Share of Hits', NULL, 1, N'Share of Hits', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ShareOfSales', N'Share of Sales', NULL, 1, N'Share of Sales', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ShipGoodsTo', N'Shipping Destination', N'', 1, N'Shipping Destination', N'', N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ShipMethod', N'Shipping Method', NULL, 1, N'Shipping Method', NULL, N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Shipping', N'Shipping', NULL, 1, N'Shipping', NULL, N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ShippingAddress', N'Shipping Address', N'', 1, N'Shipping Address', N'', N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ShippingAvailableAfterAddress', N'Shipping options will be available once you have specified a shipping address above.', NULL, 1, N'Shipping options will be available once you have specified a shipping address above.', N'ShippingMethodsDropdown.ascx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ShippingElectronic', N'No Shipping Required', NULL, 1, NULL, NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ShippingElectronicDesc', N'No shipping costs for these items', NULL, 1, NULL, NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ShippingPickup', N'Customer Pickup', NULL, 1, N'Customer Pickup', NULL, N'Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ShippingPickupDesc', N'Collect the goods yourself to avoid shipping costs', NULL, 1, N'Collect the goods yourself to avoid shipping costs', NULL, N'Shipping',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SiteMap', N'Site Map', NULL, 1, NULL, N'sitemap.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SmallNumber', N'No.', NULL, 1, N'No.', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SomeFieldsBlank', N'You left some required fields blank', N'', 1, N'You left some required fields blank', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SpeedOrderDesc', N'If you know the product codes of the items you wish to order, please enter them in the boxes below with the required quantity.', NULL, 1, N'If you know the product codes of the items you wish to order, please enter them in the boxes below with the required quantity.', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SpeedOrderItemsDesc', N'Add items straight to your cart if you know the item''s unique code number.', NULL, 1, N'Add items straight to your cart if you know the item''s unique code number.', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_StartDate', N'Valid From', N'', 1, N'Valid From', N'CreditCardInput.ascx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Status', N'Status', NULL, 1, N'Status', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_StillRequired', N'still required', NULL, 1, N'Still required', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Stock', N'Stock', NULL, 1, NULL, NULL, N'Versions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_StoreBasketsDescRecent', N'These are recent shopping lists you''ve saved.', NULL, 1, NULL, NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SubCategories', N'Subcategories', NULL, 1, N'Subcategories', NULL, N'Categories',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SubCatsProducts', N'Subcategories & Products', N'', 1, N'Subcategories & Products', N'', N'_Kartris',1)
GO
print 'Processed 1300 total records'
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SupportExpiredMessage', N'Your premium support expired on [date].', NULL, 1, N'Your premium support expired on [date].', NULL, N'Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SupportTicketExplanation', N'Support tickets can be used to request specific support information and help, subject to the status of your account.', NULL, 1, N'Support tickets can be used to request specific support information and help, subject to the status of your account.', NULL, N'Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SupportTicketExplanation2', N'Please enter the details of your query below. Your account may be limited to specific types of support request. If your message is a reply to an existing query, please make a response to that ticket rather than opening a new one. Please note that our system ONLY sends replies to the email address associated with the account.', NULL, 1, N'Please enter the details of your query below. Your account may be limited to specific types of support request. If your message is a reply to an existing query, please make a response to that ticket rather than opening a new one. Please note that our system ONLY sends replies to the email address associated with the account.', NULL, N'Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Tax', N'Tax', N'The word ''tax''', 1, N'Tax', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_TaxWhereApp', N'Tax (where applicable)', NULL, 1, N'Tax (where applicable)', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_TemplateCategories', N'Categories', NULL, 1, N'Categories', NULL, N'Template',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_TemplateCurrency', N'Currency', NULL, 1, N'Currency', NULL, N'Template',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_TemplateLanguages', N'Language', NULL, 1, N'Language', NULL, N'Template',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_TermsAndConditions', N'<p>This is where your site''s terms and conditions goes.</p>

<p>This can be modified in your backend (site text ContentText_TermsAndConditions).</p>

<p>The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.The quick brown fox jumps over the lazy dog near the bank of the river.</p>', N'Your terms and conditions.', 1, N'This is where your site''s terms and conditions goes.

This can be modified in your backend (language string ContentText_TermsAndConditions).', NULL, N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_TermsAndConditionsCheck', N'I agree to the terms and conditions applicable to orders made on this web site', NULL, 1, N'I agree to the terms and conditions applicable to orders made on this web site', NULL, N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_TermsAndConditionsHeader', N'Terms And Conditions', NULL, 1, N'Terms And Conditions', NULL, N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_TermsAndConditionsPopup', N'View Terms And Conditions', NULL, 1, N'View Terms And Conditions', NULL, N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Thankyou', N'Thank you, your subscription to the newsletter has been confirmed.', N'Confirming their newsletter signup was successful', 1, N'Thank you, your subscription to the newsletter has been confirmed.', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ThereWereProblemsWithData', N'There were some problems with the information you entered:', NULL, 1, N'There were some problems with the information you entered:', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Ticket', N'Ticket', NULL, 1, N'Ticket', NULL, N'Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_TicketClosed', N'Closed', NULL, 1, N'Closed', NULL, N'Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_TicketIsOpen', N'Open', NULL, 1, N'Open', NULL, N'Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_TicketMessageHeader', N'Message From <strong>[user]</strong> on <strong>[date]</strong>', NULL, 1, N'Message From <strong>[user]</strong> on <strong>[date]</strong>', NULL, N'Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_TicketOpened', N'Opened', NULL, 1, N'Opened', NULL, N'Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_TicketSubject', N'Ticket Subject', NULL, 1, N'Ticket Subject', NULL, N'Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_TicketSuccessfullySubmited', N'You have successfully submited your ticket, thank you.', NULL, 1, N'You have successfully submited your ticket, thank you.', NULL, N'Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_TicketType', N'Ticket Type', NULL, 1, N'Ticket Type', NULL, N'Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ToChangeCustomerCode', N'Change password and/or other details', NULL, 1, N'Change password and/or other details', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ToLogOutOfWishList', N'Logout of this wish list', NULL, 1, N'Logout of this wish list', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_TopSellerList', N'Top Sellers', N'', 1, N'Top Sellers', N'Kartris.Master', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Total', N'Total', NULL, 1, N'Total', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_TotalInclusive', N'Total', NULL, 1, N'Total', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_TotalInclusiveDiscounted', N'Total After Discounts', NULL, 1, N'Total After Discounts', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_TotalNumberOfHits', N'Total Number of Hits', NULL, 1, N'Total Number of Hits', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_TotalOrderValue', N'Total Order Value', NULL, 1, N'Total Order Value', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ToViewAffiliateActivity', N'Affiliate activity on your account', NULL, 1, N'Affiliate activity on your account', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_TransactionFailure', N'The payment gateway refused the transaction.', N'Response after a refusal of transaction through payment gateway', 1, N'The payment gateway refused the transaction', N'callback.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_TransactionSuccess', N'Your transaction was successful.', N'Response after a successful transaction through payment gateway', 1, N'Your transaction was successful.', N'callback.aspx', N'Callback',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_TryTheseCategories', N'Try these categories', NULL, 1, N'Try these categories', NULL, N'Products',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_UnpaidSales', N'Unpaid Sales', NULL, 1, N'Unpaid Sales', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_UnpaidSalesText', N'Sales earning commission that has not been paid yet.', NULL, 1, N'Sales earning commission that has not been paid yet.', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Value', N'Value', NULL, 1, N'Value', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_VATNumberInvalid', N'The VAT number is invalid', NULL, 1, N'The VAT number is invalid', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_View', N'View', NULL, 1, N'View', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ViewAccountBalance', N'Affiliate account balance', NULL, 1, N'Affiliate account balance', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ViewCompareButton', N'Compare Products', NULL, 1, N'Compare Products', NULL, N'Products',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ViewCompareLink', N'Compare Products', NULL, 1, NULL, NULL, N'Products',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ViewProductMoreDetail', N'More Details', NULL, 1, N'More Details', NULL, N'Products',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_ViewQuantityDiscount', N'Quantity Discounts', NULL, 1, N'Quantity Discounts', NULL, N'Versions',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_WantToMailingList', N'Would you like to be added to our mailing list? This will help us to keep you informed of news and updates', NULL, 1, N'Would you like to be added to our mailing list? This will help us to keep you informed of news and updates', NULL, N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_WishListClickHere', N'click here', NULL, 1, N'click here', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_WishListEmail', N'Wish List Email', NULL, 1, N'Wish List Email', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_WishListEmailSent', N'Your wish list passwords have been sent to', NULL, 1, N'Your wish list passwords have been sent to', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_WishListFirstName', N'Owner Name', NULL, 1, N'First Name', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_WishListForDesc', N'The wish list items are shown below.', NULL, 1, N'The wish list items are shown below. Items still required are hyperlinked. Non-hyperlinked items have already been purchased.', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_WishListName', N'Wish List Name', NULL, 1, NULL, NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_WishListNotFound', N'A saved wish list matching the details you gave could not be found. Please check the email address and password are correct and try again.', NULL, 1, N'A saved wish list matching the details you gave could not be found. Please check the email address and password are correct and try again.', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_WishListPassword', N'Wish List Password', NULL, 1, N'Wish List Password', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_WishListPersonalMessage', N'Personal Message', NULL, 1, N'Personal Message', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_WishListPersonalMessageDesc', N'Greeting message for those who view your wish list', NULL, 1, N'Greeting message for those who view your wish list', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_WishListPublicPassword', N'Public Password', NULL, 1, N'Public Password', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_WishListPublicPasswordExists', N'You already have a wish list with this <label>. Each wish list you create must have a different public password.', NULL, 1, N'You already have a wish list with this <label>. Each wish list you create must have a different public password.', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_WriteReview', N'Write your own review!', NULL, 1, N'Write your own review!', NULL, N'Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_WriteReviewFirst', N'Be the first to add a review!', NULL, 1, N'Be the first to add a review!', NULL, N'Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Yes', N'Yes', N'', 1, N'Yes', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_YesAddMe', N'Yes, please add me to the mailing list', NULL, 1, N'Yes, please add me to the mailing list', NULL, N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_YourContactDetails', N'Your Contact Details', NULL, 1, N'Your Contact Details', NULL, N'ContactUs',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_YourEmail', N'Your Email', NULL, 1, N'Your Email', NULL, N'ContactUs',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_YourMessageComments', N'Your Message', NULL, 1, N'Your Message / Comment', NULL, N'ContactUs',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_YourName', N'Your Name', NULL, 1, N'Your Name', NULL, N'ContactUs',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_Address', N'Address', N'are ''you'' sure?', 1, N'Address', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_AndEnterYourInfo', N'There you can recover the list, make changes by adding or removing items from your basket, and then save it again.', NULL, 1, N'and enter your email address and private password.', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_BillingDetails', N'BILLING (CARDHOLDER) DETAILS', NULL, 1, N'BILLING (CARDHOLDER) DETAILS', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_CardIssueNumber', N'Issue Number', NULL, 1, N'Issue Number', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_CardNumber', N'Card Number', NULL, 1, N'Card Number', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_CardSecurityNumber', N'Security Number', N'Page text for the 4 digit security number sometimes found on the back of credit cards', 1, N'Security Number', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_CardType', N'Card Type', NULL, 1, N'Card Type', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_Comments', N'COMMENTS / ADDITIONAL INFORMATION', NULL, 1, N'COMMENTS / ADDITIONAL INFORMATION', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_Company', N'Company', NULL, 1, N'Company', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_ContactBasketContents', N'Basket Contents:', NULL, 1, NULL, NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_ContactDateStamp', N'Date Stamp :', NULL, 1, N'Date Stamp :', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_ContactEmail', N'Email: ', NULL, 1, N'Email: ', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_ContactEmailBreaker', N'-----------------------------------------------------------', NULL, 1, NULL, NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_ContactIP', N'IP: ', NULL, 1, N'IP: ', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_ContactName', N'Name: ', NULL, 1, N'Name: ', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_ContactStart', N'This email was sent through the contact form at', NULL, 1, N'This email was sent through the contact form at', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_CreditCardDetails', N'[card details not stored online]', NULL, 1, N'[card details not stored online]', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_CustomerCode', N'Password', N'Text for the customer code when sending an email from ordering through payment gateway', 1, N'Password:', N'Default.aspx', N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_CustomerNumber', N'Password', NULL, 1, N'Password', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_CustomerNumberDesc', N'This is your password recovery link from', N'', 1, N'This is your password  recovery link from', N'', N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_CustomerNumberSubject', N'Your password from ', NULL, 1, N'Your password from ', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_CustomerSignedUpFooter1', N'To view your account, go to ', NULL, 1, NULL, NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_CustomerSignedUpFooter2', N'. Here you can view your orders, change your password, and see any saved shopping baskets.<br /><br />

Hope to see you again soon!', NULL, 1, NULL, NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_CustomerSignedUpHeader', N'An account has been created for you on the Kartris website. If you return to our shop, use the details below to log in:', NULL, 1, NULL, NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_EcryptedCorder', N'Attachment is an encrypted order from', NULL, 1, N'Attachment is an encrypted order from', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_EmailAddress', N'Email Address: ', NULL, 1, NULL, NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_EncryptedEmailText', N'Attachment is an encrypted order from: ', NULL, 1, NULL, NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_EnquiryAnswerSoon', N'We will answer your query as soon as we can.', N'"', 1, N'We will answer your query as soon as we can.', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_EnquiryConfirm', N'This is confirmation of your enquiry to', N'"', 1, N'This is confirmation of your enquiry to', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_EnquiryCustomerEmail', N'CUSTOMER EMAIL', NULL, 1, N'CUSTOMER EMAIL', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_EnquiryCustomerQuery', N'CUSTOMER QUERY', NULL, 1, N'CUSTOMER QUERY', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_EnquiryEmailSubject', N'Confirmation of your enquiry to', NULL, 1, N'Confirmation of your enquiry to', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_EnquiryFrom', N'Enquiry from', N'This is text send through to the shop owner telling them about the enquiry', 1, N'Enquiry from', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_EnquiryMadeAt', N'The following enquiry has been made at', N'This is text sent through email when the user makes an enquiry', 1, N'The following enquiry has been made at', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_ExpiryDate', N'Expiry Date', NULL, 1, N'Expiry Date', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_IPAddress', N'IP Address', NULL, 1, N'IP Address', NULL, N'Email',1)
GO
print 'Processed 1400 total records'
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_Name', N'Name: ', NULL, 1, N'Name: ', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_NewAffiliate', N'A new affiliate has signed up. Please login to the Kartris back end and assign them an affiliate percentage to approve them and set them active.

Customer ID: <customerid>
Customer Name: <customername>
Customer Email: <customeremail>
', N'', 1, N'A new affiliate has signed up. Please login to the Kartris back end, review their application and assign them a password in order to approve them and set them active.', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_NewReview1', N'A new review has been submitted to your store:', NULL, 1, N'A new review has been submitted to your store:', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_NewReview2', N'Please log in to your backend to authorize or modify this review.', NULL, 1, N'Please log in to your backend to authorize or modify this review.', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_NewReviewTitle', N'New Review Submitted', NULL, 1, N'New Review Submitted', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_NewsletterAuthorizeFooter', N'-----------------------------------------------------------
ABOUT THIS EMAIL
-----------------------------------------------------------
This email was sent automatically in response to a request made on our web site [WEBSHOPNAME]. The IP address of the person who made the request was [IPADDRESS]. If you did not request this mail, then please ignore it - your address will not be added to any mailing list.', N'This is the core text of the footer for authorization emails sent when someone signs up to the store. The text inside the special tags should not be translated. If you did not request this mail, then please ignore it - your address will not be added to an', 1, N'-----------------------------------------------------------
ABOUT THIS EMAIL
-----------------------------------------------------------
This email was sent automatically in response to a request made on our web site [WEBSHOPNAME]. The IP address of the person who made the request was [IPADDRESS].', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_NewsletterSignup', N'Thanks for signing up for the newsletter. Please click the link below to confirm your registration. You won''t be added to the list until you confirm the registration', NULL, 1, N'Thanks for signing up for the newsletter. Please click the link below to confirm your registration. You won''t be added to the list until you confirm the registration', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_OrderEmailBreaker', N'-----------------------------------------------------------
', NULL, 1, NULL, NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_OrderLookup', N'You can check the order and your account here:', N'This text is included in the email sent of confirmation of your order', 1, N'You can check the order and your account here:', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_OrderProcessed', N'Your order has been processed:', N'Title of email when ordering through online payment gateways', 1, N'Your order has been processed:', N'Default.aspx', N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_OrderProcessedBy', N'Your Order has been processed by', NULL, 1, N'Your Order has been processed by', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_OrderReceived', N'Thank you for your order!', NULL, 1, N'Thank you for your order!', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_OrderTime', N'Your order was passed by the online payment gateway at', N'Time the order was put through - text sent to store owner when customer orders through payment gateway', 1, N'Your order was passed by the online payment gateway at', N'Default.aspx', N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_OrderTime2', N'The order was placed at', NULL, 1, N'The order was placed at', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_PaymentGatewayReturn', N'--- Return from payment gateway---', N'Title of email sending confirmation to the store owner when a customer ordered through an online payment gateway', 1, N'--- Return from payment gateway---', N'Default.aspx', N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_ProcessCurrencyExp1', N'The actual amount in the transaction currency:', NULL, 1, N'The actual amount in the transaction currency:', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_PurchaseContactDetails', N'CUSTOMER DETAILS', NULL, 1, N'CUSTOMER DETAILS', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_ReplyToMessageOn', N'Reply to message on ', NULL, 1, N'Reply to message on ', NULL, N'Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_ReturnFrom', N'return from', NULL, 1, N'return from', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_ReviewProduct', N'Product : ', NULL, 1, N'Product : ', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_ShippingDetails', N'SHIPPING DETAILS', NULL, 1, N'SHIPPING DETAILS', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_StartDate', N'Valid From', NULL, 1, N'Valid From', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_StoreEmailHeader', N'The following order was placed at your store:', NULL, 1, NULL, NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_ThisIsConfirmation', N'This is confirmation that your wish list has successfully been created at', NULL, 1, N'This is confirmation that your wish list has successfully been created at', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_ToAllowFriendsFamily', N'To allow your friends and family to view your wish list, they will need the following information:', NULL, 1, N'To allow your friends and family to view your wish list, they will need the following information:', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_ToLogIn', N'To login and make changes to your wish list, please use the private password', NULL, 1, N'To login and make changes to your wish list, please use the private password', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_ToLoginGoTo', N'To edit your list, go to the login page:', NULL, 1, N'To edit your list, go to the login page:', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_TotalSaved1', N'You have saved a total of ', NULL, 1, N'You have saved a total of ', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_TotalSaved2', N' by shopping with us!', NULL, 1, N' from shopping with us!', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_TransactionID', N'Transaction ID:', N'email text of transaction ID', 1, N'Transaction ID:', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_WishListDesc', N'These are your wish list passwords from', NULL, 1, N'These are your wish list passwords from', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_WishListPrivatePassword', N'Private Password', NULL, 1, N'Private Password', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_WishListPublicPassword', N'Public Password', NULL, 1, N'Public Password', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_WishListSubject', N'Your wish list details from', NULL, 1, N'Your wish list details from', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'EmailText_WithoutTheQuotes', N'(without the quotes)', NULL, 1, N'(without the quotes)', NULL, N'Email',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Error_ConnectionFailedText', N'Connection failed to database. Error returned:', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Error_KartrisAlreadyInstalled', N'Kartris is already installed.', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Error_OpeningWebConfig', N'Error opening web.config file. Installation cancelled.', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Error_RequiredField', N'Required Field', NULL, 1, N'Required Field', N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormButton_Add', N'Add', N'Add to basket, used on all version displays except ''single version'' display', 1, N'Add', NULL, N'Products',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormButton_Back', N'Back', N'', 1, N'Back', N'', N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormButton_Cancel', N'Cancel', N'', 1, N'Cancel', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormButton_Checkout', N'Checkout', NULL, 1, N'Checkout', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormButton_EmptyBasket', N'Empty Basket', NULL, 1, N'Empty Basket', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormButton_Login', N'Login', NULL, 1, N'Login', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormButton_LogMeIn', N'Log Me In', NULL, 1, N'Log Me In', NULL, N'Login',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormButton_MakeEnquiry', N'Make Enquiry', NULL, 1, N'Make Enquiry', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormButton_Recalculate', N'Recalculate', NULL, 1, N'Recalculate', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormButton_Remove', N'Remove', NULL, 1, N'Remove', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormButton_Submit', N'Submit', NULL, 1, N'Submit', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_AdvancedSearch', N'Advanced Search', N'', 1, N'Advanced Search', N'', N'Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_BillingAddress', N'Billing Address', N'', 1, NULL, NULL, N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_BillingCountry', N'Billing Country', N'Field name for cardholder country', 1, N'Billing Country', NULL, N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_CardHolderCompany', N'Company', NULL, 1, N'Company', NULL, N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_CardholderEUVatNum', N'VAT Number', NULL, 1, N'VAT Number', NULL, N'Invoice',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_CardHolderName', N'Cardholder''s Name', N'Field name for CD_CardholderName', 1, N'Cardholder''s Name', N'Default.aspx', N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_CardholderPostcode', N'Cardholder Postcode', N'Filed name for CD_CardHolderPostcode', 1, N'Cardholder Postcode', NULL, N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_CardHolderStreetAddress', N'Cardholder Street Address', N'Field name for CD_CardHolderStreetAddress', 1, N'Cardholder Street Address', NULL, N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_ConfirmEmail', N'Confirm Email', N'', 1, N'Confirm Email', N'KartrisLogin.ascx', N'Login',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_ConfirmPassword', N'Confirm Password', N'', 1, N'Confirm Password', N'KartrisLogin.ascx', N'Login',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_Country', N'Country', NULL, 1, N'Country', NULL, N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_CountyState', N'County/State', NULL, 1, N'County/State', NULL, N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_EmailAddress', N'Email Address', N'Field name for CD_EmailAddress and the Mailinglist page(s)', 1, N'Email Address', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_ExistingCustomerCode', N'Existing Password', N'', 1, N'Existing Password', N'CustomerDetails.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_InvoiceDate', N'Invoice Date', NULL, 1, N'Invoice Date', N'Invoice.ascx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_NewCustomerCode', N'New Password', N'', 1, N'New Password', N'CustomerDetails.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_NewCustomerCodeRepeat', N'New Password (repeat)', N'', 1, N'New Password (repeat)', N'CustomerDetails.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_Password', N'Password', NULL, 1, N'Password', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_PostCodeZip', N'Postcode/Zip', NULL, 1, N'Postcode/Zip', NULL, N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_PriceRangeFrom', N'From', N'', 1, N'From', N'', N'Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_PriceRangeTo', N'to', N'', 1, N'to', N'', N'Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_RecipientName', N'Recipient Name', NULL, 1, N'Recipient Name', NULL, N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_Recover', N'Recover', N'', 1, N'Recover', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_RememberEmail', N'Remember my email address?', NULL, 1, N'Remember my email address?', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_ReviewEmail', N'Email Address', NULL, 1, N'Email address', NULL, N'Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_ReviewLocation', N'Your Location', NULL, 1, N'Your location', NULL, N'Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_ReviewName', N'Your Name', NULL, 1, N'Your name', NULL, N'Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_ReviewRating', N'Rating', NULL, 1, N'Rating', NULL, N'Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_ReviewSectionContact', N'Your Details', NULL, 1, N'Your Details', NULL, N'Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_ReviewSectionReview', N'Your Review', NULL, 1, N'Your Review', NULL, N'Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_ReviewText', N'Your Review', NULL, 1, N'Your review', NULL, N'Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_ReviewTitle', N'Title', NULL, 1, N'Title', NULL, N'Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_Save', N'Save', NULL, 1, N'Save', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_Search', N'Search', NULL, 1, N'Search', N'Kartris.Master', N'Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_SelectPayment', N'Payment Method', NULL, 1, N'Payment Method', N'checkout.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_ShippingAddress', N'Shipping Address', NULL, 1, N'Shipping Address', NULL, N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_ShippingCompany', N'Company', N'', 1, NULL, NULL, N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_ShippingPostCodeZip', N'Shipping Postcode/Zip', NULL, 1, N'Shipping Postcode/Zip', NULL, N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_ShippingTownCity', N'Shipping Town/City', NULL, 1, N'Shipping Town/City', NULL, N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_StreetAddress', N'Street Address', NULL, 1, N'Street Address', NULL, N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_Telephone', N'Telephone', N'Field name for CD_Telephone', 1, N'Telephone', NULL, N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormLabel_TownCity', N'Town/City', NULL, 1, N'Town/City', NULL, N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'FormText_PhoneNumber', N'Phone Number', NULL, 1, N'Phone Number', NULL, N'Address',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'MainHeader.Text', N'Kartris Installation', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle.Text', N'Kartris Installation', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle_404', N'Page Not Found', N'', 1, N'', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle_AddReview', N'Add Review', NULL, 1, N'Add Review', NULL, N'Reviews',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle_Affiliates', N'Affiliates', NULL, 1, N'Affiliates', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle_CheckOut', N'Checkout', N'', 1, N'Checkout', N'checkout.aspx', N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle_ContactUs', N'Contact Us', NULL, 1, N'Contact Us', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle_ForgottenCustomerNumber', N'Forgotten your password?', N'', 1, N'Forgotten your password?', N'', N'Login',1)
GO
print 'Processed 1500 total records'
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle_Invoice', N'Invoice', NULL, 1, N'Invoice', NULL, N'Invoice',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle_Knowledgebase', N'Knowledgebase', NULL, 1, N'Knowledgebase', NULL, N'Knowledgebase',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle_LogInToSite', N'Login', N'', 1, N'Login', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle_MailingList', N'Mailing List', NULL, 1, N'Mailing List', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle_MailingListProcess', N'Mailing List Process', N'Title of a.asp ? The mailing list signup process', 1, N'Mailing List Process', N'Default.aspx', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle_MyAccount', N'My Account', NULL, 1, N'My Account', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle_OnlineCreditCardPayment', N'Checkout Complete!', N'Page title for online ordering', 1, N'Checkout - Step 4', N'', N'Callback',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle_OrderStatus', N'Order Status', NULL, 1, N'Order Status', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle_ProductComparision', N'Compare Products', NULL, 1, N'Compare Products', NULL, N'Products',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle_ProductSearch', N'Search', NULL, 1, N'Search', NULL, N'Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle_Promotions', N'Promotions', N'', 1, N'', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle_ReviewYourOrder', N'Please review your order', N'', 1, N'Please review your order', N'checkout.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle_SaveCurrentBasketContents', N'Save Current Basket Contents', NULL, 1, N'Save Current Basket Contents', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle_SaveRecoverBasketContents', N'Save Basket', NULL, 1, N'Save/Recover Basket', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle_SearchResults', N'Search Results', NULL, 1, N'Search Results', NULL, N'Search',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle_Separator', N' | ', N'', 1, N'', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle_ShoppingBasket', N'Shopping Basket', NULL, 1, N'Shopping Basket', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle_SiteNews', N'News', N'', 1, N'News', N'', N'News',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle_SpeedOrder', N'Speed Order', NULL, 1, N'Speed Order', NULL, N'Basket',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle_Support', N'Support', NULL, 1, N'Support', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle_SupportTickets', N'Support Tickets', NULL, 1, N'Support Tickets', NULL, N'Tickets',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle_WishListFor', N'Wish List For', NULL, 1, N'Wish List For', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PageTitle_WishListLogin', N'Wish Lists', NULL, 1, N'Wish Lists', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Password.Text', N'Password:', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Popup_OrderBelowMin', N'Your current order is below our minimum order value', N'Popup take that appears when you click on ''checkout'' and you don''t have enough to cover the minimum order amount', 1, N'Your current order is below our minimum order value', N'basket.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'PressNextToContinue.Text', N'Please press &#39;Next&#39; to continue.', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Security_ShopClosed', N'The shop is currently closed to customers.', NULL, 1, N'The shop is currently closed - you can view the site because you are logged in to the backend.', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step1_Header.Text', N'Step 1 - Welcome to Kartris', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step2_Error_HashKeyRequiredText', N'You need to enter a new Hash Key!', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step2_Header.Text', N'Step 2 - Hash Salt Key', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step2_litHashDesc_Text', N'Your HASH SALT key config setting is still set to default. This key is used to hash passwords in the database. Please enter in your Hash Salt key below. Don''t lose this key!', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step2_YourHashKeyAlreadySetTo', N'Your Hash Key is already set to', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step2_YourHashKeyAlreadySetTo_2', N'. Just click on the ''Next'' button if you want to keep this key. Otherwise, enter a new key.', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step3_CheckingConnection.Text', N'Checking Database Connection Details...', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step3_DatabaseName.Text', N'Database Name:', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step3_EnterDetails.Text', N'Enter correct connection details below.', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step3_Error_DatabaseNameRequired', N'Database Name is required!', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step3_Error_PasswordRequired', N'Password is required!', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step3_Error_ServerNameRequired', N'Server Name is required!', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step3_Error_UsernameRequired', N'Username is required!', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step3_FailedText', N'FAILED!', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step3_Header.Text', N'Step 3 - Connection String', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step3_ServerName.Text', N'Server Name:', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step3_Success.Text', N'Success!', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step3_SuccessText', N'SUCCESS!', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step3_UseWindowsAuthentication', N'Use Windows Authentication', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step4_AccountGenerated.Text', N'A backend account has been generated for you! Use this login to access the backend after this setup.', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step4_ConnectionSuccessful.Text', N'Connection to database successful...', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step4_DatabaseAlreadyContains.Text', N'Your database already contains the needed tables in order to run Kartris.', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step4_DatabaseNowReady.Text', N'Your database is now ready to be used for Kartris.', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step4_DatabaseSetupSuccess.Text', N'Setting up your database for Kartris use...Success!', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step4_Header.Text', N'Step 4 - Set Up Database', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step5_Error_UpdatingConfigSettingsText', N'Error updating Kartris config settings', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step5_Header.Text', N'Step 5 - Important Config Settings', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step5_litTaxRegimeDesc_Text', N'This will set the tax handling in the web.config of your store. You can change this later if necessary by editing the web.config.', NULL, 1.4, NULL, N'Install.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step5_TaxRegime_Text', N'Tax Regime', NULL, 1.4, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step6_Error_MustDownloadWebConfigText', N'You must download the modified web.config first!', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step6_Header.Text', N'Step 6 - Folder Permissions', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step6_RetryTests', N'Retry Tests', NULL, 1, N'Retry Tests', N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step6_TestingImages.Text', N'Testing ''Images'' Folder...', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step6_TestingPayment.Text', N'Testing ''Payment'' Folder...', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step6_TestingUploads.Text', N'Testing ''Uploads'' Folder...', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step7_CannotUpdateWebConfigText', N'Cannot update web.config file. Click on the ''download web.config'' button below to download a copy of the web.config file with the updated settings. You need to manually overwrite the file on your Kartris root folder.', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step7_HashSaltKey.Text', N'Hash Salt Key:', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step7_Header.Text', N'Step 7 - Review Settings', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step7_NoChangesToWebConfigText', N'None of the new settings require changes to the web.config file. Please click ''Finish'' to complete the setup.', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step7_ReviewSettingsDesc', N'The following settings will be saved to your web.config file. Click ''Finish'' to commit the changes.', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step8_Congratulations.Text', N'Congratulations, you&#39;ve successfully set up your Kartris shopping cart.', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step8_DownloadWebConfigButtonText', N'Download Web.Config', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step8_Header.Text', N'Step 8 - Setup Complete!', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step8_ReminderToUploadNewWebConfig', N'*Remember you need to upload the modified web.config first before you can start using the shop. After doing this, you may now be able to access the site using the links below.', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step8_ViewFrontEnd.Text', N'View your store front-end here.', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step8_YouCanLoginBackend.Text', N'You can log in to the backend at the following URL:', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step8_YourStore.Text', N'Your Store', NULL, 1, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'SubHeading_Information', N'Information', N'', 1, N'Information', N'', N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'SubHeading_OrderHistory', N'Order History', NULL, 1, N'Order History', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'SubHeading_ProductsOrdered', N'Downloads', NULL, 1, N'Downloads', N'Customer.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'SubHeading_Promotions', N'Promotions', NULL, 1, NULL, NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'SubHeading_StoredBaskets', N'Saved Baskets', NULL, 1, N'Saved Baskets', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'SubHeading_WishLists', N'Wish Lists', NULL, 1, NULL, NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'SubTitle_ChangeCustomerCode', N'To modify your password, please enter your old and new ones in the spaces provided.', N'', 1, N'To modify your password, please enter your existing code and your new code.', N'CustomerDetails.aspx', N'',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'SubTitle_Comments', N'Comments / Additional Information', NULL, 1, N'Comments / Additional Information', NULL, N'Checkout',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'SubTitle_CreateCustomerAccount', N'Enter the email address and password you would like to use for this account.', N'', 1, N'', N'KartrisLogin.ascx', N'Login',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PushNotifications', N'Push Notifications', NULL, 2, N'Push Notifications', NULL, N'_Logins',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_Platform', N'Platform', NULL, 2, N'Platform', NULL, N'_Logins',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_DeviceInstallID', N'Device Install ID', NULL, 2.5001, NULL, NULL, N'_Logins',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_GeneralFiles', N'General Files', NULL, 2.0001, N'General Files', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'BackMenu_GeneralFiles', N'General Files', NULL, 2.0001, N'General Files', NULL, N'_Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NavMenu', N'Navigation Menu', 'Title on the nav menu that shows in small responsive mode', 2.0003, N'Navigation Menu', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NotApplicable', N'[NOT APPLICABLE]', '', 2.5000, N'[NOT APPLICABLE]', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_BitcoinPaymentDetails', N'<p>You can pay the specified bitcoin amount using the payment address below:<br/><br/><a href="http://bitcoin.org" target="_NEW">BitCoin</a>: <b><a href="bitcoin:[bitcoinpaymentaddress]">[bitcoinpaymentaddress]</a></b><p>', 'This language string replaces the [bitcoinpaymentdetails] tag in the HTML email template if bitcoin payment is used.', 2.5000, N'<p>You can pay the specified bitcoin amount using the payment address below:<br/><br/><a href="http://bitcoin.org" target="_NEW">BitCoin</a>: <b><a href="bitcoin:[bitcoinpaymentaddress]">[bitcoinpaymentaddress]</a></b><p>', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_PasswordOptional', N'*will be autogenerated if left blank', '', 2.5000, N'*will be autogenerated if left blank', NULL, N'Kartris',1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_SetDefault', N'Set Default', '', 2.5000, N'Set Default', NULL, N'_Kartris',1);
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step5_DefaultCurrency_Text', N'Default Currency', NULL, 2.5000, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'Step5_litDefaultCurrencyDesc_Text', N'This will set the default currency in your store. You can change this later if necessary from the currencies page in Kartris administration.', NULL, 2.5000, NULL, N'Install.aspx', NULL,1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_StockTrackingOptionsClarification', N'*Applies to combinations, if combinations product.', NULL, 1, N'*Applies to combinations, if combinations product.', NULL, N'_Version',1);
/****** 2.9002 Original Order Text ******/
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OriginalOrderText', N'Original Order Text', NULL, 2.9002, N'Original Order Text', NULL, N'_Orders',1);
GO
/****** Object:  Table [dbo].[tblKartrisPromotions]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisPromotions](
	[PROM_ID] [int] IDENTITY(1,1) NOT NULL,
	[PROM_StartDate] [smalldatetime] NOT NULL,
	[PROM_EndDate] [smalldatetime] NOT NULL,
	[PROM_Live] [bit] NOT NULL,
	[PROM_OrderByValue] [smallint] NULL,
	[PROM_MaxQuantity] [tinyint] NULL,
 CONSTRAINT [PK_tblKartrisPromotions2] PRIMARY KEY CLUSTERED 
(
	[PROM_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisShippingMethods]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisShippingMethods](
	[SM_ID] [tinyint] IDENTITY(1,1) NOT NULL,
	[SM_Live] [bit] NOT NULL,
	[SM_OrderByValue] [tinyint] NULL,
	[SM_Tax] [tinyint] NULL,
	[SM_Tax2] [tinyint] NULL,
 CONSTRAINT [aaaaatblKartrisShippingMethods_PK] PRIMARY KEY NONCLUSTERED 
(
	[SM_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE UNIQUE CLUSTERED INDEX [idxSM_ID] ON [dbo].[tblKartrisShippingMethods] 
(
	[SM_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [SM_ID] ON [dbo].[tblKartrisShippingMethods] 
(
	[SM_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
SET IDENTITY_INSERT [dbo].[tblKartrisShippingMethods] ON
INSERT [dbo].[tblKartrisShippingMethods] ([SM_ID], [SM_Live], [SM_OrderByValue], [SM_Tax], [SM_Tax2]) VALUES (1, 1, 0, 2, NULL)
INSERT [dbo].[tblKartrisShippingMethods] ([SM_ID], [SM_Live], [SM_OrderByValue], [SM_Tax], [SM_Tax2]) VALUES (2, 1, 0, 2, NULL)
INSERT [dbo].[tblKartrisShippingMethods] ([SM_ID], [SM_Live], [SM_OrderByValue], [SM_Tax], [SM_Tax2]) VALUES (3, 1, 0, 2, NULL)
INSERT [dbo].[tblKartrisShippingMethods] ([SM_ID], [SM_Live], [SM_OrderByValue], [SM_Tax], [SM_Tax2]) VALUES (4, 0, 0, 2, NULL)
SET IDENTITY_INSERT [dbo].[tblKartrisShippingMethods] OFF
/****** Object:  Table [dbo].[tblKartrisClonedOrders]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisClonedOrders](
	[CO_OrderID] [int] NOT NULL,
	[CO_ParentOrderID] [int] NULL,
	[CO_CloneDate] [smalldatetime] NULL,
	[CO_LoginID] [smallint] NULL,
 CONSTRAINT [PK_tblKartrisClonedOrders] PRIMARY KEY CLUSTERED 
(
	[CO_OrderID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisQuantityDiscounts]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisQuantityDiscounts](
	[QD_VersionID] [bigint] NOT NULL,
	[QD_Quantity] [real] NOT NULL,
	[QD_Price] DECIMAL(18,4) NOT NULL,
 CONSTRAINT [PK_tblKartrisQuantityDiscounts] PRIMARY KEY CLUSTERED 
(
	[QD_VersionID] ASC,
	[QD_Quantity] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [QD_VersionID] ON [dbo].[tblKartrisQuantityDiscounts] 
(
	[QD_VersionID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisUsers]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisUsers](
	[U_ID] [int] IDENTITY(1,1) NOT NULL,
	[U_EmailAddress] [nvarchar](100) NULL,
	[U_Telephone] [nvarchar](50) NULL,
	[U_Password] [nvarchar](64) NULL,
	[U_TempPassword] [nvarchar](64) NULL,
	[U_TempPasswordExpiry] [datetime] NULL,
	[U_CustomerDiscount] [real] NULL,
	[U_DefBillingAddressID] [int] NULL,
	[U_DefShippingAddressID] [int] NULL,
	[U_AccountHolderName] [nvarchar](50) NULL,
	[U_CardholderEUVATNum] [nvarchar](15) NULL,
	[U_Card_Number] [nvarchar](20) NULL,
	[U_Card_Type] [nvarchar](30) NULL,
	[U_Card_StartDate] [nvarchar](10) NULL,
	[U_Card_Expiry] [nvarchar](10) NULL,
	[U_Card_IssueNumber] [nvarchar](10) NULL,
	[U_Card_SecurityNumber] [nvarchar](5) NULL,
	[U_AffiliateID] [int] NULL,
	[U_Approved] [bit] NULL,
	[U_CustomerGroupiD] [int] NULL,
	[U_IsAffiliate] [bit] NULL,
	[U_AffiliateCommission] [real] NULL,
	[U_LanguageID] [int] NULL,
	[U_ML_SignupDateTime] [datetime] NULL,
	[U_ML_SignupIP] [nvarchar](20) NULL,
	[U_ML_ConfirmationDateTime] [datetime] NULL,
	[U_ML_ConfirmationIP] [nvarchar](20) NULL,
	[U_ML_RandomKey] [nvarchar](20) NULL,
	[U_ML_Format] [nvarchar](1) NULL,
	[U_ML_SendMail] [bit] NULL,
	[U_QBListID] [nvarchar](50) NULL,
	[U_SupportEndDate] [datetime] NULL,
	[U_Notes] [nvarchar](max) NULL,
	[U_CustomerBalance] [real] NULL,
	[U_SaltValue] [nvarchar](64) NULL,
 CONSTRAINT [aaaaatblKartrisCustomers_PK] PRIMARY KEY NONCLUSTERED 
(
	[U_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE UNIQUE CLUSTERED INDEX [idxU_ID] ON [dbo].[tblKartrisUsers] 
(
	[U_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [C_CustomerGroupiD] ON [dbo].[tblKartrisUsers] 
(
	[U_CustomerGroupiD] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [C_LanguageID] ON [dbo].[tblKartrisUsers] 
(
	[U_LanguageID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [CD_AffiliateID] ON [dbo].[tblKartrisUsers] 
(
	[U_AffiliateID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [CD_CardholderEUVATNum] ON [dbo].[tblKartrisUsers] 
(
	[U_CardholderEUVATNum] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [CD_ID] ON [dbo].[tblKartrisUsers] 
(
	[U_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE UNIQUE NONCLUSTERED INDEX [U_EmailAddress] ON [dbo].[tblKartrisUsers]
(
	[U_EmailAddress] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisOrders]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisOrders](
	[O_ID] [int] IDENTITY(1,1) NOT NULL,
	[O_CustomerID] [int] NULL,
	[O_Details] [nvarchar](max) NULL,
	[O_ShippingPrice] DECIMAL(18,4) NULL,
	[O_ShippingTax] DECIMAL(18,4) NULL,
	[O_DiscountPercentage] DECIMAL(18,4) NULL,
	[O_AffiliatePercentage] DECIMAL(18,4) NULL,
	[O_TotalPrice] DECIMAL(18,4) NULL,
	[O_Date] [smalldatetime] NULL,
	[O_PurchaseOrderNo] [nvarchar](50) NULL,
	[O_SecurityID] [int] NULL,
	[O_Sent] [bit] NULL,
	[O_Invoiced] [bit] NULL,
	[O_Shipped] [bit] NULL,
	[O_Paid] [bit] NULL,
	[O_Status] [nvarchar](max) NULL,
	[O_LastModified] [smalldatetime] NULL,
	[O_WishListID] [int] NULL,
	[O_CouponCode] [nvarchar](25) NULL,
	[O_CouponDiscountTotal] [real] NULL,
	[O_PricesIncTax] [bit] NULL,
	[O_TaxDue] DECIMAL(18,4) NULL,
	[O_PaymentGateWay] [nvarchar](20) NULL,
	[O_ReferenceCode] [nvarchar](100) NULL,
	[O_LanguageID] [tinyint] NULL,
	[O_CurrencyID] [tinyint] NULL,
	[O_TotalPriceGateway] DECIMAL(18,4) NULL,
	[O_CurrencyIDGateway] [tinyint] NULL,
	[O_AffiliatePaymentID] [int] NULL,
	[O_AffiliateTotalPrice] DECIMAL(18,4) NULL,
	[O_SendOrderUpdateEmail] [bit] NULL,
	[O_OrderHandlingCharge] DECIMAL(18,4) NULL,
	[O_OrderHandlingChargeTax] DECIMAL(18,4) NULL,
	[O_CurrencyRate] DECIMAL(18,8) NULL,
	[O_ShippingMethod] [nvarchar](255) NULL,
	[O_BillingAddress] [nvarchar](255) NULL,
	[O_ShippingAddress] [nvarchar](255) NULL,
	[O_PromotionDiscountTotal] DECIMAL(18,4) NULL,
	[O_PromotionDescription] [nvarchar](255) NULL,
	[O_SentToQB] [bit] NULL,
	[O_Notes] [nvarchar](max) NULL,
	[O_Data] [nvarchar](max) NULL,
	[O_Comments] [nvarchar](max) NULL,
	[O_Cancelled] [bit] NULL,
 CONSTRAINT [aaaaatblKartrisOrders_PK] PRIMARY KEY NONCLUSTERED 
(
	[O_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE CLUSTERED INDEX [_dta_index_tblKartrisOrders_c_5_1322487790__K1D_K2_K25_K26] ON [dbo].[tblKartrisOrders] 
(
	[O_ID] DESC,
	[O_CustomerID] ASC,
	[O_LanguageID] ASC,
	[O_CurrencyID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [_dta_index_tblKartrisOrders_5_1322487790__K1D_2_8_9_12_13_14_15_25_26_36] ON [dbo].[tblKartrisOrders] 
(
	[O_ID] DESC
)
INCLUDE ( [O_Sent],
[O_Shipped],
[O_TotalPrice],
[O_LanguageID],
[O_Paid],
[O_CustomerID],
[O_Date],
[O_Invoiced],
[O_BillingAddress],
[O_CurrencyID]) WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [CN_ID] ON [dbo].[tblKartrisOrders] 
(
	[O_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ON_AffiliatePaid] ON [dbo].[tblKartrisOrders] 
(
	[O_AffiliatePaymentID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ON_CardholderID] ON [dbo].[tblKartrisOrders] 
(
	[O_CustomerID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ON_CouponCode] ON [dbo].[tblKartrisOrders] 
(
	[O_CouponCode] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ON_CurrencyDefaultID] ON [dbo].[tblKartrisOrders] 
(
	[O_CurrencyIDGateway] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ON_LanguageID] ON [dbo].[tblKartrisOrders] 
(
	[O_LanguageID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ON_ReferenceCode] ON [dbo].[tblKartrisOrders] 
(
	[O_ReferenceCode] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Index [idxOrderStatus]    Script Date: 2015-11-17 10:44:08 ******/
/* This creates an index incorporating the order status fields. Without this
the order count used when displaying orders list in the back end can run slowly
when there are huge numbers of orders. With this, it's zippy, even with 100s of
1000s of orders */
CREATE NONCLUSTERED INDEX [idxOrderStatus] ON [dbo].[tblKartrisOrders]
(
	[O_Sent] ASC,
	[O_Invoiced] ASC,
	[O_Shipped] ASC,
	[O_Paid] ASC,
	[O_Cancelled] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [idxOrderDate]    Script Date: 2015-11-21 14:13:56 ******/
/* This creates an index of the order date field, without which the date
search for orders in the back end can be very slow on sites with huge numbers
of orders */
CREATE NONCLUSTERED INDEX [idxOrderDate] ON [dbo].[tblKartrisOrders]
(
	[O_Date] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO
/****** Object:  Table [dbo].[tblKartrisShippingZones]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisShippingZones](
	[SZ_ID] [tinyint] IDENTITY(1,1) NOT NULL,
	[SZ_Live] [bit] NOT NULL,
	[SZ_OrderByValue] [tinyint] NULL,
 CONSTRAINT [aaaaatblKartrisShippingZones_PK] PRIMARY KEY NONCLUSTERED 
(
	[SZ_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE UNIQUE CLUSTERED INDEX [idxSZ_ID] ON [dbo].[tblKartrisShippingZones] 
(
	[SZ_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
SET IDENTITY_INSERT [dbo].[tblKartrisShippingZones] ON
INSERT [dbo].[tblKartrisShippingZones] ([SZ_ID], [SZ_Live], [SZ_OrderByValue]) VALUES (1, 1, 1)
INSERT [dbo].[tblKartrisShippingZones] ([SZ_ID], [SZ_Live], [SZ_OrderByValue]) VALUES (2, 1, 2)
INSERT [dbo].[tblKartrisShippingZones] ([SZ_ID], [SZ_Live], [SZ_OrderByValue]) VALUES (3, 1, 3)
INSERT [dbo].[tblKartrisShippingZones] ([SZ_ID], [SZ_Live], [SZ_OrderByValue]) VALUES (4, 1, 4)
INSERT [dbo].[tblKartrisShippingZones] ([SZ_ID], [SZ_Live], [SZ_OrderByValue]) VALUES (5, 1, 5)
INSERT [dbo].[tblKartrisShippingZones] ([SZ_ID], [SZ_Live], [SZ_OrderByValue]) VALUES (9, 0, 0)
SET IDENTITY_INSERT [dbo].[tblKartrisShippingZones] OFF
/****** Object:  Table [dbo].[tblKartrisShippingRates]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisShippingRates](
	[S_ID] [smallint] IDENTITY(1,1) NOT NULL,
	[S_ShippingMethodID] [tinyint] NOT NULL,
	[S_ShippingZoneID] [tinyint] NOT NULL,
	[S_Boundary] DECIMAL(22,4) NOT NULL,
	[S_ShippingRate] DECIMAL(18,4) NOT NULL,
	[S_ShippingGateways] [nvarchar](255) NULL,
 CONSTRAINT [aaaaatblKartrisShippingRates_PK] PRIMARY KEY NONCLUSTERED 
(
	[S_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY],
 CONSTRAINT [uniqe_ShippingRates] UNIQUE NONCLUSTERED 
(
	[S_ShippingMethodID] ASC,
	[S_ShippingZoneID] ASC,
	[S_Boundary] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE UNIQUE CLUSTERED INDEX [idxS_ID] ON [dbo].[tblKartrisShippingRates] 
(
	[S_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
SET IDENTITY_INSERT [dbo].[tblKartrisShippingRates] ON
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (1, 1, 1, 70, 0, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (2, 1, 1, 10, 0, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (3, 1, 1, 50, 0, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (4, 1, 1, 999999999999999, 0, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (6, 1, 2, 15, 2.45, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (7, 1, 2, 50, 3.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (9, 1, 2, 100, 4.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (10, 1, 2, 999999999999999, 0, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (12, 1, 3, 15, 11.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (13, 1, 3, 50, 17.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (14, 1, 3, 100, 23.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (15, 1, 3, 999999999999999, 100, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (16, 2, 1, 5, 1.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (17, 2, 1, 10, 2.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (18, 2, 1, 50, 3.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (19, 2, 1, 100, 4.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (20, 2, 1, 999999999999999, 5.45, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (21, 2, 2, 5, 1.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (22, 2, 2, 10, 2.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (23, 2, 2, 50, 3.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (24, 2, 2, 100, 4.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (25, 2, 2, 999999999999999, 5.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (26, 2, 3, 5, 4.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (27, 2, 3, 10, 6.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (28, 2, 3, 50, 9.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (29, 2, 3, 100, 12.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (30, 2, 3, 999999999999999, 0, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (31, 3, 1, 5, 14.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (32, 3, 1, 10, 19.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (33, 3, 1, 50, 25.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (34, 3, 1, 100, 49.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (35, 3, 1, 999999999999999, 54.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (36, 3, 2, 5, 14.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (37, 3, 2, 10, 19.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (38, 3, 2, 50, 25.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (39, 3, 2, 100, 54.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (40, 3, 2, 999999999999999, 59.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (41, 4, 1, 0, 0, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (42, 4, 2, 0, 0, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (43, 4, 3, 0, 0, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (44, 1, 4, 5, 9.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (45, 1, 4, 15, 15.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (46, 1, 4, 50, 19.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (47, 1, 4, 100, 19.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (48, 1, 4, 999999999999999, 0, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (49, 1, 5, 5, 9.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (50, 1, 5, 15, 15.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (51, 1, 5, 50, 17.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (52, 1, 5, 100, 19.95, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (53, 1, 5, 999999999999999, 0, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (54, 4, 4, 0, 0, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (55, 4, 5, 0, 0, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (70, 2, 1, 75, 4.15, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (71, 1, 9, 999999999999999, 0, NULL)
INSERT [dbo].[tblKartrisShippingRates] ([S_ID], [S_ShippingMethodID], [S_ShippingZoneID], [S_Boundary], [S_ShippingRate], [S_ShippingGateways]) VALUES (74, 1, 3, 5, 10.5, NULL)
SET IDENTITY_INSERT [dbo].[tblKartrisShippingRates] OFF
/****** Object:  View [dbo].[vKartrisObjectConfigValues]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vKartrisObjectConfigValues]
AS
SELECT     dbo.tblKartrisObjectConfig.OC_ObjectType, dbo.tblKartrisObjectConfigValue.OCV_ParentID, dbo.tblKartrisObjectConfig.OC_Name, 
					  dbo.tblKartrisObjectConfigValue.OCV_Value
FROM         dbo.tblKartrisObjectConfig INNER JOIN
					  dbo.tblKartrisObjectConfigValue ON dbo.tblKartrisObjectConfig.OC_ID = dbo.tblKartrisObjectConfigValue.OCV_ObjectConfigID
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
	  Begin PaneConfiguration = 0
		 NumPanes = 4
		 Configuration = "(H (1[40] 4[20] 2[20] 3) )"
	  End
	  Begin PaneConfiguration = 1
		 NumPanes = 3
		 Configuration = "(H (1 [50] 4 [25] 3))"
	  End
	  Begin PaneConfiguration = 2
		 NumPanes = 3
		 Configuration = "(H (1 [50] 2 [25] 3))"
	  End
	  Begin PaneConfiguration = 3
		 NumPanes = 3
		 Configuration = "(H (4 [30] 2 [40] 3))"
	  End
	  Begin PaneConfiguration = 4
		 NumPanes = 2
		 Configuration = "(H (1 [56] 3))"
	  End
	  Begin PaneConfiguration = 5
		 NumPanes = 2
		 Configuration = "(H (2 [66] 3))"
	  End
	  Begin PaneConfiguration = 6
		 NumPanes = 2
		 Configuration = "(H (4 [50] 3))"
	  End
	  Begin PaneConfiguration = 7
		 NumPanes = 1
		 Configuration = "(V (3))"
	  End
	  Begin PaneConfiguration = 8
		 NumPanes = 3
		 Configuration = "(H (1[56] 4[18] 2) )"
	  End
	  Begin PaneConfiguration = 9
		 NumPanes = 2
		 Configuration = "(H (1 [75] 4))"
	  End
	  Begin PaneConfiguration = 10
		 NumPanes = 2
		 Configuration = "(H (1[66] 2) )"
	  End
	  Begin PaneConfiguration = 11
		 NumPanes = 2
		 Configuration = "(H (4 [60] 2))"
	  End
	  Begin PaneConfiguration = 12
		 NumPanes = 1
		 Configuration = "(H (1) )"
	  End
	  Begin PaneConfiguration = 13
		 NumPanes = 1
		 Configuration = "(V (4))"
	  End
	  Begin PaneConfiguration = 14
		 NumPanes = 1
		 Configuration = "(V (2))"
	  End
	  ActivePaneConfig = 0
   End
   Begin DiagramPane = 
	  Begin Origin = 
		 Top = 0
		 Left = 0
	  End
	  Begin Tables = 
		 Begin Table = "tblKartrisObjectConfig"
			Begin Extent = 
			   Top = 6
			   Left = 38
			   Bottom = 187
			   Right = 214
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisObjectConfigValue"
			Begin Extent = 
			   Top = 6
			   Left = 252
			   Bottom = 123
			   Right = 442
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
	  End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
	  Begin ParameterDefaults = ""
	  End
	  Begin ColumnWidths = 9
		 Width = 284
		 Width = 1485
		 Width = 1380
		 Width = 1755
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
	  End
   End
   Begin CriteriaPane = 
	  Begin ColumnWidths = 11
		 Column = 1440
		 Alias = 900
		 Table = 1170
		 Output = 720
		 Append = 1400
		 NewValue = 1170
		 SortType = 1350
		 SortOrder = 1410
		 GroupBy = 1350
		 Filter = 1350
		 Or = 1350
		 Or = 1350
		 Or = 1350
	  End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisObjectConfigValues'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisObjectConfigValues'
GO
/****** Object:  View [dbo].[vKartrisLanguageElementTypesFields]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vKartrisLanguageElementTypesFields]
AS
SELECT     dbo.tblKartrisLanguageElementTypeFields.LET_ID, dbo.tblKartrisLanguageElementTypes.LET_Name, dbo.tblKartrisLanguageElementTypeFields.LEFN_ID, 
					  dbo.tblKartrisLanguageElementFieldNames.LEFN_Name, dbo.tblKartrisLanguageElementFieldNames.LEFN_DisplayText, 
					  dbo.tblKartrisLanguageElementFieldNames.LEFN_CssClass, dbo.tblKartrisLanguageElementTypeFields.LEFN_IsMandatory, 
					  dbo.tblKartrisLanguageElementFieldNames.LEFN_IsMultiLine, dbo.tblKartrisLanguageElementFieldNames.LEFN_UseHTMLEditor
FROM         dbo.tblKartrisLanguageElementTypeFields INNER JOIN
					  dbo.tblKartrisLanguageElementFieldNames ON dbo.tblKartrisLanguageElementTypeFields.LEFN_ID = dbo.tblKartrisLanguageElementFieldNames.LEFN_ID INNER JOIN
					  dbo.tblKartrisLanguageElementTypes ON dbo.tblKartrisLanguageElementTypeFields.LET_ID = dbo.tblKartrisLanguageElementTypes.LET_ID
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
	  Begin PaneConfiguration = 0
		 NumPanes = 4
		 Configuration = "(H (1[22] 4[24] 2[8] 3) )"
	  End
	  Begin PaneConfiguration = 1
		 NumPanes = 3
		 Configuration = "(H (1 [50] 4 [25] 3))"
	  End
	  Begin PaneConfiguration = 2
		 NumPanes = 3
		 Configuration = "(H (1 [50] 2 [25] 3))"
	  End
	  Begin PaneConfiguration = 3
		 NumPanes = 3
		 Configuration = "(H (4 [30] 2 [40] 3))"
	  End
	  Begin PaneConfiguration = 4
		 NumPanes = 2
		 Configuration = "(H (1 [56] 3))"
	  End
	  Begin PaneConfiguration = 5
		 NumPanes = 2
		 Configuration = "(H (2 [66] 3))"
	  End
	  Begin PaneConfiguration = 6
		 NumPanes = 2
		 Configuration = "(H (4 [50] 3))"
	  End
	  Begin PaneConfiguration = 7
		 NumPanes = 1
		 Configuration = "(V (3))"
	  End
	  Begin PaneConfiguration = 8
		 NumPanes = 3
		 Configuration = "(H (1[56] 4[18] 2) )"
	  End
	  Begin PaneConfiguration = 9
		 NumPanes = 2
		 Configuration = "(H (1 [75] 4))"
	  End
	  Begin PaneConfiguration = 10
		 NumPanes = 2
		 Configuration = "(H (1[66] 2) )"
	  End
	  Begin PaneConfiguration = 11
		 NumPanes = 2
		 Configuration = "(H (4 [60] 2))"
	  End
	  Begin PaneConfiguration = 12
		 NumPanes = 1
		 Configuration = "(H (1) )"
	  End
	  Begin PaneConfiguration = 13
		 NumPanes = 1
		 Configuration = "(V (4))"
	  End
	  Begin PaneConfiguration = 14
		 NumPanes = 1
		 Configuration = "(V (2))"
	  End
	  ActivePaneConfig = 0
   End
   Begin DiagramPane = 
	  Begin Origin = 
		 Top = 0
		 Left = 0
	  End
	  Begin Tables = 
		 Begin Table = "tblKartrisLanguageElementTypeFields"
			Begin Extent = 
			   Top = 20
			   Left = 244
			   Bottom = 122
			   Right = 528
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisLanguageElementFieldNames"
			Begin Extent = 
			   Top = 0
			   Left = 647
			   Bottom = 127
			   Right = 954
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisLanguageElementTypes"
			Begin Extent = 
			   Top = 6
			   Left = 38
			   Bottom = 93
			   Right = 198
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
	  End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
	  Begin ParameterDefaults = ""
	  End
	  Begin ColumnWidths = 10
		 Width = 284
		 Width = 1500
		 Width = 2100
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1755
		 Width = 2025
		 Width = 1500
		 Width = 1665
	  End
   End
   Begin CriteriaPane = 
	  Begin ColumnWidths = 11
		 Column = 8640
		 Alias = 900
		 Table = 1170
		 Output = 720
		 Append = 1400
		 NewValue = 1170
		 SortType = 1350
		 SortOrder = 1410
		 GroupBy = 1350
		 Filter = 1350
		 Or = 1350
		 Or = 1350
		 Or = 1350
	  End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisLanguageElementTypesFields'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisLanguageElementTypesFields'
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPayments_Update]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: 31-10-2011
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisPayments_Update]
(
		   @Payment_ID int,
		   @Payment_CustomerID int,
		   @Payment_Date smalldatetime,
		   @Payment_Amount DECIMAL(18,4),
		   @Payment_CurrencyID tinyint,
		   @Payment_ReferenceNo nvarchar(100),
		   @Payment_GateWay nvarchar(20),
		   @Payment_CurrencyRate DECIMAL(18,4)
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT OFF;


	UPDATE [tblKartrisPayments] SET [Payment_CustomerID] = @Payment_CustomerID
								   ,[Payment_Date] =  @Payment_Date
								   ,[Payment_Amount] = @Payment_Amount
								   ,[Payment_CurrencyID] = @Payment_CurrencyID
								   ,[Payment_ReferenceNo] =@Payment_ReferenceNo
								   ,[Payment_Gateway] = @Payment_Gateway
								   ,[Payment_CurrencyRate] = @Payment_CurrencyRate
		WHERE Payment_ID = @Payment_ID;
	Select @Payment_ID;
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPayments_GetUserTotal]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisPayments_GetUserTotal]
(
	@CustomerID as int
)
AS
BEGIN

	SELECT Sum(Payment_Amount / Payment_CurrencyRate) as TotalValue
	FROM dbo.tblKartrisPayments WHERE Payment_CustomerID = @CustomerID
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPayments_GetLinkedOrders]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisPayments_GetLinkedOrders]
(
		   @Payment_ID int
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT     tblKartrisOrderPaymentLink.*, tblKartrisOrders.O_TotalPrice, 
					  tblKartrisOrders.O_CurrencyID
FROM         tblKartrisOrderPaymentLink LEFT OUTER JOIN
					  tblKartrisOrders ON tblKartrisOrderPaymentLink.OP_OrderID = tblKartrisOrders.O_ID
WHERE     (tblKartrisOrderPaymentLink.OP_PaymentID = @Payment_ID)
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPayments_GetFilteredList_s]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: 31-10-2011
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisPayments_GetFilteredList_s]
(
		   @FilterType as nvarchar(1),
		   @Payment_Gateway nvarchar(20),
		   @Payment_Date smalldatetime
		   )
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	IF @FilterType = 'a'
	BEGIN
		SELECT count(1) FROM [tblKartrisPayments]
	END
	
	ELSE IF @FilterType = 'd'
	BEGIN
		SELECT count(1) FROM [tblKartrisPayments] WHERE Payment_Date = @Payment_Date 
	END
	
	ELSE IF @FilterType = 'g'
	BEGIN
		SELECT count(1) FROM [tblKartrisPayments] WHERE Payment_Gateway = @Payment_Gateway
	END				
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPayments_GetFilteredList]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: 31-10-2011
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisPayments_GetFilteredList]
(
		   @FilterType as nvarchar(1),
		   @Payment_Gateway nvarchar(20),
		   @Payment_Date smalldatetime,
		   @PageIndex as tinyint, -- 0 Based index
		   @Limit smallint = 50
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	DECLARE @StartRowNumber as int;
	SET @StartRowNumber = (@PageIndex * @Limit) + 1;
	DECLARE @EndRowNumber as int;
	SET @EndRowNumber = @StartRowNumber + @Limit - 1;

	IF @FilterType = 'a'
	BEGIN
		WITH PaymentsList AS (SELECT ROW_NUMBER() OVER (ORDER BY Payment_ID DESC) AS SortRow,tblKartrisPayments.*,
		tblKartrisUsers.U_AccountHolderName FROM tblKartrisPayments LEFT OUTER JOIN tblKartrisUsers ON 
		tblKartrisPayments.Payment_CustomerID = tblKartrisUsers.U_ID)
		SELECT * FROM PaymentsList WHERE SortRow BETWEEN @StartRowNumber AND @EndRowNumber;
	END
	
	ELSE IF @FilterType = 'd'
	BEGIN
		WITH PaymentsList AS (SELECT ROW_NUMBER() OVER (ORDER BY Payment_ID DESC) AS SortRow,tblKartrisPayments.*,
		tblKartrisUsers.U_AccountHolderName FROM tblKartrisPayments LEFT OUTER JOIN tblKartrisUsers ON 
		tblKartrisPayments.Payment_CustomerID = tblKartrisUsers.U_ID
		--WHERE Payment_Date >= @Payment_DateRangeStart AND Payment_Date <= @Payment_DateRangeEnd)
		WHERE Payment_Date = @Payment_Date)
		SELECT * FROM PaymentsList WHERE SortRow BETWEEN @StartRowNumber AND @EndRowNumber;
	END
	
	ELSE IF @FilterType = 'g'
	BEGIN
		WITH PaymentsList AS (SELECT ROW_NUMBER() OVER (ORDER BY Payment_ID DESC) AS SortRow,tblKartrisPayments.*,
		tblKartrisUsers.U_AccountHolderName FROM tblKartrisPayments LEFT OUTER JOIN tblKartrisUsers ON 
		tblKartrisPayments.Payment_CustomerID = tblKartrisUsers.U_ID WHERE Payment_Gateway = @Payment_Gateway)
		SELECT * FROM PaymentsList WHERE SortRow BETWEEN @StartRowNumber AND @EndRowNumber;
	END				
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPayments_GetCustomerTotal]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisPayments_GetCustomerTotal]
(
	@CustomerID as int
)
AS
BEGIN

	SELECT Sum(Payment_Amount / Payment_CurrencyRate) as TotalValue
	FROM dbo.tblKartrisPayments WHERE Payment_CustomerID = @CustomerID
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPayments_GetByCustomerID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisPayments_GetByCustomerID]
(
		   @Payment_CustomerID int
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT * FROM tblKartrisPayments WHERE Payment_CustomerID = @Payment_CustomerID ORDER BY Payment_ID DESC;
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPayments_Get]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisPayments_Get]
(
		   @Payment_ID int
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT * FROM tblKartrisPayments WHERE Payment_ID = @Payment_ID;
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPayments_DeleteLinkedOrders]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisPayments_DeleteLinkedOrders]
(
		   @OP_PaymentID int
)
AS
BEGIN
	
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT OFF;

	
	DELETE FROM [tblKartrisOrderPaymentLink] WHERE [OP_PaymentID] = @OP_PaymentID
	SELECT @OP_PaymentID;
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPayments_Delete]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisPayments_Delete]
(
		   @Payment_ID int
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT OFF;

		
		DELETE FROM [tblKartrisPayments] WHERE Payment_ID = @Payment_ID;
		DELETE FROM dbo.tblKartrisOrderPaymentLink WHERE OP_PaymentID = @Payment_ID;

	SELECT @Payment_ID;

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPayments_AddLinkedOrder]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisPayments_AddLinkedOrder]
(
		   @OP_PaymentID int,
		   @OP_OrderID int,
		   @OP_OrderCanceled bit
)
AS
BEGIN
	
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT OFF;

	
	INSERT INTO [tblKartrisOrderPaymentLink]
		   ([OP_PaymentID]
		   ,[OP_OrderID]
		   ,[OP_OrderCanceled])
	 VALUES
		   (@OP_PaymentID,@OP_OrderID,@OP_OrderCanceled)

	SELECT @OP_PaymentID;
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPayments_Add]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: 31-10-2011
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisPayments_Add]
(
		   @Payment_CustomerID int,
		   @Payment_Date smalldatetime,
		   @Payment_Amount real,
		   @Payment_CurrencyID tinyint,
		   @Payment_ReferenceNo nvarchar(100),
		   @Payment_GateWay nvarchar(20),
		   @Payment_CurrencyRate real
)
AS
BEGIN
	DECLARE @Payment_ID INT
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT OFF;

	
	INSERT INTO [tblKartrisPayments]
		   ([Payment_CustomerID]
		   ,[Payment_Date]
		   ,[Payment_Amount]
		   ,[Payment_CurrencyID]
		   ,[Payment_ReferenceNo]
		   ,[Payment_Gateway]
		   ,[Payment_CurrencyRate]
		   )
	 VALUES
		   (@Payment_CustomerID,
		   @Payment_Date,
		   @Payment_Amount,
		   @Payment_CurrencyID,
		   @Payment_ReferenceNo,
		   @Payment_GateWay,
		   @Payment_CurrencyRate)

	SET @Payment_ID = SCOPE_IDENTITY();
	SELECT @Payment_ID;
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPages_Update]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisPages_Update]
(
	@Page_ID as smallint,
	@Page_Name as nvarchar(50),
	@Page_ParentID as smallint,
	@Page_Live as bit,
	@NowOffset as datetime
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


	-- Insert statements for procedure here
	UPDATE tblKartrisPages 
	SET Page_Name = @Page_Name, Page_ParentID = @Page_ParentID, Page_LastUpdated = @NowOffset, Page_Live = @Page_Live
	WHERE Page_ID = @Page_ID;

	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPages_GetNames]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisPages_GetNames]
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	-- Insert statements for procedure here
	SELECT Page_ID, Page_Name
	FROM dbo.tblKartrisPages;	
END
GO
/****** Object:  Table [dbo].[tblKartrisOrdersPromotions]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisOrdersPromotions](
	[OrderID] [int] NOT NULL,
	[PromotionID] [int] NOT NULL,
 CONSTRAINT [PK_tblKartrisOrdersPromotions] PRIMARY KEY CLUSTERED 
(
	[OrderID] ASC,
	[PromotionID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisNews_Add]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisNews_Add]
(
	@NowOffset as datetime,
	@N_NewID as int OUT
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


	-- Insert statements for procedure here
	INSERT INTO tblKartrisNews VALUES(@NowOffset, @NowOffset);
	SELECT @N_NewID = SCOPE_IDENTITY();


END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisMediaTypes_Update]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisMediaTypes_Update]
(
	@MT_ID as int,
	@DefaultHeight as int,
	@DefaultWidth as int,
	@DefaultParameters as nvarchar(1000),
	@Downloadable as bit,
	@Embed as bit,
	@Inline as bit	
)
AS
BEGIN
SET NOCOUNT ON;
		
		
					
		UPDATE dbo.tblKartrisMediaTypes
		SET MT_DefaultHeight = @DefaultHeight, MT_DefaultWidth = @DefaultWidth,
			MT_DefaultParameters = @DefaultParameters, 
			MT_DefaultisDownloadable = @Downloadable, 
			MT_Embed = @Embed,
			MT_Inline = @Inline
		WHERE MT_ID = @MT_ID;
				
		
		
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisMediaTypes_GetByID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisMediaTypes_GetByID]
(
	@MediaType_ID as smallint
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT * FROM dbo.tblKartrisMediaTypes WHERE MT_ID = @MediaType_ID;
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisMediaTypes_Get]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisMediaTypes_Get]
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT * FROM dbo.tblKartrisMediaTypes
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisMediaTypes_Delete]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisMediaTypes_Delete]
(
	@MT_ID as int	
)
AS
BEGIN
SET NOCOUNT ON;
		
		
					
		DELETE FROM dbo.tblKartrisMediaTypes
		WHERE MT_ID = @MT_ID;
		
		
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisMediaTypes_Add]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisMediaTypes_Add]
(
	@Extension as nvarchar(20),
	@DefaultHeight as int,
	@DefaultWidth as int,
	@DefaultParameters as nvarchar(1000),
	@Downloadable as bit,
	@Embed as bit,
	@Inline as bit,
	@NewMT_ID as int out
)
AS
BEGIN
SET NOCOUNT ON;
		
		
					
		INSERT INTO dbo.tblKartrisMediaTypes
		VALUES (@Extension, @DefaultHeight, @DefaultWidth,
				@DefaultParameters, @Downloadable, @Embed, @Inline);
				
		SELECT @NewMT_ID = SCOPE_IDENTITY();
		
		
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisMediaLinks_Update]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisMediaLinks_Update]
(
	@ML_ID as int,
	@EmbedSource as nvarchar(2000),
	@MediaTypeID as smallint,
	@Height as int,
	@Width as int,
	@Downloadable as bit,
	@Parameters as nvarchar(1000),
	@Live as bit
)
AS
BEGIN
SET NOCOUNT ON;
		
		
		
		UPDATE dbo.tblKartrisMediaLinks
		SET ML_EmbedSource = @EmbedSource,ML_MediaTypeID = @MediaTypeID,
			ML_Height = @Height,ML_Width = @Width,ML_isDownloadable = @Downloadable,
			ML_Parameters = @Parameters,ML_Live = @Live
		WHERE ML_ID = @ML_ID;
				
		
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisMediaLinks_GetByParent]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisMediaLinks_GetByParent]
(
	@ParentID as bigint, 
	@ParentType as nvarchar(1)
)
AS
BEGIN
SET NOCOUNT ON;
SELECT     tblKartrisMediaLinks.ML_ID, tblKartrisMediaLinks.ML_ParentID, tblKartrisMediaLinks.ML_ParentType, tblKartrisMediaLinks.ML_EmbedSource, 
					  tblKartrisMediaLinks.ML_MediaTypeID, tblKartrisMediaLinks.ML_Height, tblKartrisMediaLinks.ML_Width, tblKartrisMediaLinks.ML_isDownloadable, 
					  tblKartrisMediaLinks.ML_Parameters, tblKartrisMediaTypes.MT_DefaultHeight, tblKartrisMediaTypes.MT_DefaultWidth, 
					  tblKartrisMediaTypes.MT_DefaultParameters, tblKartrisMediaTypes.MT_DefaultisDownloadable, tblKartrisMediaTypes.MT_Extension, 
					  tblKartrisMediaTypes.MT_Embed, tblKartrisMediaTypes.MT_Inline, tblKartrisMediaLinks.ML_Live
FROM         tblKartrisMediaLinks LEFT OUTER JOIN
					  tblKartrisMediaTypes ON tblKartrisMediaLinks.ML_MediaTypeID = tblKartrisMediaTypes.MT_ID
WHERE     (tblKartrisMediaLinks.ML_ParentID = @ParentID) AND (tblKartrisMediaLinks.ML_ParentType = @ParentType)
ORDER BY tblKartrisMediaLinks.ML_SortOrder

END
GO
/****** Object:  Table [dbo].[tblKartrisOptions]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisOptions](
	[OPT_ID] [int] IDENTITY(1,1) NOT NULL,
	[OPT_OptionGroupID] [smallint] NULL,
	[OPT_CheckBoxValue] [bit] NOT NULL,
	[OPT_DefPriceChange] DECIMAL(18,4) NULL,
	[OPT_DefWeightChange] [real] NULL,
	[OPT_DefOrderByValue] [smallint] NULL,
 CONSTRAINT [aaaaatblKartrisOptions_PK] PRIMARY KEY NONCLUSTERED 
(
	[OPT_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE UNIQUE CLUSTERED INDEX [idxOPT_ID] ON [dbo].[tblKartrisOptions] 
(
	[OPT_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [OPT_ID] ON [dbo].[tblKartrisOptions] 
(
	[OPT_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [OPT_OptionGroupID] ON [dbo].[tblKartrisOptions] 
(
	[OPT_OptionGroupID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisCategories]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblKartrisCategories](
	[CAT_ID] [int] IDENTITY(1,1) NOT NULL,
	[CAT_Live] [bit] NOT NULL,
	[CAT_ProductDisplayType] [char](1) NULL,
	[CAT_SubCatDisplayType] [char](1) NULL,
	[CAT_OrderProductsBy] [nvarchar](50) NULL,
	[CAT_ProductsSortDirection] [char](1) NULL,
	[CAT_CustomerGroupID] [smallint] NULL,
	[CAT_OrderCategoriesBy] [nvarchar](50) NULL,
	[CAT_CategoriesSortDirection] [char](1) NULL,
 CONSTRAINT [aaaaatblKartrisCategories_PK] PRIMARY KEY NONCLUSTERED 
(
	[CAT_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE UNIQUE CLUSTERED INDEX [idxCAT_ID] ON [dbo].[tblKartrisCategories] 
(
	[CAT_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [V_CustomerGroupID] ON [dbo].[tblKartrisCategories] 
(
	[CAT_CustomerGroupID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'sent to ''spKartrisProducts_GetRowsBetweenByCatID'' to sort the results, valid values are: P_ID, P_Name, P_DateCreated, P_LastModified,& PCAT_OrderNo' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisCategories', @level2type=N'COLUMN',@level2name=N'CAT_OrderProductsBy'
GO
SET IDENTITY_INSERT [dbo].[tblKartrisCategories] ON
INSERT [dbo].[tblKartrisCategories] ([CAT_ID], [CAT_Live], [CAT_ProductDisplayType], [CAT_SubCatDisplayType], [CAT_OrderProductsBy], [CAT_ProductsSortDirection], [CAT_CustomerGroupID], [CAT_OrderCategoriesBy], [CAT_CategoriesSortDirection]) VALUES (0, 1, NULL, N'n', NULL, N'a', NULL, NULL, NULL)
SET IDENTITY_INSERT [dbo].[tblKartrisCategories] OFF
/****** Object:  StoredProcedure [dbo].[spKartrisAttributes_Get]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisAttributes_Get]
AS
	SET NOCOUNT ON;
SELECT        tblKartrisAttributes.*
FROM            tblKartrisAttributes
GO
/****** Object:  StoredProcedure [dbo].[spKartrisAddresses_Get]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	Get all user stored addresses
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisAddresses_Get]
(
	@ADR_ID int
)
AS
SET NOCOUNT OFF;
SELECT        *
FROM            tblKartrisAddresses
WHERE        (ADR_ID = @ADR_ID)
GO
/****** Object:  Table [dbo].[tblKartrisPromotionParts]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblKartrisPromotionParts](
	[PP_ID] [int] IDENTITY(1,1) NOT NULL,
	[PROM_ID] [int] NOT NULL,
	[PP_PartNo] [char](1) NOT NULL,
	[PP_ItemType] [char](1) NULL,
	[PP_ItemID] [bigint] NOT NULL,
	[PP_Type] [char](1) NOT NULL,
	[PP_Value] DECIMAL(18,4) NULL,
 CONSTRAINT [PK_tblKartrisPromotionParts] PRIMARY KEY CLUSTERED 
(
	[PP_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'2 possible values, ''a'' for the left-hand side part of the promotion, and ''b'' for the right-hand side part.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisPromotionParts', @level2type=N'COLUMN',@level2name=N'PP_PartNo'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'3 possible values ''v'' for version, ''p'' for product, and ''c'' for category ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisPromotionParts', @level2type=N'COLUMN',@level2name=N'PP_ItemType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'2 possible values, ''p'' for percentage, and ''q'' for quantity.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisPromotionParts', @level2type=N'COLUMN',@level2name=N'PP_Type'
GO
/****** Object:  Table [dbo].[tblKartrisProducts]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblKartrisProducts](
	[P_ID] [int] IDENTITY(1,1) NOT NULL,
	[P_Live] [bit] NOT NULL,
	[P_Featured] [tinyint] NULL,
	[P_OrderVersionsBy] [nvarchar](50) NULL,
	[P_VersionsSortDirection] [char](1) NULL,
	[P_VersionDisplayType] [char](1) NULL,
	[P_Reviews] [char](1) NULL,
	[P_SupplierID] [smallint] NULL,
	[P_Type] [char](1) NULL,
	[P_CustomerGroupID] [smallint] NULL,
	[P_AverageRating] [real] NULL,
	[P_DateCreated] [smalldatetime] NULL,
	[P_LastModified] [smalldatetime] NULL,
 CONSTRAINT [aaaaatblKartrisProducts_PK] PRIMARY KEY NONCLUSTERED 
(
	[P_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE UNIQUE CLUSTERED INDEX [idxP_ID] ON [dbo].[tblKartrisProducts] 
(
	[P_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [P_ID] ON [dbo].[tblKartrisProducts] 
(
	[P_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [P_SupplierID] ON [dbo].[tblKartrisProducts] 
(
	[P_SupplierID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [V_CustomerGroupID] ON [dbo].[tblKartrisProducts] 
(
	[P_CustomerGroupID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisDestination]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblKartrisDestination](
	[D_ID] [smallint] IDENTITY(1,1) NOT NULL,
	[D_ShippingZoneID] [tinyint] NULL,
	[D_Tax] DECIMAL(12,8) NULL,
	[D_ISOCode] [char](2) NULL,
	[D_ISOCode3Letter] [char](3) NULL,
	[D_ISOCodeNumeric] [nvarchar](3) NULL,
	[D_Region] [nvarchar](30) NULL,
	[D_Live] [bit] NOT NULL,
	[D_Tax2] DECIMAL(12,8) NULL,
	[D_TaxExtra] [nvarchar](25) NULL,
 CONSTRAINT [PK_tblKartrisDestination] PRIMARY KEY CLUSTERED 
(
	[D_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE NONCLUSTERED INDEX [D_ID] ON [dbo].[tblKartrisDestination] 
(
	[D_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [D_ISOCode] ON [dbo].[tblKartrisDestination] 
(
	[D_ISOCode] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
SET IDENTITY_INSERT [dbo].[tblKartrisDestination] ON
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (1, 5, 0, N'AF', N'AFG', N'004', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (2, 3, 0, N'AL', N'ALB', N'008', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (3, 5, 0, N'DZ', N'DZA', N'012', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (4, 3, 0, N'AD', N'AND', N'020', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (5, 5, 0, N'AO', N'AGO', N'024', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (6, 5, 0, N'AG', N'ATG', N'028', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (7, 5, 0, N'AR', N'ARG', N'032', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (8, 5, 0, N'AM', N'ARM', N'051', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (9, 5, 0, N'AU', N'AUS', N'036', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (10, 5, 0, N'AU', N'AUS', N'036', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (11, 5, 0, N'AU', N'AUS', N'036', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (12, 5, 0, N'AU', N'AUS', N'036', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (13, 5, 0, N'AU', N'AUS', N'036', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (14, 5, 0, N'AU', N'AUS', N'036', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (15, 5, 0, N'AU', N'AUS', N'036', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (16, 5, 0, N'AU', N'AUS', N'036', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (17, 5, 0, N'AU', N'AUS', N'036', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (18, 2, 1, N'AT', N'AUT', N'040', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (19, 5, 0, N'AZ', N'AZE', N'031', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (20, 5, 0, N'BS', N'BHS', N'044', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (21, 5, 0, N'BH', N'BHR', N'048', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (22, 5, 0, N'BD', N'BGD', N'050', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (23, 5, 0, N'BB', N'BRB', N'052', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (24, 3, 0, N'BY', N'BLR', N'112', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (25, 2, 1, N'BE', N'BEL', N'056', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (26, 5, 0, N'BZ', N'BLZ', N'084', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (27, 5, 0, N'BM', N'BMU', N'060', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (28, 5, 0, N'BT', N'BTN', N'064', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (29, 5, 0, N'BO', N'BOL', N'068', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (30, 3, 0, N'BA', N'BIH', N'070', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (31, 5, 0, N'BW', N'BWA', N'072', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (32, 5, 0, N'BR', N'BRA', N'076', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (33, 5, 0, N'IO', N'IOT', N'086', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (34, 5, 0, N'BN', N'BRN', N'096', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (35, 3, 1, N'BG', N'BGR', N'100', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (36, 5, 0, N'BI', N'BDI', N'108', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (37, 5, 0, N'KH', N'KHM', N'116', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (38, 5, 0, N'CM', N'CMR', N'120', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (39, 4, 0, N'CA', N'CAN', N'124', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (40, 4, 0, N'CA', N'CAN', N'124', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (41, 4, 0, N'CA', N'CAN', N'124', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (42, 4, 0, N'CA', N'CAN', N'124', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (43, 4, 0, N'CA', N'CAN', N'124', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (44, 4, 0, N'CA', N'CAN', N'124', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (45, 4, 0, N'CA', N'CAN', N'124', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (46, 4, 0, N'CA', N'CAN', N'124', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (47, 4, 0, N'CA', N'CAN', N'124', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (48, 4, 0, N'CA', N'CAN', N'124', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (49, 4, 0, N'CA', N'CAN', N'124', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (50, 4, 0, N'CA', N'CAN', N'124', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (51, 4, 0, N'CA', N'CAN', N'124', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (52, 4, 0, N'CA', N'CAN', N'124', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (53, 5, 0, N'KY', N'CYM', N'136', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (54, 5, 0, N'CF', N'CAF', N'140', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (55, 5, 0, N'TD', N'TCD', N'148', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (56, 5, 0, N'CL', N'CHL', N'152', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (57, 5, 0, N'CN', N'CHN', N'156', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (58, 5, 0, N'CX', N'CXR', N'162', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (59, 5, 0, N'CO', N'COL', N'170', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (60, 5, 0, N'CG', N'COG', N'178', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (61, 5, 0, N'CK', N'COK', N'184', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (62, 5, 0, N'CR', N'CRI', N'188', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (63, 2, 1, N'HR', N'HRV', N'191', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (64, 5, 0, N'CU', N'CUB', N'192', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (65, 2, 1, N'CY', N'CYP', N'196', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (66, 2, 1, N'CZ', N'CZE', N'203', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (67, 2, 1, N'DK', N'DNK', N'208', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (68, 5, 0, N'DM', N'DMA', N'212', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (69, 5, 0, N'DO', N'DOM', N'214', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (70, 5, 0, N'TL', N'TLS', N'626', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (71, 5, 0, N'EC', N'ECU', N'218', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (72, 5, 0, N'EG', N'EGY', N'818', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (73, 5, 0, N'SV', N'SLV', N'222', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (74, 5, 0, N'GQ', N'GNQ', N'226', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (75, 5, 0, N'ER', N'ERI', N'232', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (76, 2, 1, N'EE', N'EST', N'233', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (77, 5, 0, N'ET', N'ETH', N'231', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (78, 5, 0, N'FK', N'FLK', N'238', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (79, 5, 0, N'FJ', N'FJI', N'242', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (80, 2, 1, N'FI', N'FIN', N'246', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (81, 2, 1, N'FR', N'FRA', N'250', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (82, 5, 0, N'GF', N'GUF', N'254', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (83, 5, 0, N'PF', N'PYF', N'258', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (84, 5, 0, N'GA', N'GAB', N'266', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (85, 5, 0, N'GM', N'GMB', N'270', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (86, 3, 0, N'GE', N'GEO', N'268', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (87, 2, 1, N'DE', N'DEU', N'276', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (88, 5, 0, N'GH', N'GHA', N'288', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (89, 3, 0, N'GI', N'GIB', N'292', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (90, 2, 1, N'GR', N'GRC', N'300', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (91, 4, 0, N'GL', N'GRL', N'304', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (92, 5, 0, N'GD', N'GRD', N'308', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (93, 5, 0, N'GU', N'GUM', N'316', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (94, 5, 0, N'GT', N'GTM', N'320', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (95, 5, 0, N'GN', N'GIN', N'324', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (96, 5, 0, N'GY', N'GUY', N'328', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (97, 5, 0, N'HT', N'HTI', N'332', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (98, 5, 0, N'HM', N'HMD', N'334', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (99, 5, 0, N'HN', N'HND', N'340', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (100, 5, 0, N'HK', N'HKG', N'344', NULL, 1, NULL, NULL)
GO
print 'Processed 100 total records'
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (101, 2, 1, N'HU', N'HUN', N'348', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (102, 3, 0, N'IS', N'ISL', N'352', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (103, 5, 0, N'IN', N'IND', N'356', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (104, 5, 0, N'ID', N'IDN', N'360', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (105, 5, 0, N'IR', N'IRN', N'364', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (106, 2, 1, N'IE', N'IR ', N'372', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (107, 5, 0, N'IL', N'ISR', N'376', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (108, 2, 1, N'IT', N'ITA', N'380', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (109, 5, 0, N'CI', N'CIV', N'384', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (110, 5, 0, N'JM', N'JAM', N'388', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (111, 5, 0, N'JP', N'JPN', N'392', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (112, 5, 0, N'JO', N'JOR', N'400', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (113, 5, 0, N'KZ', N'KAZ', N'398', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (114, 5, 0, N'KE', N'KEN', N'404', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (115, 5, 0, N'KR', N'KOR', N'410', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (116, 5, 0, N'KW', N'KWT', N'414', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (117, 2, 1, N'LV', N'LVA', N'428', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (118, 5, 0, N'LB', N'LBN', N'422', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (119, 5, 0, N'LR', N'LBR', N'430', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (120, 5, 0, N'LY', N'LBY', N'218', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (121, 3, 0, N'LI', N'LIE', N'438', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (122, 2, 1, N'LT', N'LTU', N'440', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (123, 2, 1, N'LU', N'LUX', N'442', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (124, 5, 0, N'MO', N'MAC', N'446', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (125, 3, 0, N'MK', N'MKD', N'807', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (126, 5, 0, N'MG', N'MDG', N'450', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (127, 5, 0, N'MW', N'MWI', N'454', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (128, 5, 0, N'MY', N'MYS', N'458', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (129, 5, 0, N'MV', N'MDV', N'462', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (130, 5, 0, N'ML', N'MLI', N'466', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (131, 2, 1, N'MT', N'MLT', N'470', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (132, 5, 0, N'MQ', N'MTQ', N'474', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (133, 5, 0, N'MR', N'MRT', N'478', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (134, 5, 0, N'MU', N'MUS', N'480', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (135, 5, 0, N'MX', N'MEX', N'484', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (136, 5, 0, N'FM', N'FSM', N'583', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (137, 3, 0, N'MD', N'MDA', N'498', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (138, 2, 0, N'MC', N'MCO', N'492', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (139, 5, 0, N'MN', N'MNG', N'496', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (140, 5, 0, N'MA', N'MAR', N'504', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (141, 5, 0, N'MZ', N'MOZ', N'508', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (142, 5, 0, N'MM', N'MMR', N'104', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (143, 5, 0, N'NA', N'NAM', N'516', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (144, 5, 0, N'NR', N'NRU', N'520', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (145, 5, 0, N'NP', N'NPL', N'524', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (146, 2, 1, N'NL', N'NLD', N'528', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (147, 5, 0, N'NZ', N'NZL', N'554', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (148, 5, 0, N'NI', N'NIC', N'558', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (149, 5, 0, N'NE', N'NER', N'562', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (150, 3, 0, N'NO', N'NOR', N'578', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (151, 5, 0, N'OM', N'OMN', N'512', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (152, 5, 0, N'PK', N'PAK', N'586', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (153, 5, 0, N'PA', N'PAN', N'591', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (154, 5, 0, N'PG', N'PNG', N'598', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (155, 5, 0, N'PY', N'PRY', N'600', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (156, 5, 0, N'PE', N'PER', N'604', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (157, 5, 0, N'PH', N'PHL', N'608', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (158, 2, 1, N'PL', N'POL', N'616', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (159, 2, 1, N'PT', N'PRT', N'620', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (160, 5, 0, N'PR', N'PRI', N'630', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (161, 5, 0, N'QA', N'QAT', N'634', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (162, 3, 1, N'RO', N'ROU', N'642', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (163, 3, 0, N'RU', N'RUS', N'643', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (164, 5, 0, N'RW', N'RWA', N'646', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (165, 5, 0, N'LC', N'LCA', N'662', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (166, 5, 0, N'WS', N'SPM', N'666', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (167, 5, 0, N'SA', N'SAU', N'682', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (168, 5, 0, N'SN', N'SEN', N'686', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (169, 5, 0, N'SC', N'SYC', N'690', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (170, 5, 0, N'SL', N'SLE', N'694', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (171, 5, 0, N'SG', N'SGP', N'702', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (172, 2, 1, N'SK', N'SVK', N'703', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (173, 2, 1, N'SI', N'SVN', N'705', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (174, 5, 0, N'SO', N'SOM', N'706', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (175, 5, 0, N'ZA', N'ZAF', N'710', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (176, 2, 1, N'ES', N'ESP', N'724', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (177, 5, 0, N'LK', N'LKA', N'144', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (178, 5, 0, N'SH', N'SHN', N'654', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (179, 5, 0, N'SR', N'SUR', N'740', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (180, 5, 0, N'SZ', N'SWZ', N'748', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (181, 2, 1, N'SE', N'SWE', N'752', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (182, 3, 0, N'CH', N'CHE', N'756', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (183, 5, 0, N'SY', N'SYR', N'760', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (184, 5, 0, N'TW', N'TWN', N'158', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (185, 5, 0, N'TJ', N'TJK', N'762', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (186, 5, 0, N'TZ', N'TZA', N'834', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (187, 5, 0, N'TH', N'THA', N'764', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (188, 5, 0, N'TG', N'TGO', N'768', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (189, 5, 0, N'TO', N'TON', N'776', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (190, 5, 0, N'TT', N'TTO', N'780', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (191, 5, 0, N'TN', N'TUN', N'788', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (192, 3, 0, N'TR', N'TUR', N'792', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (193, 3, 0, N'TM', N'TKM', N'795', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (194, 5, 0, N'TC', N'TCA', N'796', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (195, 5, 0, N'UM', N'UMI', N'581', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (196, 5, 0, N'UG', N'UGA', N'800', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (197, 3, 0, N'UA', N'UKR', N'804', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (198, 5, 0, N'AE', N'ARE', N'784', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (199, 1, 1, N'GB', N'GBR', N'826', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (200, 5, 0, N'UY', N'URY', N'858', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (201, 4, 0, N'US', N'USA', N'840', NULL, 1, NULL, NULL)
GO
print 'Processed 200 total records'
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (202, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (203, 4, 8, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (204, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (205, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (206, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (207, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (208, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (209, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (210, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (211, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (212, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (213, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (214, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (215, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (216, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (217, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (218, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (219, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (220, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (221, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (222, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (223, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (224, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (225, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (226, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (227, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (228, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (229, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (230, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (231, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (232, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (233, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (234, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (235, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (236, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (237, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (238, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (239, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (240, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (241, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (242, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (243, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (244, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (245, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (246, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (247, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (248, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (249, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (250, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (251, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (252, 4, 0, N'US', N'USA', N'840', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (253, 5, 0, N'UZ', N'UZB', N'860', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (254, 5, 0, N'VE', N'VEN', N'862', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (255, 5, 0, N'VN', N'VNM', N'704', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (256, 5, 0, N'VG', N'VGB', N'092', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (257, 5, 0, N'VI', N'VIR', N'850', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (258, 5, 0, N'EH', N'ESH', N'732', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (259, 5, 0, N'YE', N'YEM', N'887', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (262, 5, 0, N'ZM', N'ZMB', N'894', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (263, 5, 0, N'ZW', N'ZWE', N'716', NULL, 1, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (264, 9, 0, NULL, NULL, N'999', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (265, 9, 0, N'XX', N'XXX', N'999', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (266, 9, 0, N'XX', N'XXX', N'999', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (267, 9, 0, N'XX', N'XXX', N'999', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (268, 9, 0, N'XX', N'XXX', N'999', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (269, 9, 0, N'XX', N'XXX', N'999', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (270, 9, 0, N'XX', N'XXX', N'999', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (271, 9, 0, N'XX', N'XXX', N'999', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (272, 9, 0, N'XX', N'XXX', N'999', NULL, 0, NULL, NULL)
INSERT [dbo].[tblKartrisDestination] ([D_ID], [D_ShippingZoneID], [D_Tax], [D_ISOCode], [D_ISOCode3Letter], [D_ISOCodeNumeric], [D_Region], [D_Live], [D_Tax2], [D_TaxExtra]) VALUES (273, 9, 0, N'XX', N'XXX', N'999', NULL, 0, NULL, NULL)
SET IDENTITY_INSERT [dbo].[tblKartrisDestination] OFF
/****** Object:  Table [dbo].[tblKartrisLanguageElements]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisLanguageElements](
	[LE_LanguageID] [tinyint] NOT NULL,
	[LE_TypeID] [tinyint] NOT NULL,
	[LE_FieldID] [tinyint] NOT NULL,
	[LE_ParentID] [bigint] NOT NULL,
	[LE_Value] [nvarchar](max) NULL,
	[LE_ID] [bigint] IDENTITY(1,1) NOT NULL,
 CONSTRAINT [PK_tblKartrisLanguageElements] PRIMARY KEY CLUSTERED 
(
	[LE_LanguageID] ASC,
	[LE_TypeID] ASC,
	[LE_FieldID] ASC,
	[LE_ParentID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY],
 CONSTRAINT [keyLE_ID] UNIQUE NONCLUSTERED 
(
	[LE_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 9, 1, 1, N'Standard Post')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 9, 1, 2, N'Express Post')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 9, 1, 3, N'Express Air Overnight')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 9, 2, 1, N'Regular surface mail, 5 days domestic, 10 days EU, 15+ days elsewhere')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 9, 2, 2, N'3 days domestic, 7 days EU, 10 days elsewhere')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 9, 2, 3, N'Overnight domestic, 2 days EU')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 9, 2, 6, N'desc')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 9, 2, 8, N'test')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 10, 1, 1, N'United Kingdom')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 10, 1, 2, N'European Union, excl. UK')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 10, 1, 3, N'Other Europe, excl. EU')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 10, 1, 4, N'North America')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 10, 1, 5, N'Rest of the World')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 10, 1, 9, N'Unallocated')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 1, N'Afghanistan')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 2, N'Albania')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 3, N'Algeria')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 4, N'Andorra')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 5, N'Angola')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 6, N'Antigua & Barbuda')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 7, N'Argentina')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 8, N'Armenia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 9, N'Australia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 10, N'Australia - Australian Capital Territory')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 11, N'Australia - New South Wales')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 12, N'Australia - Northern Territory')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 13, N'Australia - Queensland')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 14, N'Australia - South Australia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 15, N'Australia - Tasmania')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 16, N'Australia - Victoria')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 17, N'Australia - Western Australia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 18, N'Austria')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 19, N'Azerbaijan')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 20, N'Bahamas')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 21, N'Bahrain')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 22, N'Bangladesh')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 23, N'Barbados')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 24, N'Belarus')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 25, N'Belgium')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 26, N'Belize')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 27, N'Bermuda')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 28, N'Bhutan')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 29, N'Bolivia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 30, N'Bosnia & Herzegowina')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 31, N'Botswana')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 32, N'Brazil')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 33, N'British Indian Ocean Territory')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 34, N'Brunei Darussalam')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 35, N'Bulgaria')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 36, N'Burundi')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 37, N'Cambodia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 38, N'Cameroon')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 39, N'Canada')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 40, N'Canada - Alberta')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 41, N'Canada - British Columbia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 42, N'Canada - Manitoba')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 43, N'Canada - New Brunswick')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 44, N'Canada - Newfoundland and Labrador')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 45, N'Canada - Northwest Territories')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 46, N'Canada - Nova Scotia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 47, N'Canada - Nunavut')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 48, N'Canada - Ontario')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 49, N'Canada - Prince Edward Island')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 50, N'Canada - Quebec')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 51, N'Canada - Saskatchewan')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 52, N'Canada - Yukon')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 53, N'Cayman Islands')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 54, N'Central African Republic')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 55, N'Chad')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 56, N'Chile')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 57, N'China')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 58, N'Christmas Island')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 59, N'Colombia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 60, N'Congo')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 61, N'Cook Islands')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 62, N'Costa Rica')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 63, N'Croatia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 64, N'Cuba')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 65, N'Cyprus')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 66, N'Czech Republic')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 67, N'Denmark')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 68, N'Dominica')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 69, N'Dominican Republic')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 70, N'Timor-Leste')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 71, N'Ecuador')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 72, N'Egypt')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 73, N'El Salvador')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 74, N'Equatorial Guinea')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 75, N'Eritrea')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 76, N'Estonia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 77, N'Ethiopia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 78, N'Falkland Islands')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 79, N'Fiji')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 80, N'Finland')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 81, N'France')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 82, N'French Guiana')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 83, N'French Polynesia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 84, N'Gabon')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 85, N'Gambia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 86, N'Georgia')
GO
print 'Processed 100 total records'
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 87, N'Germany')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 88, N'Ghana')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 89, N'Gibraltar')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 90, N'Greece')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 91, N'Greenland')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 92, N'Grenada')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 93, N'Guam')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 94, N'Guatemala')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 95, N'Guinea')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 96, N'Guyana')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 97, N'Haiti')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 98, N'Heard & McDonald Islands')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 99, N'Honduras')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 100, N'Hong Kong')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 101, N'Hungary')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 102, N'Iceland')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 103, N'India')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 104, N'Indonesia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 105, N'Iran (Islamic Rep. of)')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 106, N'Ireland')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 107, N'Israel')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 108, N'Italy')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 109, N'Ivory Coast')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 110, N'Jamaica')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 111, N'Japan')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 112, N'Jordan')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 113, N'Kazakhstan')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 114, N'Kenya')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 115, N'Korea (South)')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 116, N'Kuwait')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 117, N'Latvia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 118, N'Lebanon')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 119, N'Liberia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 120, N'Libya')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 121, N'Liechtenstein')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 122, N'Lithuania')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 123, N'Luxembourg')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 124, N'Macau')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 125, N'Macedonia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 126, N'Madagascar')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 127, N'Malawi')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 128, N'Malaysia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 129, N'Maldives')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 130, N'Mali')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 131, N'Malta')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 132, N'Martinique')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 133, N'Mauritania')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 134, N'Mauritius')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 135, N'Mexico')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 136, N'Micronesia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 137, N'Moldova')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 138, N'Monaco')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 139, N'Mongolia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 140, N'Morocco')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 141, N'Mozambique')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 142, N'Myanmar')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 143, N'Namibia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 144, N'Nauru')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 145, N'Nepal')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 146, N'Netherlands')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 147, N'New Zealand')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 148, N'Nicaragua')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 149, N'Niger')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 150, N'Norway')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 151, N'Oman')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 152, N'Pakistan')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 153, N'Panama')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 154, N'Papua New Guinea')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 155, N'Paraguay')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 156, N'Peru')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 157, N'Philippines')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 158, N'Poland')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 159, N'Portugal')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 160, N'Puerto Rico')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 161, N'Qatar')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 162, N'Romania')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 163, N'Russian Federation')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 164, N'Rwanda')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 165, N'Saint Lucia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 166, N'Samoa')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 167, N'Saudi Arabia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 168, N'Senegal')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 169, N'Seychelles')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 170, N'Sierra Leone')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 171, N'Singapore')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 172, N'Slovakia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 173, N'Slovenia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 174, N'Somalia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 175, N'South Africa')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 176, N'Spain')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 177, N'Sri Lanka')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 178, N'Saint Helena')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 179, N'Suriname')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 180, N'Swaziland')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 181, N'Sweden')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 182, N'Switzerland')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 183, N'Syria')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 184, N'Taiwan')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 185, N'Tajikistan')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 186, N'Tanzania')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 187, N'Thailand')
GO
print 'Processed 200 total records'
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 188, N'Togo')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 189, N'Tonga')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 190, N'Trinidad & Tobago')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 191, N'Tunisia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 192, N'Turkey')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 193, N'Turkmenistan')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 194, N'Turks & Caicos Islands')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 195, N'U.S. Minor Outlying Islands')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 196, N'Uganda')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 197, N'Ukraine')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 198, N'United Arab Emirates')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 199, N'United Kingdom')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 200, N'Uruguay')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 201, N'USA')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 202, N'USA - Alabama')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 203, N'USA - Alaska')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 204, N'USA - Arizona')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 205, N'USA - Arkansas')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 206, N'USA - California')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 207, N'USA - Colorado')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 208, N'USA - Connecticut')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 209, N'USA - Delaware')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 210, N'USA - District of Columbia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 211, N'USA - Florida')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 212, N'USA - Georgia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 213, N'USA - Hawaii')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 214, N'USA - Idao')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 215, N'USA - Illinois')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 216, N'USA - Indiana')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 217, N'USA - Iowa')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 218, N'USA - Kansas')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 219, N'USA - Kentucky')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 220, N'USA - Lousiana')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 221, N'USA - Maine')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 222, N'USA - Maryland')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 223, N'USA - Massachusetts')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 224, N'USA - Michigan')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 225, N'USA - Minnesota')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 226, N'USA - Mississippi')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 227, N'USA - Missouri')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 228, N'USA - Montana')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 229, N'USA - Nebraska')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 230, N'USA - Nevada')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 231, N'USA - New Hampshire')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 232, N'USA - New Jersey')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 233, N'USA - New Mexico')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 234, N'USA - New York')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 235, N'USA - North Carolina')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 236, N'USA - North Dakota')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 237, N'USA - Ohio')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 238, N'USA - Oklahoma')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 239, N'USA - Oregon')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 240, N'USA - Pennsylvania')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 241, N'USA - Rhode Island')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 242, N'USA - South Carolina')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 243, N'USA - South Dakota')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 244, N'USA - Tennessee')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 245, N'USA - Texas')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 246, N'USA - Utah')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 247, N'USA - Vermont')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 248, N'USA - Virginia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 249, N'USA - Washington')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 250, N'USA - West Virginia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 251, N'USA - Wisconsin')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 252, N'USA - Wyoming')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 253, N'Uzbekistan')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 254, N'Venezuela')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 255, N'Vietnam')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 256, N'Virgin Islands (British)')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 257, N'Virgin Islands (U.S.)')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 258, N'Western Sahara')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 259, N'Yemen')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 262, N'Zambia')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 263, N'Zimbabwe')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 264, NULL)
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 265, N'SPARE RECORD #2')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 266, N'SPARE RECORD #3')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 267, N'SPARE RECORD #4')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 268, N'SPARE RECORD #5')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 269, N'SPARE RECORD #6')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 270, N'SPARE RECORD #7')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 271, N'SPARE RECORD #8')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 272, N'SPARE RECORD #9')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 11, 1, 273, N'SPARE RECORD #10')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 13, 1, 1, N'British Pounds')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 13, 1, 2, N'US Dollars')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 13, 1, 3, N'Euros')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 13, 1, 4, N'Japanese Yen')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 13, 1, 5, N'Swiss Franc')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 13, 1, 6, N'Australian Dollar')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 13, 1, 7, N'Canadian Dollar')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 13, 1, 10, N'Hong Kong Dollar')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 13, 1, 11, N'Indian Rupee')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 13, 1, 12, N'Russian Rouble')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 13, 1, 13, N'Brazilian Real')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 13, 1, 14, N'Singapore Dollar')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 13, 1, 15, N'Bitcoin')

INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 15, 6, 1, N'Buy [X] of version [V]')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 15, 6, 2, N'Buy [X] of items from category [C]')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 15, 6, 3, N'Buy [X] of [P]')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 15, 6, 4, N'Spend [£][X]')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 15, 6, 5, N'get [X] of [V] for free')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 15, 6, 6, N'get [X]% off [V]')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 15, 6, 7, N'get [£][X] off')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 15, 6, 8, N'get [X] of [P]')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 15, 6, 9, N'get [X]% off [P]')
INSERT [dbo].[tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value]) VALUES (1, 15, 6, 10, N'get [X]% off from category [C]')
/****** Object:  UserDefinedFunction [dbo].[fnKartrisVersions_GetBaseVersionDownloadType]    Script Date: 2014-06-07 17:28:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnKartrisVersions_GetBaseVersionDownloadType] 
(
	-- Add the parameters for the function here
	@V_ID as bigint
)
RETURNS nvarchar(50)
AS
BEGIN
	-- Declare the return variable here
	DECLARE @Result nvarchar(50);
	DECLARE @P_ID int


	-- Add the T-SQL statements to compute the return value here
	SELECT @P_ID = V_ProductID FROM tblKartrisVersions WHERE V_ID = @V_ID;

	SELECT @Result = V_DownloadType FROM tblKartrisVersions WHERE V_ProductID = @P_ID AND V_Type='b'
	-- Return the result of the function
	RETURN @Result

END
GO
/****** Object:  UserDefinedFunction [dbo].[fnKartrisDB_TruncateDescription]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnKartrisDB_TruncateDescription] 
(
	@Desc as nvarchar(MAX)
)
RETURNS nvarchar(MAX)
AS
BEGIN
	-- Declare the return variable here
	DECLARE @Result nvarchar(MAX);
	
	DECLARE @NoOfChar as int;

	SELECT @NoOfChar = CAST(CFG_Value as int)
	FROM tblKartrisConfig
	WHERE CFG_Name = 'frontend.products.display.truncatedescription'


	IF LEN(@Desc) > @NoOfChar
	BEGIN
		SET @Result = LEFT(@Desc, @NoOfChar) + '...'
	END
	ELSE
	BEGIN
		SET @Result = @Desc
	END
	
	-- Return the result of the function
	RETURN @Result

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisOptionGroups_Add]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisOptionGroups_Add]
(
	@OPTG_BackendName nvarchar(50),
	@OPTG_OptionDisplayType char(1),
	@OPTG_DefOrderByValue smallint,
	@NewID smallint OUT
)
AS
	SET NOCOUNT OFF;

	INSERT INTO [tblKartrisOptionGroups] ([OPTG_BackendName], [OPTG_OptionDisplayType], [OPTG_DefOrderByValue]) 
	VALUES (@OPTG_BackendName, @OPTG_OptionDisplayType, @OPTG_DefOrderByValue);
	SELECT @NewID = SCOPE_IDENTITY();
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisObjectConfig_SetValue]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisObjectConfig_SetValue]
(
	@ParentID as bigint,
	@ConfigID as int,
	@ConfigValue as nvarchar(max)
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	DECLARE @DefaultValue as nvarchar(max);
	SELECT  @DefaultValue = OC_DefaultValue
	FROM    tblKartrisObjectConfig
	WHERE   (tblKartrisObjectConfig.OC_ID = @ConfigID);
	
	DECLARE @Count as int;
	SELECT     @Count = Count(1)
	FROM         tblKartrisObjectConfigValue
	WHERE     (tblKartrisObjectConfigValue.OCV_ObjectConfigID = @ConfigID) AND (tblKartrisObjectConfigValue.OCV_ParentID = @ParentID);
	
	
	IF @Count = 1 BEGIN
		UPDATE  tblKartrisObjectConfigValue
		SET OCV_Value = @ConfigValue
		WHERE   (dbo.tblKartrisObjectConfigValue.OCV_ObjectConfigID = @ConfigID) AND (tblKartrisObjectConfigValue.OCV_ParentID = @ParentID)
	END ELSE BEGIN
		INSERT INTO dbo.tblKartrisObjectConfigValue
		VALUES (@ConfigID, @ParentID, @ConfigValue);
	END;
	
	-- Clear un-needed records (NULLs and Value is equal to default)
	DELETE FROM dbo.tblKartrisObjectConfigValue 
	WHERE (OCV_Value IS NULL) OR (OCV_Value = @DefaultValue AND OCV_ObjectConfigID = @ConfigID);
		
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisObjectConfig_GetValue]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisObjectConfig_GetValue]
(
	@ConfigName as nvarchar(100),
	@ParentID as bigint
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @Count as int;
	
	SELECT     @Count = Count(1)
	FROM         tblKartrisObjectConfigValue INNER JOIN
						  tblKartrisObjectConfig ON tblKartrisObjectConfigValue.OCV_ObjectConfigID = tblKartrisObjectConfig.OC_ID
	WHERE     (tblKartrisObjectConfig.OC_Name = @ConfigName) AND (tblKartrisObjectConfigValue.OCV_ParentID = @ParentID)
	
	IF @Count = 1 BEGIN
		SELECT  tblKartrisObjectConfigValue.OCV_Value
		FROM    tblKartrisObjectConfigValue INNER JOIN
				tblKartrisObjectConfig ON tblKartrisObjectConfigValue.OCV_ObjectConfigID = tblKartrisObjectConfig.OC_ID
		WHERE   (tblKartrisObjectConfig.OC_Name = @ConfigName) AND (tblKartrisObjectConfigValue.OCV_ParentID = @ParentID)
	END ELSE BEGIN
		SELECT OC_DefaultValue FROM tblKartrisObjectConfig WHERE tblKartrisObjectConfig.OC_Name = @ConfigName
	END
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisObjectConfig_Get]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisObjectConfig_Get]
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT     *
	FROM        tblKartrisObjectConfig
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisNews_Update]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisNews_Update]
(
	@N_ID as int,
	@N_DateCreated as datetime,
	@NowOffset as datetime   
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


	-- Insert statements for procedure here
	UPDATE tblKartrisNews
	SET N_LastUpdated = @NowOffset, N_DateCreated = @N_DateCreated
	WHERE N_ID = @N_ID;

	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPages_Add]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisPages_Add]
(
	@Page_Name as nvarchar(50),
	@Page_ParentID as smallint,
	@Page_Live as bit,
	@NowOffset as datetime,
	@Page_NewID as smallint OUT
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	
	-- Insert statements for procedure here
	INSERT INTO tblKartrisPages VALUES(@Page_Name, @Page_ParentID, @NowOffset, @NowOffset, @Page_Live);
	SELECT @Page_NewID = SCOPE_IDENTITY();
	
END
GO
/****** Object:  UserDefinedFunction [dbo].[fnKartrisObjectConfig_GetValueByParent]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnKartrisObjectConfig_GetValueByParent] 
(
	@ObjectConfig as nvarchar(100),
	@ParentID as bigint
)
RETURNS nvarchar(max)
AS
BEGIN
	-- Declare the return variable here
	DECLARE @Result nvarchar(max);
	
	SELECT @Result = OCV_Value
	FROM dbo.tblKartrisObjectConfig INNER JOIN dbo.tblKartrisObjectConfigValue 
		ON OC_ID = OCV_ObjectConfigID
	WHERE OC_Name = @ObjectConfig AND OCV_ParentID = @ParentID;

	-- Return the result of the function
	RETURN @Result

END
GO
/****** Object:  UserDefinedFunction [dbo].[fnKartrisLanguageStrings_GetValue]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnKartrisLanguageStrings_GetValue] 
(
	@LANG_ID tinyint,
	@LS_FrontBack char(1),
	@LS_Name nvarchar(MAX),
	@LS_ClassName as nvarchar(50)
)
RETURNS nvarchar(MAX)
AS
BEGIN
	DECLARE @Result nvarchar(MAX)

	SELECT @Result = LS_Value
	FROM dbo.tblKartrisLanguageStrings
	WHERE LS_LangID = @LANG_ID AND LS_FrontBack = @LS_FrontBack 
			AND LS_Name = @LS_Name AND LS_ClassName = @LS_ClassName

	RETURN @Result

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisOptionGroups_GetGroupPage]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisOptionGroups_GetGroupPage]
(		@PageIndex as tinyint, -- 0 Based index
		@RowsPerPage as smallint,
		@TotalGroups as int OUT
)
AS
	SET NOCOUNT ON;

	DECLARE @StartRowNumber as int;
	SET @StartRowNumber = (@PageIndex * @RowsPerPage) + 1;
	DECLARE @EndRowNumber as int;
	SET @EndRowNumber = @StartRowNumber + @RowsPerPage - 1;
	
	SELECT @TotalGroups = Count(1)
	FROM tblKartrisOptionGroups;
	
	With Grps AS
	(
		SELECT	ROW_NUMBER() OVER (ORDER BY OPTG_BackendName ASC) AS Row, 
				OPTG_ID, OPTG_BackendName, OPTG_OptionDisplayType, OPTG_DefOrderByValue
		FROM	tblKartrisOptionGroups
		
	)
	
	

	SELECT *
	FROM Grps
	WHERE Row BETWEEN @StartRowNumber AND @EndRowNumber
	ORDER BY Row ASC;
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisOptionGroups_GetByGrpID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisOptionGroups_GetByGrpID]
(
	@OPTG_ID smallint
)
AS
	SET NOCOUNT ON;
SELECT        OPTG_ID, OPTG_BackendName, OPTG_OptionDisplayType, OPTG_DefOrderByValue
FROM            tblKartrisOptionGroups
WHERE OPTG_ID = @OPTG_ID
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisOptionGroups_Get]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisOptionGroups_Get]
AS
	SET NOCOUNT ON;
SELECT        OPTG_ID, OPTG_BackendName, OPTG_OptionDisplayType, OPTG_DefOrderByValue
FROM            tblKartrisOptionGroups
ORDER BY OPTG_DefOrderByValue
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisUsers_AddAffiliatePayments]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 23/Apr/08
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisUsers_AddAffiliatePayments] ( 
	@AffiliateID int,
	@NowOffset datetime
) AS
BEGIN

	SET NOCOUNT ON;

	declare @AFP_ID int;

	
	INSERT INTO tblKartrisAffiliatePayments (AFP_DateTime, AFP_AffiliateID) 
	VALUES (@NowOffset,@AffiliateID);

	SET @AFP_ID=SCOPE_IDENTITY()

	select @AFP_ID AS AFP_ID

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisUsers_Add]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisUsers_Add]
(
			@U_AccountHolderName nvarchar(50),
		   @U_EmailAddress nvarchar(100),
		   @U_Password nvarchar(64),
			@U_LanguageID tinyint,
			@U_CustomerGroupID int,
			@U_CustomerDiscount real,
			@U_Approved bit,
			@U_IsAffiliate bit,
			@U_AffiliateCommission real,
			@U_SupportEndDate datetime,
			@U_Notes nvarchar(MAX),
			@U_SaltValue nvarchar(64)
)
AS
DECLARE @U_ID INT
	SET NOCOUNT OFF;

	
	INSERT INTO [tblKartrisUsers]
		   ([U_AccountHolderName] ,[U_EmailAddress] ,[U_Password] ,[U_LanguageID] ,[U_CustomerGroupID]
			,[U_DefShippingAddressID]
			,[U_DefBillingAddressID]
			,[U_CustomerDiscount] ,[U_Approved] ,[U_IsAffiliate]
			,[U_AffiliateCommission]
			,[U_ML_Format]
			,[U_SupportEndDate]
			,[U_Notes]
			,[U_SaltValue]
			)
	 VALUES
		   (@U_AccountHolderName, @U_EmailAddress, @U_Password, @U_LanguageID, @U_CustomerGroupID,
			0,
			0,
			@U_CustomerDiscount, @U_Approved, @U_IsAffiliate,
			@U_AffiliateCommission,
			't',
			@U_SupportEndDate,
			@U_Notes,
			@U_SaltValue);
	SET @U_ID = SCOPE_IDENTITY();
	SELECT @U_ID;
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisTaxRates_Update]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisTaxRates_Update]
(
	@T_Taxrate real,
	@T_ID tinyint,
	@T_QBRefCode nvarchar(50)
)
AS
	SET NOCOUNT OFF;
	
	UPDATE [tblKartrisTaxRates] 
	SET [T_Taxrate] = @T_Taxrate, [T_QBRefCode] = @T_QBRefCode 
	WHERE (([T_ID] = @T_ID));
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisTaxRates_Get]    Script Date: 02/05/2016 14:49:55 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisTaxRates_Get]
AS
	SET NOCOUNT ON;
	SELECT	T_ID, T_Taxrate, 
			'[' + CAST(T_ID AS nvarchar(3)) + ']'
			+ ' - ' + CAST(Cast(T_Taxrate as real) AS nvarchar(10)) + '%' AS T_TaxRateString, T_QBRefCode
	FROM	tblKartrisTaxRates
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisSupportTicketTypes_Update]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisSupportTicketTypes_Update]
(
	@ID as int,
	@Type as nvarchar(50),
	@Level as char(1)	
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;



	UPDATE dbo.tblKartrisSupportTicketTypes
	SET STT_Name = @Type, STT_Level = @Level
	WHERE STT_ID = @ID;


END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisSupportTicketTypes_Get]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisSupportTicketTypes_Get]
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT     tblKartrisSupportTicketTypes.*
FROM         tblKartrisSupportTicketTypes
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisSupportTicketTypes_Delete]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisSupportTicketTypes_Delete]
(
	@ID as int,
	@NewTypeID as int
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;



	
	UPDATE dbo.tblKartrisSupportTickets
	SET TIC_SupportTicketTypeID = @NewTypeID
	WHERE TIC_SupportTicketTypeID = @ID;

	DELETE FROM dbo.tblKartrisSupportTicketTypes
	WHERE STT_ID = @ID;



END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisSupportTicketTypes_Add]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisSupportTicketTypes_Add]
(
	@Type as nvarchar(50),
	@Level as char(1),
	@New_ID as int OUTPUT
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;



	INSERT INTO dbo.tblKartrisSupportTicketTypes
	VALUES (@Type, @Level);

	SELECT @New_ID = SCOPE_IDENTITY();


END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisSupportTickets_Update]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisSupportTickets_Update]
(
	@TIC_ID as bigint,
	@LOGIN_ID as smallint,
	@NowOffset as datetime,
	@TIC_Status as char,
	@TIC_TimeSpent as int,
	@TIC_Tags as nvarchar(200),
	@STT_ID as smallint
)
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	IF @TIC_Status <> 'c' BEGIN SET @NowOffset = NULL END;
		

	UPDATE    tblKartrisSupportTickets
	SET TIC_LoginID = @LOGIN_ID, TIC_SupportTicketTypeID = @STT_ID, TIC_Status = @TIC_Status,
		TIC_DateClosed = @NowOffset, TIC_TimeSpent = @TIC_TimeSpent, TIC_Tags = @TIC_Tags
	WHERE TIC_ID = @TIC_ID;

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisSupportTickets_GetDetailsByID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisSupportTickets_GetDetailsByID]
(
	@TIC_ID as bigint
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT     tblKartrisSupportTickets.TIC_ID, tblKartrisSupportTickets.TIC_DateOpened, tblKartrisSupportTickets.TIC_DateClosed, tblKartrisSupportTickets.TIC_Subject, 
					  tblKartrisSupportTickets.TIC_UserID, tblKartrisSupportTickets.TIC_LoginID, tblKartrisSupportTickets.TIC_SupportTicketTypeID, tblKartrisSupportTicketTypes.STT_Name, 
					  tblKartrisSupportTickets.TIC_Status, tblKartrisSupportTickets.TIC_TimeSpent, tblKartrisSupportTickets.TIC_Tags
FROM         tblKartrisSupportTickets LEFT OUTER JOIN
					  tblKartrisSupportTicketTypes ON tblKartrisSupportTickets.TIC_SupportTicketTypeID = tblKartrisSupportTicketTypes.STT_ID
WHERE     (tblKartrisSupportTickets.TIC_ID = @TIC_ID)
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisSupportTickets_Get]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisSupportTickets_Get]
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT     TIC_ID, TIC_DateOpened, TIC_DateClosed, TIC_Subject, TIC_UserID, TIC_LoginID, TIC_SupportTicketTypeID, TIC_Status, TIC_TimeSpent, tblKartrisSupportTickets.TIC_Tags
	FROM         tblKartrisSupportTickets
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisSupportTickets_Delete]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisSupportTickets_Delete]
(
	@TIC_ID as bigint
)
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


	DELETE FROM dbo.tblKartrisSupportTicketMessages
	WHERE STM_TicketID = @TIC_ID;



	DELETE FROM dbo.tblKartrisSupportTickets
	WHERE TIC_ID = @TIC_ID;

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisSupportTickets_AddOwnerReply]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisSupportTickets_AddOwnerReply]
(
	@TIC_ID as bigint,
	@LOGIN_ID as smallint,
	@NowOffset as datetime,
	@STM_Text as nvarchar(MAX),
	@TIC_TimeSpent as int,
	@STM_NewID as bigint OUTPUT
)
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


	INSERT INTO dbo.tblKartrisSupportTicketMessages
	VALUES(@TIC_ID, @LOGIN_ID, @NowOffset, @STM_Text);


	SELECT @STM_NewID = SCOPE_IDENTITY();


	UPDATE    tblKartrisSupportTickets
	SET TIC_LoginID = @LOGIN_ID, TIC_TimeSpent = TIC_TimeSpent + @TIC_TimeSpent
	WHERE TIC_ID = @TIC_ID;

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisSupportTicketMessages_GetLastByCustomer]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisSupportTicketMessages_GetLastByCustomer]
(
	@TIC_ID as bigint
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT   top(1) tblKartrisSupportTicketMessages.STM_TicketID, tblKartrisSupportTicketMessages.STM_ID, tblKartrisSupportTicketMessages.STM_LoginID AS AssignedID, 
					  tblKartrisLogins.LOGIN_Username AS AssignedName, tblKartrisSupportTicketMessages.STM_DateCreated, tblKartrisSupportTicketMessages.STM_Text
	FROM         tblKartrisLogins RIGHT OUTER JOIN
						  tblKartrisSupportTicketMessages ON tblKartrisLogins.LOGIN_ID = tblKartrisSupportTicketMessages.STM_LoginID
	WHERE     (tblKartrisSupportTicketMessages.STM_TicketID = @TIC_ID AND tblKartrisSupportTicketMessages.STM_LoginID = 0) order by tblKartrisSupportTicketMessages.STM_ID DESC
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisSupportTicketMessages_GetByTicketID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisSupportTicketMessages_GetByTicketID]
(
	@TIC_ID as bigint
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT     tblKartrisSupportTicketMessages.STM_TicketID, tblKartrisSupportTicketMessages.STM_ID, tblKartrisSupportTicketMessages.STM_LoginID AS AssignedID, 
					  tblKartrisLogins.LOGIN_Username AS AssignedName, tblKartrisSupportTicketMessages.STM_DateCreated, tblKartrisSupportTicketMessages.STM_Text
	FROM         tblKartrisLogins RIGHT OUTER JOIN
						  tblKartrisSupportTicketMessages ON tblKartrisLogins.LOGIN_ID = tblKartrisSupportTicketMessages.STM_LoginID
	WHERE     (tblKartrisSupportTicketMessages.STM_TicketID = @TIC_ID)
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisSuppliers_Update]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisSuppliers_Update]
(
	@SUP_ID as smallint,
	@SUP_Name as nvarchar(50),
	@SUP_Live as bit
)
AS
	SET NOCOUNT ON;
	
	UPDATE dbo.tblKartrisSuppliers
	SET SUP_Name = @SUP_Name, SUP_Live = @SUP_Live
	WHERE SUP_ID = @SUP_ID;
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisSuppliers_Get]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisSuppliers_Get]
AS
	SET NOCOUNT ON;
	SELECT  *
	FROM	dbo.tblKartrisSuppliers
	ORDER BY SUP_Name
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisSuppliers_Add]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisSuppliers_Add]
(
	@SUP_Name as nvarchar(50),
	@SUP_Live as bit,
	@NewSUP_ID as smallint out
)
AS
	SET NOCOUNT ON;
	
	INSERT INTO dbo.tblKartrisSuppliers
	VALUES (@SUP_Name, @SUP_Live);

	SELECT @NewSUP_ID = SCOPE_IDENTITY();
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisStatistics_GetProductYearSummary]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisStatistics_GetProductYearSummary] (@NowOffset as datetime)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT   Count(ST_ItemID) as NoOfHits, MONTH(ST_Date) as TheMonth, Year(ST_Date) as TheYear, (MONTH(ST_Date) + (year(ST_Date) * 100)) As MonthYear
	FROM         tblKartrisStatistics
	WHERE     (ST_Type = 'P') AND DateDiff(month, ST_Date, @NowOffset) <= 11 
	Group By  MONTH(ST_Date), Year(ST_Date)
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisStatistics_GetOrdersTurnover]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisStatistics_GetOrdersTurnover]
(
	@StartDate as datetime,
	@EndDate as datetime
)
AS
BEGIN

	SELECT Year(O_Date) as [Year], Month(O_Date) as [Month], Day(O_Date) as [Day], Count(1) as Orders, Sum(O_TotalPrice / O_CurrencyRate) as TotalValue
	FROM dbo.tblKartrisOrders
	WHERE O_Date BETWEEN @StartDate AND @EndDate AND O_Paid = 1
	Group BY Year(O_Date), Month(O_Date), Day(O_Date)
	ORDER BY Year(O_Date), Month(O_Date), Day(O_Date)

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisStatistics_GetCategoryYearSummary]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisStatistics_GetCategoryYearSummary] (@NowOffset as datetime)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT Count(ST_ItemID) as NoOfHits, MONTH(ST_Date) as TheMonth, Year(ST_Date) as TheYear, (MONTH(ST_Date) + (year(ST_Date) * 100)) As MonthYear
	FROM         tblKartrisStatistics
	WHERE     (ST_Type = 'C') AND DateDiff(month, ST_Date, @NowOffset) <= 11 
	Group By  MONTH(ST_Date), Year(ST_Date)
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisStatistics_GetAverageVisitsSummary]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisStatistics_GetAverageVisitsSummary]
(
	@CurrentDate as datetime
)
AS
BEGIN
	
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	DECLARE @Last24Hours as datetime; SET @Last24Hours = DateAdd(Hour, -24, @CurrentDate);
	DECLARE @LastWeek as datetime; SET @LastWeek = DateAdd(Week, -1, @CurrentDate);
	DECLARE @LastMonth as datetime; SET @LastMonth = DateAdd(Month, -1, @CurrentDate);
	DECLARE @LastYear as datetime; SET @LastYear = DateAdd(Year, -1, @CurrentDate);

	DECLARE @Last24HoursVisits as int, @LastWeekVisits as int, @LastMonthVisits as int, @LastYearVisits as int;

	SELECT @Last24HoursVisits = Count(1)
	FROM dbo.tblKartrisStatistics
	WHERE ST_Date BETWEEN @Last24Hours AND @CurrentDate

	SELECT @LastWeekVisits = Count(1)/7
	FROM dbo.tblKartrisStatistics
	WHERE ST_Date BETWEEN @LastWeek AND @CurrentDate

	SELECT @LastMonthVisits = Count(1)/30
	FROM dbo.tblKartrisStatistics
	WHERE ST_Date BETWEEN @LastMonth AND @CurrentDate

	SELECT @LastYearVisits = Count(1)/360
	FROM dbo.tblKartrisStatistics
	WHERE ST_Date BETWEEN @LastYear AND @CurrentDate

	SELECT @Last24HoursVisits as Last24Hours, @LastWeekVisits as LastWeek, @LastMonthVisits as LastMonth, @LastYearVisits as LastYear
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisStatistics_GetAverageOrdersSummary]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisStatistics_GetAverageOrdersSummary]
(
	@CurrentDate as datetime
)
AS
BEGIN
	
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	DECLARE @Last24Hours as datetime; SET @Last24Hours = DateAdd(Hour, -24, @CurrentDate);
	DECLARE @LastWeek as datetime; SET @LastWeek = DateAdd(Week, -1, @CurrentDate);
	DECLARE @LastMonth as datetime; SET @LastMonth = DateAdd(Month, -1, @CurrentDate);
	DECLARE @LastYear as datetime; SET @LastYear = DateAdd(Year, -1, @CurrentDate);

	DECLARE @Last24HoursOrders as int, @LastWeekOrders as int, @LastMonthOrders as int, @LastYearOrders as int;
	DECLARE @Last24HoursTurnover as real, @LastWeekTurnover as real, @LastMonthTurnover as real, @LastYearTurnover as real;

	SELECT @Last24HoursOrders = Count(1), @Last24HoursTurnover = Sum(O_TotalPrice / O_CurrencyRate)
	FROM dbo.tblKartrisOrders
	WHERE O_Date BETWEEN @Last24Hours AND @CurrentDate AND O_Paid = 1

	SELECT @LastWeekOrders = Count(1), @LastWeekTurnover = Sum(O_TotalPrice / O_CurrencyRate)/7 
	FROM dbo.tblKartrisOrders
	WHERE O_Date BETWEEN @LastWeek AND @CurrentDate AND O_Paid = 1

	SELECT @LastMonthOrders = Count(1), @LastMonthTurnover = Sum(O_TotalPrice / O_CurrencyRate)/30
	FROM dbo.tblKartrisOrders
	WHERE O_Date BETWEEN @LastMonth AND @CurrentDate AND O_Paid = 1

	SELECT @LastYearOrders = Count(1), @LastYearTurnover = Sum(O_TotalPrice / O_CurrencyRate)/360
	FROM dbo.tblKartrisOrders
	WHERE O_Date BETWEEN @LastYear AND @CurrentDate AND O_Paid = 1


	SELECT @Last24HoursOrders as Last24HoursOrders, @LastWeekOrders as LastWeekOrders
			, @LastMonthOrders as LastMonthOrders, @LastYearOrders as LastYearOrders
			, @Last24HoursTurnover as Last24HoursTurnover, @LastWeekTurnover as LastWeekTurnover
			, @LastMonthTurnover as LastMonthTurnover, @LastYearTurnover as LastYearTurnover;
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisStatistics_Get]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisStatistics_Get]
AS
	SET NOCOUNT ON;
SELECT        tblKartrisStatistics.*
FROM            tblKartrisStatistics
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisShippingZones_Update]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ==============================================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	Update Shipping Zone
-- ===============================================================
CREATE PROCEDURE [dbo].[_spKartrisShippingZones_Update]
(
	@SZ_ID as tinyint,
	@SZ_Live as bit,
	@SZ_OrderByValue as tinyint
)
AS
BEGIN
	SET NOCOUNT ON;
	
	UPDATE dbo.tblKartrisShippingZones
	SET SZ_Live = @SZ_Live, SZ_OrderByValue = @SZ_OrderByValue
	WHERE SZ_ID = @SZ_ID;
	

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisShippingZones_Add]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ==============================================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	Create New Shipping Zone
-- ===============================================================
CREATE PROCEDURE [dbo].[_spKartrisShippingZones_Add]
(
	@SZ_Live as bit,
	@SZ_OrderByValue as tinyint,
	@SZ_NewID as tinyint OUT
)
AS
BEGIN
	SET NOCOUNT ON;
	
	INSERT INTO dbo.tblKartrisShippingZones
	VALUES (@SZ_Live, @SZ_OrderByValue);

	SELECT @SZ_NewID = SCOPE_IDENTITY();
	

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisUsers_UpdateAffiliateOrders]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 23/Apr/08
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisUsers_UpdateAffiliateOrders] (
	@intType as int,	
	@AffiliatePaymentID int,
	@OrderID int
) AS
BEGIN

	If @intType=1 -- update affiliate orders
	Begin
			
			UPDATE tblKartrisOrders SET O_AffiliatePaymentID = @AffiliatePaymentID WHERE O_ID = @OrderID;
			
	End

	If @intType=2 -- delete affiliate payments and reset orders
	Begin
		
			DELETE FROM tblKartrisAffiliatePayments WHERE AFP_ID = @AffiliatePaymentID;
			

			
			UPDATE tblKartrisOrders SET O_AffiliatePaymentID = 0 WHERE O_AffiliatePaymentID = @AffiliatePaymentID;
		
	End

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisUsers_Update]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisUsers_Update]
(
		   @U_ID int,
			@U_AccountHolderName nvarchar(50),
		   @U_EmailAddress nvarchar(100),
		   @U_Password nvarchar(64),
			@U_LanguageID tinyint,
			@U_CustomerGroupID int,
			@U_CustomerDiscount real,
			@U_Approved bit,
			@U_IsAffiliate bit,
			@U_AffiliateCommission real,
			@U_SupportEndDate datetime,
			@U_Notes nvarchar(MAX),
			@U_SaltValue nvarchar(64)
)
AS
	IF @U_Password = ''
		BEGIN
			SET @U_Password = NULL;
			SET @U_SaltValue = NULL;
		END;
	IF @U_AccountHolderName = ''
		BEGIN
			SET @U_AccountHolderName = NULL;
		END;
		
	IF @U_Notes = ''
		BEGIN
			SET @U_Notes = NULL;
		END;
	SET NOCOUNT OFF;

	
	UPDATE [tblKartrisUsers] SET
			[U_AccountHolderName] = COALESCE (@U_AccountHolderName, U_AccountHolderName),
			[U_EmailAddress] = @U_EmailAddress ,
			[U_Password] = COALESCE (@U_Password, U_Password),
			[U_LanguageID] = @U_LanguageID ,
			[U_CustomerGroupID] = @U_CustomerGroupID , 
			[U_CustomerDiscount] = @U_CustomerDiscount , 
			[U_Approved] = @U_Approved ,
			[U_IsAffiliate] = @U_IsAffiliate ,
			[U_AffiliateCommission] = @U_AffiliateCommission,
			[U_SupportEndDate] = @U_SupportEndDate,
			[U_Notes] = COALESCE (@U_Notes, U_Notes),
			[U_SaltValue] = COALESCE (@U_SaltValue, U_SaltValue)
			WHERE U_ID = @U_ID;
	SELECT @U_ID;
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisUsers_ListBySearchTermCount]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisUsers_ListBySearchTermCount]
(
	@SearchTerm nvarchar(100),
	@isAffiliate bit,
	@isMailingList bit,
	@CustomerGroupID int,
	@isAffiliateApproved bit
)
AS
BEGIN
	
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	


DECLARE @intAffiliateCommision int

IF @isAffiliate = 0
	BEGIN
		SET @isAffiliate = NULL
		SET @isAffiliateApproved = 0
	END

IF @isAffiliateApproved = 0
	BEGIN		
		SET @intAffiliateCommision = NULL
	END	
ELSE
	BEGIN		
		SET @intAffiliateCommision = 0
	END	


	
IF @isMailingList = 0
	BEGIN
		SET @isMailingList = NULL 
	END

IF @CustomerGroupID = 0
	BEGIN
		SET @CustomerGroupID = NULL 
	END
ELSE
	BEGIN
		SET @SearchTerm = '?'
	END;

IF @SearchTerm IS NULL OR @SearchTerm = '?' OR @SearchTerm = ''
BEGIN
	SELECT      count(1)
	FROM         tblKartrisUsers 
	WHERE   (U_IsAffiliate = COALESCE (@isAffiliate, U_IsAffiliate))
			AND (U_ML_SendMail = COALESCE (@isMailingList, U_ML_SendMail))
			AND (U_CustomerGroupiD = COALESCE (@CustomerGroupID, U_CustomerGroupiD)
			AND (U_AffiliateCommission = COALESCE (@intAffiliateCommision, U_AffiliateCommission)))

END
ELSE
BEGIN
	SELECT      count(1)
FROM         tblKartrisAddresses RIGHT OUTER JOIN
					  tblKartrisUsers ON tblKartrisAddresses.ADR_ID = tblKartrisUsers.U_DefBillingAddressID
		WHERE     ((tblKartrisUsers.U_AccountHolderName LIKE '%' + @SearchTerm + '%') OR
								(tblKartrisAddresses.ADR_Name LIKE '%' + @SearchTerm + '%') OR 
							  (tblKartrisAddresses.ADR_Company LIKE '%' + @SearchTerm + '%') OR
							  (tblKartrisUsers.U_EmailAddress LIKE '%' + @SearchTerm + '%') OR
							  (tblKartrisAddresses.ADR_StreetAddress LIKE '%' + @SearchTerm + '%') OR
							  (tblKartrisAddresses.ADR_TownCity LIKE '%' + @SearchTerm + '%') OR
							  (tblKartrisAddresses.ADR_County LIKE '%' + @SearchTerm + '%') OR
							  (tblKartrisAddresses.ADR_PostCode LIKE '%' + @SearchTerm + '%'))
END
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisUsers_ListBySearchTerm]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisUsers_ListBySearchTerm]
(
	@SearchTerm nvarchar(100),
	@isAffiliate bit,
	@isMailingList bit,
	@CustomerGroupID int,
	@isAffiliateApproved bit,
	@PageIndex as tinyint, -- 0 Based index
	@PageSize smallint = 50
)
AS
BEGIN
	
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
DECLARE @StartRowNumber as int;
	SET @StartRowNumber = (@PageIndex * @PageSize) + 1;
	DECLARE @EndRowNumber as int;
	SET @EndRowNumber = @StartRowNumber + @PageSize - 1;


DECLARE @intAffiliateCommision int

IF @isAffiliate = 0
	BEGIN
		SET @isAffiliate = NULL
		SET @isAffiliateApproved = 0
	END

IF @isAffiliateApproved = 0
	BEGIN		
		SET @intAffiliateCommision = NULL
	END	
ELSE
	BEGIN		
		SET @intAffiliateCommision = 0
	END	


	
IF @isMailingList = 0
	BEGIN
		SET @isMailingList = NULL 
	END

IF @CustomerGroupID = 0
	BEGIN
		SET @CustomerGroupID = NULL 
	END
ELSE
	BEGIN
		SET @SearchTerm = '?'
	END;

IF @SearchTerm IS NULL OR @SearchTerm = '?' OR @SearchTerm = ''
BEGIN

WITH UsersList AS
	(
SELECT      ROW_NUMBER() OVER (ORDER BY U_ID DESC) AS Row,tblKartrisUsers.U_ID, tblKartrisUsers.U_AccountHolderName, tblKartrisUsers.U_EmailAddress, tblKartrisAddresses.ADR_Name,U_IsAffiliate,U_AffiliateCommission, U_CustomerBalance
FROM         tblKartrisAddresses RIGHT OUTER JOIN
					  tblKartrisUsers ON tblKartrisAddresses.ADR_ID = tblKartrisUsers.U_DefBillingAddressID
WHERE     (U_IsAffiliate = COALESCE (@isAffiliate, U_IsAffiliate))
			AND (U_ML_SendMail = COALESCE (@isMailingList, U_ML_SendMail))
			AND (U_CustomerGroupiD = COALESCE (@CustomerGroupID, U_CustomerGroupiD)
			AND (U_AffiliateCommission = COALESCE (@intAffiliateCommision, U_AffiliateCommission)))
)
SELECT *
	FROM UsersList
	WHERE Row BETWEEN @StartRowNumber AND @EndRowNumber;
	
END
ELSE
BEGIN
WITH UsersList AS
	(
	SELECT      ROW_NUMBER() OVER (ORDER BY U_ID DESC) AS Row,tblKartrisUsers.U_ID, tblKartrisUsers.U_AccountHolderName, tblKartrisUsers.U_EmailAddress, tblKartrisAddresses.ADR_Name,U_IsAffiliate,U_AffiliateCommission, U_CustomerBalance
	FROM         tblKartrisAddresses RIGHT OUTER JOIN
						  tblKartrisUsers ON tblKartrisAddresses.ADR_ID = tblKartrisUsers.U_DefBillingAddressID
	WHERE     ((tblKartrisUsers.U_AccountHolderName LIKE '%' + @SearchTerm + '%') OR
						(tblKartrisAddresses.ADR_Name LIKE '%' + @SearchTerm + '%') OR 
						(tblKartrisAddresses.ADR_Company LIKE '%' + @SearchTerm + '%') OR
						(tblKartrisUsers.U_EmailAddress LIKE '%' + @SearchTerm + '%') OR
						(tblKartrisAddresses.ADR_StreetAddress LIKE '%' + @SearchTerm + '%') OR
						(tblKartrisAddresses.ADR_TownCity LIKE '%' + @SearchTerm + '%') OR
						(tblKartrisAddresses.ADR_County LIKE '%' + @SearchTerm + '%') OR
						(tblKartrisAddresses.ADR_PostCode LIKE '%' + @SearchTerm + '%'))
	)
	SELECT *
		FROM UsersList
		WHERE Row BETWEEN @StartRowNumber AND @EndRowNumber;
END
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisUsers_GetTicketsDetailsByID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisUsers_GetTicketsDetailsByID]
(
	@U_ID as int
)
AS
SET NOCOUNT OFF;

DECLARE @WholeTickets as bigint;
SELECT @WholeTickets = Count(TIC_ID)
FROM dbo.tblKartrisSupportTickets;

DECLARE @WholeMessages as bigint;
SELECT @WholeMessages = Count(STM_ID)
FROM dbo.tblKartrisSupportTicketMessages;

DECLARE @WholeTime as bigint;
SELECT @WholeTime = Sum(TIC_TimeSpent)
FROM dbo.tblKartrisSupportTickets;

SELECT     tblKartrisUsers.U_ID AS UserID, tblKartrisUsers.U_EmailAddress, COUNT(tblKartrisSupportTickets.TIC_ID) AS UserTickets, tblMessages.UserMessages, 
					  SUM(tblKartrisSupportTickets.TIC_TimeSpent) AS UserTime, @WholeTickets AS TotalTickets, @WholeMessages AS TotalMessages, @WholeTime AS TotalTime
FROM         tblKartrisSupportTickets LEFT OUTER JOIN
					  tblKartrisUsers ON tblKartrisSupportTickets.TIC_UserID = tblKartrisUsers.U_ID INNER JOIN
						  (SELECT     tblKartrisUsers_1.U_ID, COUNT(tblKartrisSupportTicketMessages.STM_ID) AS UserMessages
							 FROM         tblKartrisSupportTickets AS tblKartrisSupportTickets_1 INNER JOIN
												   tblKartrisSupportTicketMessages ON tblKartrisSupportTickets_1.TIC_ID = tblKartrisSupportTicketMessages.STM_TicketID LEFT OUTER JOIN
												   tblKartrisUsers AS tblKartrisUsers_1 ON tblKartrisSupportTickets_1.TIC_UserID = tblKartrisUsers_1.U_ID
							 GROUP BY tblKartrisUsers_1.U_ID) AS tblMessages ON tblMessages.U_ID = tblKartrisUsers.U_ID
GROUP BY tblKartrisUsers.U_ID, tblKartrisUsers.U_EmailAddress, tblMessages.UserMessages
HAVING tblKartrisUsers.U_ID = @U_ID
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisUsers_GetTicketsDetails]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisUsers_GetTicketsDetails]
AS
SET NOCOUNT OFF;

DECLARE @WholeTickets as bigint;
SELECT @WholeTickets = Count(TIC_ID)
FROM dbo.tblKartrisSupportTickets;

DECLARE @WholeMessages as bigint;
SELECT @WholeMessages = Count(STM_ID)
FROM dbo.tblKartrisSupportTicketMessages;

DECLARE @WholeTime as bigint;
SELECT @WholeTime = Sum(TIC_TimeSpent)
FROM dbo.tblKartrisSupportTickets;

SELECT     tblKartrisUsers.U_ID AS UserID, tblKartrisUsers.U_EmailAddress, COUNT(tblKartrisSupportTickets.TIC_ID) AS UserTickets, tblMessages.UserMessages, 
					  SUM(tblKartrisSupportTickets.TIC_TimeSpent) AS UserTime, @WholeTickets AS TotalTickets, @WholeMessages AS TotalMessages, @WholeTime AS TotalTime
FROM         tblKartrisSupportTickets LEFT OUTER JOIN
					  tblKartrisUsers ON tblKartrisSupportTickets.TIC_UserID = tblKartrisUsers.U_ID INNER JOIN
						  (SELECT     tblKartrisUsers_1.U_ID, COUNT(tblKartrisSupportTicketMessages.STM_ID) AS UserMessages
							 FROM         tblKartrisSupportTickets AS tblKartrisSupportTickets_1 INNER JOIN
												   tblKartrisSupportTicketMessages ON tblKartrisSupportTickets_1.TIC_ID = tblKartrisSupportTicketMessages.STM_TicketID LEFT OUTER JOIN
												   tblKartrisUsers AS tblKartrisUsers_1 ON tblKartrisSupportTickets_1.TIC_UserID = tblKartrisUsers_1.U_ID
							 GROUP BY tblKartrisUsers_1.U_ID) AS tblMessages ON tblMessages.U_ID = tblKartrisUsers.U_ID
GROUP BY tblKartrisUsers.U_ID, tblKartrisUsers.U_EmailAddress, tblMessages.UserMessages
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisUsers_GetDetails]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisUsers_GetDetails]
(
	@U_ID int
)
AS
SET NOCOUNT OFF;
SELECT        TOP 1 
				*
				
FROM            tblKartrisUsers
WHERE        (U_ID = @U_ID)
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisUsers_GetAffiliateReport]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 26/Apr/08
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisUsers_GetAffiliateReport] ( 
	@intType tinyint,
	@ReportMonth as int,
	@ReportYear as int,
	@ReportStartDate as datetime,
	@Paid as bit=0,
	@AffiliateID as int=0,
	@PageIndexStart int=1,
	@PageIndexEnd int=1000
) AS
BEGIN
	SET NOCOUNT ON;

	If @intType=1 -- hits for month and year
	Begin
		select count(AFLG_ID) as Hits, U_ID,U_EmailAddress from tblKartrisAffiliateLog AL
		inner join tblKartrisUsers USR on AL.AFLG_AffiliateID=USR.U_ID
		where month(AFLG_DateTime)=@ReportMonth and year(AFLG_DateTime)=@ReportYear
		group by U_ID,U_EmailAddress
		order by U_EmailAddress
	End

	If @intType=2 -- hits for the last year
	Begin	
		select count(AFLG_ID) as Hits, year(AFLG_DateTime) as TheYear, month(AFLG_DateTime) as TheMonth from tblKartrisAffiliateLog AL
		where AFLG_DateTime >= @ReportStartDate
		group by year(AFLG_DateTime), month(AFLG_DateTime)
		order by year(AFLG_DateTime) DESC, month(AFLG_DateTime) DESC
	End

	If @intType=3 -- sales for month and year
	Begin
		select sum(ROUND(O_AffiliateTotalPrice + 0.00000001,2)) AS OrderAmount,USR.U_AffiliateID,USR1.U_EmailAddress from tblKartrisUsers AS USR
		inner join tblKartrisOrders as ORD on USR.U_ID = ORD.O_CustomerID 
		inner join tblKartrisUsers as USR1 on USR1.U_ID = USR.U_AffiliateID
		where O_Sent=1 and O_AffiliatePercentage>0
			and month(O_Date)=@ReportMonth and year(O_Date)=@ReportYear and isnull(O_Paid,0)=@Paid
		group by USR.U_AffiliateID,USR1.U_EmailAddress,USR1.U_ID
	End

	If @intType=4 -- sales for the last year
	Begin
		select SUM(ROUND(O_AffiliateTotalPrice + 0.00000001,2)) AS OrderAmount, YEAR(O_Date) AS TheYear, MONTH(O_Date) AS TheMonth FROM tblKartrisUsers as USR
		inner join tblKartrisOrders as ORD on USR.U_ID = ORD.O_CustomerID --and USR.U_ID=USR.U_AffiliateID
		where O_Sent=1 and O_AffiliatePercentage>0 and isnull(O_Paid,0)=@Paid
			and O_Date>=@ReportStartDate
		GROUP BY Month(O_Date), Year(O_Date) 
		ORDER BY Year(O_Date) DESC, Month(O_Date) DESC 
	End

	If @intType=5 -- individual affiliate summary report
	Begin	
		declare @Clicks int
		select @Clicks=count(AFLG_ID) from tblKartrisAffiliateLog as AL
		inner join tblKartrisUsers as USR on USR.U_ID=AL.AFLG_AffiliateID
		WHERE U_ID=@AffiliateID  AND MONTH(AFLG_DateTime)=@ReportMonth AND YEAR(AFLG_DateTime)=@ReportYear

		declare @OrderTotal float
		declare @Commission float
		declare @EmailAddress nvarchar(100)
		select @OrderTotal=sum(Round(O_AffiliateTotalPrice,2)),@Commission=sum(Round(O_AffiliateTotalPrice * (O_AffiliatePercentage/100) + 0.00000001 ,2)), @EmailAddress=USR1.U_EmailAddress from tblKartrisUsers as USR 
		inner join tblKartrisOrders as ORD on USR.U_ID = ORD.O_CustomerID --and USR.U_ID=USR.U_AffiliateID
		inner join tblKartrisUsers as USR1 on USR1.U_ID = USR.U_AffiliateID
		where O_Sent=1 and O_AffiliatePercentage>0 and USR.U_AffiliateID=@AffiliateID
			and month(O_Date)=@ReportMonth and year(O_Date)=@ReportYear and O_Paid=@Paid
		GROUP BY USR.U_AffiliateID, USR1.U_EmailAddress, Month(O_Date), Year(O_Date)

		If isnull(@EmailAddress,'')=''
		Begin
			select @EmailAddress=U_EmailAddress from tblKartrisUsers where U_ID=@AffiliateID
		End
	
		select isnull(@EmailAddress,'') as U_EmailAddress,isnull(@OrderTotal,0) as OrderTotal, isnull(@Commission,0) as Commission, @Clicks as Clicks
	End

	If @intType=6 -- individual affiliate raw data hits
	Begin	
		select * from (
		select ROW_NUMBER() OVER (ORDER BY AFLG_DateTime) as RowNum, AFLG_DateTime, AFLG_IP, AFLG_Referer from tblKartrisAffiliateLog
		WHERE AFLG_AffiliateID=@AffiliateID AND MONTH(AFLG_DateTime)=@ReportMonth AND YEAR(AFLG_DateTime)=@ReportYear
		) A
		where RowNum between @PageIndexStart and @PageIndexEnd
		order by RowNum ASC
	End

	If @intType=7 -- individual affiliate raw data sales
	Begin	
		select * from (
		select ROW_NUMBER() OVER (ORDER BY O_ID) as RowNum,* from (
			select SUM(ROUND(O_AffiliateTotalPrice,2)) AS OrderTotal, SUM(ROUND(O_AffiliateTotalPrice * (O_AffiliatePercentage/100) + 0.00000001 ,2)) AS Commission, 
				O_AffiliatePercentage,O_Date,U_ID,U_AccountHolderName,U_EmailAddress,O_ID from tblKartrisUsers as USR 
			inner join tblKartrisOrders as ORD on ORD.O_CustomerID=USR.U_ID
			where U_AffiliateID=@AffiliateID and O_AffiliatePercentage>0
				and year(O_Date)=@ReportYear and month(O_Date)=@ReportMonth and O_Sent=1 and O_Paid=@Paid
			group by O_ID,O_AffiliatePercentage,O_Date,U_ID,U_AccountHolderName,U_EmailAddress,O_ID) A
		) B
		where RowNum between @PageIndexStart and @PageIndexEnd
		order by RowNum ASC
	End

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisUsers_GetAffiliateCommission]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 21/Apr/09
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisUsers_GetAffiliateCommission] (
	@intType int,
	@UserID int,
	@Paid bit=1,
	@PageIndexStart int=1,
	@PageIndexEnd int=1000
) AS

BEGIN
	SET NOCOUNT ON;
	
	If @intType=0 -- summary of commission
	Begin
		declare @PaidCommission float
		declare @UnpaidCommission float
		declare @EmailAddress nvarchar(100)	
		
		-- paid
		select @PaidCommission=sum(ROUND(O_AffiliateTotalPrice * (O_AffiliatePercentage/100) + 0.00000001 ,2)), @EmailAddress=USR1.U_EmailAddress from tblKartrisUsers USR
		inner join tblKartrisOrders ORD on ORD.O_CustomerID = USR.U_ID
		inner join tblKartrisUsers USR1 on USR1.U_ID=USR.U_AffiliateID
		where USR.U_AffiliateID = @UserID and O_Sent=1 and O_AffiliatePaymentID <> 0 and O_Paid=@Paid
		group by USR1.U_EmailAddress		

		-- unpaid
		select @UnpaidCommission=sum(ROUND(O_AffiliateTotalPrice * (O_AffiliatePercentage/100) + 0.00000001 ,2)), @EmailAddress=USR1.U_EmailAddress from tblKartrisUsers USR
		inner join tblKartrisOrders ORD on ORD.O_CustomerID = USR.U_ID
		inner join tblKartrisUsers USR1 on USR1.U_ID=USR.U_AffiliateID
		where USR.U_AffiliateID = @UserID and O_Sent=1 and O_AffiliatePaymentID = 0 and O_Paid=@Paid
		group by USR1.U_EmailAddress

		select @EmailAddress=U_EmailAddress from tblKartrisUsers where U_ID=@UserID

		select isnull(@EmailAddress,'') as EmailAddress, isnull(@PaidCommission,0) as PaidCommission, isnull(@UnpaidCommission,0) as UnpaidCommission
	End

	Else If @intType=1 -- details of Unpaid commission
	Begin
		select * from (
			select U_ID,O_ID,ROW_NUMBER() OVER (ORDER BY ORD.O_Date) as RowNum, O_Date,sum(round(O_AffiliateTotalPrice * (O_AffiliatePercentage/100) + 0.00000001 ,2)) AS Commission,O_AffiliatePercentage from tblKartrisUsers as USR
			inner join tblKartrisOrders  as ORD on ORD.O_CustomerID = USR.U_ID
			where U_AffiliateID = @UserID and O_Sent=1 and O_AffiliatePercentage>0 and O_AffiliatePaymentID=0 and O_Paid=@Paid
			group by U_ID,ORD.O_ID, ORD.O_Date,ORD.O_AffiliatePercentage
		) A
		where RowNum between @PageIndexStart and @PageIndexEnd
		order by RowNum ASC
	End

	Else -- details of payments (paid commission)
	Begin
		select * from (
			select ROW_NUMBER() OVER (ORDER BY AFP_DateTime) as RowNum, AFP_ID, AFP_DateTime, count(O_ID) AS TotalOrders, sum(ROUND(O_AffiliateTotalPrice * (O_AffiliatePercentage/100) + 0.00000001 ,2)) AS TotalPayment FROM tblKartrisOrders as ORD
			INNER JOIN tblKartrisAffiliatePayments as AP ON ORD.O_AffiliatePaymentID = AP.AFP_ID
			INNER JOIN tblKartrisUsers AS USR ON AP.AFP_AffiliateID = USR.U_ID 
			WHERE U_ID = @UserID AND O_Sent = 1 AND O_Paid = @Paid
			GROUP BY AFP_ID, AFP_DateTime 
		) A
		where RowNum between @PageIndexStart and @PageIndexEnd
		order by RowNum ASC
	End

End
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisUsers_GetAddressesByUserID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	Get all stored user addresses
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisUsers_GetAddressesByUserID]
(
	@U_ID int,
	@ADR_Type varchar(1)
)
AS
SET NOCOUNT OFF;
SELECT        *
FROM            tblKartrisAddresses
WHERE        (ADR_UserID = @U_ID) AND (ADR_Type = 'u' OR ADR_Type = @ADR_Type)
GO
/****** Object:  StoredProcedure [dbo].[spKartrisCustomer_GetAffiliateData]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 20/July/2008
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisCustomer_GetAffiliateData] (
	@Type as smallint,
	@AffiliateID int,
	@Month as smallint=0,
	@Year as smallint=0
) AS
BEGIN
	SET NOCOUNT ON;

	If @Type=1
	Begin
		select sum(round(O_AffiliateTotalPrice+0.00000001,2)) as OrderAmount, year(O_Date) as TheYear, month(O_Date) as TheMonth from tblKartrisUsers U
		inner join tblKartrisOrders O on U.U_ID=O.O_CustomerID
		where U.U_AffiliateID=@AffiliateID and O.O_AffiliatePercentage>0 and O.O_Sent=1 and O.O_Paid=1
		group by U_AffiliateID, year(O_Date), month(O_Date), O_Sent
		order by Year(O_Date) desc, Month(O_Date) desc
	End

	If @Type=2
	Begin
		select count(AFLG_ID) as HitCount, year(AFLG_DateTime) as TheYear, month(AFLG_DateTime) as TheMonth from tblKartrisAffiliateLog AL
		inner join tblKartrisUsers U on AL.AFLG_AffiliateID=U.U_ID
		where U.U_ID=@AffiliateID
		group by year(AFLG_DateTime), month(AFLG_DateTime) 
		order by year(AFLG_DateTime) desc, month(AFLG_DateTime) desc
	End

	If @Type=3 -- monthly (Commission)
	Begin
		declare @OrderTotal float
		declare @Commission float
		declare @Hits float

		select @OrderTotal=isnull(sum(round(O_AffiliateTotalPrice+0.00000001,2)),0),
			@Commission=isnull(sum(round(O_AffiliateTotalPrice * (O_AffiliatePercentage/100) + 0.00000001,2)),0) 
		from tblKartrisUsers U inner join tblKartrisOrders O on U.U_ID=O.O_CustomerID
		where U.U_AffiliateID=@AffiliateID and O.O_AffiliatePercentage>0 and O.O_Sent=1 and O.O_Paid=1
			and year(O_Date)=@Year and month(O_Date)=@Month

		select @Hits=count(AFLG_ID) from tblKartrisAffiliateLog AL
			inner join tblKartrisUsers U on AL.AFLG_AffiliateID=U.U_ID
		where U_ID=@AffiliateID and month(AFLG_DateTime)=@Month and year(AFLG_DateTime)=@Year

		select @OrderTotal as OrderTotal, @Commission as Commission, @Hits as Hits
	End

	If @Type=4 -- monthly (Sales from Affiliate Link)
	Begin
		select sum(round(O_AffiliateTotalPrice,2)) as OrderTotal,
			sum(round(O_AffiliateTotalPrice * (O_AffiliatePercentage/100) + 0.00000001,2)) as Commission ,
			O_AffiliatePercentage,O_Date,O_AffiliatePaymentID from tblKartrisUsers
		inner join tblKartrisOrders ON tblKartrisUsers.U_ID = tblKartrisOrders.O_CustomerID
		where U_AffiliateID = @AffiliateID
			and O_AffiliatePercentage>0 and O_Sent=1 and O_Paid=1 
			and year(O_Date)=@Year and month(O_Date)=@Month 
		group by O_AffiliateTotalPrice,O_AffiliatePercentage,O_Date,O_AffiliatePaymentID,O_ID
		order by O_ID
	End

	If @Type=5 -- balance (Payment Made)	
	Begin	
		select AFP_ID, AFP_DateTime,count(O_ID) as TotalOrders, 
			sum(round(O_AffiliateTotalPrice * (O_AffiliatePercentage/100) + 0.00000001 ,2)) as TotalPayment from tblKartrisAffiliatePayments AP
		inner join tblKartrisOrders O on O.O_AffiliatePaymentID=AP.AFP_ID
		inner join tblKartrisUsers U on AP.AFP_AffiliateID=U.U_ID
		where AFP_AffiliateID=@AffiliateID and O_Sent=1 and O_Paid=1
		group by AFP_ID, AFP_DateTime
	End

	If @Type=6 -- balance (Unpaid Sales)
	Begin
		select SUM(ROUND(O_AffiliateTotalPrice * (O_AffiliatePercentage/100) + 0.00000001 ,2)) as Commission,
			O_ID,O_AffiliatePercentage,O_Date,USR1.U_ID,USR1.U_EmailAddress,USR1.U_AccountHolderName from tblKartrisUsers USR
		inner join tblKartrisOrders O on O.O_CustomerID=USR.U_ID
		inner join tblKartrisUsers USR1 on USR1.U_ID=USR.U_AffiliateID
		where O_Sent=1 and O_AffiliatePercentage>0 and O_AffiliatePaymentID=0 and O_Paid=1
			and USR1.U_ID=@AffiliateID
		group by O_ID,O_AffiliatePercentage,O_Date,USR1.U_ID,USR1.U_EmailAddress,USR1.U_AccountHolderName
		order by O_ID asc
	End

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisCustomer_ConfirmMail]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 19/Aug/08
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisCustomer_ConfirmMail](
	@U_ID int,
	@Password nvarchar(100),
	@ConfirmDate datetime,
	@ConfirmIP nvarchar(20)
)AS

BEGIN
	SET NOCOUNT ON;
	
	declare @UserID int
	
	select @UserID=U_ID from tblKartrisUsers where U_ID=@U_ID and U_ML_RandomKey=@Password

	If @UserID is not null 
	Begin
	
		update tblKartrisUsers 
			set U_ML_SendMail=1, 
			U_ML_ConfirmationDateTime = @ConfirmDate,
			U_ML_ConfirmationIP = @ConfirmIP
		where U_ID = @U_ID;
	
	End

	select isnull(@UserID,0) as UserID

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisCustomer_AffiliateLog]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 18/Jan/09
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisCustomer_AffiliateLog] ( 
	@AffiliateID as integer,
	@Referer as nvarchar(255),
	@IP as nvarchar(30),
	@RequestedItem as nvarchar(255),
	@NowOffset datetime
) AS
BEGIN
	SET NOCOUNT ON;
	
	insert into tblKartrisAffiliateLog (AFLG_AffiliateID,AFLG_Referer,AFLG_IP,AFLG_RequestedItem,AFLG_DateTime)
	values (@AffiliateID,@Referer,@IP,@RequestedItem,@NowOffset);
	


END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasketValues_UpdateQuantity]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 29/Apr/08
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisBasketValues_UpdateQuantity] (
	@BV_ID int,
	@BV_Quantity float
)
AS
BEGIN
	SET NOCOUNT ON;

	Update tblKartrisBasketValues 
	set BV_Quantity=@BV_Quantity
	where BV_ID=@BV_ID;

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasketValues_Update]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisBasketValues_Update]
(
	@BV_ParentType char(1),
	@BV_ParentID bigint,
	@BV_VersionID bigint,
	@BV_Quantity float,
	@BV_CustomText nvarchar(MAX),
	@BV_DateTimeAdded smalldatetime,
	@BV_LastUpdated smalldatetime,
	@Original_BV_ID bigint,
	@BV_ID bigint
)
AS
	SET NOCOUNT OFF;

--	
	UPDATE [tblKartrisBasketValues] SET [BV_ParentType] = @BV_ParentType, [BV_ParentID] = @BV_ParentID, [BV_VersionID] = @BV_VersionID, [BV_Quantity] = @BV_Quantity, [BV_CustomText] = @BV_CustomText, [BV_DateTimeAdded] = @BV_DateTimeAdded, [BV_LastUpdated] = @BV_LastUpdated WHERE (([BV_ID] = @Original_BV_ID));
--	

	
SELECT BV_ID, BV_ParentType, BV_ParentID, BV_VersionID, BV_Quantity, BV_CustomText, BV_DateTimeAdded, BV_LastUpdated FROM tblKartrisBasketValues WHERE (BV_ID = @BV_ID)
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasketValues_SaveCustomText]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 22/Oct/08
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisBasketValues_SaveCustomText] (
	@BV_ID as int,
	@CustomText as nvarchar(2000)
) AS
BEGIN
	SET NOCOUNT ON;

--	

	update tblKartrisBasketValues
	set BV_CustomText=@CustomText
	where BV_ID=@BV_ID;

--	

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasketValues_Delete]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisBasketValues_Delete]
(
	@Original_BV_ID bigint
)
AS
	SET NOCOUNT OFF;
--	
	DELETE FROM [tblKartrisBasketValues] WHERE (([BV_ID] = @Original_BV_ID));
--
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasketValues_AddQuantityToItem]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisBasketValues_AddQuantityToItem]
(
	@BV_QuantityToAdd float,
	@BV_ID bigint
)
AS
	SET NOCOUNT OFF;
	UPDATE       tblKartrisBasketValues
	SET                BV_Quantity = BV_Quantity + @BV_QuantityToAdd
	WHERE        (BV_ID = @BV_ID);
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasketValues_Add]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisBasketValues_Add]
(
	@BV_ParentType char(1),
	@BV_ParentID bigint,
	@BV_VersionID bigint,
	@BV_Quantity float,
	@BV_CustomText nvarchar(MAX),
	@BV_DateTimeAdded smalldatetime,
	@BV_LastUpdated smalldatetime,
	@BV_CreatedID bigint output
)
AS
	SET NOCOUNT OFF;
	INSERT INTO [tblKartrisBasketValues] ([BV_ParentType], [BV_ParentID], [BV_VersionID], [BV_Quantity], [BV_CustomText], [BV_DateTimeAdded], [BV_LastUpdated]) VALUES (@BV_ParentType, @BV_ParentID, @BV_VersionID, @BV_Quantity, @BV_CustomText, @BV_DateTimeAdded, @BV_LastUpdated);
	
	SELECT @BV_CreatedID = SCOPE_IDENTITY();
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasket_GetSavedBasket]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisBasket_GetSavedBasket] ( 
	@intType smallint,
	@CustomerID int,
	@PageIndexStart int=0,
	@PageIndexEnd int=0
) 
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @cnt bigint

	If @intType=0
	Begin
		SELECT @cnt=count(SBSKT_ID) from (
			SELECT distinct SB.* from tblKartrisSavedBaskets SB
			inner join tblKartrisBasketValues BV on SB.SBSKT_ID=BV.BV_ParentID and BV.BV_ParentType='s'
			where SB.SBSKT_UserID=@CustomerID
		) A
		select isnull(@cnt,0) 'TotalRec'
	End
	Else
	Begin
		SELECT * from (
		SELECT ROW_NUMBER() OVER (ORDER BY SBSKT_ID desc) 'RowNum', A.* from (
			SELECT distinct SB.* from tblKartrisSavedBaskets SB
			inner join tblKartrisBasketValues BV on SB.SBSKT_ID=BV.BV_ParentID and BV.BV_ParentType='s'
			where SB.SBSKT_UserID=@CustomerID) A
		) B
		WHERE RowNum>=@PageIndexStart AND RowNum<=@PageIndexEnd
	End
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasket_GetQtyDiscount]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 02/June/2008
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisBasket_GetQtyDiscount](
	@VersionID int,
	@Quantity float
)AS
BEGIN

	SET NOCOUNT ON;

	select top 1 * from tblKartrisQuantityDiscounts
	where QD_VersionID=@VersionID and QD_Quantity<=@Quantity order by QD_Quantity desc

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasketValues_Get]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisBasketValues_Get]
AS
	SET NOCOUNT ON;
SELECT        tblKartrisBasketValues.*
FROM            tblKartrisBasketValues
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasket_GetCustomerOrders]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 22/March/2009
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisBasket_GetCustomerOrders] ( 
	@intType smallint,
	@CustomerID int,
	@PageIndexStart int=0,
	@PageIndexEnd int=0
) 
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @cnt bigint

	If @intType=0
	Begin
		select @cnt=count(O_ID) from tblKartrisOrders O 
			inner join tblKartrisCurrencies C on O.O_CurrencyID=C.CUR_ID
		where O_Sent=1 and O_CustomerID=@CustomerID
		select isnull(@cnt,0)'TotalRec'
	End	
	Else
	Begin
		select * from (
			select ROW_NUMBER() OVER (ORDER BY O_Date desc) as RowNum,O_ID,O_Date,O_LastModified,O_TotalPrice,O_PromotionDiscountTotal,O_CouponDiscountTotal,O_DiscountPercentage,O_ShippingPrice,O_OrderHandlingCharge,O_OrderHandlingChargeTax,O_CurrencyID,O_Sent,CUR_Symbol,CUR_RoundNumbers from tblKartrisOrders O
			inner join tblKartrisCurrencies C on O.O_CurrencyID=C.CUR_ID
			where O_Sent=1 and O_CustomerID=@CustomerID
		) ORD 
		WHERE RowNum>=@PageIndexStart AND RowNum<=@PageIndexEnd 
	End

END
GO
/****** Object:  UserDefinedFunction [dbo].[fnKartrisConfig_GetValue]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnKartrisConfig_GetValue] 
(
	@ConfigName as nvarchar(100)
)
RETURNS nvarchar(255)
AS
BEGIN
	-- Declare the return variable here
	DECLARE @Result nvarchar(255);
	
	SELECT @Result = CFG_Value
	FROM tblKartrisConfig
	WHERE CFG_Name = @ConfigName;

	-- Return the result of the function
	RETURN @Result

END
GO
/****** Object:  UserDefinedFunction [dbo].[fnKartrisConfig_GetDefaultLanguage]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnKartrisConfig_GetDefaultLanguage] 
()
RETURNS tinyint
AS
BEGIN
	-- Declare the return variable here
	DECLARE @Result tinyint;
	
	SELECT @Result = CAST(CFG_Value as tinyint)
	FROM tblKartrisConfig
	WHERE CFG_Name = 'frontend.languages.default'

	-- Return the result of the function
	RETURN @Result

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasket_GetCustomerDiscount]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 20/May/2008
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisBasket_GetCustomerDiscount] (
	@CustomerID int
) AS
BEGIN
	SET NOCOUNT ON;

	declare @CG_Discount int
	declare @U_CustomerDiscount float
	declare @Discount float


	select @CG_Discount=isnull(CG.CG_Discount,0),@U_CustomerDiscount=U.U_CustomerDiscount from tblKartrisUsers U
	left join tblKartrisCustomerGroups CG on U.U_CustomerGroupID=CG.CG_ID and CG.CG_Live=1
	where U_ID=@CustomerID

	IF @U_CustomerDiscount = 0 BEGIN
		SET @Discount = @CG_Discount;
	END
	ELSE	BEGIN
		SET @Discount = @U_CustomerDiscount;
	END

	select isnull(@Discount,0) as 'Discount'

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasket_GetCustomer]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 07/Apr/2008
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisBasket_GetCustomer] ( 
	@UserID int=0,
	@Email  nvarchar(200)='',
	@Password nvarchar(200)=''
) AS
BEGIN
	SET NOCOUNT ON;

	If @UserID=0 
	Begin
		select * from tblKartrisUsers
		where U_EmailAddress=@Email and U_Password=@Password
	End
	Else
	Begin
		select * from tblKartrisUsers
		where U_ID=@UserID
	End
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasket_GetCouponCode]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 01/May/2008
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisBasket_GetCouponCode] (
	@CouponCode as varchar(200)
) AS
BEGIN

	SET NOCOUNT ON
	
	SELECT * FROM tblKartrisCoupons
	WHERE CP_CouponCode=@CouponCode

END
GO
/****** Object:  UserDefinedFunction [dbo].[fnKartris_GetRemainingWishlist]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 6/May/09
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnKartris_GetRemainingWishlist] (
	@CustomerID int,
	@VersionID int,
	@CustomText nvarchar(MAX)
)
RETURNS int
AS
BEGIN
	
	DECLARE @Result int

	select @Result=BV_Quantity from tblKartrisBasketValues 
	where BV_ParentType='r' and BV_ParentID=@CustomerID and BV_VersionID=@VersionID and BV_CustomText=@CustomText

	RETURN @Result

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisOrders_UpdateStatus]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisOrders_UpdateStatus]
(
	@O_ID int,
	@O_Sent bit,
	@O_Paid bit,
	@O_Shipped bit,
	@O_Invoiced bit,
	@O_Cancelled bit,
	@O_LastModified smalldatetime,
	@O_Status nvarchar(MAX),
	@O_Notes nvarchar(MAX)
)
AS
	IF @O_Status = ''
	BEGIN
		SET @O_Status = NULL;
	END
	
	IF @O_Notes = ''
	BEGIN
		SET @O_Notes = NULL;
	END
	
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT OFF;
	
	UPDATE tblKartrisOrders SET O_Sent = @O_Sent,
								O_Paid = @O_Paid, 
								O_Shipped = @O_Shipped,
								O_Invoiced = @O_Invoiced, 
								O_Cancelled = @O_Cancelled,
								O_Status = COALESCE(@O_Status,O_Status), 
								O_LastModified = @O_LastModified,
								O_Notes = COALESCE(@O_Notes,O_Notes)
		WHERE O_ID = @O_ID;
	UPDATE [tblKartrisOrderPaymentLink] SET [OP_OrderCanceled] = @O_Cancelled WHERE OP_OrderID = @O_ID;
	Select @O_ID;
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisOrders_ToPurgeOrdersList]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisOrders_ToPurgeOrdersList]
(
	
	@O_PurgeDate smalldatetime = NULL
)
AS
BEGIN
	
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
		SELECT O_ID FROM tblKartrisOrders WHERE O_Date <= @O_PurgeDate AND O_Sent = 0;
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisKnowledgeBase_Update]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisKnowledgeBase_Update]
(
	@KB_ID as int,
	@KB_Live as bit,
	@NowOffset_Created as smalldatetime,
	@NowOffset_Updated as smalldatetime
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


	-- Insert statements for procedure here
	UPDATE tblKartrisKnowledgeBase 
	SET KB_DateCreated = @NowOffset_Created, KB_LastUpdated = @NowOffset_Updated, KB_Live = @KB_Live
	WHERE KB_ID = @KB_ID;

	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPromotions_Update]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisPromotions_Update]
(
	@PROM_ID smallint,
	@PROM_StartDate smalldatetime,
	@PROM_EndDate smalldatetime,
	@PROM_Live bit,
	@PROM_OrderByValue smallint,
	@PROM_MaxQuantity tinyint
)
AS
	SET NOCOUNT OFF;
	
	UPDATE	[tblKartrisPromotions] 
	SET		[PROM_StartDate] = @PROM_StartDate, [PROM_EndDate] = @PROM_EndDate, [PROM_Live] = @PROM_Live, 
			[PROM_OrderByValue] = @PROM_OrderByValue, [PROM_MaxQuantity] = @PROM_MaxQuantity 
	WHERE	(([PROM_ID] = @PROM_ID));
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPromotions_GetByID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisPromotions_GetByID]
(
	@PROM_ID int
)
AS
	SET NOCOUNT ON;
	SELECT        tblKartrisPromotions.*
	FROM            tblKartrisPromotions 
	WHERE	PROM_ID = @PROM_ID
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPromotions_Add]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisPromotions_Add]
(	
	@PROM_StartDate smalldatetime,
	@PROM_EndDate smalldatetime,
	@PROM_Live bit,
	@PROM_OrderByValue smallint,
	@PROM_MaxQuantity tinyint,
	@NewPROM_ID int OUT
)
AS
	SET NOCOUNT OFF;
	
	
	INSERT INTO [tblKartrisPromotions] ([PROM_StartDate], [PROM_EndDate], [PROM_Live], [PROM_OrderByValue], [PROM_MaxQuantity]) 
	VALUES (@PROM_StartDate, @PROM_EndDate, @PROM_Live, @PROM_OrderByValue, @PROM_MaxQuantity);
	
	SELECT @NewPROM_ID = SCOPE_IDENTITY();
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPromotions_Get]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisPromotions_Get]
AS
	SET NOCOUNT ON;
	SELECT        tblKartrisPromotions.*
	FROM            tblKartrisPromotions 
	ORDER BY PROM_StartDate DESC --, PROM_Live DESC, PROM_ID DESC
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisShippingMethods_Update]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ==============================================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	Update Shipping Method
-- ===============================================================
CREATE PROCEDURE [dbo].[_spKartrisShippingMethods_Update]
(
	@SM_ID as tinyint,
	@SM_Live as bit,
	@SM_OrderByValue as tinyint,
	@SM_Tax as tinyint,
	@SM_Tax2 as tinyint
)
AS
BEGIN
	SET NOCOUNT ON;
	
	UPDATE dbo.tblKartrisShippingMethods
	SET SM_Live = @SM_Live, SM_OrderByValue = @SM_OrderByValue, SM_Tax = @SM_Tax, SM_Tax2 = @SM_Tax2
	WHERE SM_ID = @SM_ID;
	

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisQuantityDiscounts_GetByVersion]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisQuantityDiscounts_GetByVersion]
(
	@VersionID bigint
)
AS
	SET NOCOUNT ON;
SELECT QD_Quantity, QD_Price 
FROM tblKartrisQuantityDiscounts
WHERE QD_VersionID = @VersionID
ORDER BY QD_Quantity
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisQuantityDiscounts_DeleteByVersion]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisQuantityDiscounts_DeleteByVersion]
(
	@VersionID bigint
)
AS
	SET NOCOUNT ON;
	
	DELETE FROM tblKartrisQuantityDiscounts
	WHERE QD_VersionID = @VersionID;
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisQuantityDiscounts_Add]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisQuantityDiscounts_Add]
(
	@VersionID bigint,
	@Quantity as real,
	@Price as DECIMAL(18,4)
)
AS
	SET NOCOUNT ON;
	
	INSERT INTO tblKartrisQuantityDiscounts
	VALUES(@VersionID, @Quantity, @Price);
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisOrders_GetParentOrderID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ===================================================
-- Author:		Medz
-- Create date: 
-- Description:	
-- ===================================================
CREATE PROCEDURE [dbo].[_spKartrisOrders_GetParentOrderID]
(
	@O_ID int
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	SELECT TOP(1) [CO_ParentOrderID] FROM [dbo].[tblKartrisClonedOrders] WHERE [CO_OrderID] = @O_ID ORDER BY [CO_ParentOrderID] DESC;
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisOrders_GetInvoiceRows]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisOrders_GetInvoiceRows]
(
		   @OrderID int
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT [IR_VersionCode]
	  ,[IR_VersionName]
	  ,[IR_Quantity]
	  ,[IR_PricePerItem]
	  ,[IR_TaxPerItem]
	  ,[IR_OptionsText] FROM tblKartrisInvoiceRows WHERE IR_OrderNumberID = @OrderID;
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisOrders_GetGateways]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisOrders_GetGateways]
AS
	SET NOCOUNT ON;
SELECT DISTINCT O_PaymentGateway FROM tblKartrisOrders
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisOrders_GetCustomerTotal]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisOrders_GetCustomerTotal]
(
	@CustomerID as int
)
AS
BEGIN

	SELECT Sum(O_TotalPrice / O_CurrencyRate) as TotalValue
	FROM dbo.tblKartrisOrders LEFT OUTER JOIN
					  tblKartrisClonedOrders ON tblKartrisOrders.O_ID = tblKartrisClonedOrders.CO_ParentOrderID
	WHERE CO_OrderID IS NULL AND O_DATA IS NOT NULL AND O_CustomerID = @CustomerID AND O_Sent = 1

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisOrders_GetChildOrderID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ===================================================
-- Author:		Medz
-- Create date: 
-- Description:	
-- ===================================================
CREATE PROCEDURE [dbo].[_spKartrisOrders_GetChildOrderID]
(
	@O_ID int
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	SELECT TOP(1) [CO_OrderID] FROM [dbo].[tblKartrisClonedOrders] WHERE [CO_ParentOrderID] = @O_ID ORDER BY [CO_OrderID] DESC;
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisOrders_GetByStatusCount]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisOrders_GetByStatusCount]
(
	@Callmode varchar(10),
	@O_AffiliatePaymentID int = NULL,
	@O_DateRangeStart smalldatetime = NULL,
	@O_DateRangeEnd smalldatetime = NULL,
	@O_Gateway varchar(10) = NULL,
	@O_GatewayID varchar(30) = NULL
)
AS
BEGIN
	
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


	DECLARE @O_Sent bit;
	DECLARE @O_Invoiced bit;
	DECLARE @O_Paid bit;
	DECLARE @O_Shipped bit ;
	DECLARE @O_CustomerID int;
	DECLARE @O_Cancelled bit ;

	SET @O_Cancelled = 0;

	IF @Callmode = 'RECENT'
	BEGIN
		SET @O_Sent = 1;
	END
	
	ELSE IF @Callmode = 'INVOICE'
	BEGIN
		SET @O_Sent = 1;
		SET @O_Paid = 0;
		SET @O_Invoiced = 0;
	END
	
	ELSE IF @Callmode = 'DISPATCH'
	BEGIN
		SET @O_Sent = 1; 
		SET @O_Paid = 1;
		SET @O_Shipped = 0;
	END

	ELSE IF @Callmode = 'COMPLETE'
	BEGIN
		SET @O_Paid = 1;
		SET @O_Shipped = 1;
	END
	
	ELSE IF @Callmode = 'PAYMENT'
	BEGIN
		SET @O_Sent = 1; 
		SET @O_Paid = 0; 
		SET @O_Invoiced = 1;
	END
	
	ELSE IF @Callmode = 'UNFINISHED'
	BEGIN
		SET @O_Sent = 0;
	END
	
	ELSE IF @Callmode = 'CANCELLED'
	BEGIN
		SET @O_Cancelled = 1;
	END
	
	IF @Callmode <> 'CUSTOMER'
	BEGIN
		SET @O_CustomerID = NULL;
	END	
	ELSE
		BEGIN
			SET @O_CustomerID = @O_GatewayID;
			SET @O_Sent = 1;
		END

	IF @Callmode <> 'AFFILIATE'
	BEGIN
		SET @O_AffiliatePaymentID = NULL;
	END

	IF @Callmode <> 'BYDATE'
		BEGIN
			SET @O_DateRangeStart = NULL;
			SET @O_DateRangeEnd = NULL;
		END
	ELSE
		BEGIN
			SET @O_Sent = 1;
		END

	IF @Callmode <> 'GATEWAY'
		BEGIN
			SET @O_Gateway = NULL;
			IF @Callmode <> 'SEARCH'
				BEGIN
					SET @O_GatewayID = NULL;
				END
		END;


	IF @Callmode = 'RECENT' OR @Callmode = 'INVOICE' OR @Callmode = 'DISPATCH' OR @Callmode = 'COMPLETE' OR @Callmode = 'PAYMENT' OR @Callmode = 'UNFINISHED' OR @Callmode = 'CANCELLED'
		BEGIN
			SELECT count(1) 
			FROM         tblKartrisOrders LEFT OUTER JOIN
					  tblKartrisClonedOrders ON tblKartrisOrders.O_ID = tblKartrisClonedOrders.CO_ParentOrderID
			WHERE     (O_Sent = COALESCE (@O_Sent, O_Sent)) AND (O_Invoiced = COALESCE (@O_Invoiced, O_Invoiced)) AND (O_Paid = COALESCE (@O_Paid, O_Paid)) AND 
								  (O_Shipped = COALESCE (@O_Shipped, O_Shipped)) AND (O_Cancelled = COALESCE (@O_Cancelled, O_Cancelled))
		END
	ELSE
		IF @Callmode = 'SEARCH'
			BEGIN
				SELECT count(1) 
				FROM         tblKartrisOrders LEFT OUTER JOIN
					  tblKartrisClonedOrders ON tblKartrisOrders.O_ID = tblKartrisClonedOrders.CO_ParentOrderID
				WHERE     (O_BillingAddress LIKE '%' + @O_GatewayID + '%') OR (O_ShippingAddress LIKE '%' + @O_GatewayID + '%')
			END
		ELSE
			BEGIN
				SELECT count(1) 
				FROM         tblKartrisOrders LEFT OUTER JOIN
					  tblKartrisClonedOrders ON tblKartrisOrders.O_ID = tblKartrisClonedOrders.CO_ParentOrderID
				WHERE     (O_Sent = COALESCE (@O_Sent, O_Sent)) AND (O_AffiliatePaymentID = COALESCE (@O_AffiliatePaymentID, O_AffiliatePaymentID)) AND 
									  (O_Date >= COALESCE (@O_DateRangeStart, O_Date)) AND (O_Date <= COALESCE (@O_DateRangeEnd, O_Date)) AND (O_PaymentGateWay = COALESCE (@O_Gateway, O_PaymentGateWay)) 
										AND (O_ReferenceCode = COALESCE (@O_GatewayID, O_ReferenceCode)) AND (O_CustomerID = COALESCE (@O_CustomerID, O_CustomerID))
			END
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisOrders_GetByStatus]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisOrders_GetByStatus]
(
	@Callmode varchar(10),
	@O_AffiliatePaymentID int = NULL,
	@O_DateRangeStart smalldatetime = NULL,
	@O_DateRangeEnd smalldatetime = NULL,
	@O_Gateway varchar(10) = NULL,
	@O_GatewayID varchar(30) = NULL,
	@PageIndex as tinyint, -- 0 Based index
	@Limit smallint = 50
)
AS
BEGIN
	
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DECLARE @StartRowNumber as int;
	SET @StartRowNumber = (@PageIndex * @Limit) + 1;
	DECLARE @EndRowNumber as int;
	SET @EndRowNumber = @StartRowNumber + @Limit - 1;

	DECLARE @O_Sent bit;
	DECLARE @O_Invoiced bit;
	DECLARE @O_Paid bit;
	DECLARE @O_Shipped bit ;
	DECLARE @O_CustomerID int;
	DECLARE @O_Cancelled bit ;

	SET @O_Cancelled = 0;

	IF @Callmode = 'RECENT'
	BEGIN
		SET @O_Sent = 1;
	END
	
	ELSE IF @Callmode = 'INVOICE'
	BEGIN
		SET @O_Sent = 1;
		SET @O_Paid = 0;
		SET @O_Invoiced = 0;
	END
	
	ELSE IF @Callmode = 'DISPATCH'
	BEGIN
		SET @O_Sent = 1; 
		SET @O_Paid = 1;
		SET @O_Shipped = 0;
	END

	ELSE IF @Callmode = 'COMPLETE'
	BEGIN
		SET @O_Paid = 1;
		SET @O_Shipped = 1;
	END
	
	ELSE IF @Callmode = 'PAYMENT'
	BEGIN
		SET @O_Sent = 1; 
		SET @O_Paid = 0; 
		SET @O_Invoiced = 1;
	END
	
	ELSE IF @Callmode = 'UNFINISHED'
	BEGIN
		SET @O_Sent = 0;
	END

	ELSE IF @Callmode = 'CANCELLED'
	BEGIN
		SET @O_Cancelled = 1;
	END
	
	IF @Callmode <> 'CUSTOMER'
	BEGIN
		SET @O_CustomerID = NULL;
	END	
	ELSE
		BEGIN
			SET @O_CustomerID = @O_GatewayID;
			SET @O_Sent = 1;
		END

	IF @Callmode <> 'AFFILIATE'
	BEGIN
		SET @O_AffiliatePaymentID = NULL;
	END

	IF @Callmode <> 'BYDATE'
		BEGIN
			SET @O_DateRangeStart = NULL;
			SET @O_DateRangeEnd = NULL;
		END
	ELSE
		BEGIN
			SET @O_Sent = 1;
		END

	IF @Callmode <> 'GATEWAY'
		BEGIN
			SET @O_Gateway = NULL;
			IF @Callmode <> 'SEARCH'
				BEGIN
					SET @O_GatewayID = NULL;
				END
		END;

	
	IF @Callmode = 'RECENT' OR @Callmode = 'INVOICE' OR @Callmode = 'DISPATCH' OR @Callmode = 'COMPLETE' OR @Callmode = 'PAYMENT' OR @Callmode = 'UNFINISHED' OR @Callmode = 'CANCELLED'
		BEGIN
			WITH OrdersList AS
			(
			SELECT     ROW_NUMBER() OVER (ORDER BY O_ID DESC) AS Row,O_ID, O_Date, O_TotalPrice, O_CustomerID, O_Sent, O_Invoiced, O_Shipped, O_Paid, O_Cancelled, O_CurrencyID, O_Status,
						substring(O_BillingAddress,0,charindex(char(13)+char(10),O_BillingAddress)) as O_BillingName,O_LanguageID, tblKartrisClonedOrders.CO_OrderID
			FROM         tblKartrisOrders LEFT OUTER JOIN
					  tblKartrisClonedOrders ON tblKartrisOrders.O_ID = tblKartrisClonedOrders.CO_ParentOrderID
			WHERE     (O_Sent = COALESCE (@O_Sent, O_Sent)) AND (O_Invoiced = COALESCE (@O_Invoiced, O_Invoiced)) AND (O_Paid = COALESCE (@O_Paid, O_Paid)) AND 
								  (O_Shipped = COALESCE (@O_Shipped, O_Shipped)) AND (O_Cancelled = COALESCE (@O_Cancelled, O_Cancelled))
			)
			SELECT *
			FROM OrdersList
			WHERE Row BETWEEN @StartRowNumber AND @EndRowNumber;
		END
	ELSE
		IF @Callmode = 'SEARCH'
			BEGIN
				WITH OrdersList AS
			(
			SELECT ROW_NUMBER() OVER (ORDER BY O_ID DESC) AS Row,O_ID, O_Date, O_TotalPrice, O_CustomerID, O_Sent, O_Invoiced, O_Shipped, O_Paid, O_Cancelled, O_CurrencyID, O_Status,
						substring(O_BillingAddress,0,charindex(char(13)+char(10),O_BillingAddress)) as O_BillingName,O_LanguageID, tblKartrisClonedOrders.CO_OrderID
				FROM         tblKartrisOrders LEFT OUTER JOIN
					  tblKartrisClonedOrders ON tblKartrisOrders.O_ID = tblKartrisClonedOrders.CO_ParentOrderID
				WHERE     (O_BillingAddress LIKE '%' + @O_GatewayID + '%') OR (O_ShippingAddress LIKE '%' + @O_GatewayID + '%')
			)
			SELECT *
				FROM OrdersList
				WHERE Row BETWEEN @StartRowNumber AND @EndRowNumber;
			END
		ELSE
		BEGIN
			WITH OrdersList AS
			(
			SELECT     ROW_NUMBER() OVER (ORDER BY O_ID DESC) AS Row,O_ID, O_Date, O_TotalPrice, O_CustomerID, O_Sent, O_Invoiced, O_Shipped, O_Paid, O_Cancelled, O_CurrencyID, O_Status,
						substring(O_BillingAddress,0,charindex(char(13)+char(10),O_BillingAddress)) as O_BillingName,O_LanguageID, tblKartrisClonedOrders.CO_OrderID
			FROM         tblKartrisOrders LEFT OUTER JOIN
					  tblKartrisClonedOrders ON tblKartrisOrders.O_ID = tblKartrisClonedOrders.CO_ParentOrderID
			WHERE     (O_Sent = COALESCE (@O_Sent, O_Sent)) AND (O_AffiliatePaymentID = COALESCE (@O_AffiliatePaymentID, O_AffiliatePaymentID)) AND 
								  (O_Date >= COALESCE (@O_DateRangeStart, O_Date)) AND (O_Date <= COALESCE (@O_DateRangeEnd, O_Date)) AND (O_PaymentGateWay = COALESCE (@O_Gateway, O_PaymentGateWay)) 
									AND (O_ReferenceCode = COALESCE (@O_GatewayID, O_ReferenceCode)) AND (O_CustomerID = COALESCE (@O_CustomerID, O_CustomerID))
			)
			SELECT *
				FROM OrdersList
				WHERE Row BETWEEN @StartRowNumber AND @EndRowNumber;
		END
		


	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisOrders_CloneAndCancel]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisOrders_CloneAndCancel]
(
			@O_ID int,
			@O_Details nvarchar(MAX),
			@O_BillingAddress nvarchar(255),
		   @O_ShippingAddress nvarchar(255),
			@O_Sent bit,
		   @O_Invoiced bit,
		   @O_Shipped bit,
		   @O_Paid bit,
			@O_ShippingPrice real,
		   @O_ShippingTax real,
		   @O_TotalPrice real,
		   @O_LastModified smalldatetime,
		   @O_CouponCode nvarchar(25),
		   @O_CouponDiscountTotal real,
		   @O_TaxDue real,
		   @O_TotalPriceGateway real,
		   @O_OrderHandlingCharge real,
		   @O_OrderHandlingChargeTax real,
		   @O_ShippingMethod nvarchar(255),
		   @O_Notes nvarchar(MAX),
		   @BackendUserID int,
		   @O_PurchaseOrderNo nvarchar(50),
		   @O_PromotionDiscountTotal real,
		   @O_PromotionDescription nvarchar(255),
			@O_AffiliateTotalPrice real,
			@O_SendOrderUpdateEmail bit,
			@O_PricesIncTax real,
			@O_CurrencyRate real
)
AS
	
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT OFF;
DECLARE @NewOrderID as int;
DECLARE @strCreatedFrom as nvarchar(MAX);
DECLARE @strCancelled as nvarchar(MAX);

SET @strCreatedFrom = (SELECT [LS_Value] FROM [dbo].[tblKartrisLanguageStrings]
						WHERE [LS_Name] = 'ContentText_OrderCancelCreatedFrom' AND [LS_LangID] = 1);
SET @strCancelled = (SELECT [LS_Value] FROM [dbo].[tblKartrisLanguageStrings]
						WHERE [LS_Name] = 'ContentText_OrderCancelReferTo' AND [LS_LangID] = 1);


	INSERT INTO [dbo].[tblKartrisOrders]
		   ([O_CustomerID]
		   ,[O_Details]
		   ,[O_ShippingPrice]
		   ,[O_ShippingTax]
		   ,[O_DiscountPercentage]
		   ,[O_AffiliatePercentage]
		   ,[O_TotalPrice]
		   ,[O_Date]
		   ,[O_PurchaseOrderNo]
		   ,[O_SecurityID]
		   ,[O_Sent]
		   ,[O_Invoiced]
		   ,[O_Shipped]
		   ,[O_Paid]
		   ,[O_Status]
		   ,[O_LastModified]
		   ,[O_WishListID]
		   ,[O_CouponCode]
		   ,[O_CouponDiscountTotal]
		   ,[O_PricesIncTax]
		   ,[O_TaxDue]
		   ,[O_PaymentGateWay]
		   ,[O_ReferenceCode]
		   ,[O_LanguageID]
		   ,[O_CurrencyID]
		   ,[O_TotalPriceGateway]
		   ,[O_CurrencyIDGateway]
		   ,[O_AffiliatePaymentID]
		   ,[O_AffiliateTotalPrice]
		   ,[O_SendOrderUpdateEmail]
		   ,[O_OrderHandlingCharge]
		   ,[O_OrderHandlingChargeTax]
		   ,[O_CurrencyRate]
		   ,[O_ShippingMethod]
		   ,[O_BillingAddress]
		   ,[O_ShippingAddress]
		   ,[O_PromotionDiscountTotal]
		   ,[O_PromotionDescription]
		   ,[O_SentToQB]
		   ,[O_Notes],[O_Cancelled])
	 SELECT [O_CustomerID]
	  ,@O_Details
	  ,@O_ShippingPrice
	  ,@O_ShippingTax
	  ,[O_DiscountPercentage]
	  ,[O_AffiliatePercentage]
	  ,@O_TotalPrice
	  ,@O_LastModified
	  ,@O_PurchaseOrderNo
	  ,[O_SecurityID]
	  ,@O_Sent
	  ,@O_Invoiced
	  ,@O_Shipped
	  ,@O_Paid
	  ,''
	  ,@O_LastModified
	  ,[O_WishListID]
	  ,@O_CouponCode
	  ,@O_CouponDiscountTotal
	  ,@O_PricesIncTax
	  ,@O_TaxDue
	  ,[O_PaymentGateWay]
	  ,''
	  ,[O_LanguageID]
	  ,[O_CurrencyID]
	  ,@O_TotalPriceGateway
	  ,[O_CurrencyIDGateway]
	  ,[O_AffiliatePaymentID]
	  ,@O_AffiliateTotalPrice
	  ,@O_SendOrderUpdateEmail
	  ,@O_OrderHandlingCharge
	  ,@O_OrderHandlingChargeTax
	  ,@O_CurrencyRate
	  ,@O_ShippingMethod
	  ,@O_BillingAddress
	  ,@O_ShippingAddress
	  ,@O_PromotionDiscountTotal
	  ,@O_PromotionDescription
	  ,0
	  ,@O_Notes + char(13)+char(10) + @strCreatedFrom + convert(nvarchar(24),@O_ID)
	  ,0
	FROM [dbo].[tblKartrisOrders] WHERE O_ID = @O_ID

	SET @NewOrderID = scope_identity()

	UPDATE tblKartrisOrders SET O_Paid = 0,
								O_LastModified = @O_LastModified,
								O_Cancelled = 1,
								O_Notes = COALESCE(O_Notes,'')  + char(13)+char(10) + 
								@strCancelled +
								convert(nvarchar(24),@NewOrderID)
								WHERE O_ID = @O_ID;

	UPDATE [dbo].[tblKartrisOrderPaymentLink]
   SET [OP_OrderCanceled] = 1
 WHERE OP_OrderID = @O_ID;
INSERT INTO [dbo].[tblKartrisClonedOrders]
		   ([CO_OrderID]
		   ,[CO_ParentOrderID]
		   ,[CO_CloneDate]
		   ,[CO_LoginID])
	 VALUES
		   (@NewOrderID,
		   @O_ID,
		   @O_LastModified,
		   @BackendUserID);
SELECT @NewOrderID;
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisOptionGroups_Update]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisOptionGroups_Update]
(
	@OPTG_BackendName nvarchar(50),
	@OPTG_OptionDisplayType char(1),
	@OPTG_DefOrderByValue smallint,
	@Original_OPTG_ID smallint
)
AS
	SET NOCOUNT OFF;

	UPDATE	[tblKartrisOptionGroups] 
	SET		[OPTG_BackendName] = @OPTG_BackendName, [OPTG_OptionDisplayType] = @OPTG_OptionDisplayType, 
			[OPTG_DefOrderByValue] = @OPTG_DefOrderByValue 
	WHERE	(([OPTG_ID] = @Original_OPTG_ID));
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisMediaLinks_GetByID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisMediaLinks_GetByID]
(
	@MediaLinkID as int
)
AS
BEGIN
SET NOCOUNT ON;
		SELECT     tblKartrisMediaLinks.ML_ID, tblKartrisMediaLinks.ML_ParentID, tblKartrisMediaLinks.ML_ParentType, tblKartrisMediaLinks.ML_SortOrder, 
					  tblKartrisMediaLinks.ML_EmbedSource, tblKartrisMediaLinks.ML_MediaTypeID, tblKartrisMediaLinks.ML_Height, tblKartrisMediaLinks.ML_Width, 
					  tblKartrisMediaLinks.ML_isDownloadable, tblKartrisMediaLinks.ML_Parameters, tblKartrisMediaLinks.ML_Live, tblKartrisMediaTypes.MT_Extension
FROM         tblKartrisMediaLinks INNER JOIN
					  tblKartrisMediaTypes ON tblKartrisMediaLinks.ML_MediaTypeID = tblKartrisMediaTypes.MT_ID
WHERE     (tblKartrisMediaLinks.ML_ID = @MediaLinkID)
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisLanguageStrings_Translate]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisLanguageStrings_Translate]
(
	@LanguageID tinyint,
	@FrontBack nvarchar(1),
	@Name nvarchar(255),
	@Value nvarchar(MAX),
	@Description nvarchar(255)
)
AS
	SET NOCOUNT OFF;

	UPDATE [tblKartrisLanguageStrings] 
	SET [LS_Value] = @Value, [LS_Description] = @Description
	WHERE [LS_LANGID] = @LanguageID AND [LS_FrontBack] = @FrontBack AND [LS_Name] = @Name ;
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisLanguageStrings_SearchForUpdate]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	BACK END USE
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisLanguageStrings_SearchForUpdate]
(
	@SearchBy as nvarchar(10),
	@Key as nvarchar(100),
	@FrontBack as nvarchar(1),
	@DefaultLANG_ID as tinyint,
	@LANG_ID as tinyint
)
AS
	SET NOCOUNT ON;

	IF @SearchBy = 'Name'
	BEGIN
		SELECT     tblKartrisLanguageStrings.LS_FrontBack, tblKartrisLanguageStrings.LS_ClassName, tblKartrisLanguageStrings.LS_Name, tblKartrisLanguageStrings.LS_Value, 
					  tblKartrisLanguageStrings.LS_Description, tblKartrisLanguageStrings_1.LS_Value AS Value, tblKartrisLanguageStrings_1.LS_Description AS [Desc]
		FROM         tblKartrisLanguageStrings LEFT OUTER JOIN
					  tblKartrisLanguageStrings AS tblKartrisLanguageStrings_1 ON tblKartrisLanguageStrings.LS_FrontBack = tblKartrisLanguageStrings_1.LS_FrontBack AND 
					  tblKartrisLanguageStrings.LS_Name = tblKartrisLanguageStrings_1.LS_Name AND 
					  tblKartrisLanguageStrings.LS_ClassName = tblKartrisLanguageStrings_1.LS_ClassName
		WHERE   (tblKartrisLanguageStrings.LS_LANGID = @DefaultLANG_ID) AND (tblKartrisLanguageStrings.LS_FrontBack LIKE '%' + @FrontBack + '%' ) AND (tblKartrisLanguageStrings.LS_Name LIKE '%' + @Key + '%')
				AND (tblKartrisLanguageStrings.LS_ClassName IS NOT NULL) AND (tblKartrisLanguageStrings_1.LS_LangID = @LANG_ID)
	END
	
	IF @SearchBy = 'Value'
	BEGIN
		SELECT     tblKartrisLanguageStrings.LS_FrontBack, tblKartrisLanguageStrings.LS_ClassName, tblKartrisLanguageStrings.LS_Name, tblKartrisLanguageStrings.LS_Value, 
					  tblKartrisLanguageStrings.LS_Description, tblKartrisLanguageStrings_1.LS_Value AS Value, tblKartrisLanguageStrings_1.LS_Description AS [Desc]
		FROM         tblKartrisLanguageStrings LEFT OUTER JOIN
					  tblKartrisLanguageStrings AS tblKartrisLanguageStrings_1 ON tblKartrisLanguageStrings.LS_FrontBack = tblKartrisLanguageStrings_1.LS_FrontBack AND 
					  tblKartrisLanguageStrings.LS_Name = tblKartrisLanguageStrings_1.LS_Name AND 
					  tblKartrisLanguageStrings.LS_ClassName = tblKartrisLanguageStrings_1.LS_ClassName
		WHERE   (tblKartrisLanguageStrings.LS_LANGID = @DefaultLANG_ID) AND (tblKartrisLanguageStrings.LS_FrontBack LIKE '%' + @FrontBack + '%' ) AND (tblKartrisLanguageStrings.LS_Value LIKE '%' + @Key + '%')
				AND (tblKartrisLanguageStrings.LS_ClassName IS NOT NULL) AND (tblKartrisLanguageStrings_1.LS_LangID = @LANG_ID)
	END
	
	IF @SearchBy = 'ClassName'
	BEGIN
		SELECT     tblKartrisLanguageStrings.LS_FrontBack, tblKartrisLanguageStrings.LS_ClassName, tblKartrisLanguageStrings.LS_Name, tblKartrisLanguageStrings.LS_Value, 
					  tblKartrisLanguageStrings.LS_Description, tblKartrisLanguageStrings_1.LS_Value AS Value, tblKartrisLanguageStrings_1.LS_Description AS [Desc]
		FROM         tblKartrisLanguageStrings LEFT OUTER JOIN
					  tblKartrisLanguageStrings AS tblKartrisLanguageStrings_1 ON tblKartrisLanguageStrings.LS_FrontBack = tblKartrisLanguageStrings_1.LS_FrontBack AND 
					  tblKartrisLanguageStrings.LS_Name = tblKartrisLanguageStrings_1.LS_Name AND 
					  tblKartrisLanguageStrings.LS_ClassName = tblKartrisLanguageStrings_1.LS_ClassName
		WHERE   (tblKartrisLanguageStrings.LS_LANGID = @DefaultLANG_ID) AND (tblKartrisLanguageStrings.LS_FrontBack LIKE '%' + @FrontBack + '%' ) AND (tblKartrisLanguageStrings.LS_ClassName LIKE '%' + @Key + '%')
				AND (tblKartrisLanguageStrings.LS_ClassName IS NOT NULL) AND (tblKartrisLanguageStrings_1.LS_LangID = @LANG_ID)
	END
	
	IF @SearchBy = ''
	BEGIN
		SELECT     tblKartrisLanguageStrings.LS_FrontBack, tblKartrisLanguageStrings.LS_ClassName, tblKartrisLanguageStrings.LS_Name, tblKartrisLanguageStrings.LS_Value, 
					  tblKartrisLanguageStrings.LS_Description, tblKartrisLanguageStrings_1.LS_Value AS Value, tblKartrisLanguageStrings_1.LS_Description AS [Desc]
		FROM         tblKartrisLanguageStrings LEFT OUTER JOIN
					  tblKartrisLanguageStrings AS tblKartrisLanguageStrings_1 ON tblKartrisLanguageStrings.LS_FrontBack = tblKartrisLanguageStrings_1.LS_FrontBack AND 
					  tblKartrisLanguageStrings.LS_Name = tblKartrisLanguageStrings_1.LS_Name
		WHERE   (tblKartrisLanguageStrings.LS_LANGID = @DefaultLANG_ID) AND (tblKartrisLanguageStrings.LS_FrontBack LIKE '%' + @FrontBack + '%' )
				AND ((tblKartrisLanguageStrings.LS_Name LIKE '%' + @Key + '%') OR (tblKartrisLanguageStrings.LS_Value LIKE '%' + @Key + '%') OR (tblKartrisLanguageStrings.LS_ClassName LIKE '%' + @Key + '%'))
				AND (tblKartrisLanguageStrings_1.LS_LangID = @LANG_ID)
	END

	

--USE [KartrisSQL]
--GO
--/****** Object:  StoredProcedure [dbo].[_spKartrisLanguageStrings_SearchForUpdate]    Script Date: 08/17/2009 10:15:17 ******/
--SET ANSI_NULLS ON
--GO
--SET QUOTED_IDENTIFIER ON
--GO
--
---- =============================================
---- Author:		Mohammad
---- Create date: <Create Date,,>
---- Description:	BACK END USE
---- =============================================
--ALTER PROCEDURE [dbo].[_spKartrisLanguageStrings_SearchForUpdate]
--(
--	@SearchBy as nvarchar(10),
--	@Key as nvarchar(100),
--	@FrontBack as nvarchar(1),
--	@DefaultLANG_ID as tinyint,
--	@LANG_ID as tinyint
--)
--AS
--	SET NOCOUNT ON;
--
--	IF @SearchBy = 'Name'
--	BEGIN
--		SELECT     tblKartrisLanguageStrings.LS_FrontBack, tblKartrisLanguageStrings.LS_ClassName, tblKartrisLanguageStrings.LS_Name, tblKartrisLanguageStrings.LS_Value, 
--                      tblKartrisLanguageStrings.LS_Description, tblKartrisLanguageStrings_1.LS_Value AS Value, tblKartrisLanguageStrings_1.LS_Description AS [Desc]
--		FROM         tblKartrisLanguageStrings LEFT OUTER JOIN
--                      tblKartrisLanguageStrings AS tblKartrisLanguageStrings_1 ON tblKartrisLanguageStrings.LS_FrontBack = tblKartrisLanguageStrings_1.LS_FrontBack AND 
--                      tblKartrisLanguageStrings.LS_Name = tblKartrisLanguageStrings_1.LS_Name AND 
--                      tblKartrisLanguageStrings.LS_ClassName = tblKartrisLanguageStrings_1.LS_ClassName
--		WHERE   (tblKartrisLanguageStrings.LS_LANGID = @DefaultLANG_ID) AND (tblKartrisLanguageStrings.LS_FrontBack LIKE '%' + @FrontBack + '%' ) AND (tblKartrisLanguageStrings.LS_Name LIKE '%' + @Key + '%')
--				AND (tblKartrisLanguageStrings.LS_ClassName IS NOT NULL) AND (tblKartrisLanguageStrings_1.LS_LangID = @LANG_ID) AND (tblKartrisLanguageStrings.LS_VirtualPath <> 'Install.aspx')
--	END
--	
--	IF @SearchBy = 'Value'
--	BEGIN
--		SELECT     tblKartrisLanguageStrings.LS_FrontBack, tblKartrisLanguageStrings.LS_ClassName, tblKartrisLanguageStrings.LS_Name, tblKartrisLanguageStrings.LS_Value, 
--                      tblKartrisLanguageStrings.LS_Description, tblKartrisLanguageStrings_1.LS_Value AS Value, tblKartrisLanguageStrings_1.LS_Description AS [Desc]
--		FROM         tblKartrisLanguageStrings LEFT OUTER JOIN
--                      tblKartrisLanguageStrings AS tblKartrisLanguageStrings_1 ON tblKartrisLanguageStrings.LS_FrontBack = tblKartrisLanguageStrings_1.LS_FrontBack AND 
--                      tblKartrisLanguageStrings.LS_Name = tblKartrisLanguageStrings_1.LS_Name AND 
--                      tblKartrisLanguageStrings.LS_ClassName = tblKartrisLanguageStrings_1.LS_ClassName
--		WHERE   (tblKartrisLanguageStrings.LS_LANGID = @DefaultLANG_ID) AND (tblKartrisLanguageStrings.LS_FrontBack LIKE '%' + @FrontBack + '%' ) AND (tblKartrisLanguageStrings.LS_Value LIKE '%' + @Key + '%')
--				AND (tblKartrisLanguageStrings.LS_ClassName IS NOT NULL) AND (tblKartrisLanguageStrings_1.LS_LangID = @LANG_ID) AND (tblKartrisLanguageStrings.LS_VirtualPath <> 'Install.aspx')
--	END
--	
--	IF @SearchBy = 'ClassName'
--	BEGIN
--		SELECT     tblKartrisLanguageStrings.LS_FrontBack, tblKartrisLanguageStrings.LS_ClassName, tblKartrisLanguageStrings.LS_Name, tblKartrisLanguageStrings.LS_Value, 
--                      tblKartrisLanguageStrings.LS_Description, tblKartrisLanguageStrings_1.LS_Value AS Value, tblKartrisLanguageStrings_1.LS_Description AS [Desc]
--		FROM         tblKartrisLanguageStrings LEFT OUTER JOIN
--                      tblKartrisLanguageStrings AS tblKartrisLanguageStrings_1 ON tblKartrisLanguageStrings.LS_FrontBack = tblKartrisLanguageStrings_1.LS_FrontBack AND 
--                      tblKartrisLanguageStrings.LS_Name = tblKartrisLanguageStrings_1.LS_Name AND 
--                      tblKartrisLanguageStrings.LS_ClassName = tblKartrisLanguageStrings_1.LS_ClassName
--		WHERE   (tblKartrisLanguageStrings.LS_LANGID = @DefaultLANG_ID) AND (tblKartrisLanguageStrings.LS_FrontBack LIKE '%' + @FrontBack + '%' ) AND (tblKartrisLanguageStrings.LS_ClassName LIKE '%' + @Key + '%')
--				AND (tblKartrisLanguageStrings.LS_ClassName IS NOT NULL) AND (tblKartrisLanguageStrings_1.LS_LangID = @LANG_ID)
--	END
--	
--	IF @SearchBy = ''
--	BEGIN
--		SELECT     tblKartrisLanguageStrings.LS_FrontBack, tblKartrisLanguageStrings.LS_ClassName, tblKartrisLanguageStrings.LS_Name, tblKartrisLanguageStrings.LS_Value, 
--                      tblKartrisLanguageStrings.LS_Description, tblKartrisLanguageStrings_1.LS_Value AS Value, tblKartrisLanguageStrings_1.LS_Description AS [Desc]
--		FROM         tblKartrisLanguageStrings LEFT OUTER JOIN
--                      tblKartrisLanguageStrings AS tblKartrisLanguageStrings_1 ON tblKartrisLanguageStrings.LS_FrontBack = tblKartrisLanguageStrings_1.LS_FrontBack AND 
--                      tblKartrisLanguageStrings.LS_Name = tblKartrisLanguageStrings_1.LS_Name AND 
--                      tblKartrisLanguageStrings.LS_ClassName = tblKartrisLanguageStrings_1.LS_ClassName
--		WHERE   (tblKartrisLanguageStrings.LS_LANGID = @DefaultLANG_ID) AND (tblKartrisLanguageStrings.LS_FrontBack LIKE '%' + @FrontBack + '%' )
--				AND ((tblKartrisLanguageStrings.LS_Name LIKE '%' + @Key + '%') OR (tblKartrisLanguageStrings.LS_Value LIKE '%' + @Key + '%') OR (tblKartrisLanguageStrings.LS_ClassName LIKE '%' + @Key + '%'))
--				AND (tblKartrisLanguageStrings.LS_ClassName IS NOT NULL) AND (tblKartrisLanguageStrings_1.LS_LangID = @LANG_ID) AND (tblKartrisLanguageStrings.LS_VirtualPath <> 'Install.aspx')
--	END
--
--
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisLanguageStrings_Search]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	BACK END USE
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisLanguageStrings_Search]
(
	@SearchBy as nvarchar(10),
	@Key as nvarchar(100),
	@LANG_ID as tinyint,
	@FrontBack as nvarchar(1)
)
AS
	SET NOCOUNT ON;

	IF @SearchBy = 'Name'
	BEGIN
		SELECT  *
		FROM    tblKartrisLanguageStrings
		WHERE   (LS_LANGID = @LANG_ID) AND (LS_FrontBack LIKE '%' + @FrontBack + '%' ) AND (LS_Name LIKE '%' + @Key + '%') --AND (tblKartrisLanguageStrings.LS_VirtualPath <> 'Install.aspx')
	END
	
	IF @SearchBy = 'Value'
	BEGIN
		SELECT  *
		FROM    tblKartrisLanguageStrings
		WHERE   (LS_LANGID = @LANG_ID) AND (LS_FrontBack LIKE '%' + @FrontBack + '%' ) AND (LS_Value LIKE '%' + @Key + '%')-- AND (tblKartrisLanguageStrings.LS_VirtualPath <> 'Install.aspx')
	END
	
	IF @SearchBy = 'ClassName'
	BEGIN
		SELECT  *
		FROM    tblKartrisLanguageStrings
		WHERE   (LS_LANGID = @LANG_ID) AND (LS_FrontBack LIKE '%' + @FrontBack + '%' ) AND (LS_ClassName LIKE '%' + @Key + '%')
	END
	
	IF @SearchBy = ''
	BEGIN
		SELECT  *
		FROM    tblKartrisLanguageStrings
		WHERE   (LS_LANGID = @LANG_ID) AND (LS_FrontBack LIKE '%' + @FrontBack + '%' )
				AND ((LS_Name LIKE '%' + @Key + '%') OR (LS_Value LIKE '%' + @Key + '%') OR (LS_ClassName LIKE '%' + @Key + '%')) --AND (tblKartrisLanguageStrings.LS_VirtualPath <> 'Install.aspx')
	END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisLanguageStrings_GetTotalsPerLanguage]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisLanguageStrings_GetTotalsPerLanguage]
AS
BEGIN
	SET NOCOUNT OFF;

	SELECT    LS_LangID  as ID, tblKartrisLanguages.LANG_BackName as Name, COUNT(1) AS Total
	FROM        dbo.tblKartrisLanguageStrings  INNER JOIN
					  tblKartrisLanguages ON LS_LangID = tblKartrisLanguages.LANG_ID
	GROUP BY LS_LangID, tblKartrisLanguages.LANG_BackName
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisLanguageStrings_GetByID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisLanguageStrings_GetByID]
(
	@LS_FrontBack char(1),
	@LS_LANGID tinyint,
	@LS_Name nvarchar(255)
)
AS
	SET NOCOUNT ON;
SELECT        tblKartrisLanguages.LANG_BackName, tblKartrisLanguageStrings.LS_FrontBack, tblKartrisLanguageStrings.LS_Name, tblKartrisLanguageStrings.LS_Value, 
						 tblKartrisLanguageStrings.LS_Description, tblKartrisLanguageStrings.LS_VersionAdded, tblKartrisLanguageStrings.LS_DefaultValue, 
						 tblKartrisLanguageStrings.LS_VirtualPath, tblKartrisLanguageStrings.LS_ClassName, tblKartrisLanguageStrings.LS_LANGID, 
						 tblKartrisLanguageStrings.LS_ID
FROM            tblKartrisLanguageStrings INNER JOIN
						 tblKartrisLanguages ON tblKartrisLanguageStrings.LS_LANGID = tblKartrisLanguages.LANG_ID
WHERE        (tblKartrisLanguageStrings.LS_FrontBack = @LS_FrontBack) AND (tblKartrisLanguageStrings.LS_LANGID = @LS_LANGID) AND 
						 (tblKartrisLanguageStrings.LS_Name = @LS_Name)
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisLanguageStrings_FixMissingStrings]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisLanguageStrings_FixMissingStrings]
(
	@SourceLanguage as tinyint,
	@DistinationLanguage as tinyint
)
AS
BEGIN

	SET NOCOUNT OFF;

	
	INSERT INTO dbo.tblKartrisLanguageStrings
	SELECT LS_FrontBack, LS_Name, NULL, NULL, LS_VersionAdded, NULL, LS_VirtualPath, LS_ClassName, @DistinationLanguage
	FROM dbo.tblKartrisLanguageStrings
	WHERE (LS_LangID = @SourceLanguage) AND 
			LS_FrontBack + LS_Name NOT IN 
				(  SELECT  tblKartrisLanguageStrings.LS_FrontBack + tblKartrisLanguageStrings.LS_Name
					FROM    tblKartrisLanguageStrings INNER JOIN
							  tblKartrisLanguageStrings AS tblKartrisLanguageStrings_1 ON 
							  tblKartrisLanguageStrings.LS_FrontBack = tblKartrisLanguageStrings_1.LS_FrontBack AND 
							  tblKartrisLanguageStrings.LS_Name = tblKartrisLanguageStrings_1.LS_Name
					WHERE tblKartrisLanguageStrings.LS_LangID = @SourceLanguage AND tblKartrisLanguageStrings_1.LS_LangID = @DistinationLanguage
				 );
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisLanguageStrings_Add]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisLanguageStrings_Add]
(
	@LS_LangID tinyint,
	@LS_FrontBack nvarchar(1),
	@LS_Name nvarchar(255),
	@LS_Value nvarchar(MAX),
	@LS_Description nvarchar(255),
	@LS_VersionAdded real,
	@LS_DefaultValue nvarchar(MAX),
	@LS_VirtualPath nvarchar(50),
	@LS_ClassName nvarchar(50)
)
AS
	SET NOCOUNT OFF;


	INSERT INTO [tblKartrisLanguageStrings] 
	([LS_LangID], [LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName]) 
	VALUES 
	(@LS_LangID, @LS_FrontBack, @LS_Name, @LS_Value, @LS_Description, @LS_VersionAdded, @LS_DefaultValue, @LS_VirtualPath, @LS_ClassName);


	IF SCOPE_IDENTITY() IS NOT NULL
	BEGIN
		DECLARE @LanguageID as tinyint;
		DECLARE langCursor CURSOR FOR 
		SELECT LANG_ID FROM dbo.tblKartrisLanguages WHERE LANG_ID <> @LS_LangID;

		OPEN langCursor
		FETCH NEXT FROM langCursor
		INTO @LanguageID;
		
		WHILE @@FETCH_STATUS = 0
		BEGIN
			
			INSERT INTO dbo.tblKartrisLanguageStrings
			VALUES (@LS_FrontBack, @LS_Name, NULL, NULL, @LS_VersionAdded, NULL, @LS_VirtualPath, @LS_ClassName, @LanguageID);
			
			FETCH NEXT FROM langCursor
			INTO @LanguageID;
		END

		CLOSE langCursor
		DEALLOCATE langCursor;
	END;
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisLanguages_Update]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisLanguages_Update]
(
	@Original_LANG_ID tinyint,
	@LANG_BackName nvarchar(50),
	@LANG_FrontName nvarchar(50),
	@LANG_SkinLocation nvarchar(50),
	@LANG_LiveFront bit,
	@LANG_LiveBack bit,
	@LANG_EmailFrom nvarchar(255),
	@LANG_EmailTo nvarchar(255),
	@LANG_EmailToContact nvarchar(255),
	@LANG_DateFormat nvarchar(50),
	@LANG_DateAndTimeFormat nvarchar(50),
	@LANG_Culture nvarchar(50),
	@LANG_UICulture nvarchar(50),
	@LANG_Master nvarchar(50),
	@LANG_Theme nvarchar(50)
)
AS
	SET NOCOUNT OFF;



	UPDATE [tblKartrisLanguages] 
	SET [LANG_BackName] = @LANG_BackName, [LANG_FrontName] = @LANG_FrontName, [LANG_SkinLocation] = @LANG_SkinLocation, [LANG_LiveFront] = @LANG_LiveFront, [LANG_LiveBack] = @LANG_LiveBack, [LANG_EmailFrom] = @LANG_EmailFrom, [LANG_EmailTo] = @LANG_EmailTo, [LANG_EmailToContact] = @LANG_EmailToContact, [LANG_DateFormat] = @LANG_DateFormat, [LANG_DateAndTimeFormat] = @LANG_DateAndTimeFormat, [LANG_Culture] = @LANG_Culture, [LANG_UICulture] = @LANG_UICulture, [LANG_Master] = @LANG_Master, [LANG_Theme] = @LANG_Theme
	WHERE (([LANG_ID] = @Original_LANG_ID));
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisLanguages_Get]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisLanguages_Get]
AS
	SET NOCOUNT ON;
SELECT * FROM tblKartrisLanguages;
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisMediaLinks_ChangeSortValue]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisMediaLinks_ChangeSortValue]
(
	@MediaID as int,
	@ParentID as bigint,
	@ParentType as char,
	@Direction as char
)
AS
BEGIN
	SET NOCOUNT OFF;
	
	DECLARE @MediaOrder as int;
	SELECT @MediaOrder = ML_SortOrder
	FROM  dbo.tblKartrisMediaLinks
	WHERE ML_ID = @MediaID;

	DECLARE @SwitchMediaID as int, @SwitchOrder as int;
	IF @Direction = 'u'
	BEGIN
		SELECT @SwitchOrder = MAX(ML_SortOrder) 
		FROM  dbo.tblKartrisMediaLinks
		WHERE ML_ParentID = @ParentID AND ML_ParentType = @ParentType AND ML_SortOrder < @MediaOrder;

		SELECT TOP(1) @SwitchMediaID = ML_ID
		FROM  dbo.tblKartrisMediaLinks
		WHERE ML_ParentID = @ParentID AND ML_ParentType = @ParentType AND ML_SortOrder = @SwitchOrder;		
	END
	ELSE
	BEGIN
		SELECT @SwitchOrder = MIN(ML_SortOrder) 
		FROM  dbo.tblKartrisMediaLinks
		WHERE ML_ParentID = @ParentID AND ML_ParentType = @ParentType AND ML_SortOrder > @MediaOrder;

		SELECT TOP(1) @SwitchMediaID = ML_ID
		FROM  dbo.tblKartrisMediaLinks
		WHERE ML_ParentID = @ParentID AND ML_ParentType = @ParentType AND ML_SortOrder = @SwitchOrder;
	END;


	UPDATE dbo.tblKartrisMediaLinks
	SET ML_SortOrder = @SwitchOrder
	WHERE ML_ID = @MediaID; 

	UPDATE dbo.tblKartrisMediaLinks
	SET ML_SortOrder = @MediaOrder
	WHERE ML_ID = @SwitchMediaID;

		
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisMediaLinks_Add]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisMediaLinks_Add]
(
	@ParentID as bigint,
	@ParentType as nvarchar(1),
	@EmbedSource as nvarchar(1000),
	@MediaTypeID as smallint,
	@Height as int,
	@Width as int,
	@Downloadable as bit,
	@Parameters as nvarchar(1000),
	@Live as bit,
	@NewML_ID as int out
)
AS
BEGIN
SET NOCOUNT ON;
		
		
		DECLARE @MaxOrder as int;
		SELECT @MaxOrder = Max(ML_SortOrder) FROM dbo.tblKartrisMediaLinks WHERE ML_ParentID = @ParentID AND ML_ParentType = @ParentType;
		IF @MaxOrder is NULL BEGIN SET @MaxOrder = 0 END
					
		INSERT INTO dbo.tblKartrisMediaLinks
		VALUES (@ParentID,@ParentType,@MaxOrder + 1,@EmbedSource,@MediaTypeID,
				@Height,@Width,@Downloadable,@Parameters,@Live);
				
		SELECT @NewML_ID = SCOPE_IDENTITY();
		
		
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisLogins_Validate]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisLogins_Validate]
(
	@UserName varchar(100),
	@Password varchar(50)
)
AS
SET NOCOUNT OFF;
SELECT        TOP 1 LOGIN_ID
FROM            tblKartrisLogins
WHERE        (LOGIN_Username = @UserName AND LOGIN_Password = @Password AND LOGIN_LIVE = 1)
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisLogins_UpdatePassword]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisLogins_UpdatePassword]
(
	  @LOGIN_ID int,
	  @LOGIN_Password nvarchar(100),
	  @LOGIN_SaltValue nvarchar(64)
)
AS
	SET NOCOUNT OFF;
	UPDATE [tblKartrisLogins] SET 
		   [LOGIN_Password] = @LOGIN_Password
		  ,[LOGIN_SaltValue] = @LOGIN_SaltValue
		WHERE LOGIN_ID = @LOGIN_ID;
	SELECT @LOGIN_ID;
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisLogins_Update]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisLogins_Update]
(
	  @LOGIN_ID int,
	  @LOGIN_Username nvarchar(100),
	  @LOGIN_Password nvarchar(100),
	  @LOGIN_Live bit,
	  @LOGIN_Orders bit,
	  @LOGIN_Products bit,
	  @LOGIN_Config bit,
	  @LOGIN_Protected bit,
	  @LOGIN_LanguageID smallint,
	  @LOGIN_EmailAddress nvarchar(50),
	  @LOGIN_Tickets bit,
	  @LOGIN_SaltValue nvarchar(64),
	  @LOGIN_PushNotifications nvarchar(max)
)
AS
IF @LOGIN_Password = ''
		BEGIN
			SET @LOGIN_Password = NULL;
			SET @LOGIN_SaltValue = NULL;
		END;
	SET NOCOUNT OFF;


	UPDATE [tblKartrisLogins] SET 
		  [LOGIN_Username] = @LOGIN_Username
		  ,[LOGIN_Password] = COALESCE (@LOGIN_Password, LOGIN_Password)
		  ,[LOGIN_Live] = @LOGIN_Live
		  ,[LOGIN_Orders] = @LOGIN_Orders
		  ,[LOGIN_Products] = @LOGIN_Products
		  ,[LOGIN_Config] = @LOGIN_Config
		  ,[LOGIN_Protected] = @LOGIN_Protected
		  ,[LOGIN_LanguageID] = @LOGIN_LanguageID
		  ,[LOGIN_EmailAddress] = @LOGIN_EmailAddress
		  ,[LOGIN_Tickets] = @LOGIN_Tickets
		  ,[LOGIN_SaltValue] = COALESCE (@LOGIN_SaltValue, LOGIN_SaltValue)
		  ,[LOGIN_PushNotifications] = @LOGIN_PushNotifications
		WHERE LOGIN_ID = @LOGIN_ID;
	SELECT @LOGIN_ID;
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisLogins_GetSupportTicketsList]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisLogins_GetSupportTicketsList]
AS
SET NOCOUNT OFF;
SELECT     LOGIN_ID, LOGIN_Username, LOGIN_EmailAddress
FROM         tblKartrisLogins
WHERE     (LOGIN_Tickets = 1 AND LOGIN_Live = 1)
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisLogins_GetSaltByUsername]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisLogins_GetSaltByUsername]
(
	@Username nvarchar(100)
)
AS
SET NOCOUNT OFF;
SELECT        TOP 1 
				[LOGIN_SaltValue]
FROM            tblKartrisLogins
WHERE        (LOGIN_Username = @Username);
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisLogins_GetList]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisLogins_GetList]
AS
SET NOCOUNT OFF;
SELECT        [LOGIN_ID]
	  ,[LOGIN_Username]
	  ,[LOGIN_Password]
	  ,[LOGIN_Live]
	  ,[LOGIN_Orders]
	  ,[LOGIN_Products]
	  ,[LOGIN_Config]
	  ,[LOGIN_Protected]
	  ,[LOGIN_LanguageID]
	  ,[LOGIN_EmailAddress]
	  ,[LOGIN_Tickets]
	  ,[LOGIN_PushNotifications]
FROM            tblKartrisLogins
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisLogins_GetIDbyName]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisLogins_GetIDbyName]
(
	@Username nvarchar(100)
)
AS
SET NOCOUNT OFF;
SELECT        TOP 1 
				[LOGIN_ID]
FROM            tblKartrisLogins
WHERE        (LOGIN_Username = @Username)
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisLogins_GetDetails]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisLogins_GetDetails]
(
	@Username nvarchar(100)
)
AS
SET NOCOUNT OFF;
SELECT        TOP 1 
				[LOGIN_ID]
	  ,[LOGIN_Username]
	  ,[LOGIN_Password]
	  ,[LOGIN_Live]
	  ,[LOGIN_Orders]
	  ,[LOGIN_Products]
	  ,[LOGIN_Config]
	  ,[LOGIN_Protected]
	  ,[LOGIN_LanguageID]
	  ,[LOGIN_EmailAddress]
	  ,[LOGIN_Tickets]
				
FROM            tblKartrisLogins
WHERE        (LOGIN_Username = @Username)
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisLogins_Delete]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisLogins_Delete]
(
	  @LOGIN_ID int
)
AS
	SET NOCOUNT OFF;


	DELETE FROM [tblKartrisLogins]
		WHERE LOGIN_ID = @LOGIN_ID;
	SELECT @LOGIN_ID;
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisLogins_Add]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisLogins_Add]
(
	  @LOGIN_Username nvarchar(100),
	  @LOGIN_Password nvarchar(100),
	  @LOGIN_Live bit,
	  @LOGIN_Orders bit,
	  @LOGIN_Products bit,
	  @LOGIN_Config bit,
	  @LOGIN_Protected bit,
	  @LOGIN_LanguageID smallint,
	  @LOGIN_EmailAddress nvarchar(50),
	  @LOGIN_Tickets bit,
	  @LOGIN_SaltValue nvarchar(64),
	  @LOGIN_PushNotifications nvarchar(max)
)
AS
	SET NOCOUNT OFF;

	INSERT INTO [tblKartrisLogins] (
		  [LOGIN_Username]
		  ,[LOGIN_Password]
		  ,[LOGIN_Live]
		  ,[LOGIN_Orders]
		  ,[LOGIN_Products]
		  ,[LOGIN_Config]
		  ,[LOGIN_Protected]
		  ,[LOGIN_LanguageID]
		  ,[LOGIN_EmailAddress]
		  ,[LOGIN_Tickets]
		  ,[LOGIN_SaltValue]
		  ,[LOGIN_PushNotifications])
	VALUES (
		  @LOGIN_Username ,
		  @LOGIN_Password ,
		  @LOGIN_Live ,
		  @LOGIN_Orders,
		  @LOGIN_Products ,
		  @LOGIN_Config ,
		  @LOGIN_Protected ,
		  @LOGIN_LanguageID ,
		  @LOGIN_EmailAddress ,
		  @LOGIN_Tickets ,
		  @LOGIN_SaltValue,
		  @LOGIN_PushNotifications);
	SELECT SCOPE_IDENTITY();
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCustomerGroups_Add]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ==============================================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	
-- ===============================================================
CREATE PROCEDURE [dbo].[_spKartrisCustomerGroups_Add]
(
	@CG_Discount as real,
	@CG_Live as bit,
	@NewCG_ID as smallint OUT
)
AS
BEGIN
	SET NOCOUNT ON;


	INSERT INTO dbo.tblKartrisCustomerGroups
	VALUES(@CG_Discount, @CG_Live);

	SELECT @NewCG_ID = SCOPE_IDENTITY();


	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCurrencies_UpdateRates]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisCurrencies_UpdateRates]
(
	@CUR_ExchangeRate DECIMAL(18,8),
	@Original_CUR_ID tinyint
)
AS
	SET NOCOUNT OFF;


	UPDATE [tblKartrisCurrencies] 
	SET [CUR_ExchangeRate] = @CUR_ExchangeRate
	WHERE (([CUR_ID] = @Original_CUR_ID));
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCurrencies_Update]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisCurrencies_Update]
(
	@CUR_Symbol nvarchar(5),
	@CUR_ISOCode nvarchar(10),
	@CUR_ISOCodeNumeric nvarchar(10),
	@CUR_ExchangeRate DECIMAL(18,4),
	@CUR_HasDecimals bit,
	@CUR_Live bit,
	@CUR_Format nvarchar(20),
	@CUR_IsoFormat nvarchar(20),
	@CUR_DecimalPoint char(1),
	@CUR_RoundNumbers tinyint,
	@Original_CUR_ID tinyint
)
AS
	SET NOCOUNT OFF;
 
UPDATE [tblKartrisCurrencies] 
SET [CUR_Symbol] = @CUR_Symbol, [CUR_ISOCode] = @CUR_ISOCode, [CUR_ISOCodeNumeric] = @CUR_ISOCodeNumeric, 
	[CUR_ExchangeRate] = @CUR_ExchangeRate, [CUR_HasDecimals] = @CUR_HasDecimals, [CUR_Live] = @CUR_Live, 
	[CUR_Format] = @CUR_Format, [CUR_IsoFormat] = @CUR_IsoFormat, [CUR_DecimalPoint] = @CUR_DecimalPoint, 
	[CUR_RoundNumbers]= @CUR_RoundNumbers
WHERE (([CUR_ID] = @Original_CUR_ID));
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCurrencies_Get]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisCurrencies_Get]
AS
BEGIN
	SET NOCOUNT ON;
	SELECT * 
	FROM tblKartrisCurrencies 
	ORDER BY CUR_Live DESC, CUR_OrderNo
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCustomerGroups_Update]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ==============================================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	
-- ===============================================================
CREATE PROCEDURE [dbo].[_spKartrisCustomerGroups_Update]
(
	@CG_ID as smallint,
	@CG_Discount as real,
	@CG_Live as bit	
)
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE dbo.tblKartrisCustomerGroups
	SET CG_Discount = @CG_Discount, CG_Live = @CG_Live
	WHERE CG_ID = @CG_ID;


END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisDeletedItems_Get]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisDeletedItems_Get]
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT * 
	FROM tblKartrisDeletedItems
	ORDER BY Deleted_Type DESC; -- To remove the versions and then products
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisDeletedItems_Delete]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisDeletedItems_Delete]
(
	@ID as bigint,
	@Type as char(1)
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	IF @ID <> 0 AND @ID IN (SELECT DELETED_ID FROM dbo.tblKartrisDeletedItems WHERE Deleted_Type = @Type) BEGIN
		;
		
		DELETE FROM dbo.tblKartrisDeletedItems WHERE Deleted_ID = @ID AND Deleted_Type = @Type;
		
	END
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisLanguageElementTypeFields_Get]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisLanguageElementTypeFields_Get]

AS
	SET NOCOUNT ON;
SELECT     tblKartrisLanguageElementTypeFields.LET_ID, tblKartrisLanguageElementTypes.LET_Name, tblKartrisLanguageElementTypeFields.LEFN_ID, 
					  tblKartrisLanguageElementFieldNames.LEFN_Name, tblKartrisLanguageElementFieldNames.LEFN_DisplayText, 
					  tblKartrisLanguageElementFieldNames.LEFN_CssClass, tblKartrisLanguageElementTypeFields.LEFN_IsMandatory, 
					  tblKartrisLanguageElementFieldNames.LEFN_IsMultiLine, tblKartrisLanguageElementFieldNames.LEFN_UseHTMLEditor, 
					  tblKartrisLanguageElementFieldNames.LEFN_SearchEngineInput
FROM         tblKartrisLanguageElementTypeFields INNER JOIN
					  tblKartrisLanguageElementFieldNames ON tblKartrisLanguageElementTypeFields.LEFN_ID = tblKartrisLanguageElementFieldNames.LEFN_ID INNER JOIN
					  tblKartrisLanguageElementTypes ON tblKartrisLanguageElementTypeFields.LET_ID = tblKartrisLanguageElementTypes.LET_ID
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisKnowledgeBase_Add]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisKnowledgeBase_Add]
(
	@NowOffset_Created as smalldatetime,
	@NowOffset_Updated as smalldatetime,
	@KB_Live as bit,
	@KB_NewID as int OUT
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


	-- Insert statements for procedure here
	INSERT INTO dbo.tblKartrisKnowledgeBase VALUES(@NowOffset_Created, @NowOffset_Updated, @KB_Live);
	SELECT @KB_NewID = SCOPE_IDENTITY();

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCurrencies_Add]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisCurrencies_Add]
(
	@CUR_Symbol nvarchar(5),
	@CUR_ISOCode nvarchar(10),
	@CUR_ISOCodeNumeric nvarchar(10),
	@CUR_ExchangeRate DECIMAL(18,8),
	@CUR_HasDecimals bit,
	@CUR_Live bit,
	@CUR_Format nvarchar(20),
	@CUR_IsoFormat nvarchar(20),
	@CUR_DecimalPoint char(1),
	@CUR_RoundNumbers tinyint,
	@CUR_NewID as tinyint OUTPUT
)
AS
	SET NOCOUNT OFF;

	DECLARE @MaxOrder as tinyint;
	SELECT @MaxOrder = MAX(CUR_OrderNo) + 1
	FROM [tblKartrisCurrencies];

	INSERT INTO [tblKartrisCurrencies] 
	([CUR_Symbol], [CUR_ISOCode], [CUR_ISOCodeNumeric], [CUR_ExchangeRate], [CUR_HasDecimals], [CUR_Live], 
	[CUR_Format], [CUR_IsoFormat], [CUR_DecimalPoint], [CUR_RoundNumbers], [CUR_OrderNo]) 
	VALUES (@CUR_Symbol, @CUR_ISOCode, @CUR_ISOCodeNumeric, @CUR_ExchangeRate, @CUR_HasDecimals, @CUR_Live, 
	@CUR_Format, @CUR_IsoFormat, @CUR_DecimalPoint, @CUR_RoundNumbers, @MaxOrder);
	
	SELECT @CUR_NewID = SCOPE_IDENTITY();
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCoupons_UpdateStatus]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisCoupons_UpdateStatus]
(
	@CouponID as smallint,
	@Enabled as bit
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	UPDATE dbo.tblKartrisCoupons 
	SET CP_Enabled = @Enabled
	WHERE CP_ID = @CouponID;

	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCoupons_Update]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisCoupons_Update]
(
	@CouponID as smallint,
	@Reusable as bit,
	@StartDate as smalldatetime,
	@EndDate as smalldatetime,
	@DiscountValue as real,
	@DiscountType as char(1),
	@Live as bit
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	UPDATE dbo.tblKartrisCoupons
	SET CP_Reusable = @Reusable, CP_StartDate = @StartDate, CP_EndDate = @EndDate, 
		CP_DiscountValue = @DiscountValue, CP_DiscountType = @DiscountType, CP_Enabled = @Live
	WHERE CP_ID = @CouponID;




	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCoupons_SearchByCode]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisCoupons_SearchByCode]
(
	@CouponCode as nvarchar(25)
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT CP_ID, CP_CouponCode, CP_Reusable, CP_Used, CP_CreatedTime, CONVERT(nvarchar, CP_StartDate, 6) as StartDate,
		CONVERT(nvarchar, CP_EndDate, 6) as EndDate, CP_DiscountValue, CP_DiscountType, CP_Enabled
	FROM    tblKartrisCoupons
	WHERE  CP_CouponCode LIKE '%' + @CouponCode + '%'
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCoupons_GetGroups]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisCoupons_GetGroups]
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT DISTINCT  COUNT(CP_ID) AS Qty, 
			CAST(YEAR(CP_CreatedTime) as nvarchar(4)) + '/' + CAST(MONTH(CP_CreatedTime) as nvarchar(2)) 
			+ '/' + CAST( DAY (CP_CreatedTime) as nvarchar(2)) as CreatedTime, 
			YEAR(CP_CreatedTime), MONTH(CP_CreatedTime), DAY (CP_CreatedTime)
	FROM         tblKartrisCoupons
	GROUP BY YEAR(CP_CreatedTime), MONTH(CP_CreatedTime), DAY (CP_CreatedTime)
	ORDER By YEAR(CP_CreatedTime) DESC, MONTH(CP_CreatedTime) DESC, DAY(CP_CreatedTime) DESC
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCoupons_GetByID]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisCoupons_GetByID]
(
	@CouponID as smallint
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT *
	FROM    tblKartrisCoupons
	WHERE CP_ID = @CouponID
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCoupons_GetByDateTime]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisCoupons_GetByDateTime]
(
	@Year as int,
	@Month as int,
	@Day as int
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT CP_ID, CP_CouponCode, CP_Reusable, CP_Used, CP_CreatedTime, CONVERT(nvarchar, CP_StartDate, 6) as StartDate,
		CONVERT(nvarchar, CP_EndDate, 6) as EndDate, CP_DiscountValue, CP_DiscountType, CP_Enabled
	FROM         tblKartrisCoupons
	WHERE YEAR(CP_CreatedTime) = @Year AND  MONTH(CP_CreatedTime) = @Month 
			AND  DAY(CP_CreatedTime) = @Day
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCoupons_GetByCouponCode]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisCoupons_GetByCouponCode]
(
	@CouponCode as nvarchar(25)
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT CP_ID
	FROM    tblKartrisCoupons
	WHERE CP_CouponCode = @CouponCode
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCoupons_Delete]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisCoupons_Delete]
(
	@CouponID as smallint
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DELETE
	FROM    tblKartrisCoupons
	WHERE CP_ID = @CouponID;

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCoupons_Add]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisCoupons_Add]
(
	@CouponCode as nvarchar(25),
	@Reusable as bit,
	@StartDate as smalldatetime,
	@EndDate as smalldatetime,
	@DiscountValue as real,
	@DiscountType as char(1),
	@CouponCodeIsFixed as bit,
	@NowOffset as datetime
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	INSERT INTO dbo.tblKartrisCoupons
	VALUES	(@CouponCode, @Reusable, 0, @NowOffset, @StartDate, @EndDate, @DiscountValue, @DiscountType, 1);

	IF @CouponCodeIsFixed = 0
	BEGIN
		UPDATE dbo.tblKartrisCoupons 
		SET CP_CouponCode = @CouponCode + CAST(SCOPE_IDENTITY() as nvarchar(5))
		WHERE CP_ID = SCOPE_IDENTITY();
	END;




	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisConfig_UpdateConfigValue]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ===========================================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	Get name value pairs for config settings cache
-- ===========================================================
CREATE PROCEDURE [dbo].[_spKartrisConfig_UpdateConfigValue]
(
	@CFG_Name as nvarchar(100),
	@CFG_Value as nvarchar(255)
)
AS
SET NOCOUNT ON;


	UPDATE	dbo.tblKartrisConfig 
	SET		CFG_Value = @CFG_Value
	WHERE	CFG_Name = @CFG_Name;
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisConfig_Update]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisConfig_Update]
(
	@CFG_Value nvarchar(255),
	@CFG_DataType char(1),
	@CFG_DisplayType char(1),
	@CFG_DisplayInfo nvarchar(255),
	@CFG_Description nvarchar(255),
	@CFG_VersionAdded real,
	@CFG_DefaultValue nvarchar(255),
	@CFG_Important bit,
	@Original_CFG_Name nvarchar(100)
)
AS
	SET NOCOUNT OFF;


	UPDATE [tblKartrisConfig] 
	SET [CFG_Value] = @CFG_Value, [CFG_DataType] = @CFG_DataType, [CFG_DisplayType] = @CFG_DisplayType, 
		[CFG_DisplayInfo] = @CFG_DisplayInfo,
		[CFG_Description] = @CFG_Description, [CFG_VersionAdded] = @CFG_VersionAdded, [CFG_DefaultValue] = @CFG_DefaultValue, [CFG_Important] = @CFG_Important
	WHERE (([CFG_Name] = @Original_CFG_Name));
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisConfig_Search]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	BACK END USE
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisConfig_Search]
(
	@ConfigKey as nvarchar(100),
	@ImportantConfig as bit
)
AS
	SET NOCOUNT ON;
	IF @ImportantConfig = 1
	BEGIN
		SELECT        *
		FROM            tblKartrisConfig
		WHERE        (CFG_Name LIKE '%' + @ConfigKey + '%') AND CFG_Important = 1
	END
	ELSE
	BEGIN
		SELECT        *
		FROM            tblKartrisConfig
		WHERE        (CFG_Name LIKE '%' + @ConfigKey + '%')
	END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisConfig_GetImportant]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisConfig_GetImportant]
AS
	SET NOCOUNT ON;
SELECT        *
FROM            tblKartrisConfig
WHERE        (CFG_Important = 1)
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisConfig_GetforCache]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ===========================================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	Get name value pairs for config settings cache
-- ===========================================================
CREATE PROCEDURE [dbo].[_spKartrisConfig_GetforCache]
AS
	SET NOCOUNT ON;
SELECT        CFG_Name, CFG_Value
FROM            tblKartrisConfig
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisConfig_GetDesc]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ===========================================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	Get name value pairs for config settings cache
-- ===========================================================
CREATE PROCEDURE [dbo].[_spKartrisConfig_GetDesc]
(
	@CFG_Name as nvarchar(100)
)
AS
	SET NOCOUNT ON;
	SELECT	CFG_Description
	FROM	tblKartrisConfig
	WHERE	CFG_Name = @CFG_Name
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisConfig_GetByName]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisConfig_GetByName](@CFG_Name nvarchar(100))
AS
	SET NOCOUNT ON;
SELECT        *
FROM            tblKartrisConfig
WHERE        (CFG_Name = @CFG_Name)
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisConfig_Add]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisConfig_Add]
(
	@CFG_Name nvarchar(100),
	@CFG_Value nvarchar(255),
	@CFG_DataType char(1),
	@CFG_DisplayType char(1),
	@CFG_DisplayInfo nvarchar(255),
	@CFG_Description nvarchar(255),
	@CFG_VersionAdded real,
	@CFG_DefaultValue nvarchar(255),
	@CFG_Important bit
)
AS
	SET NOCOUNT OFF;


	
	INSERT INTO [tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) 
	VALUES (@CFG_Name, @CFG_Value, @CFG_DataType, @CFG_DisplayType, @CFG_DisplayInfo, @CFG_Description, @CFG_VersionAdded, @CFG_DefaultValue, @CFG_Important);
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisAttributes_Add]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisAttributes_Add]
(
	@Type char(1),
	@Live bit,
	@FastEntry bit,
	@ShowFrontend bit,
	@ShowSearch bit,
	@OrderByValue tinyint,
	@Compare char(1),
	@Special bit,
	@NewAttribute_ID int OUT
)
AS
	SET NOCOUNT OFF;



	INSERT INTO tblKartrisAttributes
	VALUES 
	(@Type, @Live, @FastEntry, @ShowFrontend, @ShowSearch, 
		@OrderByValue, @Compare, @Special);

		
	SELECT @NewAttribute_ID = SCOPE_IDENTITY();
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisAdminRelatedTables_GetByType]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
 CREATE PROCEDURE [dbo].[_spKartrisAdminRelatedTables_GetByType]
(
	@DataType as char(1)
)

AS
BEGIN

	IF @DataType = 'P'
	BEGIN
		SELECT *, substring(ART_TableName, 11, Len(ART_TableName)) as ShortName
		FROM    tblKartrisAdminRelatedTables
		WHERE		ART_TableOrderProducts IS NOT NULL
		ORDER BY	ART_TableOrderProducts
	END
	IF @DataType = 'O'
	BEGIN
		SELECT *, substring(ART_TableName, 11, Len(ART_TableName)) as ShortName
		FROM    tblKartrisAdminRelatedTables
		WHERE		ART_TableOrderOrders IS NOT NULL
		ORDER BY	ART_TableOrderOrders
	END
	IF @DataType = 'S'
	BEGIN
		SELECT *, substring(ART_TableName, 11, Len(ART_TableName)) as ShortName
		FROM    tblKartrisAdminRelatedTables
		WHERE		ART_TableOrderSessions IS NOT NULL
		ORDER BY	ART_TableOrderSessions
	END
	IF @DataType = 'C'
	BEGIN
		SELECT *, substring(ART_TableName, 11, Len(ART_TableName)) as ShortName
		FROM    tblKartrisAdminRelatedTables
		WHERE		ART_TableOrderContents IS NOT NULL
		ORDER BY	ART_TableOrderContents
	END
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisAdminRelatedTables_Clear]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
 CREATE PROCEDURE [dbo].[_spKartrisAdminRelatedTables_Clear]
(	
	@DataType as char(1),
	@UserName as nvarchar(100),
	@Password as nvarchar(50),
	@IPAddress as nvarchar(255),
	@Output as nvarchar(MAX) output,
	@Succeeded as bit output
)
AS
BEGIN
	
	DECLARE @Logins as int;
	SELECT	@Logins = Count(tblKartrisLogins.LOGIN_ID)
	FROM	tblKartrisLogins
	WHERE	(tblKartrisLogins.LOGIN_Username = @UserName 
				AND tblKartrisLogins.LOGIN_Password = @Password 
				AND tblKartrisLogins.LOGIN_LIVE = 1);

	IF @Logins <> 1
	BEGIN 
		SET @Output = '<br/>-------------------------------------------------------------------------<br/>';
		SET @Output = @Output + 'ERROR: Operation Terminated ..!! Invalid-login <br/> ';
		SET @Output = @Output + '-------------------------------------------------------------------------<br/><br/>';
		SET @Succeeded = 0;
		GOTO spExit 
	END

	DECLARE @tblName as nvarchar(250), @trigName as nvarchar(250), 
			@spName as nvarchar(250), @startingIdentity as int,
			@sqlStmt as nvarchar(1000), @Counter as integer,
			@languageTableTypeID as tinyint;

----**********************************************
----**********************************************
----		1.	Disable the DB Triggers
----**********************************************
----**********************************************
	
	PRINT '--------------------------------------------------------------';
	PRINT '=> Disable Triggers (execution started ...)';
	PRINT '--------------------------------------------------------------';
		--EXEC dbo._spKartrisDB_DisableAllTriggers;
	PRINT '(execution finished ...)';
	PRINT '^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^';
	PRINT CAST(@Counter as nvarchar(10)) + ' Objects Affected.';
	PRINT '';
	
----************************************************************************************
----************************************************************************************
----		2.	Cleaning Product Related Tables And Reseeding the Identity if exist.
----************************************************************************************
----************************************************************************************

	PRINT '--------------------------------------------------------------';
	PRINT '=> Cleaning records (Products Related)  (execution started ...)';
	PRINT '--------------------------------------------------------------';

	IF @DataType = 'P'
	BEGIN
		DECLARE crsrKartrisRelatedTables CURSOR FOR
		SELECT ART_TableName, ART_TableStartingIdentity
		FROM    tblKartrisAdminRelatedTables
		WHERE		ART_TableOrderProducts IS NOT NULL
		ORDER BY	ART_TableOrderProducts
	END
	IF @DataType = 'O'
	BEGIN
		DECLARE crsrKartrisRelatedTables CURSOR FOR
		SELECT ART_TableName, ART_TableStartingIdentity
		FROM    tblKartrisAdminRelatedTables
		WHERE		ART_TableOrderOrders IS NOT NULL
		ORDER BY	ART_TableOrderOrders
	END
	IF @DataType = 'S'
	BEGIN
		DECLARE crsrKartrisRelatedTables CURSOR FOR
		SELECT ART_TableName, ART_TableStartingIdentity
		FROM    tblKartrisAdminRelatedTables
		WHERE		ART_TableOrderSessions IS NOT NULL
		ORDER BY	ART_TableOrderSessions
	END
	IF @DataType = 'C'
	BEGIN
		DECLARE crsrKartrisRelatedTables CURSOR FOR
		SELECT ART_TableName, ART_TableStartingIdentity
		FROM    tblKartrisAdminRelatedTables
		WHERE		ART_TableOrderContents IS NOT NULL
		ORDER BY	ART_TableOrderContents
	END
	
	OPEN crsrKartrisRelatedTables
	FETCH NEXT FROM crsrKartrisRelatedTables
	INTO @tblName, @startingIdentity;
	
	SET @Output = '<br/>';
	SET @Counter = 0;
	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @Counter = @Counter + 1;		
		SET @sqlStmt = 'DELETE FROM ' + @tblName
		IF @tblName = 'tblKartrisCategories' 
		BEGIN
			SET @sqlStmt = @sqlStmt + ' WHERE CAT_ID <> 0'
		END
		EXECUTE(@sqlStmt)
		
		SELECT @languageTableTypeID = LET_ID 
		FROM tblKartrisLanguageElementTypes
		WHERE LET_Name = @tblName;

		SET @sqlStmt = 'DELETE FROM tblKartrisLanguageElements WHERE LE_TypeID=' 
						+ CAST(@languageTableTypeID as nvarchar(5)) + ';'
		BEGIN TRY
			EXECUTE(@sqlStmt);
		END TRY
		BEGIN CATCH
		END CATCH

		SET @Output = @Output + '	-->  ' + @tblName + ' cleared successfully.<br/>';
		IF @startingIdentity  IS NOT NULL
		BEGIN 
			SET @sqlStmt = 'DBCC CHECKIDENT (''' + @tblName + ''', RESEED, ' + CAST(@startingIdentity As nvarchar(5)) + ');'
			EXECUTE(@sqlStmt);
			PRINT '		Table: ' + @tblName + ' reseeded successfully to ' + CAST(@startingIdentity As nvarchar(5));
		END

		PRINT '^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^';
		FETCH NEXT FROM crsrKartrisRelatedTables
		INTO @tblName, @startingIdentity;
	END
	
	CLOSE crsrKartrisRelatedTables
	DEALLOCATE crsrKartrisRelatedTables;	
	PRINT '(execution finished ...)';
	PRINT '^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^';
	PRINT CAST(@Counter as nvarchar(10)) + ' Objects Affected.';
	PRINT '';

	SET @Output = @Output + '-------------------------------------------------------------------------<br/>';
	SET @Output = @Output + CAST(@Counter as nvarchar(10)) + ' tables affected.<br/>';
	SET @Output = @Output + '-------------------------------------------------------------------------<br/>';
	
----**********************************************
----**********************************************
----		3.	Enable the DB Triggers
----**********************************************
----**********************************************
	PRINT '--------------------------------------------------------------';
	PRINT '=> Enable Triggers (execution started ...)';
	PRINT '--------------------------------------------------------------';
		--EXEC dbo._spKartrisDB_EnableAllTriggers;
	PRINT '(execution finished ...)';
	PRINT '^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^';
	PRINT CAST(@Counter as nvarchar(10)) + ' Objects Affected.';
	PRINT '';

	SET @Succeeded = 1;	

spExit:
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisAdminLog_Search]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
 CREATE PROCEDURE [dbo].[_spKartrisAdminLog_Search]
(	
	@Keyword as nvarchar(100),
	@Type as nvarchar(50),
	@From as datetime,
	@To as datetime
)
AS
BEGIN
	
DECLARE @SDate as nvarchar(11);
SET @SDate = CONVERT(VARCHAR(11), @From, 106);
SET @From = CAST(@SDate as datetime)

DECLARE @EDate as nvarchar(20);
SET @EDate = CONVERT(VARCHAR(11), @To, 106) + ' 11:59 PM';
SET @To = CAST(@EDate as datetime)

	Print 'From' + Cast(@From as nvarchar(50));
	Print 'To: ' + Cast(@To as nvarchar(50));

	SELECT *, SubString(AL_Query, 0, CHARINDEX('##', AL_Query)) as ShortQuery FROM dbo.tblKartrisAdminLog
	WHERE ((AL_Description like '%' + @Keyword + '%') 
			OR (AL_Query like '%' + @Keyword + '%') 
			OR (AL_LoginName like '%' + @Keyword + '%'))
		AND (AL_Type like @Type + '%') 
		AND (AL_DateStamp BETWEEN @From AND @To)
	ORDER BY AL_DateStamp DESC

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisAdminLog_PurgeOldData]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
 CREATE PROCEDURE [dbo].[_spKartrisAdminLog_PurgeOldData]
(
	@PurgeDate as datetime
)
AS
BEGIN
	
DECLARE @SDate as nvarchar(11);
SET @SDate = CONVERT(VARCHAR(11), '1/1/2008', 106);
DECLARE @From as datetime;
SET @From = CAST(@SDate as datetime)

DECLARE @EDate as nvarchar(20);
SET @EDate = CONVERT(VARCHAR(11), @PurgeDate, 106) + ' 11:59 PM';
SET @PurgeDate = CAST(@EDate as datetime)

	Print 'From:' + Cast(@From as nvarchar(50));
	Print 'To  :' + Cast(@PurgeDate as nvarchar(50));


	DELETE FROM dbo.tblKartrisAdminLog
	WHERE AL_DateStamp BETWEEN @From AND @PurgeDate;



END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisAdminLog_GetByID]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisAdminLog_GetByID]
(	
	@LogID as int	
)
AS
BEGIN
	
	SELECT * FROM tblKartrisAdminLog WHERE AL_ID = @LogID;

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisAdminLog_AddNewAdminLog]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisAdminLog_AddNewAdminLog]
(	
	@LoginName as nvarchar(100),
	@Type as nvarchar(50),
	@Desc as nvarchar(255),
	@Query as nvarchar(MAX),
	@RelatedID as nvarchar(255),
	@IP as nvarchar(50),
	@NowOffset as datetime
)
AS
BEGIN
	


	INSERT INTO tblKartrisAdminLog
	VALUES (@NowOffset, @LoginName, @Type, @Desc, @Query, @RelatedID, @IP);


END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisAttributes_Update]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisAttributes_Update]
(
	@Type char(1),
	@Live bit,
	@FastEntry bit,
	@ShowFrontend bit,
	@ShowSearch bit,
	@OrderByValue tinyint,
	@Compare char(1),
	@Special bit,
	@Original_AttributeID int	
)
AS
	SET NOCOUNT OFF;



	UPDATE [tblKartrisAttributes] 
	SET [ATTRIB_Type] = @Type, [ATTRIB_Live] = @Live, [ATTRIB_FastEntry] = @FastEntry, 
		[ATTRIB_ShowFrontend] = @ShowFrontend, [ATTRIB_ShowSearch] = @ShowSearch, 
		[ATTRIB_OrderByValue] = @OrderByValue, [ATTRIB_Compare] = @Compare, 
		[ATTRIB_Special] = @Special 
	WHERE ([ATTRIB_ID] = @Original_AttributeID);
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisAttributes_GetByID]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisAttributes_GetByID]
(
	@AttributeID as int
)
AS
	SET NOCOUNT ON;
SELECT     ATTRIB_ID, ATTRIB_Type, ATTRIB_Live, ATTRIB_FastEntry, ATTRIB_ShowFrontend, ATTRIB_ShowSearch, ATTRIB_OrderByValue, ATTRIB_Compare, 
					  ATTRIB_Special
FROM         tblKartrisAttributes
WHERE     (ATTRIB_ID = @AttributeID)
GO
/****** Object:  Table [dbo].[tblKartrisSessionValues]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisSessionValues](
	[SESSV_ID] [int] IDENTITY(1,1) NOT NULL,
	[SESSV_SessionID] [int] NULL,
	[SESSV_Name] [nvarchar](255) NOT NULL,
	[SESSV_Value] [nvarchar](255) NOT NULL,
	[SESSV_Expiry] [int] NULL,
 CONSTRAINT [PK_tblKartrisSessionValues] PRIMARY KEY CLUSTERED 
(
	[SESSV_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [SESSV_ID] ON [dbo].[tblKartrisSessionValues] 
(
	[SESSV_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [SESSV_SessionID] ON [dbo].[tblKartrisSessionValues] 
(
	[SESSV_SessionID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisShippingMethods_Add]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ==============================================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	Create New Shipping Method
-- ===============================================================
CREATE PROCEDURE [dbo].[_spKartrisShippingMethods_Add]
(
	@SM_Live as bit,
	@SM_OrderByValue as tinyint,
	@SM_Tax as tinyint,
	@SM_Tax2 as tinyint,
	@SM_NewID as tinyint OUT
)
AS
BEGIN
	SET NOCOUNT ON;
	
	INSERT INTO dbo.tblKartrisShippingMethods
	VALUES (@SM_Live, @SM_OrderByValue, @SM_Tax, @SM_Tax2);

	SELECT @SM_NewID = SCOPE_IDENTITY();
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisSearchStatistics_GetTopSearches]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisSearchStatistics_GetTopSearches]
(
	@StartDate as datetime,
	@EndDate as datetime,
	@NoOfKeywords as int
)
AS
BEGIN
	SET NOCOUNT ON;

	SELECT Top(@NoOfKeywords) SS_Keyword, Sum(SS_Searches) As TotalSearches
	FROM dbo.tblKartrisSearchStatistics
	WHERE SS_Date BETWEEN @StartDate AND @EndDate
	Group BY SS_Keyword
	ORDER BY Sum(SS_Searches) DESC

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisSearchStatistics_Get]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisSearchStatistics_Get]
AS
BEGIN
SET NOCOUNT ON;
	
	SET NOCOUNT ON;
	
	SELECT * FROM dbo.tblKartrisSearchStatistics
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisSavedExports_Update]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisSavedExports_Update]
(
	@Name as nvarchar(50),
	@DateModified as datetime,
	@Details as nvarchar(MAX),
	@FieldDelimiter as int,
	@StringDelimiter as int,
	@ExportID as bigint 
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	-- Insert statements for procedure here
	UPDATE dbo.tblKartrisSavedExports
	SET EXPORT_Name = @Name, EXPORT_LastModified = @DateModified, EXPORT_Details = @Details, 
		EXPORT_FieldDelimiter = @FieldDelimiter, EXPORT_StringDelimiter = @StringDelimiter
	WHERE EXPORT_ID = @ExportID;
	
	
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisSavedExports_GetByID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisSavedExports_GetByID]
(
	@ExportID as bigint
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT * FROM dbo.tblKartrisSavedExports	
	WHERE EXPORT_ID = @ExportID;
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisSavedExports_Get]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisSavedExports_Get]
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT * FROM dbo.tblKartrisSavedExports	
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisSavedExports_Delete]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisSavedExports_Delete]
(
	@ExportID as bigint
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	-- Insert statements for procedure here
	DELETE FROM dbo.tblKartrisSavedExports
	WHERE EXPORT_ID = @ExportID;
	
	
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisSavedExports_Add]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisSavedExports_Add]
(
	@Name as nvarchar(50),
	@DateCreated as datetime,
	@Details as nvarchar(MAX),
	@FieldDelimiter as int,
	@StringDelimiter as int,
	@New_ID as bigint OUTPUT
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	-- Insert statements for procedure here
	INSERT INTO dbo.tblKartrisSavedExports
	VALUES(@Name,@DateCreated,@DateCreated,@Details,@FieldDelimiter,@StringDelimiter);
	SELECT @New_ID = SCOPE_IDENTITY();
	
	
	
END
GO
/****** Object:  UserDefinedFunction [dbo].[fnKartrisSupportTicketMessages_IsAwaitingReplyFromUser]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnKartrisSupportTicketMessages_IsAwaitingReplyFromUser]
(
	@TIC_ID as bigint
)
RETURNS bit
AS
BEGIN

	DECLARE @Status as char(1);
	SELECT @Status = TIC_Status
	FROM dbo.tblKartrisSupportTickets
	WHERE TIC_ID = @TIC_ID;

	IF @Status = 'c' BEGIN RETURN 0 END

	-- Declare the return variable here
	DECLARE @LastMessageID as bigint;

	SELECT  @LastMessageID =  MAX(tblKartrisSupportTicketMessages.STM_ID)
	FROM         tblKartrisSupportTicketMessages INNER JOIN
					  tblKartrisSupportTickets ON tblKartrisSupportTicketMessages.STM_TicketID = tblKartrisSupportTickets.TIC_ID
	WHERE tblKartrisSupportTicketMessages.STM_TicketID = @TIC_ID;

	DECLARE @LoginID as smallint;
	SELECT @LoginID = STM_LoginID
	FROM dbo.tblKartrisSupportTicketMessages
	WHERE STM_ID = @LastMessageID;

	
	IF @LoginID = 0
	BEGIN
		RETURN 0;
	END
	
	RETURN 1;
END
GO
/****** Object:  UserDefinedFunction [dbo].[fnKartrisSupportTicketMessages_IsAwaitingReply]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnKartrisSupportTicketMessages_IsAwaitingReply]
(
	@TIC_ID as bigint
)
RETURNS bit
AS
BEGIN

	DECLARE @Status as char(1);
	SELECT @Status = TIC_Status
	FROM dbo.tblKartrisSupportTickets
	WHERE TIC_ID = @TIC_ID;

	IF @Status = 'c' BEGIN RETURN 0 END

	-- Declare the return variable here
	DECLARE @LastMessageID as bigint;

	SELECT  @LastMessageID =  MAX(tblKartrisSupportTicketMessages.STM_ID)
	FROM         tblKartrisSupportTicketMessages INNER JOIN
					  tblKartrisSupportTickets ON tblKartrisSupportTicketMessages.STM_TicketID = tblKartrisSupportTickets.TIC_ID
	WHERE tblKartrisSupportTicketMessages.STM_TicketID = @TIC_ID;

	DECLARE @LoginID as smallint;
	SELECT @LoginID = STM_LoginID
	FROM dbo.tblKartrisSupportTicketMessages
	WHERE STM_ID = @LastMessageID;

	
	IF @LoginID = 0
	BEGIN
		RETURN 1;
	END
	
	RETURN 0;
END
GO
/****** Object:  UserDefinedFunction [dbo].[fnKartrisSearchHelper_GetKeywordsListByProduct]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnKartrisSearchHelper_GetKeywordsListByProduct]
(
	@SessionID as bigint,
	@ProductID as int
)
RETURNS nvarchar(max)
AS
BEGIN
	DECLARE @KeywordList as nvarchar(max)
	SELECT @KeywordList = COALESCE(@KeywordList + ',', '') + T.SH_Keyword
	FROM (	SELECT DISTINCT TOP(500) SH_Keyword
			FROM dbo.tblKartrisSearchHelper
			WHERE SH_SessionID = @SessionID AND SH_ProductID = @ProductID
			ORDER BY SH_Keyword) AS T;

	RETURN @KeywordList
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisObjectConfig_GetValue]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisObjectConfig_GetValue]
(
	@ConfigName as nvarchar(100),
	@ParentID as bigint
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @Count as int;
	
	SELECT     @Count = Count(1)
	FROM         tblKartrisObjectConfigValue INNER JOIN
						  tblKartrisObjectConfig ON tblKartrisObjectConfigValue.OCV_ObjectConfigID = tblKartrisObjectConfig.OC_ID
	WHERE     (tblKartrisObjectConfig.OC_Name = @ConfigName) AND (tblKartrisObjectConfigValue.OCV_ParentID = @ParentID)
	
	IF @Count = 1 BEGIN
		SELECT  tblKartrisObjectConfigValue.OCV_Value
		FROM    tblKartrisObjectConfigValue INNER JOIN
				tblKartrisObjectConfig ON tblKartrisObjectConfigValue.OCV_ObjectConfigID = tblKartrisObjectConfig.OC_ID
		WHERE   (tblKartrisObjectConfig.OC_Name = @ConfigName) AND (tblKartrisObjectConfigValue.OCV_ParentID = @ParentID)
	END ELSE BEGIN
		SELECT OC_DefaultValue FROM tblKartrisObjectConfig WHERE tblKartrisObjectConfig.OC_Name = @ConfigName
	END
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisMediaLinks_GetByParent]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	Get Media Links of a product or version
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisMediaLinks_GetByParent]
(
	@ParentID as bigint, 
	@ParentType as nvarchar(1)
)
AS
BEGIN
SET NOCOUNT ON;
SELECT     tblKartrisMediaLinks.ML_ID, tblKartrisMediaLinks.ML_ParentID, tblKartrisMediaLinks.ML_ParentType, tblKartrisMediaLinks.ML_EmbedSource, 
					  tblKartrisMediaLinks.ML_MediaTypeID, tblKartrisMediaLinks.ML_Height, tblKartrisMediaLinks.ML_Width, 
					  tblKartrisMediaLinks.ML_isDownloadable, tblKartrisMediaLinks.ML_Parameters, tblKartrisMediaTypes.MT_DefaultHeight, 
					  tblKartrisMediaTypes.MT_DefaultWidth, tblKartrisMediaTypes.MT_DefaultParameters, tblKartrisMediaTypes.MT_DefaultisDownloadable, 
					  tblKartrisMediaTypes.MT_Extension,tblKartrisMediaTypes.MT_Embed, tblKartrisMediaTypes.MT_Inline, tblKartrisMediaLinks.ML_Live
FROM         tblKartrisMediaLinks LEFT OUTER JOIN
					  tblKartrisMediaTypes ON tblKartrisMediaLinks.ML_MediaTypeID = tblKartrisMediaTypes.MT_ID
WHERE     (tblKartrisMediaLinks.ML_ParentID = @ParentID) AND (tblKartrisMediaLinks.ML_ParentType = @ParentType) AND (tblKartrisMediaLinks.ML_Live = 1)
ORDER BY ML_SortOrder
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisLogins_GetSupportTicketsList]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisLogins_GetSupportTicketsList]
AS
SET NOCOUNT OFF;
SELECT     LOGIN_ID, LOGIN_Username, LOGIN_EmailAddress
FROM         tblKartrisLogins
WHERE     (LOGIN_Tickets = 1 AND LOGIN_Live = 1)
GO
/****** Object:  StoredProcedure [dbo].[spKartrisLanguageStrings_GetByVirtualPath]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisLanguageStrings_GetByVirtualPath](@LanguageID as tinyint, @VirtualPath as nvarchar(50))
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	-- Insert statements for procedure here
	 
	SELECT LS_ID, LS_Name, LS_Value, LS_Description, LS_LANGID
	FROM tblKartrisLanguageStrings
	WHERE LS_LANGID = @LanguageID AND LS_VirtualPath = @VirtualPath
		

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisLanguageStrings_GetByLanguageID]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisLanguageStrings_GetByLanguageID](@LanguageID as tinyint)
AS
	SET NOCOUNT ON;
SELECT * FROM tblKartrisLanguageStrings WHERE LS_LANGID = @LanguageID
GO
/****** Object:  StoredProcedure [dbo].[spKartrisLanguageStrings_GetByClassName]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisLanguageStrings_GetByClassName](@LanguageID as tinyint, @ClassName as nvarchar(50))
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	-- Insert statements for procedure here
	 
	SELECT LS_ID, LS_Name, LS_Value, LS_Description, LS_LANGID
	FROM tblKartrisLanguageStrings
	WHERE LS_LANGID = @LanguageID AND LS_ClassName = @ClassName
		

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisLanguages_GetLanguageIDByCulture_s]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisLanguages_GetLanguageIDByCulture_s]
(
	@LANG_Culture nvarchar(50)
)
AS
	SET NOCOUNT ON;
SELECT LANG_ID FROM tblKartrisLanguages WHERE LANG_Culture = @LANG_Culture
GO
/****** Object:  StoredProcedure [dbo].[spKartrisLanguages_Get]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisLanguages_Get]
AS
	SET NOCOUNT ON;
SELECT * FROM tblKartrisLanguages 
WHERE LANG_LiveFront = 1
GO
/****** Object:  StoredProcedure [dbo].[spKartrisOrders_InvoiceRowsAdd]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisOrders_InvoiceRowsAdd]
(
		   @IR_OrderNumberID int,
		   @IR_VersionCode nvarchar(50),
		   @IR_VersionName nvarchar(1000),
		   @IR_Quantity float,
		   @IR_PricePerItem real,
		   @IR_TaxPerItem real,
		   @IR_OptionsText nvarchar(MAX)
)
AS
BEGIN
	DECLARE @IR_ID INT
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT OFF;

	

	INSERT INTO [tblKartrisInvoiceRows]
		   ([IR_OrderNumberID]
		   ,[IR_VersionCode]
		   ,[IR_VersionName]
		   ,[IR_Quantity]
		   ,[IR_PricePerItem]
		   ,[IR_TaxPerItem]
		   ,[IR_OptionsText])
	 VALUES
		   (@IR_OrderNumberID,
		   @IR_VersionCode,
		   @IR_VersionName,
		   @IR_Quantity,
		   @IR_PricePerItem,
		   @IR_TaxPerItem,
		   @IR_OptionsText);
	SET @IR_ID = SCOPE_IDENTITY();
	SELECT @IR_ID;

	
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisOrders_GetQBQueue]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisOrders_GetQBQueue]

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT   distinct tblKartrisOrders.O_ID,tblKartrisUsers.U_QBListID, tblKartrisOrders.O_CustomerID,tblKartrisUsers.U_EmailAddress,
			tblKartrisOrders.O_BillingAddress,tblKartrisOrders.O_ShippingAddress
FROM         tblKartrisAddresses LEFT OUTER JOIN
					  tblKartrisUsers ON tblKartrisAddresses.ADR_UserID = tblKartrisUsers.U_ID RIGHT OUTER JOIN
					  tblKartrisOrders ON tblKartrisUsers.U_ID = tblKartrisOrders.O_CustomerID
WHERE     (tblKartrisOrders.O_Sent = 1) AND (tblKartrisOrders.O_Paid = 1) AND (tblKartrisOrders.O_SentToQB = 0 OR tblKartrisOrders.O_SentToQB IS NULL )
ORDER BY tblKartrisOrders.O_ID DESC;
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisOrders_GetCardTypeList]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisOrders_GetCardTypeList]

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT CR_NAME FROM tblKartrisCreditCards WHERE CR_ACCEPTED = 1;
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisOrders_GetByStatus_OtherMethod]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisOrders_GetByStatus_OtherMethod]
(
	@O_Sent bit = NULL,
	@O_Invoiced bit = NULL,
	@O_Paid bit = NULL,
	@O_Shipped bit = NULL,
	@O_AffiliatePaymentID int = NULL,
	@O_DateRangeStart smalldatetime = NULL,
	@O_DateRangeEnd smalldatetime = NULL
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT     tblKartrisOrders.O_ID, tblKartrisOrders.O_Date, tblKartrisOrders.O_TotalPrice, tblKartrisAddresses.ADR_Name, tblKartrisOrders.O_CustomerID
FROM         tblKartrisAddresses LEFT OUTER JOIN
					  tblKartrisUsers ON tblKartrisAddresses.ADR_UserID = tblKartrisUsers.U_ID RIGHT OUTER JOIN
					  tblKartrisOrders ON tblKartrisUsers.U_ID = tblKartrisOrders.O_CustomerID
WHERE     (tblKartrisOrders.O_Sent = COALESCE (@O_Sent, tblKartrisOrders.O_Sent)) AND (tblKartrisOrders.O_Invoiced = COALESCE (@O_Invoiced, 
					  tblKartrisOrders.O_Invoiced)) AND (tblKartrisOrders.O_Paid = COALESCE (@O_Paid, tblKartrisOrders.O_Paid)) AND 
					  (tblKartrisOrders.O_Shipped = COALESCE (@O_Shipped, tblKartrisOrders.O_Shipped)) AND 
					  (tblKartrisOrders.O_AffiliatePaymentID = COALESCE (@O_AffiliatePaymentID, tblKartrisOrders.O_AffiliatePaymentID)) AND 
					  (tblKartrisOrders.O_Date >= COALESCE (@O_DateRangeStart, DATEADD(day, - 1, tblKartrisOrders.O_Date))) AND 
					  (tblKartrisOrders.O_Date <= COALESCE (@O_DateRangeEnd, @O_DateRangeStart, DATEADD(day, 1, tblKartrisOrders.O_Date)))
ORDER BY tblKartrisOrders.O_ID DESC;
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisOrders_GetAffiliateCommission]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: 08/April/2009
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisOrders_GetAffiliateCommission] (
	
	@AffiliateID int
) AS
BEGIN
	SET NOCOUNT ON;
	SELECT U_AffiliateCommission FROM tblKartrisUsers WHERE U_ID = @AffiliateID
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisOrders_Get]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisOrders_Get]
(
		   @O_ID int
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT * FROM tblKartrisOrders WHERE O_ID = @O_ID;
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisOrders_DataUpdate]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisOrders_DataUpdate]
(
	@O_ID int,
	@O_Data nvarchar(MAX)
)
AS
BEGIN
	SET NOCOUNT ON;
		
	
	UPDATE [tblKartrisOrders] SET [O_Data] = @O_Data
		WHERE [O_ID] = @O_ID;
	
			

	SELECT @O_ID;
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisOrders_CouponUsed]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisOrders_CouponUsed]
(
	@CouponCode as nvarchar(25)
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


	UPDATE dbo.tblKartrisCoupons
	SET CP_Used = 1
	WHERE CP_CouponCode = @CouponCode;
	
	SELECT @CouponCode;

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisCustomer_UpdateMailingList]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 17/Aug/08
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisCustomer_UpdateMailingList] (
	@EmailAddress nvarchar (100),
	@SignupDateTime datetime,
	@SignupIP nvarchar(20),
	@SignupRandomKey nvarchar(100),
	@MailFormat nvarchar(5),
	@LanguageID tinyint
) AS
BEGIN
	SET NOCOUNT ON;


	if exists(select U_EmailAddress from tblKartrisUsers where U_EmailAddress=@EmailAddress)
	Begin
		update tblKartrisUsers
			set U_ML_SignupDateTime = @SignupDateTime,
			U_ML_SignupIP = @SignupIP,
			U_ML_RandomKey = @SignupRandomKey,
			U_ML_Format = @MailFormat,
			U_LanguageID = @LanguageID
		where U_EmailAddress = @EmailAddress
	End
	Else
	Begin
		insert into tblKartrisUsers (U_EmailAddress, U_Password, U_ML_SignupDateTime, U_ML_SignupIP, U_ML_RandomKey, U_ML_Format, U_LanguageID)
		values (@EmailAddress,@SignupRandomKey,@SignupDateTime,@SignupIP,@SignupRandomKey,@MailFormat,@LanguageID);
	End;


END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisCustomer_UpdateMailFormat]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 30/July/08
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisCustomer_UpdateMailFormat] (
	@LanguageID int,
	@UserID int,
	@MailFormat nvarchar(1)
) AS
BEGIN
	SET NOCOUNT ON;



	If @MailFormat='n'
	Begin
		update tblKartrisUsers set U_ML_SendMail=0, U_LanguageID=@LanguageID
		where U_ID=@UserID
	End

	If @MailFormat='t'
	Begin
		update tblKartrisUsers set U_ML_SendMail=1, U_ML_Format='t', U_LanguageID=@LanguageID
		where U_ID=@UserID
	End

	If @MailFormat='h'
	Begin
		update tblKartrisUsers set U_ML_SendMail=1, U_ML_Format='h', U_LanguageID=@LanguageID
		where U_ID=@UserID
	End;


END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisCustomer_UpdateAffiliate]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 16/July/2008
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisCustomer_UpdateAffiliate]( 
	@Type as smallint,
	@UserID as integer,
	@AffiliateCommission float=0,
	@AffiliateID int=0
) AS
BEGIN
	SET NOCOUNT ON;


	If @Type=1 -- affiliate status
	Begin
		update tblKartrisUsers set U_IsAffiliate=1 where U_ID=@UserID
	End;

	If @Type=2 -- affiliate commission
	Begin
		update tblKartrisUsers set U_AffiliateCommission=@AffiliateCommission where U_ID=@UserID
	End;

	If @Type=3 -- affiliate affliate id
	Begin
		update tblKartrisUsers set U_AffiliateID = @AffiliateID 
			where U_ID=@UserID and (isnull(U_AffiliateID,0)=0 or U_AffiliateID=@AffiliateID)
	End;





END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisCustomer_GetInvoice]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Joseph>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisCustomer_GetInvoice] ( 
	@O_ID integer,
	@U_ID integer,
	@intType integer=0
) AS
BEGIN
	SET NOCOUNT ON;

	If @intType=0 -- summary/address only
	Begin	
		SELECT     O.O_BillingAddress, O.O_ShippingAddress, O.O_PurchaseOrderNo, U.U_CardholderEUVATNum, O.O_Date, O.O_CurrencyID, O.O_CurrencyIDGateway, 
					  O.O_TotalPriceGateway, O.O_LanguageID, O.O_Comments
FROM         tblKartrisUsers AS U INNER JOIN
					  tblKartrisOrders AS O ON O.O_CustomerID = U.U_ID INNER JOIN
					  tblKartrisLanguages AS L ON O.O_LanguageID = L.LANG_ID
WHERE     (O.O_ID = @O_ID) AND (U.U_ID = @U_ID)
	End

	Else
	Begin -- invoice rows
		SELECT    *
FROM         tblKartrisInvoiceRows AS IR INNER JOIN
					  tblKartrisOrders AS O ON IR.IR_OrderNumberID = O.O_ID INNER JOIN
					  tblKartrisUsers AS U ON O.O_CustomerID = U.U_ID LEFT OUTER JOIN
					  tblKartrisCoupons AS C ON C.CP_CouponCode = O.O_CouponCode
WHERE     (O.O_ID = @O_ID) AND (U.U_ID = @U_ID)
	End

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisOrders_UpdateQBSent]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisOrders_UpdateQBSent]
(
	@O_ID int
)
AS
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT OFF;
	
	UPDATE tblKartrisOrders SET O_SentToQB = 1
		WHERE O_ID = @O_ID;
	Select @O_ID;
GO
/****** Object:  StoredProcedure [dbo].[spKartrisOrders_Add]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisOrders_Add]
(
		   @O_CustomerID int,
		   @O_Details nvarchar(MAX),
		   @O_ShippingPrice real,
		   @O_ShippingTax real,
		   @O_DiscountPercentage real,
		   @O_AffiliatePercentage real,
		   @O_TotalPrice real,
		   @O_Date smalldatetime,
		   @O_PurchaseOrderNo nvarchar(50),
		   @O_SecurityID int,
		   @O_Sent bit,
		   @O_Invoiced bit,
		   @O_Shipped bit,
		   @O_Paid bit,
		   @O_Status nvarchar(MAX),
		   @O_LastModified smalldatetime,
		   @O_WishListID int,
		   @O_CouponCode nvarchar(25),
		   @O_CouponDiscountTotal real,
		   @O_PricesIncTax bit,
		   @O_TaxDue real,
		   @O_PaymentGateWay nvarchar(20),
		   @O_ReferenceCode nvarchar(100),
		   @O_LanguageID tinyint,
		   @O_CurrencyID tinyint,
		   @O_TotalPriceGateway real,
		   @O_CurrencyIDGateway tinyint,
		   @O_AffiliatePaymentID int,
		   @O_AffiliateTotalPrice real,
		   @O_SendOrderUpdateEmail bit,
		   @O_OrderHandlingCharge real,
		   @O_OrderHandlingChargeTax real,
		   @O_CurrencyRate real,
		   @O_ShippingMethod nvarchar(255),
		   @O_BillingAddress nvarchar(255),
		   @O_ShippingAddress nvarchar(255),
		   @O_PromotionDiscountTotal real,
		   @O_PromotionDescription nvarchar(255),
		   @O_Comments nvarchar(MAX)
)
AS
BEGIN
	DECLARE @O_ID INT
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT OFF;

	
	INSERT INTO [tblKartrisOrders]
		   ([O_CustomerID]
		   ,[O_Details]
		   ,[O_ShippingPrice]
		   ,[O_ShippingTax]
		   ,[O_DiscountPercentage]
		   ,[O_AffiliatePercentage]
		   ,[O_TotalPrice]
		   ,[O_Date]
		   ,[O_PurchaseOrderNo]
		   ,[O_SecurityID]
		   ,[O_Sent]
		   ,[O_Invoiced]
		   ,[O_Shipped]
		   ,[O_Paid]
		   ,[O_Status]
		   ,[O_LastModified]
		   ,[O_WishListID]
		   ,[O_CouponCode]
		   ,[O_CouponDiscountTotal]
		   ,[O_PricesIncTax]
		   ,[O_TaxDue]
		   ,[O_PaymentGateWay]
		   ,[O_ReferenceCode]
		   ,[O_LanguageID]
		   ,[O_CurrencyID]
		   ,[O_TotalPriceGateway]
		   ,[O_CurrencyIDGateway]
		   ,[O_AffiliatePaymentID]
		   ,[O_AffiliateTotalPrice]
		   ,[O_SendOrderUpdateEmail]
		   ,[O_OrderHandlingCharge]
		   ,[O_OrderHandlingChargeTax]
		   ,[O_CurrencyRate]
		   ,[O_ShippingMethod]
		   ,[O_BillingAddress]
		   ,[O_ShippingAddress]
		   ,[O_PromotionDiscountTotal]
		   ,[O_PromotionDescription]
		   ,[O_Comments]
		   ,[O_Cancelled])
	 VALUES
		   (@O_CustomerID,
		   @O_Details,
		   @O_ShippingPrice,
		   @O_ShippingTax,
		   @O_DiscountPercentage,
		   @O_AffiliatePercentage,
		   @O_TotalPrice,
		   @O_Date,
		   @O_PurchaseOrderNo,
		   @O_SecurityID,
		   @O_Sent,
		   @O_Invoiced,
		   @O_Shipped,
		   @O_Paid,
		   @O_Status,
		   @O_LastModified,
		   @O_WishListID,
		   @O_CouponCode,
		   @O_CouponDiscountTotal,
		   @O_PricesIncTax,
		   @O_TaxDue,
		   @O_PaymentGateWay,
		   @O_ReferenceCode,
		   @O_LanguageID,
		   @O_CurrencyID,
		   @O_TotalPriceGateway,
		   @O_CurrencyIDGateway,
		   @O_AffiliatePaymentID,
		   @O_AffiliateTotalPrice,
		   @O_SendOrderUpdateEmail,
		   @O_OrderHandlingCharge,
		   @O_OrderHandlingChargeTax,
		   @O_CurrencyRate,
		   @O_ShippingMethod,
		   @O_BillingAddress,
		   @O_ShippingAddress,
		   @O_PromotionDiscountTotal,
		   @O_PromotionDescription,
		   @O_Comments,
		   0)

	SET @O_ID = SCOPE_IDENTITY();
	SELECT @O_ID;
	
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisOrderPaymentsLink_Add]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisOrderPaymentsLink_Add]
(
		   @OP_PaymentID int,
		   @OP_OrderID int
)
AS
BEGIN
	
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT OFF;

	
	INSERT INTO [tblKartrisOrderPaymentLink]
		   ([OP_PaymentID]
		   ,[OP_OrderID]
		   ,[OP_OrderCanceled])
	 VALUES
		   (@OP_PaymentID,@OP_OrderID,0)

	SELECT @OP_PaymentID;
	
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisPayments_Add]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisPayments_Add]
(
		   @Payment_CustomerID int,
		   @Payment_Date smalldatetime,
		   @Payment_Amount real,
		   @Payment_CurrencyID tinyint,
		   @Payment_ReferenceNo nvarchar(100),
		   @Payment_GateWay nvarchar(20),
		   @Payment_CurrencyRate real
)
AS
BEGIN
	DECLARE @Payment_ID INT
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT OFF;

	
	INSERT INTO [tblKartrisPayments]
		   ([Payment_CustomerID]
		   ,[Payment_Date]
		   ,[Payment_Amount]
		   ,[Payment_CurrencyID]
		   ,[Payment_ReferenceNo]
		   ,[Payment_Gateway]
		   ,[Payment_CurrencyRate]
		   )
	 VALUES
		   (@Payment_CustomerID,
		   @Payment_Date,
		   @Payment_Amount,
		   @Payment_CurrencyID,
		   @Payment_ReferenceNo,
		   @Payment_GateWay,
		   @Payment_CurrencyRate)

	SET @Payment_ID = SCOPE_IDENTITY();
	SELECT @Payment_ID;
	
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisPromotions_Get]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisPromotions_Get]
AS
	SET NOCOUNT ON;
	SELECT        tblKartrisPromotions.*
	FROM            tblKartrisPromotions 
	WHERE		PROM_Live = 1
	ORDER BY PROM_Live, PROM_ID DESC
GO
/****** Object:  StoredProcedure [dbo].[spKartrisSessions_Add]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author: Joseph
-- Create date: 17/Feb/08
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisSessions_Add]
(
	@SESS_Code nvarchar(20),
	@SESS_IP nvarchar(16),
	@SESS_DateCreated datetime,
	@SESS_DateLastUpdated datetime,
	@SESS_Expiry int
)
AS

	DECLARE @intSESS_ID INT

	SET NOCOUNT OFF;

--	
	INSERT INTO [tblKartrisSessions] ([SESS_Code], [SESS_IP], [SESS_DateCreated], [SESS_DateLastUpdated], [SESS_Expiry]) 
	VALUES (@SESS_Code, @SESS_IP, @SESS_DateCreated, @SESS_DateLastUpdated, @SESS_Expiry);
--	

--SELECT SCOPE_IDENTITY()'SESS_ID'

	SET @intSESS_ID = SCOPE_IDENTITY();

--	
	UPDATE [tblKartrisSessions] SET SESS_Code=SESS_Code + cast(@intSESS_ID as varchar(10))
	WHERE SESS_Code=@SESS_Code;
--	

	SELECT @intSESS_ID 'SESS_ID';
GO
/****** Object:  StoredProcedure [dbo].[spKartrisSearchStatistics_ReportSearch]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisSearchStatistics_ReportSearch]
(	
	@KeyWordsList as nvarchar(500),
	@CurrentYear as smallint,
	@CurrentMonth as tinyint,
	@CurrentDay as tinyint,
	@CurrentDate as datetime
)
AS
BEGIN
SET NOCOUNT ON;
	
	SET NOCOUNT ON;
	-----------------------
	-- Variable Declaration
	-----------------------
	DECLARE @SIndx as int;
	DECLARE @CIndx as int;
	DECLARE @Keyword as nvarchar(150);
	DECLARE @Counter as int;
	
	SET @SIndx = 0;
	SET @Counter = 0;
	WHILE @SIndx <= LEN(@KeyWordsList)
	BEGIN
		
		-- Loop through out the keyword''s list
		SET @Counter = @Counter + 1;	-- keywords counter
		SET @CIndx = CHARINDEX(',', @KeyWordsList, @SIndx)	-- Next keyword starting index (1-Based Index)
		IF @CIndx = 0 BEGIN SET @CIndx = LEN(@KeyWordsList)+ 1 END	-- If no more keywords, set next starting index to not exist
		SET @KeyWord = SUBSTRING(@KeyWordsList, @SIndx, @CIndx - @SIndx)
		
		SET @SIndx = @CIndx + 1;	-- The next starting index
			
		UPDATE dbo.tblKartrisSearchStatistics
		SET SS_Searches = SS_Searches + 1
		WHERE SS_Keyword = @KeyWord AND SS_Year = @CurrentYear 
			AND SS_Month = @CurrentMonth AND SS_Day = @CurrentDay;

		IF @@ROWCOUNT = 0
		BEGIN
			INSERT INTO dbo.tblKartrisSearchStatistics
			VALUES(@KeyWord, @CurrentDate, @CurrentYear, @CurrentMonth, @CurrentDay, 1);
		END
				
	END;
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisSessions_GetSessionID]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:	Joseph	
-- Create date: 17/Feb/08
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisSessions_GetSessionID](
	@SESS_Code varchar(255)
)
AS
	
SET NOCOUNT ON;

SELECT SESS_ID FROM tblKartrisSessions 
WHERE SESS_Code = @SESS_Code 

SET NOCOUNT OFF
GO
/****** Object:  StoredProcedure [dbo].[spKartrisSessions_Get]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisSessions_Get]
AS
	
SET NOCOUNT ON;

SELECT * from tblKartrisSessions
GO
/****** Object:  StoredProcedure [dbo].[spKartrisSessions_UpdateDate]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisSessions_UpdateDate]
(
	@SESS_DateLastUpdated datetime,
	@SESS_ID bigint
)
AS

SET NOCOUNT OFF;
--	
	UPDATE tblKartrisSessions 
	SET SESS_DateLastUpdated=@SESS_DateLastUpdated
	WHERE SESS_ID = @SESS_ID;
--
GO
/****** Object:  StoredProcedure [dbo].[spKartrisWishLists_Get]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 13/May/2008
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisWishLists_Get] (
	@WL_ID bigint=0,
	@UserID bigint=0
) AS
BEGIN
	SET NOCOUNT ON;

	If @WL_ID=0
	Begin
		select distinct WL.* from tblKartrisWishLists WL
		--inner join tblKartrisBasketValues BV on WL.WL_ID=BV.BV_ParentID and BV.BV_ParentType='w'
		where WL_UserID=@UserID 
		order by WL_ID desc
	End
	Else
	Begin
		select isnull(U.U_AccountHolderName,'')'U_AccountHolderName', U_EmailAddress,WL.* from tblKartrisWishLists WL
		left join tblKartrisUsers U on WL.WL_UserID=U.U_ID
		where WL_ID=@WL_ID
	End

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisStatistics_Add]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisStatistics_Add]
(
	@Type as char(1),
	@ParentID as bigint,
	@ItemID as bigint,
	@IP as nvarchar(50),
	@NowOffset as datetime
)
AS
BEGIN
	
	INSERT INTO dbo.tblKartrisStatistics
	VALUES (@Type, @ParentID, @ItemID, @NowOffset, @IP);
	
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisSupportTickets_AddCustomerReply]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisSupportTickets_AddCustomerReply]
(
	@TIC_ID as bigint,
	@NowOffset as datetime,
	@STM_Text as nvarchar(MAX),
	@STM_NewID as bigint OUTPUT
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	INSERT INTO dbo.tblKartrisSupportTicketMessages
	VALUES	(@TIC_ID, 0, @NowOffset, @STM_Text);

	
	SELECT @STM_NewID = SCOPE_IDENTITY();
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisSupportTickets_Add]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisSupportTickets_Add]
(
	@OpenedDate as datetime,
	@TicketType as int,
	@Subject as nvarchar(100),
	@Text as nvarchar(MAX),
	@U_ID as int,
	@TIC_NewID as bigint OUTPUT
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	INSERT INTO dbo.tblKartrisSupportTickets
	VALUES (@OpenedDate, NULL, @Subject, @U_ID, 0, @TicketType, 'o', 0, NULL);


	SELECT @TIC_NewID  = SCOPE_IDENTITY();
	
	IF @TIC_NewID IS NOT NULL
	BEGIN
	
		INSERT INTO dbo.tblKartrisSupportTicketMessages
		VALUES	(@TIC_NewID, 0, @OpenedDate, @Text);
	
	END
	
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisSupportTicketMessages_GetLastByOwner]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisSupportTicketMessages_GetLastByOwner]
(
	@TIC_ID as bigint
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT   top(1) tblKartrisSupportTicketMessages.STM_TicketID, tblKartrisSupportTicketMessages.STM_ID, tblKartrisSupportTicketMessages.STM_LoginID AS AssignedID, 
					  tblKartrisLogins.LOGIN_Username AS AssignedName, tblKartrisSupportTicketMessages.STM_DateCreated, tblKartrisSupportTicketMessages.STM_Text
	FROM         tblKartrisLogins RIGHT OUTER JOIN
						  tblKartrisSupportTicketMessages ON tblKartrisLogins.LOGIN_ID = tblKartrisSupportTicketMessages.STM_LoginID
	WHERE     (tblKartrisSupportTicketMessages.STM_TicketID = @TIC_ID AND tblKartrisSupportTicketMessages.STM_LoginID > 0) order by tblKartrisSupportTicketMessages.STM_ID DESC
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisUsers_Validate]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisUsers_Validate]
(
	@EmailAddress varchar(100),
	@Password varchar(64)
)
AS
SET NOCOUNT OFF;
SELECT        TOP 1 U_ID
FROM            tblKartrisUsers
WHERE        (U_EmailAddress = @EmailAddress AND U_Password = @Password )
GO
/****** Object:  StoredProcedure [dbo].[spKartrisUsers_UpdateQBListID]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisUsers_UpdateQBListID]
(
		@U_ID int,
		@U_QBListID nvarchar(50)
)
AS
	SET NOCOUNT OFF;


	UPDATE [tblKartrisUsers] SET 
			[U_QBListID] = @U_QBListID
			WHERE U_ID = @U_ID ;
	SELECT @U_ID;
GO
/****** Object:  StoredProcedure [dbo].[spKartrisUsers_UpdateNameAndEUVAT]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisUsers_UpdateNameAndEUVAT]
(
		@U_ID int,
		@U_AccountHolderName nvarchar(50),
		@U_CardholderEUVATNum nvarchar(15)
)
AS
	SET NOCOUNT OFF;


	UPDATE [tblKartrisUsers] SET 
			[U_AccountHolderName] = @U_AccountHolderName,
			[U_CardholderEUVATNum] = @U_CardholderEUVATNum
			WHERE U_ID = @U_ID ;
	SELECT @U_ID;
GO
/****** Object:  StoredProcedure [dbo].[spKartrisUsers_UpdateCustomerBalance]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisUsers_UpdateCustomerBalance]
(
		   @CustomerID int,
		   @U_CustomerBalance real
)
AS
	SET NOCOUNT OFF;

	
	UPDATE [tblKartrisUsers] SET
			[U_CustomerBalance] = @U_CustomerBalance
			WHERE U_ID = @CustomerID;
	SELECT @CustomerID;
GO
/****** Object:  StoredProcedure [dbo].[spKartrisUsers_ResetPassword]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisUsers_ResetPassword]
(
		   @U_ID int,
		   @U_NewPassword nvarchar(64),
		   @U_TempPasswordExpiry as datetime
)
AS
	SET NOCOUNT OFF;

	UPDATE [tblKartrisUsers] SET 
			[U_TempPassword] = @U_NewPassword,
			[U_TempPasswordExpiry] = @U_TempPasswordExpiry
			WHERE U_ID = @U_ID;
	SELECT @U_ID;
GO
/****** Object:  StoredProcedure [dbo].[spKartrisUsers_GetSaltByEmail]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisUsers_GetSaltByEmail]
(
	@U_EmailAddress nvarchar(100)
)
AS
SET NOCOUNT OFF;
SELECT        TOP 1 
			U_SaltValue
FROM            tblKartrisUsers
WHERE        (U_EmailAddress = @U_EmailAddress);
GO
/****** Object:  StoredProcedure [dbo].[spKartrisUsers_GetNameAndEUVAT]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisUsers_GetNameAndEUVAT]
(
		@U_ID int
)
AS
	SET NOCOUNT OFF;
SELECT TOP 1 (ISNULL(U_AccountHolderName,'') + '|||' +
				ISNULL(U_CardholderEUVATNum,'')) as NameAndEUVAT
FROM            tblKartrisUsers
WHERE        (U_ID = @U_ID)
GO
/****** Object:  StoredProcedure [dbo].[spKartrisUsers_GetEmailByID]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisUsers_GetEmailByID]
(
	@U_ID int
)
AS
SET NOCOUNT OFF;
SELECT        TOP 1 
			U_EmailAddress
FROM            tblKartrisUsers
WHERE        (U_ID = @U_ID)
GO
/****** Object:  StoredProcedure [dbo].[spKartrisUsers_GetDetails]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisUsers_GetDetails]
(
	@EmailAddress nvarchar(100)
)
AS
SET NOCOUNT OFF;
SELECT        TOP 1 
				U_ID,
				U_AccountHolderName,
				U_CustomerDiscount,
				U_DefBillingAddressID,
				U_DefShippingAddressID,
U_AffiliateID,
U_Approved,
U_IsAffiliate,
U_AffiliateCommission,
U_LanguageID,
U_CustomerGroupID,
U_TempPassword,
U_TempPasswordExpiry,
U_SupportEndDate,
U_CustomerBalance
				
FROM            tblKartrisUsers
WHERE        (U_EmailAddress = @EmailAddress)
GO
/****** Object:  StoredProcedure [dbo].[spKartrisUsers_GetAddressByID]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	Get all user stored addresses
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisUsers_GetAddressByID]
(
	@U_ID int
)
AS
SET NOCOUNT OFF;
SELECT        *
FROM            tblKartrisAddresses
WHERE        (ADR_UserID = @U_ID)
GO
/****** Object:  StoredProcedure [dbo].[spKartrisUsers_DeleteAddress]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisUsers_DeleteAddress]
(
		   @ADR_ID int,@ADR_UserID int
)
AS
	SET NOCOUNT OFF;

	DELETE FROM [tblKartrisAddresses]
		   WHERE [ADR_ID] = @ADR_ID AND ADR_UserID = @ADR_UserID;
GO
/****** Object:  StoredProcedure [dbo].[spKartrisUsers_ChangePasswordfromRecovery]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisUsers_ChangePasswordfromRecovery]
(
			@U_ID int,
			@U_NewPassword nvarchar(64),
			@U_NewSaltValue nvarchar(64)
)
AS
	SET NOCOUNT OFF;

	UPDATE [tblKartrisUsers] SET 
			[U_Password] = @U_NewPassword,
			[U_TempPassword] = '',
			[U_SaltValue] = @U_NewSaltValue
			WHERE U_ID = @U_ID;
	SELECT @U_ID;
GO
/****** Object:  StoredProcedure [dbo].[spKartrisUsers_ChangePassword]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisUsers_ChangePassword]
(
		@U_ID int,
		@U_Password nvarchar(64),
		@U_NewPassword nvarchar(64),
		@U_NewSaltValue nvarchar(64)
)
AS
	SET NOCOUNT OFF;


	UPDATE [tblKartrisUsers] SET 
			[U_Password] = @U_NewPassword,
			[U_TempPassword] = '',
			[U_SaltValue] = @U_NewSaltValue
			WHERE U_ID = @U_ID AND U_Password = @U_Password;
			
	SELECT @U_ID;
GO
/****** Object:  StoredProcedure [dbo].[spKartrisUsers_AddUpdateAddress]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisUsers_AddUpdateAddress]
(
		   @ADR_UserID int,
		   @ADR_Label nvarchar(50),
		   @ADR_Name nvarchar(50),
		   @ADR_Company nvarchar(100),
		   @ADR_StreetAddress nvarchar(50),
		   @ADR_TownCity nvarchar(50),
		   @ADR_County nvarchar(50),
		   @ADR_PostCode nvarchar(20),
		   @ADR_Country int,
		   @ADR_Telephone nvarchar(50),
		   @ADR_Type nvarchar(1),
		   @ADR_MakeDefault bit,
		   @ADR_ID int
)
AS
	SET NOCOUNT OFF;

	

	BEGIN TRANSACTION
	IF @ADR_ID = 0
		BEGIN
			INSERT INTO [tblKartrisAddresses]
					   ([ADR_UserID]
					   ,[ADR_Label]
					   ,[ADR_Name]
					   ,[ADR_Company]
					   ,[ADR_StreetAddress]
					   ,[ADR_TownCity]
					   ,[ADR_County]
					   ,[ADR_PostCode]
					   ,[ADR_Country]
					   ,[ADR_Telephone]
					   ,[ADR_Type])
				 VALUES
					   (@ADR_UserID, @ADR_Label, @ADR_Name, @ADR_Company,
					   @ADR_StreetAddress, @ADR_TownCity, @ADR_County,
					   @ADR_PostCode, @ADR_Country, @ADR_Telephone, @ADR_Type);

			SET @ADR_ID = SCOPE_IDENTITY();
		END
	ELSE
		BEGIN
			UPDATE [tblKartrisAddresses] SET
					   
					   [ADR_Label] = @ADR_Label
					   ,[ADR_Name] = @ADR_Name
					   ,[ADR_Company] = @ADR_Company
					   ,[ADR_StreetAddress] = @ADR_StreetAddress
					   ,[ADR_TownCity] = @ADR_TownCity
					   ,[ADR_County] = @ADR_County
					   ,[ADR_PostCode] = @ADR_PostCode
					   ,[ADR_Country] = @ADR_Country
					   ,[ADR_Telephone] = @ADR_Telephone
					   ,[ADR_Type] = @ADR_Type
					WHERE [ADR_ID] = @ADR_ID AND [ADR_UserID] = @ADR_UserID;
		END;
	

	IF @@ERROR <> 0
	 BEGIN
		-- Rollback the transaction
		ROLLBACK

		-- Raise an error and return
		RAISERROR ('Error in inserting record in Address Table.', 16, 1)
		RETURN
	 END

	--If make default is set then modify Users table
	IF @ADR_MakeDefault = 1
	BEGIN

		IF @ADR_Type = 'b'
			BEGIN
				UPDATE [tblKartrisUsers] SET [U_DefBillingAddressID] = @ADR_ID WHERE [U_ID] = @ADR_UserID;
			END
		IF @ADR_Type = 's'
			BEGIN
				UPDATE [tblKartrisUsers] SET [U_DefShippingAddressID] = @ADR_ID WHERE [U_ID] = @ADR_UserID;
			END
		IF @ADR_Type = 'u'
			BEGIN
				UPDATE [tblKartrisUsers] SET [U_DefBillingAddressID] = @ADR_ID, [U_DefShippingAddressID] = @ADR_ID WHERE [U_ID] = @ADR_UserID;
			END;

	END


	IF @@ERROR <> 0
	 BEGIN
		-- Rollback the transaction
		ROLLBACK

		-- Raise an error and return
		RAISERROR ('Error in updating the Users Default Address.', 16, 1)
		RETURN
	 END

	--         Commit the transaction....
	COMMIT

	SELECT @ADR_ID;
GO
/****** Object:  StoredProcedure [dbo].[spKartrisUsers_Add_ML]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisUsers_Add_ML]
(
		   @U_EmailAddress nvarchar(100),
		   @U_Password nvarchar(64),
		   @U_IsAffiliate bit,
		   @U_LanguageID int,
		   @U_ML_SignupDateTime datetime,
		   @U_ML_SignupIP nvarchar(20),
		   @U_ML_RandomKey nvarchar(20),
		   @U_ML_Format nvarchar(1),
		   @U_ML_SendMail bit
)
AS
	DECLARE @U_ID INT
	SET NOCOUNT OFF;

	INSERT INTO [tblKartrisUsers]
		   ([U_EmailAddress]
		   ,[U_Password]
		   ,[U_IsAffiliate]
		   ,[U_LanguageID]
		   ,[U_ML_SignupDateTime]
		   ,[U_ML_SignupIP]
		   ,[U_ML_RandomKey]
		   ,[U_ML_Format]
		   ,[U_ML_SendMail])
	 VALUES
		   (@U_EmailAddress,
			@U_Password,
			@U_IsAffiliate,
			@U_LanguageID,
			@U_ML_SignupDateTime,
			@U_ML_SignupIP,
			@U_ML_RandomKey,
			@U_ML_Format,
			@U_ML_SendMail);
	SET @U_ID = SCOPE_IDENTITY();
	SELECT @U_ID;
GO
/****** Object:  StoredProcedure [dbo].[spKartrisUsers_Add]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisUsers_Add]
(
		   @U_EmailAddress nvarchar(100),
		   @U_Password nvarchar(64),
		   @U_SaltValue nvarchar(64)
)
AS
DECLARE @U_ID INT
	SET NOCOUNT OFF;


	INSERT INTO [tblKartrisUsers]
		   ([U_EmailAddress]
		   ,[U_Password]
		   ,[U_LanguageID]
			,[U_CustomerGroupID]
			,[U_DefShippingAddressID]
			,[U_DefBillingAddressID]
			,[U_CustomerDiscount]
			,[U_SaltValue])
	 VALUES
		   (@U_EmailAddress,
			@U_Password,
			1,0,0,0,0,@U_SaltValue);
	SET @U_ID = SCOPE_IDENTITY();
	SELECT @U_ID;
GO
/****** Object:  StoredProcedure [dbo].[spKartrisTaxRates_GetClosestRate]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: 08/April/2010
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisTaxRates_GetClosestRate] ( 
	@computedTaxRate real
) AS
BEGIN
	SET NOCOUNT ON;
	select TOP 1 T_TaxRate from tblKartrisTaxRates ORDER BY ABS(T_TaxRate - @computedTaxRate), T_ID ASC
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisTaxRates_Get]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: 16/July/2008
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisTaxRates_Get] ( 
	@T_ID tinyint
) AS
BEGIN
	SET NOCOUNT ON;
	select T_TaxRate from tblKartrisTaxRates
	where T_ID=@T_ID

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisSupportTickets_GetDetailsByID]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- Modified:	Medz (12/01/10) - to include U_ID parameter
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisSupportTickets_GetDetailsByID]
(
	@TIC_ID as bigint,
	@U_ID as int
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT     tblKartrisSupportTickets.TIC_ID, tblKartrisSupportTickets.TIC_DateOpened, tblKartrisSupportTickets.TIC_DateClosed, tblKartrisSupportTickets.TIC_Subject, 
					  tblKartrisSupportTickets.TIC_Status, tblKartrisSupportTicketMessages.STM_ID, tblKartrisSupportTicketMessages.STM_LoginID, 
					  tblKartrisSupportTicketMessages.STM_DateCreated, tblKartrisSupportTicketMessages.STM_Text, tblKartrisSupportTickets.TIC_LoginID AS AssignedID
FROM         tblKartrisSupportTickets INNER JOIN
					  tblKartrisSupportTicketMessages ON tblKartrisSupportTickets.TIC_ID = tblKartrisSupportTicketMessages.STM_TicketID
WHERE     (tblKartrisSupportTickets.TIC_ID = @TIC_ID) AND (tblKartrisSupportTickets.TIC_UserID = @U_ID)
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisSupportTickets_GetByUserID]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisSupportTickets_GetByUserID]
(
	@U_ID as int
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT     TIC_ID, TIC_DateOpened, TIC_DateClosed, TIC_Subject, 
			dbo.fnKartrisSupportTicketMessages_IsAwaitingReplyFromUser(TIC_ID) as TIC_AwaitingReplay
	FROM         tblKartrisSupportTickets
	WHERE     (TIC_UserID = @U_ID)
	
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisSessionValues_Update]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisSessionValues_Update]
(
	--@SESSV_ID int,
	@SESSV_SessionID int,
	@SESSV_Name varchar(255),
	@SESSV_Value nvarchar(255),
	@SESSV_Expiry int
)
AS

SET NOCOUNT OFF;

/**
UPDATE tblKartrisSessionValues 
SET SESSV_Value=@SESSV_Value,
	SESSV_Expiry=@SESSV_Expiry
WHERE SESSV_ID = @SESSV_ID
**/

--	
	UPDATE tblKartrisSessionValues 
	SET SESSV_Value=@SESSV_Value,
		SESSV_Expiry=@SESSV_Expiry
	WHERE SESSV_SessionID = @SESSV_SessionID
	AND SESSV_Name = @SESSV_Name;
--
GO
/****** Object:  StoredProcedure [dbo].[spKartrisSessionValues_Insert]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisSessionValues_Insert]
(
	@SESSV_SessionID int,
	@SESSV_Name nvarchar(255),
	@SESSV_Value nvarchar(255),
	@SESSV_Expiry int
)
AS

SET NOCOUNT OFF;

--	
	INSERT INTO tblKartrisSessionValues (SESSV_SessionID, SESSV_Name, SESSV_Value, SESSV_Expiry) 
	VALUES (@SESSV_SessionID, @SESSV_Name, @SESSV_Value,@SESSV_Expiry);
--
GO
/****** Object:  StoredProcedure [dbo].[spKartrisSessionValues_GetValue]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisSessionValues_GetValue]
	@SESSV_SessionID AS INT,
	@SESSV_Name AS VARCHAR(255)
AS
	
SET NOCOUNT ON;


SELECT SESSV_Value FROM tblKartrisSessionValues
WHERE SESSV_SessionID=@SESSV_SessionID
AND SESSV_Name=@SESSV_Name
GO
/****** Object:  StoredProcedure [dbo].[spKartrisSessionValues_Get]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisSessionValues_Get]

AS
	
SET NOCOUNT ON;

SELECT * FROM tblKartrisSessionValues
GO
/****** Object:  StoredProcedure [dbo].[spKartrisSessionValues_Delete]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisSessionValues_Delete]
(
	@SESSV_SessionID int,
	@SESSV_Name VARCHAR(255)
)
AS
	
SET NOCOUNT OFF;
--	
	DELETE FROM tblKartrisSessionValues
	WHERE
	SESSV_SessionID = @SESSV_SessionID
	AND SESSV_Name = @SESSV_Name;
--
GO
/****** Object:  StoredProcedure [dbo].[spKartrisSessionValues_Count]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 7/Apr/08
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisSessionValues_Count]
	@SESSV_SessionID INT,
	@SESSV_Name VARCHAR(255)
AS
BEGIN

SET NOCOUNT ON;

DECLARE @RecordCount INT

SELECT @RecordCount=count(SESSV_SessionID) FROM tblKartrisSessionValues
WHERE SESSV_SessionID=@SESSV_SessionID AND SESSV_Name=@SESSV_Name

SELECT @RecordCount 'RecordCount'

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisSessionValues_Add]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 18/Aug/2009
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisSessionValues_Add]( 
	@SESSV_SessionID int,
	@SESSV_Name nvarchar(255),
	@SESSV_Value nvarchar(255),
	@SESSV_Expiry int
)AS

BEGIN
	SET NOCOUNT ON;
	
	Declare @cnt int	

	SELECT @cnt=count(SESSV_SessionID) FROM tblKartrisSessionValues
	WHERE SESSV_SessionID=@SESSV_SessionID AND SESSV_Name=@SESSV_Name;

--	
	If @cnt>0
	Begin -- update session value
		UPDATE tblKartrisSessionValues 
			SET SESSV_Value=@SESSV_Value,SESSV_Expiry=@SESSV_Expiry	
		WHERE SESSV_SessionID = @SESSV_SessionID AND SESSV_Name = @SESSV_Name;	
	End
	Else -- insert session value
	Begin
		INSERT INTO tblKartrisSessionValues (SESSV_SessionID, SESSV_Name, SESSV_Value, SESSV_Expiry) 
		VALUES (@SESSV_SessionID, @SESSV_Name, @SESSV_Value,@SESSV_Expiry);	
	End;

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisSessions_GetSessionValues]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 9/Feb/08
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisSessions_GetSessionValues] (
	@SESS_ID bigint,
	@SESS_Code nvarchar(100),
	@NowOffset datetime
) AS
BEGIN
	SET NOCOUNT ON;

   select SESS_Code,SESS_DateLastUpdated,SV.* from tblKartrisSessions S
	left join tblKartrisSessionValues SV on S.SESS_ID=SV.SESSV_SessionID
	where SESS_ID=@SESS_ID and SESS_Code=@SESS_Code
	and dateadd(minute,SESS_Expiry,SESS_DateLastUpdated)>=@NowOffset

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisOptions_Get]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisOptions_Get]
AS
	SET NOCOUNT ON;
SELECT        tblKartrisOptions.*
FROM            tblKartrisOptions
ORDER BY OPT_DefOrderByValue
GO
/****** Object:  StoredProcedure [dbo].[spKartrisLanguageElements_GetElementValue_s]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisLanguageElements_GetElementValue_s]
(
	@LE_LanguageID tinyint,
	@LE_TypeID tinyint,
	@LE_FieldID tinyint,
	@LE_ParentID bigint
)
AS
	SET NOCOUNT OFF;
SELECT LE_Value
FROM [tblKartrisLanguageElements]
WHERE [LE_LanguageID] = @LE_LanguageID AND [LE_TypeID]= @LE_TypeID 
	AND [LE_FieldID]= @LE_FieldID AND [LE_ParentID] = @LE_ParentID;
GO
/****** Object:  StoredProcedure [dbo].[spKartrisLanguageElements_GetByLanguageID]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisLanguageElements_GetByLanguageID]
(
	@LanguageID tinyint
)
AS
	SET NOCOUNT ON;
SELECT * FROM tblKartrisLanguageElements WHERE LE_LanguageID = @LanguageID
GO
/****** Object:  StoredProcedure [dbo].[spKartrisLanguageElements_Get]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisLanguageElements_Get]
AS
	SET NOCOUNT OFF;
SELECT * FROM [tblKartrisLanguageElements];
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPromotionParts_GetByPromotionID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisPromotionParts_GetByPromotionID]
(
	@PromotionID int,
	@LANG_ID tinyint
)
AS
	SET NOCOUNT ON;
	SELECT   tblKartrisPromotionParts.PROM_ID, tblKartrisPromotionStrings.PS_ID, tblKartrisPromotionStrings.PS_PartNo, 
			 dbo.fnKartrisLanguageStrings_GetValue(@LANG_ID, 'f', PS_LanguageStringName, 'Promotions') AS PS_Text, 
			 tblKartrisPromotionParts.PP_ItemID, tblKartrisPromotionParts.PP_Value, 
			 tblKartrisPromotionStrings.PS_Item, tblKartrisPromotionStrings.PS_Type, tblKartrisPromotionParts.PP_ID
	FROM     tblKartrisPromotionParts INNER JOIN
			 tblKartrisPromotionStrings ON tblKartrisPromotionParts.PP_PartNo = tblKartrisPromotionStrings.PS_PartNo AND 
			 tblKartrisPromotionParts.PP_ItemType = tblKartrisPromotionStrings.PS_Item AND tblKartrisPromotionParts.PP_Type = tblKartrisPromotionStrings.PS_Type
	WHERE    (tblKartrisPromotionParts.PROM_ID = @PromotionID)
	ORDER BY tblKartrisPromotionStrings.PS_PartNo, tblKartrisPromotionParts.PP_ID
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPromotionParts_GetByPartsPromotionID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisPromotionParts_GetByPartsPromotionID]
(
	@PartNo char(1),
	@PromotionID int,
	@LANG_ID tinyint
)
AS
	SET NOCOUNT ON;
SELECT     tblKartrisPromotionParts.PROM_ID, tblKartrisPromotionStrings.PS_ID, tblKartrisPromotionStrings.PS_PartNo, 
				dbo.fnKartrisLanguageStrings_GetValue(@LANG_ID, 'f', PS_LanguageStringName, 'Promotions') AS PS_Text, 
				tblKartrisPromotionParts.PP_ItemID, tblKartrisPromotionParts.PP_Value, 
				tblKartrisPromotionStrings.PS_Item, tblKartrisPromotionStrings.PS_Type
	FROM    tblKartrisPromotionParts INNER JOIN
		  tblKartrisPromotionStrings ON tblKartrisPromotionParts.PP_PartNo = tblKartrisPromotionStrings.PS_PartNo 
		  AND tblKartrisPromotionParts.PP_ItemType = tblKartrisPromotionStrings.PS_Item 
		  AND tblKartrisPromotionParts.PP_Type = tblKartrisPromotionStrings.PS_Type
	WHERE   (tblKartrisPromotionParts.PROM_ID = @PromotionID) AND (tblKartrisPromotionStrings.PS_PartNo = @PartNo)
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPromotionParts_DeleteByPromotionID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisPromotionParts_DeleteByPromotionID]
(
	@PromotionID int
)
AS
	SET NOCOUNT ON;
	
	DELETE
	FROM	tblKartrisPromotionParts
	WHERE	tblKartrisPromotionParts.PROM_ID = @PromotionID ;
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPromotionParts_Add]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisPromotionParts_Add]
(	@PROM_ID as int,
	@PP_PartNo as char(1),
	@PP_ItemType as char(1),
	@PP_ItemID as bigint,
	@PP_Type as char(1),
	@PP_Value as DECIMAL(18,4)
)
AS
	SET NOCOUNT ON;

	
	INSERT INTO tblKartrisPromotionParts
	VALUES (@PROM_ID, @PP_PartNo, @PP_ItemType, @PP_ItemID, @PP_Type, @PP_Value);
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisProducts_UpdateAsFeatured]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisProducts_UpdateAsFeatured]
(	
	@ProductID as int,
	@Featured as tinyint
)
AS
BEGIN
	SET NOCOUNT ON;

	
	
	UPDATE dbo.tblKartrisProducts
	SET P_Featured = @Featured
	WHERE P_ID = @ProductID;
	

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisOrdersPromotions_Add]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisOrdersPromotions_Add]
(
	@OrderID as int,
	@PromotionID as int
)
AS
BEGIN
	SET NOCOUNT ON;

	INSERT INTO dbo.tblKartrisOrdersPromotions
	VALUES(@OrderID, @PromotionID);
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisProducts_GetCustomerGroup]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisProducts_GetCustomerGroup]
			(
			@P_ID as int,
			@P_CustomerGroup as char(1) OUTPUT
			)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT     @P_CustomerGroup = P_CustomerGroupID
	FROM         tblKartrisProducts                       
	WHERE     P_ID = @P_ID
	-- Insert statements for procedure here

	
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisProducts_GetProductType_s]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	Get the total no. of Products in Category "used for ItemPager"
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisProducts_GetProductType_s]
			(
			@P_ID as int,
			@P_Type as char(1) OUTPUT
			)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT     @P_Type = P_Type
	FROM         tblKartrisProducts 
					  
	WHERE     P_ID = @P_ID
	-- Insert statements for procedure here

	
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisProducts_GetNameByProductID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisProducts_GetNameByProductID]
(
	@P_ID int,
	@LANG_ID tinyint
)
AS
	SET NOCOUNT ON;
	SELECT        LE_Value AS P_Name
	FROM          dbo.tblKartrisLanguageElements
	WHERE         LE_LanguageID = @LANG_ID AND LE_TypeID = 2 AND LE_FieldID = 1 AND LE_ParentID = @P_ID
GO
/****** Object:  Table [dbo].[tblKartrisAttributeValues]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisAttributeValues](
	[ATTRIBV_ID] [int] IDENTITY(1,1) NOT NULL,
	[ATTRIBV_ProductID] [int] NULL,
	[ATTRIBV_AttributeID] [int] NULL,
 CONSTRAINT [PK_tblKartrisAttributeValues] PRIMARY KEY CLUSTERED 
(
	[ATTRIBV_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [PROPV_PropertyID] ON [dbo].[tblKartrisAttributeValues] 
(
	[ATTRIBV_AttributeID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisShippingMethods_Delete]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ==============================================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	Get Shipping Methods - by Destination and Boundary
-- ===============================================================
CREATE PROCEDURE [dbo].[_spKartrisShippingMethods_Delete]
(
	@SM_ID as tinyint
)
AS
BEGIN
	SET NOCOUNT ON;

	
		DELETE FROM dbo.tblKartrisLanguageElements
		WHERE     (LE_TypeID = 9)	-- For shipping methods
		AND (LE_ParentID = @SM_ID);	-- shipping method id
	

	
		DELETE FROM dbo.tblKartrisShippingRates
		WHERE S_ShippingMethodID = @SM_ID;
	

	
		DELETE  FROM dbo.tblKartrisShippingMethods
		WHERE SM_ID = @SM_ID;
	

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisProducts_GetByProductID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ===================================================
-- Author:		Medz
-- Create date: 02/12/2008 13:53:30
-- Description:	Replaces the [spKartris_PROD_Select]
-- ===================================================
CREATE PROCEDURE [dbo].[_spKartrisProducts_GetByProductID]
(
	@P_ID int
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	SELECT *
	FROM   tblKartrisProducts
	WHERE  (P_ID = @P_ID)
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisShippingMethods_GetNameByMethodID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisShippingMethods_GetNameByMethodID]
(
	@SM_ID int,
	@LANG_ID tinyint
)
AS
	SET NOCOUNT ON;
	SELECT        LE_Value AS MethodName
	FROM          dbo.tblKartrisLanguageElements
	WHERE         LE_LanguageID = @LANG_ID AND LE_TypeID = 9 AND LE_FieldID = 1 AND LE_ParentID = @SM_ID
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCategories_Update]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisCategories_Update]
(
	@CAT_ID int,
	@CAT_Live BIT,
	@CAT_ProductDisplayType CHAR(1),
	@CAT_SubCatDisplayType CHAR(1),
	@CAT_OrderProductsBy nvarchar(50),
	@CAT_ProductsSortDirection as char(1),
	@CAT_CustomerGroupID smallint,
	@CAT_OrderCategoriesBy as nvarchar(50),
	@CAT_CategoriesSortDirection as char(1)
)
AS
BEGIN
	SET NOCOUNT OFF;

	UPDATE [tblKartrisCategories]
	SET CAT_Live = @CAT_Live, CAT_ProductDisplayType = @CAT_ProductDisplayType, 
		CAT_SubCatDisplayType = @CAT_SubCatDisplayType, CAT_OrderProductsBy = @CAT_OrderProductsBy,
		CAT_ProductsSortDirection = @CAT_ProductsSortDirection, CAT_CustomerGroupID = @CAT_CustomerGroupID,
		CAT_OrderCategoriesBy = @CAT_OrderCategoriesBy, CAT_CategoriesSortDirection = @CAT_CategoriesSortDirection
	WHERE CAT_ID = @CAT_ID;


END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisDestinations_Update]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ==============================================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	Get Shipping Methods - by Destination and Boundary
-- ===============================================================
CREATE PROCEDURE [dbo].[_spKartrisDestinations_Update]
(
	@D_ID as smallint,
	@D_ShippingZoneID as tinyint,
	@D_Tax as real,
	@D_Tax2 as real,
	@D_ISOCode as char(2),
	@D_ISOCode3Letter as char(3),
	@D_ISOCodeNumeric as nvarchar(3),
	@D_Region as nvarchar(30),
	@D_Live as bit,
	@D_TaxExtra as nvarchar(25)
)
AS
BEGIN
	SET NOCOUNT ON;


	UPDATE dbo.tblKartrisDestination
	SET D_ShippingZoneID = @D_ShippingZoneID, D_Tax = @D_Tax, D_Tax2 = @D_Tax2, D_ISOCode = @D_ISOCode,
		D_ISOCode3Letter = @D_ISOCode3Letter, D_ISOCodeNumeric = @D_ISOCodeNumeric, D_Region = @D_Region, D_TaxExtra = @D_TaxExtra, D_Live = @D_Live
	WHERE D_ID = @D_ID;

	

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisDestinations_GetTotalDestinationsByZone]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	Get All Destinations list
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisDestinations_GetTotalDestinationsByZone]
(
	@D_ShippingZoneID as tinyint
)
AS
BEGIN
	SET NOCOUNT ON;
	SELECT	Count(1) AS TotalDestinations
	FROM	tblKartrisDestination
	WHERE	D_ShippingZoneID = @D_ShippingZoneID
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisDestinations_GetISOForFilter]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ==============================================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	Get the ISO Codes with more than 1 record
-- ===============================================================
CREATE PROCEDURE [dbo].[_spKartrisDestinations_GetISOForFilter]
AS
BEGIN
	SET NOCOUNT ON;
	SELECT D_ISOCode
	FROM (	SELECT	DISTINCT D_ISOCode, COUNT(1) AS NoOfRecords
			FROM	tblKartrisDestination
			GROUP BY D_ISOCode) as Tbl
	WHERE NoOfRecords > 1
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisLanguageElements_Update]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisLanguageElements_Update]
(
	@LE_LanguageID tinyint,
	@LE_TypeID tinyint,
	@LE_FieldID tinyint,
	@LE_ParentID bigint,
	@LE_Value nvarchar(MAX)
)
AS
	SET NOCOUNT OFF;

	UPDATE [tblKartrisLanguageElements]
	SET LE_Value = @LE_Value
	WHERE [LE_LanguageID] = @LE_LanguageID AND [LE_TypeID]= @LE_TypeID 
		AND [LE_FieldID]= @LE_FieldID AND [LE_ParentID] = @LE_ParentID;
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisLanguageElements_GetTotalsPerLanguage]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisLanguageElements_GetTotalsPerLanguage]
AS
BEGIN
	SET NOCOUNT OFF;

	SELECT     tblKartrisLanguageElements.LE_LanguageID as ID, tblKartrisLanguages.LANG_BackName as Name, COUNT(1) AS Total
	FROM         tblKartrisLanguageElements INNER JOIN
					  tblKartrisLanguages ON tblKartrisLanguageElements.LE_LanguageID = tblKartrisLanguages.LANG_ID
	GROUP BY tblKartrisLanguageElements.LE_LanguageID, tblKartrisLanguages.LANG_BackName
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisLanguageElements_GetByTypeAndParent]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisLanguageElements_GetByTypeAndParent]
(
	@LE_TypeID tinyint,
	@LE_ParentID bigint
)
AS
	SET NOCOUNT OFF;
SELECT *
FROM [tblKartrisLanguageElements]
WHERE [LE_TypeID]= @LE_TypeID AND [LE_ParentID] = @LE_ParentID
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisLanguageElements_FixMissingElements]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisLanguageElements_FixMissingElements]
(
	@SourceLanguage as tinyint,
	@DistinationLanguage as tinyint
)
AS
BEGIN

	SET NOCOUNT OFF;

	
	INSERT INTO dbo.tblKartrisLanguageElements
	SELECT @DistinationLanguage, LE_TypeID, LE_FieldID, LE_ParentID, NULL
	FROM dbo.tblKartrisLanguageElements
	WHERE (tblKartrisLanguageElements.LE_LanguageID = @SourceLanguage) AND 
			LE_ID NOT IN (  SELECT  tblKartrisLanguageElements.LE_ID
							FROM    tblKartrisLanguageElements INNER JOIN
									  tblKartrisLanguageElements AS tblKartrisLanguageElements_1 ON tblKartrisLanguageElements.LE_TypeID = tblKartrisLanguageElements_1.LE_TypeID AND 
									  tblKartrisLanguageElements.LE_FieldID = tblKartrisLanguageElements_1.LE_FieldID AND 
									  tblKartrisLanguageElements.LE_ParentID = tblKartrisLanguageElements_1.LE_ParentID
							WHERE     (tblKartrisLanguageElements.LE_LanguageID = @SourceLanguage) AND (tblKartrisLanguageElements_1.LE_LanguageID = @DistinationLanguage));
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisLanguageElements_Add]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisLanguageElements_Add]
(
	@LE_LanguageID tinyint,
	@LE_TypeID tinyint,
	@LE_FieldID tinyint,
	@LE_ParentID bigint,
	@LE_Value nvarchar(MAX)
)
AS
	SET NOCOUNT OFF;
--


	INSERT INTO [tblKartrisLanguageElements] ([LE_LanguageID], [LE_TypeID], [LE_FieldID], [LE_ParentID], [LE_Value])
	VALUES (@LE_LanguageID, @LE_TypeID, @LE_FieldID, @LE_ParentID, @LE_Value);


--
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisDB_TicketsCounterSummary]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisDB_TicketsCounterSummary]
(	
	@NoUnassignedTickets as int OUTPUT,
	@NoOfAwatingTickets as int OUTPUT,
	@LoginID as int
)
AS
BEGIN
	SELECT @NoUnassignedTickets = Count(TIC_ID) FROM dbo.tblKartrisSupportTickets WHERE TIC_LoginID = 0;
	DECLARE @LastMessageID as bigint;
	
	SELECT  @NoOfAwatingTickets = COUNT(DISTINCT tblKartrisSupportTicketMessages.STM_TicketID)
	FROM         tblKartrisSupportTicketMessages INNER JOIN
						  tblKartrisSupportTickets ON tblKartrisSupportTicketMessages.STM_TicketID = tblKartrisSupportTickets.TIC_ID
	WHERE     (tblKartrisSupportTickets.TIC_Status <> 'c') AND
		dbo.fnKartrisSupportTicketMessages_IsAwaitingReply(tblKartrisSupportTicketMessages.STM_TicketID) = 1
		AND   (tblKartrisSupportTickets.TIC_LoginID = @LoginID);	


END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisKnowledgeBase_Delete]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisKnowledgeBase_Delete]
(
	@KB_ID as int
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


	DELETE FROM dbo.tblKartrisLanguageElements
	WHERE LE_TypeID = 17 AND LE_ParentID = @KB_ID;


	
	DELETE FROM dbo.tblKartrisKnowledgeBase
	WHERE KB_ID = @KB_ID;
	
	

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCategories_GetByID]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisCategories_GetByID]
(
	@CAT_ID as int
)
AS
	SET NOCOUNT ON;
SELECT  tblKartrisCategories.*
FROM    tblKartrisCategories
WHERE	CAT_ID = @CAT_ID
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCurrencies_Delete]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisCurrencies_Delete]
(
	@Original_CUR_ID tinyint
)
AS
	SET NOCOUNT OFF;


	DELETE FROM dbo.tblKartrisLanguageElements WHERE LE_TypeID = 13 AND LE_ParentID = @Original_CUR_ID;



	DELETE FROM [tblKartrisCurrencies] WHERE (([CUR_ID] = @Original_CUR_ID));
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCategories_Add]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: 
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisCategories_Add]
(
	@CAT_Live as bit, 
	@CAT_ProductDisplayType as char(1),
	@CAT_SubCatDisplayType as char(1), 
	@CAT_OrderProductsBy as nvarchar(50),
	@CAT_ProductsSortDirection as char(1),
	@CAT_CustomerGroupID as smallint,
	@CAT_OrderCategoriesBy as nvarchar(50),
	@CAT_CategoriesSortDirection as char(1),
	@NewCAT_ID as int OUT
)
AS
BEGIN
	
	SET NOCOUNT ON;


	INSERT INTO tblKartrisCategories
	VALUES (@CAT_Live, @CAT_ProductDisplayType, @CAT_SubCatDisplayType,
			@CAT_OrderProductsBy, @CAT_ProductsSortDirection, @CAT_CustomerGroupID, 
			@CAT_OrderCategoriesBy, @CAT_CategoriesSortDirection);
	
	SELECT @NewCAT_ID = SCOPE_IDENTITY();
	

	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisLanguageStrings_Update]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisLanguageStrings_Update]
(
	@Original_LS_LanguageID tinyint,
	@Original_LS_FrontBack nvarchar(1),
	@Original_LS_Name nvarchar(255),
	@LS_Value nvarchar(MAX),
	@LS_Description nvarchar(255),
	@LS_DefaultValue nvarchar(MAX),
	@LS_VirtualPath nvarchar(50),
	@LS_ClassName nvarchar(50)
)
AS
	SET NOCOUNT OFF;


	UPDATE [tblKartrisLanguageStrings] 
	SET [LS_Value] = @LS_Value, [LS_Description] = @LS_Description, 
	[LS_DefaultValue] = @LS_DefaultValue, [LS_VirtualPath] = @LS_VirtualPath, [LS_ClassName] = @LS_ClassName 
	WHERE [LS_LANGID] = @Original_LS_LanguageID AND [LS_FrontBack] = @Original_LS_FrontBack AND [LS_Name] = @Original_LS_Name;

	IF @Original_LS_LanguageID = dbo.fnKartrisConfig_GetDefaultLanguage()
	BEGIN
		DECLARE @LanguageID as tinyint;
		DECLARE langCursor CURSOR FOR 
		SELECT LANG_ID  FROM dbo.tblKartrisLanguages WHERE LANG_ID <> @Original_LS_LanguageID;

		OPEN langCursor
		FETCH NEXT FROM langCursor
		INTO @LanguageID;
		
		WHILE @@FETCH_STATUS = 0
		BEGIN
			
			UPDATE dbo.tblKartrisLanguageStrings
			SET LS_ClassName = @LS_ClassName, LS_VirtualPath = @LS_VirtualPath
			WHERE LS_FrontBack = @Original_LS_FrontBack AND LS_Name = @Original_LS_Name AND LS_LangID = @LanguageID;
			
			FETCH NEXT FROM langCursor
			INTO @LanguageID;
		END

		CLOSE langCursor
		DEALLOCATE langCursor;
	END;
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisLanguages_Add]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisLanguages_Add]
(
	@LANG_BackName nvarchar(50),
	@LANG_FrontName nvarchar(50),
	@LANG_SkinLocation nvarchar(50),
	@LANG_LiveFront bit,
	@LANG_LiveBack bit,
	@LANG_EmailFrom nvarchar(255),
	@LANG_EmailTo nvarchar(255),
	@LANG_EmailToContact nvarchar(255),
	@LANG_DateFormat nvarchar(50),
	@LANG_DateAndTimeFormat nvarchar(50),
	@LANG_Culture nvarchar(50),
	@LANG_UICulture nvarchar(50),
	@LANG_Master nvarchar(50),
	@LANG_Theme nvarchar(50)
)
AS
	SET NOCOUNT OFF;


	INSERT INTO [tblKartrisLanguages] ([LANG_BackName], [LANG_FrontName], [LANG_SkinLocation], [LANG_LiveFront], [LANG_LiveBack], [LANG_EmailFrom], [LANG_EmailTo], [LANG_EmailToContact], [LANG_DateFormat], [LANG_DateAndTimeFormat], [LANG_Culture], [LANG_UICulture], [LANG_Master], [LANG_Theme]) 
	VALUES (@LANG_BackName, @LANG_FrontName, @LANG_SkinLocation, @LANG_LiveFront, @LANG_LiveBack, @LANG_EmailFrom, @LANG_EmailTo, @LANG_EmailToContact, @LANG_DateFormat, @LANG_DateAndTimeFormat, @LANG_Culture, @LANG_UICulture, @LANG_Master, @LANG_Theme);

	
	IF SCOPE_IDENTITY() IS NOT NULL
	BEGIN
		DECLARE @NewLanguageID as tinyint;
		SET @NewLanguageID = SCOPE_IDENTITY();
				
		-- ==========================================================================
		-- The following code will create new records in the language strings table
		--		for the new language.
		
		CREATE TABLE #TempLanguageString
			(LS_FrontBack char(1) COLLATE DATABASE_DEFAULT, LS_Name nvarchar(255) COLLATE DATABASE_DEFAULT, LS_VirtualPath nvarchar(50) COLLATE DATABASE_DEFAULT, LS_ClassName nvarchar(50) COLLATE DATABASE_DEFAULT);
			
		INSERT INTO #TempLanguageString
		SELECT LS_FrontBack, LS_Name, LS_VirtualPath, LS_ClassName	
		FROM dbo.tblKartrisLanguageStrings	
		WHERE LS_LangID = dbo.fnKartrisConfig_GetDefaultLanguage();
		
		DECLARE @FB as char(1), @Name as nvarchar(255), @Path as nvarchar(50), @Class as nvarchar(50)

		DECLARE langCursor CURSOR FOR 
		SELECT LS_FrontBack, LS_Name, LS_VirtualPath, LS_ClassName	
		FROM #TempLanguageString;


		OPEN langCursor
		FETCH NEXT FROM langCursor INTO @FB, @Name, @Path, @Class;
		
		WHILE @@FETCH_STATUS = 0
		BEGIN
			INSERT INTO dbo.tblKartrisLanguageStrings
			VALUES (@FB, @Name, NULL, NULL, 1, NULL, @Path, @Class, @NewLanguageID);
			
			FETCH NEXT FROM langCursor INTO @FB, @Name, @Path, @Class;
		END
		CLOSE langCursor
		DEALLOCATE langCursor;


		DROP TABLE #TempLanguageString;
		-- ____________________________________________________________________________
		
		-- ==========================================================================
		-- The following code will create new records in the language elements table
		--		for the new language.
		
		CREATE TABLE #TempLanguageElements
			(LE_TypeID tinyint, LE_FieldID tinyint, LE_ParentID bigint)
			
		INSERT INTO #TempLanguageElements
		SELECT LE_TypeID, LE_FieldID, LE_ParentID 
		FROM dbo.tblKartrisLanguageElements WHERE LE_LanguageID = dbo.fnKartrisConfig_GetDefaultLanguage();
		
		DECLARE @TypeID as tinyint, @FieldID as tinyint, @ParentID as bigint;
	
		DECLARE leCursor CURSOR FOR 
		SELECT LE_TypeID, LE_FieldID, LE_ParentID 
		FROM #TempLanguageElements;


		OPEN leCursor
		FETCH NEXT FROM leCursor INTO @TypeID, @FieldID, @ParentID;

		WHILE @@FETCH_STATUS = 0
		BEGIN
			
			INSERT INTO dbo.tblKartrisLanguageElements
			VALUES (@NewLanguageID, @TypeID, @FieldID, @ParentID, NULL);
			
			FETCH NEXT FROM leCursor INTO @TypeID, @FieldID, @ParentID;
		END
		CLOSE leCursor;
		DEALLOCATE leCursor;


		DROP TABLE #TempLanguageElements;
		
		-- ____________________________________________________________________________
	END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisMediaLinks_DeleteByParent]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisMediaLinks_DeleteByParent]
(
	@ParentID as bigint,
	@ParentType as nvarchar(1)
)
AS
BEGIN
SET NOCOUNT ON;
		
	DECLARE @Timeoffset as int;
	set @Timeoffset = CAST(dbo.fnKartrisConfig_GetValue('general.timeoffset') as int);
	
	
	
	
	DECLARE mediaCursor CURSOR FOR 
	SELECT ML_ID
	FROM dbo.tblKartrisMediaLinks
	WHERE ML_ParentID = @ParentID and ML_ParentType = @ParentType;
		
	DECLARE @ML_ID as bigint;
	
	OPEN mediaCursor
	FETCH NEXT FROM mediaCursor
	INTO @ML_ID;

	WHILE @@FETCH_STATUS = 0
	BEGIN
	
		DELETE FROM dbo.tblKartrisMediaLinks
		WHERE ML_ID = @ML_ID;
		IF @ML_ID <> 0 AND @ML_ID NOT IN (SELECT DELETED_ID FROM dbo.tblKartrisDeletedItems WHERE Deleted_Type = 'm') BEGIN
			INSERT INTO dbo.tblKartrisDeletedItems VALUES(@ML_ID, 'm', NULL, DateAdd(hour, @Timeoffset, GetDate()));
		END
		FETCH NEXT FROM mediaCursor
		INTO @ML_ID;
	END

	CLOSE mediaCursor
	DEALLOCATE mediaCursor;	
	
	
	
		
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisMediaLinks_Delete]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisMediaLinks_Delete]
(
	@ML_ID as int
)
AS
BEGIN
SET NOCOUNT ON;
		
		
		DELETE FROM dbo.tblKartrisMediaLinks
		WHERE ML_ID = @ML_ID;
		
		
		IF @@RowCount = 1 BEGIN
			IF @ML_ID <> 0 AND @ML_ID NOT IN (SELECT DELETED_ID FROM dbo.tblKartrisDeletedItems WHERE Deleted_Type = 'm') BEGIN
				
				DECLARE @Timeoffset as int;
				set @Timeoffset = CAST(dbo.fnKartrisConfig_GetValue('general.timeoffset') as int);
				INSERT INTO dbo.tblKartrisDeletedItems VALUES(@ML_ID, 'm', NULL, DateAdd(hour, @Timeoffset, GetDate()));
				
			END
		END
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisOptions_Update]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisOptions_Update]
(
	@OPT_OptionGroupID smallint,
	@OPT_CheckBoxValue bit,
	@OPT_DefPriceChange real,
	@OPT_DefWeightChange real,
	@OPT_DefOrderByValue smallint,
	@Original_OPT_ID int
)
AS
	SET NOCOUNT OFF;

	UPDATE	[tblKartrisOptions] 
	SET		[OPT_OptionGroupID] = @OPT_OptionGroupID, [OPT_CheckBoxValue] = @OPT_CheckBoxValue, 
			[OPT_DefPriceChange] = @OPT_DefPriceChange, [OPT_DefWeightChange] = @OPT_DefWeightChange, 
			[OPT_DefOrderByValue] = @OPT_DefOrderByValue 
	WHERE	(([OPT_ID] = @Original_OPT_ID));
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPromotionStrings_GetByType]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisPromotionStrings_GetByType]
(
	@PartNo char(1),
	@LANG_ID tinyint
)
AS
	SET NOCOUNT ON;
	SELECT     PS_ID, PS_PartNo, PS_Type, PS_Item, 
				dbo.fnKartrisLanguageStrings_GetValue(@LANG_ID, 'f', PS_LanguageStringName, N'Promotions') AS PS_Text, PS_Order
	FROM         tblKartrisPromotionStrings
	WHERE     (PS_PartNo = @PartNo)
	ORDER BY PS_Order
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPromotionStrings_GetByID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisPromotionStrings_GetByID]
(
	@PS_ID tinyint,
	@LANG_ID tinyint
)
AS
	SET NOCOUNT ON;
	SELECT  PS_ID, PS_PartNo, PS_Type, PS_Item, 
			dbo.fnKartrisLanguageStrings_GetValue(@LANG_ID, 'f', PS_LanguageStringName, N'Promotions') AS PS_Text, 
			PS_Order
	FROM    tblKartrisPromotionStrings
	WHERE   (PS_ID = @PS_ID)
	ORDER BY PS_PartNo, PS_Order
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPromotions_DeleteByParent]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisPromotions_DeleteByParent]
(
	@ParentID as bigint,
	@ParentType as nvarchar(1)
)
AS
BEGIN
SET NOCOUNT ON;
		
	DECLARE @Timeoffset as int;
	set @Timeoffset = CAST(dbo.fnKartrisConfig_GetValue('general.timeoffset') as int);
	
	DECLARE promoCursor CURSOR FOR 
	SELECT PROM_ID
	FROM dbo.tblKartrisPromotionParts
	WHERE PP_ItemID = @ParentID and PP_ItemType = @ParentType;
		
	DECLARE @Promo_ID as bigint;
	DECLARE @PromotionsToDelete as varchar(max);
	SET @PromotionsToDelete = '0';
	
	OPEN promoCursor
	FETCH NEXT FROM promoCursor
	INTO @Promo_ID;

	WHILE @@FETCH_STATUS = 0
	BEGIN
	
		SET @PromotionsToDelete = @PromotionsToDelete + ',' + CAST(@Promo_ID as nvarchar(10));
		
		IF @Promo_ID <> 0 AND @Promo_ID NOT IN (SELECT Deleted_ID FROM dbo.tblKartrisDeletedItems WHERE Deleted_Type = 'r') BEGIN
			
			INSERT INTO dbo.tblKartrisDeletedItems VALUES(@Promo_ID, 'r', NULL, DateAdd(hour, @Timeoffset, GetDate()));
			
		END
		FETCH NEXT FROM promoCursor
		INTO @Promo_ID;
	END

	CLOSE promoCursor
	DEALLOCATE promoCursor;	
	
	
	DELETE FROM dbo.tblKartrisPromotionParts
	WHERE PP_ItemID = @ParentID and PP_ItemType = @ParentType;
	
	
	
	DELETE FROM dbo.tblKartrisPromotions
	WHERE PROM_ID IN (SELECT * FROM dbo.fnTbl_SplitNumbers(@PromotionsToDelete));
	
		
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisProducts_DeleteFeaturedProducts]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisProducts_DeleteFeaturedProducts]
AS
BEGIN
	SET NOCOUNT ON;

	
	
	UPDATE dbo.tblKartrisProducts
	SET P_Featured = 0;
	

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisProducts_Add]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisProducts_Add](
								@P_Live as bit, 
								@P_Featured as tinyint,
								@P_OrderVersionsBy as nvarchar(50),
								@P_VersionsSortDirection as char(1),
								@P_VersionDisplayType as char(1),
								@P_Reviews as char(1),
								@P_SupplierID as smallint,
								@P_Type as char(1),
								@P_CustomerGroupID as smallint,
								@NowOffset as datetime,
								@NewP_ID as int OUT
								)
AS
BEGIN
	
	SET NOCOUNT ON;

	
	INSERT INTO tblKartrisProducts
	VALUES (@P_Live, @P_Featured, @P_OrderVersionsBy, @P_VersionsSortDirection, @P_VersionDisplayType, @P_Reviews,
			@P_SupplierID, @P_Type, @P_CustomerGroupID, NULL, @NowOffset, NULL);

	SELECT @NewP_ID = SCOPE_IDENTITY();
	
	
END
GO
/****** Object:  UserDefinedFunction [dbo].[fnKartris_GetCountryString]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 25/Aug/08
-- Description:	
-- =============================================
CREATE FUNCTION [dbo].[fnKartris_GetCountryString] (
	@DestinationID int,
	@LanguageID int
)
RETURNS nvarchar(100)
AS
BEGIN

	DECLARE @Result nvarchar(100)
		
	select @Result=LE_Value from tblKartrisLanguageElementTypes LET
	inner join tblKartrisLanguageElements LE on LET.LET_ID=LE.LE_TypeID and LE_ParentID=199
	where LET.LET_Name='tblKartrisDestination' and LE_LanguageID=1

	RETURN @Result
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasket_GetOrderHandlingCharge]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 19/June/2008
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisBasket_GetOrderHandlingCharge] ( 
	@ShippingCountryID integer,
	@TaxBand float
) AS
BEGIN
	SET NOCOUNT ON;

	select * from tblKartrisDestination,tblKartrisTaxRates
	where D_ID=@ShippingCountryID and T_ID=@TaxBand

END
GO
/****** Object:  UserDefinedFunction [dbo].[fnKartris_GetShippingMethod]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 26/Aug/08
-- Description:	
-- =============================================
CREATE FUNCTION [dbo].[fnKartris_GetShippingMethod] (
	@ShippingMethodID int,
	@LanguageID int
)
RETURNS nvarchar(100)
AS
BEGIN
	DECLARE @Result nvarchar(100)
		
	select @Result=LE_Value from tblKartrisLanguageElementTypes LET
	inner join tblKartrisLanguageElements LE on LET.LET_ID=LE.LE_TypeID and LE_ParentID=@ShippingMethodId and LE_FieldID=1
	where LET.LET_Name='tblKartrisShippingMethods' and LE_LanguageID=@LanguageID

	RETURN @Result

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisCategories_GetByLanguageID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisCategories_GetByLanguageID](@LanguageID as tinyint)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	-- Insert statements for procedure here
	SELECT  CAT_ID, tblKartrisLanguageElements.LE_Value AS CAT_Name, 
			tblKartrisLanguageElements_temp.LE_Value AS CAT_Desc, 
			CAT_Live, CAT_ProductDisplayType, CAT_SubCatDisplayType,CAT_OrderProductsBy, 
			CAT_CustomerGroupID
	FROM    tblKartrisCategories INNER JOIN
			tblKartrisLanguageElements ON CAT_ID = tblKartrisLanguageElements.LE_ParentID INNER JOIN
			tblKartrisLanguageElements AS tblKartrisLanguageElements_temp ON CAT_ID = tblKartrisLanguageElements_temp.LE_ParentID AND 
			tblKartrisLanguageElements.LE_ParentID = tblKartrisLanguageElements_temp.LE_ParentID AND 
			tblKartrisLanguageElements.LE_LanguageID = tblKartrisLanguageElements_temp.LE_LanguageID AND 
			tblKartrisLanguageElements.LE_TypeID = tblKartrisLanguageElements_temp.LE_TypeID
	WHERE	(tblKartrisLanguageElements.LE_LanguageID = @LanguageID)
			AND (tblKartrisLanguageElements.LE_FieldID = 1) 
			AND (tblKartrisLanguageElements_temp.LE_FieldID = 2) 
			AND (tblKartrisLanguageElements.LE_TypeID = 3)
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisSupportTickets_GetSummary]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisSupportTickets_GetSummary]
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT     tblKartrisSupportTickets.TIC_ID, tblKartrisSupportTickets.TIC_DateOpened, tblKartrisSupportTickets.TIC_DateClosed, tblKartrisSupportTickets.TIC_Subject, 
					  tblKartrisSupportTickets.TIC_UserID, tblKartrisSupportTickets.TIC_LoginID, tblKartrisSupportTickets.TIC_SupportTicketTypeID, tblKartrisSupportTickets.TIC_Status, 
					  tblKartrisLogins.LOGIN_Username, tblKartrisUsers.U_EmailAddress, MAX(tblKartrisSupportTicketMessages.STM_DateCreated) AS LastMessageDate, 
					  tblKartrisSupportTicketTypes.STT_Name, dbo.fnKartrisSupportTicketMessages_IsAwaitingReply(tblKartrisSupportTickets.TIC_ID) As TIC_AwaitingResponse
FROM         tblKartrisSupportTickets INNER JOIN
					  tblKartrisSupportTicketMessages ON tblKartrisSupportTickets.TIC_ID = tblKartrisSupportTicketMessages.STM_TicketID INNER JOIN
					  tblKartrisUsers ON tblKartrisSupportTickets.TIC_UserID = tblKartrisUsers.U_ID LEFT OUTER JOIN
					  tblKartrisSupportTicketTypes ON tblKartrisSupportTickets.TIC_SupportTicketTypeID = tblKartrisSupportTicketTypes.STT_ID LEFT OUTER JOIN
					  tblKartrisLogins ON tblKartrisSupportTickets.TIC_LoginID = tblKartrisLogins.LOGIN_ID
GROUP BY tblKartrisSupportTickets.TIC_ID, tblKartrisSupportTickets.TIC_DateOpened, tblKartrisSupportTickets.TIC_DateClosed, tblKartrisSupportTickets.TIC_Subject, 
					  tblKartrisSupportTickets.TIC_UserID, tblKartrisSupportTickets.TIC_LoginID, tblKartrisSupportTickets.TIC_SupportTicketTypeID, tblKartrisSupportTickets.TIC_Status, 
					  tblKartrisLogins.LOGIN_Username, tblKartrisUsers.U_EmailAddress, tblKartrisSupportTicketTypes.STT_Name, dbo.fnKartrisSupportTicketMessages_IsAwaitingReply(tblKartrisSupportTickets.TIC_ID)
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_GetNameByVersionID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisVersions_GetNameByVersionID]
(
	@V_ID int,
	@LANG_ID tinyint
)
AS
	SET NOCOUNT ON;
	SELECT        LE_Value AS V_Name
	FROM          dbo.tblKartrisLanguageElements
	WHERE         LE_LanguageID = @LANG_ID AND LE_TypeID = 1 AND LE_FieldID = 1 AND LE_ParentID = @V_ID
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisShippingRates_Update]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisShippingRates_Update]
(
	@S_ID as int,
	@NewRate as DECIMAL(18,4),
	@S_ShippingGateways as nvarchar(255)
)
AS
	SET NOCOUNT ON;
	
	UPDATE	tblKartrisShippingRates
	SET		S_ShippingRate = @NewRate, S_ShippingGateways = @S_ShippingGateways
	WHERE	S_ID = @S_ID;
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisShippingRates_GetZonesByMethod]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ==============================================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	Get Shipping Methods - by Destination and Boundary
-- ===============================================================
CREATE PROCEDURE [dbo].[_spKartrisShippingRates_GetZonesByMethod]
(
	@SM_ID as tinyint
)
AS
BEGIN
	SET NOCOUNT ON;
	SELECT	DISTINCT S_ShippingZoneID
	FROM dbo.tblKartrisShippingRates
	WHERE S_ShippingMethodID = @SM_ID
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisShippingRates_GetByShippingMethod]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ==============================================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	Get Shipping Methods - by Destination and Boundary
-- ===============================================================
CREATE PROCEDURE [dbo].[_spKartrisShippingRates_GetByShippingMethod]
(
	@SM_ID as tinyint
)
AS
BEGIN
	SET NOCOUNT ON;
	SELECT	S_ID, S_ShippingMethodID, S_ShippingZoneID, 
			CAST(S_Boundary AS Decimal(22,4)) as S_Boundary, 
			CAST(S_ShippingRate as Decimal(18,4)) as S_ShippingRate
	FROM dbo.tblKartrisShippingRates
	WHERE S_ShippingMethodID = @SM_ID
	ORDER BY S_ShippingZoneID, S_Boundary, S_ShippingRate

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisShippingRates_GetByMethodAndZone]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ==============================================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	Get Shipping Methods - by Destination and Boundary
-- ===============================================================
CREATE PROCEDURE [dbo].[_spKartrisShippingRates_GetByMethodAndZone]
(
	@SM_ID as tinyint,
	@SZ_ID as tinyint
)
AS
BEGIN
	SET NOCOUNT ON;
	SELECT     tblKartrisShippingRates.S_ID, tblKartrisShippingRates.S_ShippingMethodID, tblKartrisShippingRates.S_ShippingZoneID, 
					  CAST(tblKartrisShippingRates.S_Boundary AS Decimal(17, 2)) AS S_Boundary, CAST(tblKartrisShippingRates.S_ShippingRate AS Decimal(9, 2)) 
					  AS S_ShippingRate, tblKartrisCurrencies.CUR_ISOCode, tblKartrisCurrencies.CUR_Symbol, tblKartrisShippingRates.S_ShippingGateways
FROM         tblKartrisShippingRates CROSS JOIN
					  tblKartrisCurrencies
WHERE     (tblKartrisShippingRates.S_ShippingMethodID = @SM_ID) AND (tblKartrisShippingRates.S_ShippingZoneID = @SZ_ID) AND 
					  (tblKartrisCurrencies.CUR_ExchangeRate = 1)
ORDER BY tblKartrisShippingRates.S_ShippingZoneID, S_Boundary, S_ShippingRate

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisShippingRates_Get]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisShippingRates_Get]
AS
	SET NOCOUNT ON;
SELECT        tblKartrisShippingRates.*
FROM            tblKartrisShippingRates
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisShippingRates_DeleteByMethodAndZone]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisShippingRates_DeleteByMethodAndZone]
(
	@SM_ID as tinyint,
	@SZ_ID as tinyint
)
AS
	SET NOCOUNT ON;
	
	DELETE FROM tblKartrisShippingRates
	WHERE S_ShippingMethodID = @SM_ID AND S_ShippingZoneID = @SZ_ID;
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisShippingRates_DeleteByID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisShippingRates_DeleteByID]
(
	@S_ID as int
)
AS
	SET NOCOUNT ON;
	
	DELETE FROM tblKartrisShippingRates
	WHERE S_ID = @S_ID;
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisShippingRates_Copy]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisShippingRates_Copy]
(
	@SM_ID as tinyint,
	@FromZone as tinyint,
	@ToZone as tinyint
)
AS
	SET NOCOUNT ON;

	
	INSERT INTO tblKartrisShippingRates
					  (S_ShippingMethodID, S_ShippingZoneID, S_Boundary, S_ShippingRate)
	SELECT     S_ShippingMethodID, @ToZone, S_Boundary, S_ShippingRate
	FROM         tblKartrisShippingRates AS tblKartrisShippingRates_1
	WHERE     (S_ShippingMethodID = @SM_ID) AND (S_ShippingZoneID = @FromZone);
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisShippingRates_Add]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisShippingRates_Add]
(
	@SM_ID as tinyint,
	@SZ_ID as tinyint,
	@S_Boundary as DECIMAL(22,4),
	@S_Rate as DECIMAL(18,4),
	@S_ShippingGateways as nvarchar(255)
)
AS
	SET NOCOUNT ON;
	
	INSERT	INTO	tblKartrisShippingRates
	VALUES(@SM_ID, @SZ_ID, @S_Boundary, @S_Rate, @S_ShippingGateways);
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisShippingZones_GetNameByZoneID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisShippingZones_GetNameByZoneID]
(
	@SZ_ID int,
	@LANG_ID tinyint
)
AS
	SET NOCOUNT ON;
	SELECT        LE_Value AS ZoneName
	FROM          dbo.tblKartrisLanguageElements
	WHERE         LE_LanguageID = @LANG_ID AND LE_TypeID = 10 AND LE_FieldID = 1 AND LE_ParentID = @SZ_ID
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisShippingZones_Delete]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ==============================================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	DELETE Shipping Zone
-- ===============================================================
CREATE PROCEDURE [dbo].[_spKartrisShippingZones_Delete]
(
	@ZoneID as tinyint,
	@AssignedZoneID as tinyint
)
AS
BEGIN
	SET NOCOUNT ON;


	--1. Assign Zones
	IF @AssignedZoneID <> 0
	BEGIN
	
		UPDATE dbo.tblKartrisDestination
		SET D_ShippingZoneID = @AssignedZoneID
		WHERE D_ShippingZoneID = @ZoneID;
	
	END;

	--2. Delete Zone's Rates
	
	DELETE FROM tblKartrisShippingRates
	WHERE S_ShippingZoneID = @ZoneID;
	

	--3. Delete The LanguageElements
	
	DELETE FROM dbo.tblKartrisLanguageElements
	WHERE LE_TypeID = 10 AND LE_ParentID = @ZoneID;
	

	--4. Delete the Zone itself
	
	DELETE FROM dbo.tblKartrisShippingZones
	WHERE SZ_ID = @ZoneID;
	

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisOptions_Add]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisOptions_Add]
(
	@OPT_OptionGroupID smallint,
	@OPT_CheckBoxValue bit,
	@OPT_DefPriceChange real,
	@OPT_DefWeightChange real,
	@OPT_DefOrderByValue smallint,
	@NewID int OUT
)
AS
	SET NOCOUNT OFF;

	INSERT INTO [tblKartrisOptions] 
			([OPT_OptionGroupID], [OPT_CheckBoxValue], [OPT_DefPriceChange], [OPT_DefWeightChange], [OPT_DefOrderByValue]) 
	VALUES	(@OPT_OptionGroupID, @OPT_CheckBoxValue, @OPT_DefPriceChange, @OPT_DefWeightChange, @OPT_DefOrderByValue);
	SET @NewID = SCOPE_IDENTITY();
GO
/****** Object:  View [dbo].[vKartrisTypeShippingZones]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vKartrisTypeShippingZones]
AS
SELECT     dbo.tblKartrisShippingZones.SZ_ID, dbo.tblKartrisLanguageElements.LE_LanguageID AS LANG_ID, dbo.tblKartrisLanguageElements.LE_Value AS SZ_Name, 
					  dbo.tblKartrisShippingZones.SZ_Live, dbo.tblKartrisShippingZones.SZ_OrderByValue
FROM         dbo.tblKartrisLanguageElements INNER JOIN
					  dbo.tblKartrisShippingZones ON dbo.tblKartrisLanguageElements.LE_ParentID = dbo.tblKartrisShippingZones.SZ_ID
WHERE     (dbo.tblKartrisLanguageElements.LE_TypeID = 10) AND (dbo.tblKartrisLanguageElements.LE_FieldID = 1) AND 
					  (dbo.tblKartrisLanguageElements.LE_Value IS NOT NULL)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
	  Begin PaneConfiguration = 0
		 NumPanes = 4
		 Configuration = "(H (1[40] 4[20] 2[20] 3) )"
	  End
	  Begin PaneConfiguration = 1
		 NumPanes = 3
		 Configuration = "(H (1 [50] 4 [25] 3))"
	  End
	  Begin PaneConfiguration = 2
		 NumPanes = 3
		 Configuration = "(H (1 [50] 2 [25] 3))"
	  End
	  Begin PaneConfiguration = 3
		 NumPanes = 3
		 Configuration = "(H (4 [30] 2 [40] 3))"
	  End
	  Begin PaneConfiguration = 4
		 NumPanes = 2
		 Configuration = "(H (1 [56] 3))"
	  End
	  Begin PaneConfiguration = 5
		 NumPanes = 2
		 Configuration = "(H (2 [66] 3))"
	  End
	  Begin PaneConfiguration = 6
		 NumPanes = 2
		 Configuration = "(H (4 [50] 3))"
	  End
	  Begin PaneConfiguration = 7
		 NumPanes = 1
		 Configuration = "(V (3))"
	  End
	  Begin PaneConfiguration = 8
		 NumPanes = 3
		 Configuration = "(H (1[56] 4[18] 2) )"
	  End
	  Begin PaneConfiguration = 9
		 NumPanes = 2
		 Configuration = "(H (1 [75] 4))"
	  End
	  Begin PaneConfiguration = 10
		 NumPanes = 2
		 Configuration = "(H (1[66] 2) )"
	  End
	  Begin PaneConfiguration = 11
		 NumPanes = 2
		 Configuration = "(H (4 [60] 2))"
	  End
	  Begin PaneConfiguration = 12
		 NumPanes = 1
		 Configuration = "(H (1) )"
	  End
	  Begin PaneConfiguration = 13
		 NumPanes = 1
		 Configuration = "(V (4))"
	  End
	  Begin PaneConfiguration = 14
		 NumPanes = 1
		 Configuration = "(V (2))"
	  End
	  ActivePaneConfig = 0
   End
   Begin DiagramPane = 
	  Begin Origin = 
		 Top = 0
		 Left = 0
	  End
	  Begin Tables = 
		 Begin Table = "tblKartrisLanguageElements"
			Begin Extent = 
			   Top = 6
			   Left = 295
			   Bottom = 123
			   Right = 459
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisShippingZones"
			Begin Extent = 
			   Top = 15
			   Left = 521
			   Bottom = 117
			   Right = 694
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
	  End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
	  Begin ParameterDefaults = ""
	  End
	  Begin ColumnWidths = 9
		 Width = 284
		 Width = 1500
		 Width = 1500
		 Width = 2400
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
	  End
   End
   Begin CriteriaPane = 
	  Begin ColumnWidths = 11
		 Column = 1440
		 Alias = 900
		 Table = 2760
		 Output = 720
		 Append = 1400
		 NewValue = 1170
		 SortType = 1350
		 SortOrder = 1410
		 GroupBy = 1350
		 Filter = 1350
		 Or = 1350
		 Or = 1350
		 Or = 1350
	  End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeShippingZones'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeShippingZones'
GO
/****** Object:  View [dbo].[vKartrisTypeShippingMethods]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vKartrisTypeShippingMethods]
AS
SELECT     dbo.tblKartrisShippingMethods.SM_ID, dbo.tblKartrisLanguages.LANG_ID, dbo.tblKartrisLanguageElements.LE_Value AS SM_Name, 
					  tblKartrisLanguageElements_1.LE_Value AS SM_Desc, dbo.tblKartrisShippingMethods.SM_Live, dbo.tblKartrisShippingMethods.SM_OrderByValue, 
					  dbo.tblKartrisShippingMethods.SM_Tax, dbo.tblKartrisShippingMethods.SM_Tax2
FROM         dbo.tblKartrisLanguages INNER JOIN
					  dbo.tblKartrisLanguageElements ON dbo.tblKartrisLanguages.LANG_ID = dbo.tblKartrisLanguageElements.LE_LanguageID INNER JOIN
					  dbo.tblKartrisLanguageElements AS tblKartrisLanguageElements_1 ON 
					  dbo.tblKartrisLanguages.LANG_ID = tblKartrisLanguageElements_1.LE_LanguageID INNER JOIN
					  dbo.tblKartrisShippingMethods ON dbo.tblKartrisLanguageElements.LE_ParentID = dbo.tblKartrisShippingMethods.SM_ID AND 
					  tblKartrisLanguageElements_1.LE_ParentID = dbo.tblKartrisShippingMethods.SM_ID
WHERE     (dbo.tblKartrisLanguageElements.LE_TypeID = 9) AND (dbo.tblKartrisLanguageElements.LE_FieldID = 1) AND (dbo.tblKartrisLanguageElements.LE_Value IS NOT NULL)
					   AND (tblKartrisLanguageElements_1.LE_TypeID = 9) AND (tblKartrisLanguageElements_1.LE_FieldID = 2) OR
					  (dbo.tblKartrisLanguageElements.LE_TypeID = 9) AND (dbo.tblKartrisLanguageElements.LE_FieldID = 1) AND (tblKartrisLanguageElements_1.LE_TypeID = 9) AND 
					  (tblKartrisLanguageElements_1.LE_FieldID = 2) AND (tblKartrisLanguageElements_1.LE_Value IS NOT NULL)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
	  Begin PaneConfiguration = 0
		 NumPanes = 4
		 Configuration = "(H (1[41] 4[26] 2[14] 3) )"
	  End
	  Begin PaneConfiguration = 1
		 NumPanes = 3
		 Configuration = "(H (1 [50] 4 [25] 3))"
	  End
	  Begin PaneConfiguration = 2
		 NumPanes = 3
		 Configuration = "(H (1 [50] 2 [25] 3))"
	  End
	  Begin PaneConfiguration = 3
		 NumPanes = 3
		 Configuration = "(H (4 [30] 2 [40] 3))"
	  End
	  Begin PaneConfiguration = 4
		 NumPanes = 2
		 Configuration = "(H (1 [56] 3))"
	  End
	  Begin PaneConfiguration = 5
		 NumPanes = 2
		 Configuration = "(H (2 [66] 3))"
	  End
	  Begin PaneConfiguration = 6
		 NumPanes = 2
		 Configuration = "(H (4 [50] 3))"
	  End
	  Begin PaneConfiguration = 7
		 NumPanes = 1
		 Configuration = "(V (3))"
	  End
	  Begin PaneConfiguration = 8
		 NumPanes = 3
		 Configuration = "(H (1[56] 4[18] 2) )"
	  End
	  Begin PaneConfiguration = 9
		 NumPanes = 2
		 Configuration = "(H (1 [75] 4))"
	  End
	  Begin PaneConfiguration = 10
		 NumPanes = 2
		 Configuration = "(H (1[66] 2) )"
	  End
	  Begin PaneConfiguration = 11
		 NumPanes = 2
		 Configuration = "(H (4 [60] 2))"
	  End
	  Begin PaneConfiguration = 12
		 NumPanes = 1
		 Configuration = "(H (1) )"
	  End
	  Begin PaneConfiguration = 13
		 NumPanes = 1
		 Configuration = "(V (4))"
	  End
	  Begin PaneConfiguration = 14
		 NumPanes = 1
		 Configuration = "(V (2))"
	  End
	  ActivePaneConfig = 0
   End
   Begin DiagramPane = 
	  Begin Origin = 
		 Top = 0
		 Left = 0
	  End
	  Begin Tables = 
		 Begin Table = "tblKartrisLanguages"
			Begin Extent = 
			   Top = 6
			   Left = 38
			   Bottom = 123
			   Right = 257
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisLanguageElements"
			Begin Extent = 
			   Top = 6
			   Left = 295
			   Bottom = 123
			   Right = 459
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisLanguageElements_1"
			Begin Extent = 
			   Top = 157
			   Left = 289
			   Bottom = 274
			   Right = 453
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisShippingMethods"
			Begin Extent = 
			   Top = 6
			   Left = 497
			   Bottom = 134
			   Right = 672
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
	  End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
	  Begin ParameterDefaults = ""
	  End
	  Begin ColumnWidths = 9
		 Width = 284
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
	  End
   End
   Begin CriteriaPane = 
	  Begin ColumnWidths = 11
		 Column = 1440
		 Alias = 900
		 Table = 2700
		 Output = 720
		 Append = 1400
		 NewValue = 1170
		 SortType = 1350
		 SortOrder = 1410
		 GroupBy = 1350
		 Filter = 1350
	' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeShippingMethods'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'     Or = 1350
		 Or = 1350
		 Or = 1350
	  End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeShippingMethods'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeShippingMethods'
GO
/****** Object:  View [dbo].[vKartrisTypePromotions]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vKartrisTypePromotions]
AS
SELECT     dbo.tblKartrisPromotions.PROM_ID, dbo.tblKartrisLanguageElements.LE_LanguageID AS LANG_ID, dbo.tblKartrisLanguageElements.LE_Value AS PROM_Name, 
					  dbo.tblKartrisPromotions.PROM_StartDate, dbo.tblKartrisPromotions.PROM_EndDate, dbo.tblKartrisPromotions.PROM_Live, 
					  dbo.tblKartrisPromotions.PROM_OrderByValue, dbo.tblKartrisPromotions.PROM_MaxQuantity
FROM         dbo.tblKartrisLanguageElements INNER JOIN
					  dbo.tblKartrisPromotions ON dbo.tblKartrisLanguageElements.LE_ParentID = dbo.tblKartrisPromotions.PROM_ID
WHERE     (dbo.tblKartrisLanguageElements.LE_TypeID = 7) AND (dbo.tblKartrisLanguageElements.LE_FieldID = 1) AND 
					  (dbo.tblKartrisLanguageElements.LE_Value IS NOT NULL)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
	  Begin PaneConfiguration = 0
		 NumPanes = 4
		 Configuration = "(H (1[41] 4[26] 2[14] 3) )"
	  End
	  Begin PaneConfiguration = 1
		 NumPanes = 3
		 Configuration = "(H (1 [50] 4 [25] 3))"
	  End
	  Begin PaneConfiguration = 2
		 NumPanes = 3
		 Configuration = "(H (1 [50] 2 [25] 3))"
	  End
	  Begin PaneConfiguration = 3
		 NumPanes = 3
		 Configuration = "(H (4 [30] 2 [40] 3))"
	  End
	  Begin PaneConfiguration = 4
		 NumPanes = 2
		 Configuration = "(H (1 [56] 3))"
	  End
	  Begin PaneConfiguration = 5
		 NumPanes = 2
		 Configuration = "(H (2 [66] 3))"
	  End
	  Begin PaneConfiguration = 6
		 NumPanes = 2
		 Configuration = "(H (4 [50] 3))"
	  End
	  Begin PaneConfiguration = 7
		 NumPanes = 1
		 Configuration = "(V (3))"
	  End
	  Begin PaneConfiguration = 8
		 NumPanes = 3
		 Configuration = "(H (1[56] 4[18] 2) )"
	  End
	  Begin PaneConfiguration = 9
		 NumPanes = 2
		 Configuration = "(H (1 [75] 4))"
	  End
	  Begin PaneConfiguration = 10
		 NumPanes = 2
		 Configuration = "(H (1[66] 2) )"
	  End
	  Begin PaneConfiguration = 11
		 NumPanes = 2
		 Configuration = "(H (4 [60] 2))"
	  End
	  Begin PaneConfiguration = 12
		 NumPanes = 1
		 Configuration = "(H (1) )"
	  End
	  Begin PaneConfiguration = 13
		 NumPanes = 1
		 Configuration = "(V (4))"
	  End
	  Begin PaneConfiguration = 14
		 NumPanes = 1
		 Configuration = "(V (2))"
	  End
	  ActivePaneConfig = 0
   End
   Begin DiagramPane = 
	  Begin Origin = 
		 Top = 0
		 Left = 0
	  End
	  Begin Tables = 
		 Begin Table = "tblKartrisLanguageElements"
			Begin Extent = 
			   Top = 6
			   Left = 38
			   Bottom = 149
			   Right = 202
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisPromotions"
			Begin Extent = 
			   Top = 6
			   Left = 240
			   Bottom = 247
			   Right = 430
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
	  End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
	  Begin ParameterDefaults = ""
	  End
	  Begin ColumnWidths = 15
		 Width = 284
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
	  End
   End
   Begin CriteriaPane = 
	  Begin ColumnWidths = 11
		 Column = 4140
		 Alias = 900
		 Table = 1170
		 Output = 720
		 Append = 1400
		 NewValue = 1170
		 SortType = 1350
		 SortOrder = 1410
		 GroupBy = 1350
		 Filter = 1350
		 Or = 1350
		 Or = 1350
		 Or = 1350
	  End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypePromotions'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypePromotions'
GO
/****** Object:  UserDefinedFunction [dbo].[fnKartrisLanguageElement_GetItemValue]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnKartrisLanguageElement_GetItemValue] 
(
	-- Add the parameters for the function here
	@LE_LANGID as tinyint,
	@LE_TypeID as tinyint,
	@LE_FieldID as tinyint,
	@LE_ParentID as int
)
RETURNS nvarchar(MAX)
AS
BEGIN
	-- Declare the return variable here
	DECLARE @Result nvarchar(MAX);
	SET @Result = '';
	
	SELECT @Result = LE_Value
	FROM tblKartrisLanguageElements 
	WHERE LE_LanguageID = @LE_LANGID AND
			LE_TypeID = @LE_TypeID AND
			LE_FieldID = @LE_FieldID AND
			LE_ParentID = @LE_ParentID;

	
	-- Return the result of the function
	RETURN @Result

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPages_Delete]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisPages_Delete]
(
	@Page_ID as smallint
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


	DELETE FROM dbo.tblKartrisLanguageElements
	WHERE LE_TypeID = 8 AND LE_ParentID = @Page_ID;


	
	UPDATE tblKartrisPages
	SET Page_ParentID = 0
	WHERE Page_ParentID = @Page_ID;

	DELETE FROM tblKartrisPages
	WHERE Page_ID = @Page_ID;
	
	

END
GO
/****** Object:  Table [dbo].[tblKartrisProductCategoryLink]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisProductCategoryLink](
	[PCAT_ProductID] [int] NOT NULL,
	[PCAT_CategoryID] [int] NOT NULL,
	[PCAT_OrderNo] [smallint] NULL,
 CONSTRAINT [PK_tblKartrisProductCategoryLink] PRIMARY KEY CLUSTERED 
(
	[PCAT_ProductID] ASC,
	[PCAT_CategoryID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [PC_CategoryID] ON [dbo].[tblKartrisProductCategoryLink] 
(
	[PCAT_CategoryID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [PC_ProductID] ON [dbo].[tblKartrisProductCategoryLink] 
(
	[PCAT_ProductID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  View [dbo].[vKartrisTypeProducts]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vKartrisTypeProducts]
AS
SELECT     dbo.tblKartrisProducts.P_ID, dbo.tblKartrisLanguages.LANG_ID, dbo.tblKartrisLanguageElements.LE_Value AS P_Name, 
					  tblKartrisLanguageElements_1.LE_Value AS P_Desc, tblKartrisLanguageElements_2.LE_Value AS P_StrapLine, 
					  tblKartrisLanguageElements_3.LE_Value AS P_PageTitle, dbo.tblKartrisProducts.P_Live, dbo.tblKartrisProducts.P_Featured, 
					  dbo.tblKartrisProducts.P_OrderVersionsBy, dbo.tblKartrisProducts.P_VersionsSortDirection, dbo.tblKartrisProducts.P_VersionDisplayType, 
					  dbo.tblKartrisProducts.P_Reviews, dbo.tblKartrisProducts.P_SupplierID, dbo.tblKartrisProducts.P_Type, dbo.tblKartrisProducts.P_CustomerGroupID, 
					  dbo.tblKartrisProducts.P_AverageRating, dbo.tblKartrisProducts.P_DateCreated, dbo.tblKartrisProducts.P_LastModified
FROM         dbo.tblKartrisLanguageElements INNER JOIN
					  dbo.tblKartrisLanguages ON dbo.tblKartrisLanguageElements.LE_LanguageID = dbo.tblKartrisLanguages.LANG_ID INNER JOIN
					  dbo.tblKartrisLanguageElements AS tblKartrisLanguageElements_1 ON 
					  dbo.tblKartrisLanguages.LANG_ID = tblKartrisLanguageElements_1.LE_LanguageID INNER JOIN
					  dbo.tblKartrisLanguageElements AS tblKartrisLanguageElements_2 ON 
					  dbo.tblKartrisLanguages.LANG_ID = tblKartrisLanguageElements_2.LE_LanguageID INNER JOIN
					  dbo.tblKartrisProducts ON dbo.tblKartrisLanguageElements.LE_ParentID = dbo.tblKartrisProducts.P_ID AND 
					  tblKartrisLanguageElements_1.LE_ParentID = dbo.tblKartrisProducts.P_ID AND tblKartrisLanguageElements_2.LE_ParentID = dbo.tblKartrisProducts.P_ID INNER JOIN
					  dbo.tblKartrisLanguageElements AS tblKartrisLanguageElements_3 ON dbo.tblKartrisLanguages.LANG_ID = tblKartrisLanguageElements_3.LE_LanguageID AND 
					  dbo.tblKartrisProducts.P_ID = tblKartrisLanguageElements_3.LE_ParentID
WHERE     (dbo.tblKartrisLanguageElements.LE_TypeID = 2) AND (tblKartrisLanguageElements_1.LE_TypeID = 2) AND (tblKartrisLanguageElements_2.LE_TypeID = 2) AND 
					  (dbo.tblKartrisLanguageElements.LE_FieldID = 1) AND (tblKartrisLanguageElements_1.LE_FieldID = 2) AND (tblKartrisLanguageElements_2.LE_FieldID = 7) AND 
					  (NOT (dbo.tblKartrisLanguageElements.LE_Value IS NULL)) AND (tblKartrisLanguageElements_3.LE_TypeID = 2) AND 
					  (tblKartrisLanguageElements_3.LE_FieldID = 3) OR
					  (dbo.tblKartrisLanguageElements.LE_TypeID = 2) AND (tblKartrisLanguageElements_1.LE_TypeID = 2) AND (tblKartrisLanguageElements_2.LE_TypeID = 2) AND 
					  (dbo.tblKartrisLanguageElements.LE_FieldID = 1) AND (tblKartrisLanguageElements_1.LE_FieldID = 2) AND (tblKartrisLanguageElements_2.LE_FieldID = 7) AND 
					  (NOT (tblKartrisLanguageElements_1.LE_Value IS NULL)) AND (tblKartrisLanguageElements_3.LE_TypeID = 2) AND 
					  (tblKartrisLanguageElements_3.LE_FieldID = 3) OR
					  (dbo.tblKartrisLanguageElements.LE_TypeID = 2) AND (tblKartrisLanguageElements_1.LE_TypeID = 2) AND (tblKartrisLanguageElements_2.LE_TypeID = 2) AND 
					  (dbo.tblKartrisLanguageElements.LE_FieldID = 1) AND (tblKartrisLanguageElements_1.LE_FieldID = 2) AND (tblKartrisLanguageElements_2.LE_FieldID = 7) AND 
					  (NOT (tblKartrisLanguageElements_2.LE_Value IS NULL)) AND (tblKartrisLanguageElements_3.LE_TypeID = 2) AND 
					  (tblKartrisLanguageElements_3.LE_FieldID = 3) OR
					  (dbo.tblKartrisLanguageElements.LE_TypeID = 2) AND (tblKartrisLanguageElements_1.LE_TypeID = 2) AND (tblKartrisLanguageElements_2.LE_TypeID = 2) AND 
					  (dbo.tblKartrisLanguageElements.LE_FieldID = 1) AND (tblKartrisLanguageElements_1.LE_FieldID = 2) AND (tblKartrisLanguageElements_2.LE_FieldID = 7) AND 
					  (NOT (tblKartrisLanguageElements_3.LE_Value IS NULL)) AND (tblKartrisLanguageElements_3.LE_TypeID = 2) AND (tblKartrisLanguageElements_3.LE_FieldID = 3)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
	  Begin PaneConfiguration = 0
		 NumPanes = 4
		 Configuration = "(H (1[45] 4[19] 2[18] 3) )"
	  End
	  Begin PaneConfiguration = 1
		 NumPanes = 3
		 Configuration = "(H (1[41] 4[21] 3) )"
	  End
	  Begin PaneConfiguration = 2
		 NumPanes = 3
		 Configuration = "(H (1 [50] 2 [25] 3))"
	  End
	  Begin PaneConfiguration = 3
		 NumPanes = 3
		 Configuration = "(H (4 [30] 2 [40] 3))"
	  End
	  Begin PaneConfiguration = 4
		 NumPanes = 2
		 Configuration = "(H (1 [56] 3))"
	  End
	  Begin PaneConfiguration = 5
		 NumPanes = 2
		 Configuration = "(H (2 [66] 3))"
	  End
	  Begin PaneConfiguration = 6
		 NumPanes = 2
		 Configuration = "(H (4 [50] 3))"
	  End
	  Begin PaneConfiguration = 7
		 NumPanes = 1
		 Configuration = "(V (3))"
	  End
	  Begin PaneConfiguration = 8
		 NumPanes = 3
		 Configuration = "(H (1[56] 4[18] 2) )"
	  End
	  Begin PaneConfiguration = 9
		 NumPanes = 2
		 Configuration = "(H (1 [75] 4))"
	  End
	  Begin PaneConfiguration = 10
		 NumPanes = 2
		 Configuration = "(H (1[66] 2) )"
	  End
	  Begin PaneConfiguration = 11
		 NumPanes = 2
		 Configuration = "(H (4 [60] 2))"
	  End
	  Begin PaneConfiguration = 12
		 NumPanes = 1
		 Configuration = "(H (1) )"
	  End
	  Begin PaneConfiguration = 13
		 NumPanes = 1
		 Configuration = "(V (4))"
	  End
	  Begin PaneConfiguration = 14
		 NumPanes = 1
		 Configuration = "(V (2))"
	  End
	  ActivePaneConfig = 1
   End
   Begin DiagramPane = 
	  Begin Origin = 
		 Top = 0
		 Left = 0
	  End
	  Begin Tables = 
		 Begin Table = "tblKartrisLanguageElements"
			Begin Extent = 
			   Top = 6
			   Left = 38
			   Bottom = 136
			   Right = 251
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisLanguages"
			Begin Extent = 
			   Top = 8
			   Left = 530
			   Bottom = 125
			   Right = 749
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisLanguageElements_1"
			Begin Extent = 
			   Top = 153
			   Left = 82
			   Bottom = 288
			   Right = 310
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisLanguageElements_2"
			Begin Extent = 
			   Top = 116
			   Left = 841
			   Bottom = 253
			   Right = 1068
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisProducts"
			Begin Extent = 
			   Top = 128
			   Left = 534
			   Bottom = 252
			   Right = 728
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisLanguageElements_3"
			Begin Extent = 
			   Top = 268
			   Left = 831
			   Bottom = 402
			   Right = 1057
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
	  End
   End
   Begin SQLPane = 
	  PaneHidden = 
   End
   Begin DataPane = 
	  Begin ParameterDe' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeProducts'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'faults = ""
	  End
	  Begin ColumnWidths = 21
		 Width = 284
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 2340
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
	  End
   End
   Begin CriteriaPane = 
	  Begin ColumnWidths = 12
		 Column = 5055
		 Alias = 1335
		 Table = 2775
		 Output = 720
		 Append = 1400
		 NewValue = 1170
		 SortType = 1350
		 SortOrder = 1410
		 GroupBy = 1350
		 Filter = 1350
		 Or = 1350
		 Or = 1350
		 Or = 1350
		 Or = 1350
	  End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeProducts'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeProducts'
GO
/****** Object:  View [dbo].[vKartrisTypePages]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vKartrisTypePages]
AS
SELECT        dbo.tblKartrisPages.PAGE_ID, dbo.tblKartrisPages.PAGE_Name, dbo.tblKartrisPages.PAGE_ParentID, dbo.tblKartrisLanguages.LANG_ID, 
						 dbo.tblKartrisLanguageElements.LE_Value AS PAGE_SEOPageTitle, tblKartrisLanguageElements_1.LE_Value AS PAGE_MetaDescription, 
						 tblKartrisLanguageElements_2.LE_Value AS PAGE_MetaKeywords, tblKartrisLanguageElements_3.LE_Value AS PAGE_Text, 
						 tblKartrisLanguageElements_4.LE_Value AS Page_Title, dbo.tblKartrisPages.PAGE_DateCreated, dbo.tblKartrisPages.PAGE_LastUpdated, 
						 dbo.tblKartrisPages.PAGE_Live
FROM            dbo.tblKartrisLanguageElements INNER JOIN
						 dbo.tblKartrisLanguages ON dbo.tblKartrisLanguageElements.LE_LanguageID = dbo.tblKartrisLanguages.LANG_ID INNER JOIN
						 dbo.tblKartrisLanguageElements AS tblKartrisLanguageElements_1 ON 
						 dbo.tblKartrisLanguages.LANG_ID = tblKartrisLanguageElements_1.LE_LanguageID INNER JOIN
						 dbo.tblKartrisLanguageElements AS tblKartrisLanguageElements_3 ON 
						 dbo.tblKartrisLanguages.LANG_ID = tblKartrisLanguageElements_3.LE_LanguageID INNER JOIN
						 dbo.tblKartrisLanguageElements AS tblKartrisLanguageElements_2 ON 
						 dbo.tblKartrisLanguages.LANG_ID = tblKartrisLanguageElements_2.LE_LanguageID INNER JOIN
						 dbo.tblKartrisPages ON tblKartrisLanguageElements_3.LE_ParentID = dbo.tblKartrisPages.PAGE_ID AND 
						 dbo.tblKartrisLanguageElements.LE_ParentID = dbo.tblKartrisPages.PAGE_ID AND 
						 tblKartrisLanguageElements_2.LE_ParentID = dbo.tblKartrisPages.PAGE_ID AND 
						 tblKartrisLanguageElements_1.LE_ParentID = dbo.tblKartrisPages.PAGE_ID INNER JOIN
						 dbo.tblKartrisLanguageElements AS tblKartrisLanguageElements_4 ON dbo.tblKartrisPages.PAGE_ID = tblKartrisLanguageElements_4.LE_ParentID AND 
						 dbo.tblKartrisLanguages.LANG_ID = tblKartrisLanguageElements_4.LE_LanguageID
WHERE        (dbo.tblKartrisLanguageElements.LE_TypeID = 8) AND (dbo.tblKartrisLanguageElements.LE_FieldID = 3) AND 
						 (dbo.tblKartrisLanguageElements.LE_Value IS NOT NULL) AND (tblKartrisLanguageElements_1.LE_TypeID = 8) AND 
						 (tblKartrisLanguageElements_1.LE_FieldID = 4) AND (tblKartrisLanguageElements_2.LE_TypeID = 8) AND (tblKartrisLanguageElements_2.LE_FieldID = 5) 
						 AND (tblKartrisLanguageElements_3.LE_TypeID = 8) AND (tblKartrisLanguageElements_3.LE_FieldID = 6) AND 
						 (tblKartrisLanguageElements_4.LE_TypeID = 8) AND (tblKartrisLanguageElements_4.LE_FieldID = 9) OR
						 (dbo.tblKartrisLanguageElements.LE_TypeID = 8) AND (dbo.tblKartrisLanguageElements.LE_FieldID = 3) AND (tblKartrisLanguageElements_1.LE_TypeID = 8)
						  AND (tblKartrisLanguageElements_1.LE_FieldID = 4) AND (tblKartrisLanguageElements_2.LE_TypeID = 8) AND 
						 (tblKartrisLanguageElements_2.LE_FieldID = 5) AND (tblKartrisLanguageElements_3.LE_TypeID = 8) AND (tblKartrisLanguageElements_3.LE_FieldID = 6) 
						 AND (tblKartrisLanguageElements_1.LE_Value IS NOT NULL) AND (tblKartrisLanguageElements_4.LE_TypeID = 8) AND 
						 (tblKartrisLanguageElements_4.LE_FieldID = 9) OR
						 (dbo.tblKartrisLanguageElements.LE_TypeID = 8) AND (dbo.tblKartrisLanguageElements.LE_FieldID = 3) AND (tblKartrisLanguageElements_1.LE_TypeID = 8)
						  AND (tblKartrisLanguageElements_1.LE_FieldID = 4) AND (tblKartrisLanguageElements_2.LE_TypeID = 8) AND 
						 (tblKartrisLanguageElements_2.LE_FieldID = 5) AND (tblKartrisLanguageElements_3.LE_TypeID = 8) AND (tblKartrisLanguageElements_3.LE_FieldID = 6) 
						 AND (tblKartrisLanguageElements_2.LE_Value IS NOT NULL) AND (tblKartrisLanguageElements_4.LE_TypeID = 8) AND 
						 (tblKartrisLanguageElements_4.LE_FieldID = 9) OR
						 (dbo.tblKartrisLanguageElements.LE_TypeID = 8) AND (dbo.tblKartrisLanguageElements.LE_FieldID = 3) AND (tblKartrisLanguageElements_1.LE_TypeID = 8)
						  AND (tblKartrisLanguageElements_1.LE_FieldID = 4) AND (tblKartrisLanguageElements_2.LE_TypeID = 8) AND 
						 (tblKartrisLanguageElements_2.LE_FieldID = 5) AND (tblKartrisLanguageElements_3.LE_TypeID = 8) AND (tblKartrisLanguageElements_3.LE_FieldID = 6) 
						 AND (tblKartrisLanguageElements_3.LE_Value IS NOT NULL) AND (tblKartrisLanguageElements_4.LE_TypeID = 8) AND 
						 (tblKartrisLanguageElements_4.LE_FieldID = 9) OR
						 (dbo.tblKartrisLanguageElements.LE_TypeID = 8) AND (dbo.tblKartrisLanguageElements.LE_FieldID = 3) AND (tblKartrisLanguageElements_1.LE_TypeID = 8)
						  AND (tblKartrisLanguageElements_1.LE_FieldID = 4) AND (tblKartrisLanguageElements_2.LE_TypeID = 8) AND 
						 (tblKartrisLanguageElements_2.LE_FieldID = 5) AND (tblKartrisLanguageElements_3.LE_TypeID = 8) AND (tblKartrisLanguageElements_3.LE_FieldID = 6) 
						 AND (tblKartrisLanguageElements_4.LE_Value IS NOT NULL) AND (tblKartrisLanguageElements_4.LE_TypeID = 8) AND 
						 (tblKartrisLanguageElements_4.LE_FieldID = 9)
GO
/****** Object:  View [dbo].[vKartrisTypeOptions]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vKartrisTypeOptions]
AS
SELECT     dbo.tblKartrisOptions.OPT_ID, dbo.tblKartrisLanguageElements.LE_LanguageID AS LANG_ID, dbo.tblKartrisLanguageElements.LE_Value AS OPT_Name, 
					  dbo.tblKartrisOptions.OPT_OptionGroupID, dbo.tblKartrisOptions.OPT_CheckBoxValue, dbo.tblKartrisOptions.OPT_DefPriceChange, 
					  dbo.tblKartrisOptions.OPT_DefWeightChange, dbo.tblKartrisOptions.OPT_DefOrderByValue
FROM         dbo.tblKartrisLanguageElements INNER JOIN
					  dbo.tblKartrisOptions ON dbo.tblKartrisLanguageElements.LE_ParentID = dbo.tblKartrisOptions.OPT_ID
WHERE     (dbo.tblKartrisLanguageElements.LE_TypeID = 5) AND (dbo.tblKartrisLanguageElements.LE_FieldID = 1) AND 
					  (dbo.tblKartrisLanguageElements.LE_Value IS NOT NULL)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
	  Begin PaneConfiguration = 0
		 NumPanes = 4
		 Configuration = "(H (1[41] 4[25] 2[15] 3) )"
	  End
	  Begin PaneConfiguration = 1
		 NumPanes = 3
		 Configuration = "(H (1 [50] 4 [25] 3))"
	  End
	  Begin PaneConfiguration = 2
		 NumPanes = 3
		 Configuration = "(H (1 [50] 2 [25] 3))"
	  End
	  Begin PaneConfiguration = 3
		 NumPanes = 3
		 Configuration = "(H (4 [30] 2 [40] 3))"
	  End
	  Begin PaneConfiguration = 4
		 NumPanes = 2
		 Configuration = "(H (1 [56] 3))"
	  End
	  Begin PaneConfiguration = 5
		 NumPanes = 2
		 Configuration = "(H (2 [66] 3))"
	  End
	  Begin PaneConfiguration = 6
		 NumPanes = 2
		 Configuration = "(H (4 [50] 3))"
	  End
	  Begin PaneConfiguration = 7
		 NumPanes = 1
		 Configuration = "(V (3))"
	  End
	  Begin PaneConfiguration = 8
		 NumPanes = 3
		 Configuration = "(H (1[56] 4[18] 2) )"
	  End
	  Begin PaneConfiguration = 9
		 NumPanes = 2
		 Configuration = "(H (1 [75] 4))"
	  End
	  Begin PaneConfiguration = 10
		 NumPanes = 2
		 Configuration = "(H (1[66] 2) )"
	  End
	  Begin PaneConfiguration = 11
		 NumPanes = 2
		 Configuration = "(H (4 [60] 2))"
	  End
	  Begin PaneConfiguration = 12
		 NumPanes = 1
		 Configuration = "(H (1) )"
	  End
	  Begin PaneConfiguration = 13
		 NumPanes = 1
		 Configuration = "(V (4))"
	  End
	  Begin PaneConfiguration = 14
		 NumPanes = 1
		 Configuration = "(V (2))"
	  End
	  ActivePaneConfig = 0
   End
   Begin DiagramPane = 
	  Begin Origin = 
		 Top = 0
		 Left = 0
	  End
	  Begin Tables = 
		 Begin Table = "tblKartrisLanguageElements"
			Begin Extent = 
			   Top = 6
			   Left = 295
			   Bottom = 123
			   Right = 459
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisOptions"
			Begin Extent = 
			   Top = 4
			   Left = 522
			   Bottom = 163
			   Right = 725
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
	  End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
	  Begin ParameterDefaults = ""
	  End
	  Begin ColumnWidths = 10
		 Width = 284
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
	  End
   End
   Begin CriteriaPane = 
	  Begin ColumnWidths = 11
		 Column = 1440
		 Alias = 1770
		 Table = 1170
		 Output = 720
		 Append = 1400
		 NewValue = 1170
		 SortType = 1350
		 SortOrder = 1410
		 GroupBy = 1350
		 Filter = 1350
		 Or = 1350
		 Or = 1350
		 Or = 1350
	  End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeOptions'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeOptions'
GO
/****** Object:  View [dbo].[vKartrisTypeOptionGroups]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vKartrisTypeOptionGroups]
AS
SELECT     dbo.tblKartrisOptionGroups.OPTG_ID, dbo.tblKartrisLanguages.LANG_ID, dbo.tblKartrisLanguageElements.LE_Value AS OPTG_Name, 
					  tblKartrisLanguageElements_1.LE_Value AS OPTG_Desc, dbo.tblKartrisOptionGroups.OPTG_BackendName, dbo.tblKartrisOptionGroups.OPTG_OptionDisplayType, 
					  dbo.tblKartrisOptionGroups.OPTG_DefOrderByValue
FROM         dbo.tblKartrisLanguages INNER JOIN
					  dbo.tblKartrisLanguageElements ON dbo.tblKartrisLanguages.LANG_ID = dbo.tblKartrisLanguageElements.LE_LanguageID INNER JOIN
					  dbo.tblKartrisLanguageElements AS tblKartrisLanguageElements_1 ON 
					  dbo.tblKartrisLanguages.LANG_ID = tblKartrisLanguageElements_1.LE_LanguageID INNER JOIN
					  dbo.tblKartrisOptionGroups ON dbo.tblKartrisLanguageElements.LE_ParentID = dbo.tblKartrisOptionGroups.OPTG_ID AND 
					  tblKartrisLanguageElements_1.LE_ParentID = dbo.tblKartrisOptionGroups.OPTG_ID
WHERE     (dbo.tblKartrisLanguageElements.LE_TypeID = 6) AND (dbo.tblKartrisLanguageElements.LE_FieldID = 1) AND 
					  (dbo.tblKartrisLanguageElements.LE_Value IS NOT NULL) AND (tblKartrisLanguageElements_1.LE_TypeID = 6) AND 
					  (tblKartrisLanguageElements_1.LE_FieldID = 2) OR
					  (dbo.tblKartrisLanguageElements.LE_TypeID = 6) AND (dbo.tblKartrisLanguageElements.LE_FieldID = 1) AND (tblKartrisLanguageElements_1.LE_TypeID = 6) AND 
					  (tblKartrisLanguageElements_1.LE_FieldID = 2) AND (tblKartrisLanguageElements_1.LE_Value IS NOT NULL)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
	  Begin PaneConfiguration = 0
		 NumPanes = 4
		 Configuration = "(H (1[41] 4[23] 2[18] 3) )"
	  End
	  Begin PaneConfiguration = 1
		 NumPanes = 3
		 Configuration = "(H (1 [50] 4 [25] 3))"
	  End
	  Begin PaneConfiguration = 2
		 NumPanes = 3
		 Configuration = "(H (1 [50] 2 [25] 3))"
	  End
	  Begin PaneConfiguration = 3
		 NumPanes = 3
		 Configuration = "(H (4 [30] 2 [40] 3))"
	  End
	  Begin PaneConfiguration = 4
		 NumPanes = 2
		 Configuration = "(H (1 [56] 3))"
	  End
	  Begin PaneConfiguration = 5
		 NumPanes = 2
		 Configuration = "(H (2 [66] 3))"
	  End
	  Begin PaneConfiguration = 6
		 NumPanes = 2
		 Configuration = "(H (4 [50] 3))"
	  End
	  Begin PaneConfiguration = 7
		 NumPanes = 1
		 Configuration = "(V (3))"
	  End
	  Begin PaneConfiguration = 8
		 NumPanes = 3
		 Configuration = "(H (1[56] 4[18] 2) )"
	  End
	  Begin PaneConfiguration = 9
		 NumPanes = 2
		 Configuration = "(H (1 [75] 4))"
	  End
	  Begin PaneConfiguration = 10
		 NumPanes = 2
		 Configuration = "(H (1[66] 2) )"
	  End
	  Begin PaneConfiguration = 11
		 NumPanes = 2
		 Configuration = "(H (4 [60] 2))"
	  End
	  Begin PaneConfiguration = 12
		 NumPanes = 1
		 Configuration = "(H (1) )"
	  End
	  Begin PaneConfiguration = 13
		 NumPanes = 1
		 Configuration = "(V (4))"
	  End
	  Begin PaneConfiguration = 14
		 NumPanes = 1
		 Configuration = "(V (2))"
	  End
	  ActivePaneConfig = 0
   End
   Begin DiagramPane = 
	  Begin Origin = 
		 Top = 0
		 Left = 0
	  End
	  Begin Tables = 
		 Begin Table = "tblKartrisLanguages"
			Begin Extent = 
			   Top = 6
			   Left = 38
			   Bottom = 123
			   Right = 257
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisLanguageElements"
			Begin Extent = 
			   Top = 4
			   Left = 330
			   Bottom = 121
			   Right = 494
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisLanguageElements_1"
			Begin Extent = 
			   Top = 149
			   Left = 321
			   Bottom = 284
			   Right = 485
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisOptionGroups"
			Begin Extent = 
			   Top = 6
			   Left = 699
			   Bottom = 173
			   Right = 911
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
	  End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
	  Begin ParameterDefaults = ""
	  End
	  Begin ColumnWidths = 9
		 Width = 284
		 Width = 1095
		 Width = 1020
		 Width = 1500
		 Width = 1665
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
	  End
   End
   Begin CriteriaPane = 
	  Begin ColumnWidths = 11
		 Column = 1440
		 Alias = 2205
		 Table = 2640
		 Output = 720
		 Append = 1400
		 NewValue = 1170
		 SortType = 1350
		 SortOrder = 1410
		 GroupBy = 1350
		 Filter = 1350
	  ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeOptionGroups'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'   Or = 1350
		 Or = 1350
		 Or = 1350
	  End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeOptionGroups'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeOptionGroups'
GO

/****** Object:  View [dbo].[vKartrisTypeNews]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vKartrisTypeNews]
AS
SELECT     dbo.tblKartrisNews.N_ID, dbo.tblKartrisLanguages.LANG_ID, dbo.tblKartrisLanguageElements.LE_Value AS N_Name, 
					  tblKartrisLanguageElements_1.LE_Value AS N_Text, tblKartrisLanguageElements_2.LE_Value AS N_StrapLine, dbo.tblKartrisNews.N_DateCreated, 
					  dbo.tblKartrisNews.N_LastUpdated
FROM         dbo.tblKartrisLanguageElements INNER JOIN
					  dbo.tblKartrisLanguages ON dbo.tblKartrisLanguageElements.LE_LanguageID = dbo.tblKartrisLanguages.LANG_ID INNER JOIN
					  dbo.tblKartrisLanguageElements AS tblKartrisLanguageElements_1 ON 
					  dbo.tblKartrisLanguages.LANG_ID = tblKartrisLanguageElements_1.LE_LanguageID INNER JOIN
					  dbo.tblKartrisLanguageElements AS tblKartrisLanguageElements_2 ON 
					  dbo.tblKartrisLanguages.LANG_ID = tblKartrisLanguageElements_2.LE_LanguageID INNER JOIN
					  dbo.tblKartrisNews ON tblKartrisLanguageElements_1.LE_ParentID = dbo.tblKartrisNews.N_ID AND 
					  dbo.tblKartrisLanguageElements.LE_ParentID = dbo.tblKartrisNews.N_ID AND tblKartrisLanguageElements_2.LE_ParentID = dbo.tblKartrisNews.N_ID
WHERE     (dbo.tblKartrisLanguageElements.LE_TypeID = 16) AND (dbo.tblKartrisLanguageElements.LE_FieldID = 1) AND (tblKartrisLanguageElements_1.LE_TypeID = 16) AND 
					  (tblKartrisLanguageElements_1.LE_FieldID = 6) AND (NOT (dbo.tblKartrisLanguageElements.LE_Value IS NULL)) AND 
					  (tblKartrisLanguageElements_2.LE_TypeID = 16) AND (tblKartrisLanguageElements_2.LE_FieldID = 7) OR
					  (dbo.tblKartrisLanguageElements.LE_TypeID = 16) AND (dbo.tblKartrisLanguageElements.LE_FieldID = 1) AND (tblKartrisLanguageElements_1.LE_TypeID = 16) AND 
					  (tblKartrisLanguageElements_1.LE_FieldID = 6) AND (tblKartrisLanguageElements_2.LE_TypeID = 16) AND (tblKartrisLanguageElements_2.LE_FieldID = 7) AND 
					  (NOT (tblKartrisLanguageElements_1.LE_Value IS NULL)) OR
					  (dbo.tblKartrisLanguageElements.LE_TypeID = 16) AND (dbo.tblKartrisLanguageElements.LE_FieldID = 1) AND (tblKartrisLanguageElements_1.LE_TypeID = 16) AND 
					  (tblKartrisLanguageElements_1.LE_FieldID = 6) AND (tblKartrisLanguageElements_2.LE_TypeID = 16) AND (tblKartrisLanguageElements_2.LE_FieldID = 7) AND 
					  (NOT (tblKartrisLanguageElements_2.LE_Value IS NULL))
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
	  Begin PaneConfiguration = 0
		 NumPanes = 4
		 Configuration = "(H (1[33] 4[28] 2[20] 3) )"
	  End
	  Begin PaneConfiguration = 1
		 NumPanes = 3
		 Configuration = "(H (1 [50] 4 [25] 3))"
	  End
	  Begin PaneConfiguration = 2
		 NumPanes = 3
		 Configuration = "(H (1 [50] 2 [25] 3))"
	  End
	  Begin PaneConfiguration = 3
		 NumPanes = 3
		 Configuration = "(H (4 [30] 2 [40] 3))"
	  End
	  Begin PaneConfiguration = 4
		 NumPanes = 2
		 Configuration = "(H (1 [56] 3))"
	  End
	  Begin PaneConfiguration = 5
		 NumPanes = 2
		 Configuration = "(H (2 [66] 3))"
	  End
	  Begin PaneConfiguration = 6
		 NumPanes = 2
		 Configuration = "(H (4 [50] 3))"
	  End
	  Begin PaneConfiguration = 7
		 NumPanes = 1
		 Configuration = "(V (3))"
	  End
	  Begin PaneConfiguration = 8
		 NumPanes = 3
		 Configuration = "(H (1[56] 4[18] 2) )"
	  End
	  Begin PaneConfiguration = 9
		 NumPanes = 2
		 Configuration = "(H (1 [75] 4))"
	  End
	  Begin PaneConfiguration = 10
		 NumPanes = 2
		 Configuration = "(H (1[66] 2) )"
	  End
	  Begin PaneConfiguration = 11
		 NumPanes = 2
		 Configuration = "(H (4 [60] 2))"
	  End
	  Begin PaneConfiguration = 12
		 NumPanes = 1
		 Configuration = "(H (1) )"
	  End
	  Begin PaneConfiguration = 13
		 NumPanes = 1
		 Configuration = "(V (4))"
	  End
	  Begin PaneConfiguration = 14
		 NumPanes = 1
		 Configuration = "(V (2))"
	  End
	  ActivePaneConfig = 0
   End
   Begin DiagramPane = 
	  Begin Origin = 
		 Top = 0
		 Left = 0
	  End
	  Begin Tables = 
		 Begin Table = "tblKartrisLanguageElements"
			Begin Extent = 
			   Top = 6
			   Left = 286
			   Bottom = 149
			   Right = 450
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisLanguages"
			Begin Extent = 
			   Top = 6
			   Left = 488
			   Bottom = 123
			   Right = 707
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisLanguageElements_1"
			Begin Extent = 
			   Top = 6
			   Left = 745
			   Bottom = 136
			   Right = 909
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisLanguageElements_2"
			Begin Extent = 
			   Top = 6
			   Left = 38
			   Bottom = 123
			   Right = 202
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisNews"
			Begin Extent = 
			   Top = 157
			   Left = 423
			   Bottom = 265
			   Right = 586
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
	  End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
	  Begin ParameterDefaults = ""
	  End
	  Begin ColumnWidths = 9
		 Width = 284
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
	  End
   End
   Begin CriteriaPane = 
	  Be' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeNews'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'gin ColumnWidths = 11
		 Column = 2145
		 Alias = 2085
		 Table = 2640
		 Output = 720
		 Append = 1400
		 NewValue = 1170
		 SortType = 1350
		 SortOrder = 1410
		 GroupBy = 1350
		 Filter = 1350
		 Or = 1350
		 Or = 1350
		 Or = 1350
	  End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeNews'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeNews'
GO
/****** Object:  Table [dbo].[tblKartrisVersions]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblKartrisVersions](
	[V_ID] [bigint] IDENTITY(1,1) NOT NULL,
	[V_CodeNumber] [nvarchar](25) NULL,
	[V_ProductID] [int] NULL CONSTRAINT [DF__tblKartris__V_Pro__1CF15040]  DEFAULT ((0)),
	[V_Price] [decimal](18, 4) NULL CONSTRAINT [DF__tblKartris__V_Pri__1DE57479]  DEFAULT ((0)),
	[V_Tax] [tinyint] NULL CONSTRAINT [DF__tblKartris__V_Tax__1ED998B2]  DEFAULT ((0)),
	[V_Weight] [real] NOT NULL CONSTRAINT [DF__tblKartris__V_Wei__1FCDBCEB]  DEFAULT ((0)),
	[V_DeliveryTime] [tinyint] NOT NULL CONSTRAINT [DF__tblKartris__V_Del__20C1E124]  DEFAULT ((0)),
	[V_Quantity] [real] NOT NULL CONSTRAINT [DF__tblKartris__V_Qua__21B6055D]  DEFAULT ((0)),
	[V_QuantityWarnLevel] [real] NOT NULL CONSTRAINT [DF__tblKartris__V_Qua__22AA2996]  DEFAULT ((0)),
	[V_Live] [bit] NOT NULL CONSTRAINT [DF_tblKartrisVersions_V_Live]  DEFAULT ((0)),
	[V_DownLoadInfo] [nvarchar](255) NULL,
	[V_DownloadType] [nvarchar](50) NULL,
	[V_OrderByValue] [smallint] NOT NULL CONSTRAINT [DF__tblKartris__V_Ord__239E4DCF]  DEFAULT ((0)),
	[V_RRP] [decimal](18, 4) NOT NULL CONSTRAINT [DF__tblKartris__V_RRP__24927208]  DEFAULT ((0)),
	[V_Type] [char](1) NULL,
	[V_CustomerGroupID] [smallint] NULL CONSTRAINT [DF__tblKartris__V_Cus__25869641]  DEFAULT ((0)),
	[V_CustomizationType] [char](1) NOT NULL,
	[V_CustomizationDesc] [nvarchar](255) NULL,
	[V_CustomizationCost] [decimal](18, 4) NULL,
	[V_Tax2] [tinyint] NULL,
	[V_TaxExtra] [nvarchar](255) NULL,
	[V_BulkUpdateTimeStamp] [datetime] NULL,
 CONSTRAINT [Versions_PK] PRIMARY KEY NONCLUSTERED 
(
	[V_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
CREATE UNIQUE CLUSTERED INDEX [idxV_CodeNumber_ID] ON [dbo].[tblKartrisVersions] 
(
	[V_CodeNumber] ASC,
	[V_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [V_ID] ON [dbo].[tblKartrisVersions] 
(
	[V_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [V_ProductID] ON [dbo].[tblKartrisVersions] 
(
	[V_ProductID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'n:NONE, i:Image, t:Text' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisVersions', @level2type=N'COLUMN',@level2name=N'V_CustomizationType'
GO


/****** Object:  View [dbo].[vKartrisTypeKnowledgeBase]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vKartrisTypeKnowledgeBase]
AS
SELECT     dbo.tblKartrisKnowledgeBase.KB_ID, dbo.tblKartrisLanguages.LANG_ID, tblKartrisLanguageElements_4.LE_Value AS KB_Name, 
					  dbo.tblKartrisLanguageElements.LE_Value AS KB_PageTitle, tblKartrisLanguageElements_1.LE_Value AS KB_MetaDescription, 
					  tblKartrisLanguageElements_2.LE_Value AS KB_MetaKeywords, tblKartrisLanguageElements_3.LE_Value AS KB_Text, dbo.tblKartrisKnowledgeBase.KB_DateCreated,
					   dbo.tblKartrisKnowledgeBase.KB_LastUpdated, dbo.tblKartrisKnowledgeBase.KB_Live
FROM         dbo.tblKartrisLanguageElements INNER JOIN
					  dbo.tblKartrisLanguages ON dbo.tblKartrisLanguageElements.LE_LanguageID = dbo.tblKartrisLanguages.LANG_ID INNER JOIN
					  dbo.tblKartrisLanguageElements AS tblKartrisLanguageElements_1 ON 
					  dbo.tblKartrisLanguages.LANG_ID = tblKartrisLanguageElements_1.LE_LanguageID INNER JOIN
					  dbo.tblKartrisLanguageElements AS tblKartrisLanguageElements_3 ON 
					  dbo.tblKartrisLanguages.LANG_ID = tblKartrisLanguageElements_3.LE_LanguageID INNER JOIN
					  dbo.tblKartrisLanguageElements AS tblKartrisLanguageElements_2 ON 
					  dbo.tblKartrisLanguages.LANG_ID = tblKartrisLanguageElements_2.LE_LanguageID INNER JOIN
					  dbo.tblKartrisKnowledgeBase ON dbo.tblKartrisLanguageElements.LE_ParentID = dbo.tblKartrisKnowledgeBase.KB_ID AND 
					  tblKartrisLanguageElements_1.LE_ParentID = dbo.tblKartrisKnowledgeBase.KB_ID AND 
					  tblKartrisLanguageElements_3.LE_ParentID = dbo.tblKartrisKnowledgeBase.KB_ID AND 
					  tblKartrisLanguageElements_2.LE_ParentID = dbo.tblKartrisKnowledgeBase.KB_ID INNER JOIN
					  dbo.tblKartrisLanguageElements AS tblKartrisLanguageElements_4 ON dbo.tblKartrisLanguages.LANG_ID = tblKartrisLanguageElements_4.LE_LanguageID AND 
					  dbo.tblKartrisKnowledgeBase.KB_ID = tblKartrisLanguageElements_4.LE_ParentID
WHERE     (dbo.tblKartrisLanguageElements.LE_TypeID = 17) AND (dbo.tblKartrisLanguageElements.LE_FieldID = 3) AND 
					  (dbo.tblKartrisLanguageElements.LE_Value IS NOT NULL) AND (tblKartrisLanguageElements_1.LE_TypeID = 17) AND (tblKartrisLanguageElements_1.LE_FieldID = 4) 
					  AND (tblKartrisLanguageElements_2.LE_TypeID = 17) AND (tblKartrisLanguageElements_2.LE_FieldID = 5) AND (tblKartrisLanguageElements_3.LE_TypeID = 17) AND 
					  (tblKartrisLanguageElements_3.LE_FieldID = 6) AND (tblKartrisLanguageElements_4.LE_TypeID = 17) AND (tblKartrisLanguageElements_4.LE_FieldID = 1) OR
					  (dbo.tblKartrisLanguageElements.LE_TypeID = 17) AND (dbo.tblKartrisLanguageElements.LE_FieldID = 3) AND (tblKartrisLanguageElements_1.LE_TypeID = 17) AND 
					  (tblKartrisLanguageElements_1.LE_FieldID = 4) AND (tblKartrisLanguageElements_2.LE_TypeID = 17) AND (tblKartrisLanguageElements_2.LE_FieldID = 5) AND 
					  (tblKartrisLanguageElements_3.LE_TypeID = 17) AND (tblKartrisLanguageElements_3.LE_FieldID = 6) AND (tblKartrisLanguageElements_4.LE_TypeID = 17) AND 
					  (tblKartrisLanguageElements_4.LE_FieldID = 1) AND (tblKartrisLanguageElements_1.LE_Value IS NOT NULL) OR
					  (dbo.tblKartrisLanguageElements.LE_TypeID = 17) AND (dbo.tblKartrisLanguageElements.LE_FieldID = 3) AND (tblKartrisLanguageElements_1.LE_TypeID = 17) AND 
					  (tblKartrisLanguageElements_1.LE_FieldID = 4) AND (tblKartrisLanguageElements_2.LE_TypeID = 17) AND (tblKartrisLanguageElements_2.LE_FieldID = 5) AND 
					  (tblKartrisLanguageElements_3.LE_TypeID = 17) AND (tblKartrisLanguageElements_3.LE_FieldID = 6) AND (tblKartrisLanguageElements_4.LE_TypeID = 17) AND 
					  (tblKartrisLanguageElements_4.LE_FieldID = 1) AND (tblKartrisLanguageElements_2.LE_Value IS NOT NULL) OR
					  (dbo.tblKartrisLanguageElements.LE_TypeID = 17) AND (dbo.tblKartrisLanguageElements.LE_FieldID = 3) AND (tblKartrisLanguageElements_1.LE_TypeID = 17) AND 
					  (tblKartrisLanguageElements_1.LE_FieldID = 4) AND (tblKartrisLanguageElements_2.LE_TypeID = 17) AND (tblKartrisLanguageElements_2.LE_FieldID = 5) AND 
					  (tblKartrisLanguageElements_3.LE_TypeID = 17) AND (tblKartrisLanguageElements_3.LE_FieldID = 6) AND (tblKartrisLanguageElements_4.LE_TypeID = 17) AND 
					  (tblKartrisLanguageElements_4.LE_FieldID = 1) AND (tblKartrisLanguageElements_3.LE_Value IS NOT NULL) OR
					  (dbo.tblKartrisLanguageElements.LE_TypeID = 17) AND (dbo.tblKartrisLanguageElements.LE_FieldID = 3) AND (tblKartrisLanguageElements_1.LE_TypeID = 17) AND 
					  (tblKartrisLanguageElements_1.LE_FieldID = 4) AND (tblKartrisLanguageElements_2.LE_TypeID = 17) AND (tblKartrisLanguageElements_2.LE_FieldID = 5) AND 
					  (tblKartrisLanguageElements_3.LE_TypeID = 17) AND (tblKartrisLanguageElements_3.LE_FieldID = 6) AND (tblKartrisLanguageElements_4.LE_TypeID = 17) AND 
					  (tblKartrisLanguageElements_4.LE_FieldID = 1) AND (tblKartrisLanguageElements_4.LE_Value IS NOT NULL)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
	  Begin PaneConfiguration = 0
		 NumPanes = 4
		 Configuration = "(H (1[25] 4[51] 2[10] 3) )"
	  End
	  Begin PaneConfiguration = 1
		 NumPanes = 3
		 Configuration = "(H (1 [50] 4 [25] 3))"
	  End
	  Begin PaneConfiguration = 2
		 NumPanes = 3
		 Configuration = "(H (1 [50] 2 [25] 3))"
	  End
	  Begin PaneConfiguration = 3
		 NumPanes = 3
		 Configuration = "(H (4 [30] 2 [40] 3))"
	  End
	  Begin PaneConfiguration = 4
		 NumPanes = 2
		 Configuration = "(H (1 [56] 3))"
	  End
	  Begin PaneConfiguration = 5
		 NumPanes = 2
		 Configuration = "(H (2 [66] 3))"
	  End
	  Begin PaneConfiguration = 6
		 NumPanes = 2
		 Configuration = "(H (4 [50] 3))"
	  End
	  Begin PaneConfiguration = 7
		 NumPanes = 1
		 Configuration = "(V (3))"
	  End
	  Begin PaneConfiguration = 8
		 NumPanes = 3
		 Configuration = "(H (1[56] 4[18] 2) )"
	  End
	  Begin PaneConfiguration = 9
		 NumPanes = 2
		 Configuration = "(H (1 [75] 4))"
	  End
	  Begin PaneConfiguration = 10
		 NumPanes = 2
		 Configuration = "(H (1[66] 2) )"
	  End
	  Begin PaneConfiguration = 11
		 NumPanes = 2
		 Configuration = "(H (4 [60] 2))"
	  End
	  Begin PaneConfiguration = 12
		 NumPanes = 1
		 Configuration = "(H (1) )"
	  End
	  Begin PaneConfiguration = 13
		 NumPanes = 1
		 Configuration = "(V (4))"
	  End
	  Begin PaneConfiguration = 14
		 NumPanes = 1
		 Configuration = "(V (2))"
	  End
	  ActivePaneConfig = 0
   End
   Begin DiagramPane = 
	  Begin Origin = 
		 Top = 0
		 Left = 0
	  End
	  Begin Tables = 
		 Begin Table = "tblKartrisLanguageElements"
			Begin Extent = 
			   Top = 6
			   Left = 38
			   Bottom = 123
			   Right = 202
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisLanguages"
			Begin Extent = 
			   Top = 5
			   Left = 271
			   Bottom = 101
			   Right = 490
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisLanguageElements_1"
			Begin Extent = 
			   Top = 6
			   Left = 497
			   Bottom = 123
			   Right = 661
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisLanguageElements_3"
			Begin Extent = 
			   Top = 6
			   Left = 699
			   Bottom = 123
			   Right = 863
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisLanguageElements_2"
			Begin Extent = 
			   Top = 2
			   Left = 908
			   Bottom = 119
			   Right = 1128
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisKnowledgeBase"
			Begin Extent = 
			   Top = 202
			   Left = 305
			   Bottom = 319
			   Right = 476
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisLanguageElements_4"
			Begin Extent = 
			   Top = 163
	' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeKnowledgeBase'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'           Left = 28
			   Bottom = 287
			   Right = 192
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
	  End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
	  Begin ParameterDefaults = ""
	  End
	  Begin ColumnWidths = 13
		 Width = 284
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 2850
		 Width = 1500
		 Width = 1500
		 Width = 1500
	  End
   End
   Begin CriteriaPane = 
	  Begin ColumnWidths = 13
		 Column = 4440
		 Alias = 2385
		 Table = 2505
		 Output = 720
		 Append = 1400
		 NewValue = 1170
		 SortType = 1350
		 SortOrder = 1410
		 GroupBy = 1350
		 Filter = 1350
		 Or = 1350
		 Or = 1350
		 Or = 1350
		 Or = 1350
		 Or = 1350
	  End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeKnowledgeBase'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeKnowledgeBase'
GO
/****** Object:  View [dbo].[vKartrisTypeDestinations]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vKartrisTypeDestinations]
AS
SELECT     dbo.tblKartrisDestination.D_ID, dbo.tblKartrisLanguageElements.LE_LanguageID AS LANG_ID, dbo.tblKartrisLanguageElements.LE_Value AS D_Name, 
					  dbo.tblKartrisDestination.D_ShippingZoneID, dbo.tblKartrisDestination.D_Tax, dbo.tblKartrisDestination.D_ISOCode, dbo.tblKartrisDestination.D_ISOCode3Letter, 
					  dbo.tblKartrisDestination.D_ISOCodeNumeric, dbo.tblKartrisDestination.D_Region, dbo.tblKartrisDestination.D_Live, dbo.tblKartrisDestination.D_Tax2, 
					  dbo.tblKartrisDestination.D_TaxExtra
FROM         dbo.tblKartrisLanguageElements INNER JOIN
					  dbo.tblKartrisDestination ON dbo.tblKartrisLanguageElements.LE_ParentID = dbo.tblKartrisDestination.D_ID
WHERE     (dbo.tblKartrisLanguageElements.LE_TypeID = 11) AND (dbo.tblKartrisLanguageElements.LE_FieldID = 1) AND 
					  (dbo.tblKartrisLanguageElements.LE_Value IS NOT NULL)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
	  Begin PaneConfiguration = 0
		 NumPanes = 4
		 Configuration = "(H (1[28] 4[33] 2[20] 3) )"
	  End
	  Begin PaneConfiguration = 1
		 NumPanes = 3
		 Configuration = "(H (1 [50] 4 [25] 3))"
	  End
	  Begin PaneConfiguration = 2
		 NumPanes = 3
		 Configuration = "(H (1 [50] 2 [25] 3))"
	  End
	  Begin PaneConfiguration = 3
		 NumPanes = 3
		 Configuration = "(H (4 [30] 2 [40] 3))"
	  End
	  Begin PaneConfiguration = 4
		 NumPanes = 2
		 Configuration = "(H (1 [56] 3))"
	  End
	  Begin PaneConfiguration = 5
		 NumPanes = 2
		 Configuration = "(H (2 [66] 3))"
	  End
	  Begin PaneConfiguration = 6
		 NumPanes = 2
		 Configuration = "(H (4 [50] 3))"
	  End
	  Begin PaneConfiguration = 7
		 NumPanes = 1
		 Configuration = "(V (3))"
	  End
	  Begin PaneConfiguration = 8
		 NumPanes = 3
		 Configuration = "(H (1[56] 4[18] 2) )"
	  End
	  Begin PaneConfiguration = 9
		 NumPanes = 2
		 Configuration = "(H (1 [75] 4))"
	  End
	  Begin PaneConfiguration = 10
		 NumPanes = 2
		 Configuration = "(H (1[66] 2) )"
	  End
	  Begin PaneConfiguration = 11
		 NumPanes = 2
		 Configuration = "(H (4 [60] 2))"
	  End
	  Begin PaneConfiguration = 12
		 NumPanes = 1
		 Configuration = "(H (1) )"
	  End
	  Begin PaneConfiguration = 13
		 NumPanes = 1
		 Configuration = "(V (4))"
	  End
	  Begin PaneConfiguration = 14
		 NumPanes = 1
		 Configuration = "(V (2))"
	  End
	  ActivePaneConfig = 0
   End
   Begin DiagramPane = 
	  Begin Origin = 
		 Top = 0
		 Left = 0
	  End
	  Begin Tables = 
		 Begin Table = "tblKartrisLanguageElements"
			Begin Extent = 
			   Top = 6
			   Left = 38
			   Bottom = 123
			   Right = 202
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisDestination"
			Begin Extent = 
			   Top = 6
			   Left = 240
			   Bottom = 178
			   Right = 423
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
	  End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
	  Begin ParameterDefaults = ""
	  End
	  Begin ColumnWidths = 9
		 Width = 284
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
	  End
   End
   Begin CriteriaPane = 
	  Begin ColumnWidths = 11
		 Column = 1440
		 Alias = 900
		 Table = 1170
		 Output = 720
		 Append = 1400
		 NewValue = 1170
		 SortType = 1350
		 SortOrder = 1410
		 GroupBy = 1350
		 Filter = 1350
		 Or = 1350
		 Or = 1350
		 Or = 1350
	  End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeDestinations'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeDestinations'
GO
/****** Object:  View [dbo].[vKartrisTypeCustomerGroups]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vKartrisTypeCustomerGroups]
AS
SELECT     dbo.tblKartrisCustomerGroups.CG_ID, dbo.tblKartrisLanguageElements.LE_LanguageID AS LANG_ID, dbo.tblKartrisLanguageElements.LE_Value AS CG_Name, 
					  dbo.tblKartrisCustomerGroups.CG_Discount, dbo.tblKartrisCustomerGroups.CG_Live
FROM         dbo.tblKartrisLanguageElements INNER JOIN
					  dbo.tblKartrisCustomerGroups ON dbo.tblKartrisLanguageElements.LE_ParentID = dbo.tblKartrisCustomerGroups.CG_ID
WHERE     (dbo.tblKartrisLanguageElements.LE_TypeID = 12) AND (dbo.tblKartrisLanguageElements.LE_FieldID = 1) AND 
					  (dbo.tblKartrisLanguageElements.LE_Value IS NOT NULL)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
	  Begin PaneConfiguration = 0
		 NumPanes = 4
		 Configuration = "(H (1[40] 4[20] 2[20] 3) )"
	  End
	  Begin PaneConfiguration = 1
		 NumPanes = 3
		 Configuration = "(H (1 [50] 4 [25] 3))"
	  End
	  Begin PaneConfiguration = 2
		 NumPanes = 3
		 Configuration = "(H (1 [50] 2 [25] 3))"
	  End
	  Begin PaneConfiguration = 3
		 NumPanes = 3
		 Configuration = "(H (4 [30] 2 [40] 3))"
	  End
	  Begin PaneConfiguration = 4
		 NumPanes = 2
		 Configuration = "(H (1 [56] 3))"
	  End
	  Begin PaneConfiguration = 5
		 NumPanes = 2
		 Configuration = "(H (2 [66] 3))"
	  End
	  Begin PaneConfiguration = 6
		 NumPanes = 2
		 Configuration = "(H (4 [50] 3))"
	  End
	  Begin PaneConfiguration = 7
		 NumPanes = 1
		 Configuration = "(V (3))"
	  End
	  Begin PaneConfiguration = 8
		 NumPanes = 3
		 Configuration = "(H (1[56] 4[18] 2) )"
	  End
	  Begin PaneConfiguration = 9
		 NumPanes = 2
		 Configuration = "(H (1 [75] 4))"
	  End
	  Begin PaneConfiguration = 10
		 NumPanes = 2
		 Configuration = "(H (1[66] 2) )"
	  End
	  Begin PaneConfiguration = 11
		 NumPanes = 2
		 Configuration = "(H (4 [60] 2))"
	  End
	  Begin PaneConfiguration = 12
		 NumPanes = 1
		 Configuration = "(H (1) )"
	  End
	  Begin PaneConfiguration = 13
		 NumPanes = 1
		 Configuration = "(V (4))"
	  End
	  Begin PaneConfiguration = 14
		 NumPanes = 1
		 Configuration = "(V (2))"
	  End
	  ActivePaneConfig = 0
   End
   Begin DiagramPane = 
	  Begin Origin = 
		 Top = 0
		 Left = 0
	  End
	  Begin Tables = 
		 Begin Table = "tblKartrisLanguageElements"
			Begin Extent = 
			   Top = 6
			   Left = 38
			   Bottom = 123
			   Right = 202
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisCustomerGroups"
			Begin Extent = 
			   Top = 6
			   Left = 240
			   Bottom = 108
			   Right = 400
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
	  End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
	  Begin ParameterDefaults = ""
	  End
	  Begin ColumnWidths = 9
		 Width = 284
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
	  End
   End
   Begin CriteriaPane = 
	  Begin ColumnWidths = 11
		 Column = 1440
		 Alias = 900
		 Table = 1170
		 Output = 720
		 Append = 1400
		 NewValue = 1170
		 SortType = 1350
		 SortOrder = 1410
		 GroupBy = 1350
		 Filter = 1350
		 Or = 1350
		 Or = 1350
		 Or = 1350
	  End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeCustomerGroups'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeCustomerGroups'
GO
/****** Object:  View [dbo].[vKartrisTypeCurrencies]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vKartrisTypeCurrencies]
AS
SELECT     dbo.tblKartrisCurrencies.CUR_ID, dbo.tblKartrisLanguageElements.LE_LanguageID AS LANG_ID, dbo.tblKartrisLanguageElements.LE_Value AS CUR_Name, 
					  dbo.tblKartrisCurrencies.CUR_Symbol, dbo.tblKartrisCurrencies.CUR_ISOCode, dbo.tblKartrisCurrencies.CUR_ISOCodeNumeric, 
					  dbo.tblKartrisCurrencies.CUR_ExchangeRate, dbo.tblKartrisCurrencies.CUR_HasDecimals, dbo.tblKartrisCurrencies.CUR_Live, dbo.tblKartrisCurrencies.CUR_Format, 
					  dbo.tblKartrisCurrencies.CUR_IsoFormat, dbo.tblKartrisCurrencies.CUR_DecimalPoint, dbo.tblKartrisCurrencies.CUR_RoundNumbers, dbo.tblKartrisCurrencies.CUR_OrderNo
FROM         dbo.tblKartrisLanguageElements INNER JOIN
					  dbo.tblKartrisCurrencies ON dbo.tblKartrisLanguageElements.LE_ParentID = dbo.tblKartrisCurrencies.CUR_ID
WHERE     (dbo.tblKartrisLanguageElements.LE_TypeID = 13) AND (dbo.tblKartrisLanguageElements.LE_FieldID = 1) AND 
					  (dbo.tblKartrisLanguageElements.LE_Value IS NOT NULL)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
	  Begin PaneConfiguration = 0
		 NumPanes = 4
		 Configuration = "(H (1[40] 4[20] 2[20] 3) )"
	  End
	  Begin PaneConfiguration = 1
		 NumPanes = 3
		 Configuration = "(H (1 [50] 4 [25] 3))"
	  End
	  Begin PaneConfiguration = 2
		 NumPanes = 3
		 Configuration = "(H (1 [50] 2 [25] 3))"
	  End
	  Begin PaneConfiguration = 3
		 NumPanes = 3
		 Configuration = "(H (4 [30] 2 [40] 3))"
	  End
	  Begin PaneConfiguration = 4
		 NumPanes = 2
		 Configuration = "(H (1 [56] 3))"
	  End
	  Begin PaneConfiguration = 5
		 NumPanes = 2
		 Configuration = "(H (2 [66] 3))"
	  End
	  Begin PaneConfiguration = 6
		 NumPanes = 2
		 Configuration = "(H (4 [50] 3))"
	  End
	  Begin PaneConfiguration = 7
		 NumPanes = 1
		 Configuration = "(V (3))"
	  End
	  Begin PaneConfiguration = 8
		 NumPanes = 3
		 Configuration = "(H (1[56] 4[18] 2) )"
	  End
	  Begin PaneConfiguration = 9
		 NumPanes = 2
		 Configuration = "(H (1 [75] 4))"
	  End
	  Begin PaneConfiguration = 10
		 NumPanes = 2
		 Configuration = "(H (1[66] 2) )"
	  End
	  Begin PaneConfiguration = 11
		 NumPanes = 2
		 Configuration = "(H (4 [60] 2))"
	  End
	  Begin PaneConfiguration = 12
		 NumPanes = 1
		 Configuration = "(H (1) )"
	  End
	  Begin PaneConfiguration = 13
		 NumPanes = 1
		 Configuration = "(V (4))"
	  End
	  Begin PaneConfiguration = 14
		 NumPanes = 1
		 Configuration = "(V (2))"
	  End
	  ActivePaneConfig = 0
   End
   Begin DiagramPane = 
	  Begin Origin = 
		 Top = 0
		 Left = 0
	  End
	  Begin Tables = 
		 Begin Table = "tblKartrisLanguageElements"
			Begin Extent = 
			   Top = 6
			   Left = 38
			   Bottom = 123
			   Right = 202
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisCurrencies"
			Begin Extent = 
			   Top = 6
			   Left = 450
			   Bottom = 218
			   Right = 635
			End
			DisplayFlags = 280
			TopColumn = 6
		 End
	  End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
	  Begin ParameterDefaults = ""
	  End
	  Begin ColumnWidths = 13
		 Width = 284
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
	  End
   End
   Begin CriteriaPane = 
	  Begin ColumnWidths = 11
		 Column = 1440
		 Alias = 900
		 Table = 1170
		 Output = 720
		 Append = 1400
		 NewValue = 1170
		 SortType = 1350
		 SortOrder = 1410
		 GroupBy = 1350
		 Filter = 1350
		 Or = 1350
		 Or = 1350
		 Or = 1350
	  End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeCurrencies'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeCurrencies'
GO
/****** Object:  Table [dbo].[tblKartrisProductOptionLink]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisProductOptionLink](
	[P_OPT_OptionID] [int] NOT NULL,
	[P_OPT_ProductID] [int] NOT NULL,
	[P_OPT_OrderByValue] [smallint] NULL,
	[P_OPT_PriceChange] DECIMAL(18,4) NULL,
	[P_OPT_WeightChange] [real] NULL,
	[P_OPT_Selected] [bit] NOT NULL,
 CONSTRAINT [PK_tblKartrisProductOptionLink] PRIMARY KEY CLUSTERED 
(
	[P_OPT_OptionID] ASC,
	[P_OPT_ProductID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [OPT_ID] ON [dbo].[tblKartrisProductOptionLink] 
(
	[P_OPT_OptionID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [OPT_OptionGroupID] ON [dbo].[tblKartrisProductOptionLink] 
(
	[P_OPT_ProductID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisProductOptionGroupLink]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisProductOptionGroupLink](
	[P_OPTG_ProductID] [int] NOT NULL,
	[P_OPTG_OptionGroupID] [smallint] NOT NULL,
	[P_OPTG_OrderByValue] [smallint] NULL,
	[P_OPTG_MustSelected] [bit] NOT NULL,
 CONSTRAINT [PK_tblKartrisProductOptionGroupLink] PRIMARY KEY CLUSTERED 
(
	[P_OPTG_ProductID] ASC,
	[P_OPTG_OptionGroupID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [P_OPTG_OptionGroupID] ON [dbo].[tblKartrisProductOptionGroupLink] 
(
	[P_OPTG_OptionGroupID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [P_OPTG_ProductID] ON [dbo].[tblKartrisProductOptionGroupLink] 
(
	[P_OPTG_ProductID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisBasketOptionValues]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisBasketOptionValues](
	[BSKTOPT_ID] [bigint] IDENTITY(1,1) NOT NULL,
	[BSKTOPT_BasketValueID] [bigint] NULL,
	[BSKTOPT_OptionID] [int] NULL,
 CONSTRAINT [PK_tblKartrisBasketOptionValues] PRIMARY KEY CLUSTERED 
(
	[BSKTOPT_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisNews_Delete]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisNews_Delete]
(
	@N_ID as int
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DELETE FROM dbo.tblKartrisLanguageElements
	WHERE LE_TypeID = 16 AND LE_ParentID = @N_ID;



	DELETE FROM tblKartrisNews 
	WHERE N_ID = @N_ID;


END
GO
/****** Object:  View [dbo].[vKartrisLanguageElementsNames]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vKartrisLanguageElementsNames]
AS
SELECT     TOP (100) PERCENT dbo.tblKartrisLanguageElementTypes.LET_Name AS [Table], dbo.tblKartrisLanguageElements.LE_ParentID AS [Record ID], 
					  dbo.tblKartrisLanguageElementFieldNames.LEFN_Name AS [Field Related Name], dbo.tblKartrisLanguages.LANG_FrontName AS Language, 
					  dbo.tblKartrisLanguageElements.LE_Value AS Value
FROM         dbo.tblKartrisLanguageElements INNER JOIN
					  dbo.tblKartrisLanguages ON dbo.tblKartrisLanguageElements.LE_LanguageID = dbo.tblKartrisLanguages.LANG_ID INNER JOIN
					  dbo.tblKartrisLanguageElementTypes ON dbo.tblKartrisLanguageElements.LE_TypeID = dbo.tblKartrisLanguageElementTypes.LET_ID INNER JOIN
					  dbo.tblKartrisLanguageElementFieldNames ON dbo.tblKartrisLanguageElements.LE_FieldID = dbo.tblKartrisLanguageElementFieldNames.LEFN_ID
WHERE     (dbo.tblKartrisLanguageElements.LE_Value IS NOT NULL)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
	  Begin PaneConfiguration = 0
		 NumPanes = 4
		 Configuration = "(H (1[42] 4[26] 2[10] 3) )"
	  End
	  Begin PaneConfiguration = 1
		 NumPanes = 3
		 Configuration = "(H (1 [50] 4 [25] 3))"
	  End
	  Begin PaneConfiguration = 2
		 NumPanes = 3
		 Configuration = "(H (1 [50] 2 [25] 3))"
	  End
	  Begin PaneConfiguration = 3
		 NumPanes = 3
		 Configuration = "(H (4 [30] 2 [40] 3))"
	  End
	  Begin PaneConfiguration = 4
		 NumPanes = 2
		 Configuration = "(H (1 [56] 3))"
	  End
	  Begin PaneConfiguration = 5
		 NumPanes = 2
		 Configuration = "(H (2 [66] 3))"
	  End
	  Begin PaneConfiguration = 6
		 NumPanes = 2
		 Configuration = "(H (4 [50] 3))"
	  End
	  Begin PaneConfiguration = 7
		 NumPanes = 1
		 Configuration = "(V (3))"
	  End
	  Begin PaneConfiguration = 8
		 NumPanes = 3
		 Configuration = "(H (1[56] 4[18] 2) )"
	  End
	  Begin PaneConfiguration = 9
		 NumPanes = 2
		 Configuration = "(H (1 [75] 4))"
	  End
	  Begin PaneConfiguration = 10
		 NumPanes = 2
		 Configuration = "(H (1[66] 2) )"
	  End
	  Begin PaneConfiguration = 11
		 NumPanes = 2
		 Configuration = "(H (4 [60] 2))"
	  End
	  Begin PaneConfiguration = 12
		 NumPanes = 1
		 Configuration = "(H (1) )"
	  End
	  Begin PaneConfiguration = 13
		 NumPanes = 1
		 Configuration = "(V (4))"
	  End
	  Begin PaneConfiguration = 14
		 NumPanes = 1
		 Configuration = "(V (2))"
	  End
	  ActivePaneConfig = 0
   End
   Begin DiagramPane = 
	  Begin Origin = 
		 Top = 0
		 Left = 0
	  End
	  Begin Tables = 
		 Begin Table = "tblKartrisLanguageElements"
			Begin Extent = 
			   Top = 6
			   Left = 38
			   Bottom = 149
			   Right = 202
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisLanguages"
			Begin Extent = 
			   Top = 6
			   Left = 636
			   Bottom = 178
			   Right = 855
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisLanguageElementTypes"
			Begin Extent = 
			   Top = 102
			   Left = 237
			   Bottom = 208
			   Right = 481
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisLanguageElementFieldNames"
			Begin Extent = 
			   Top = 0
			   Left = 352
			   Bottom = 94
			   Right = 615
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
	  End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
	  Begin ParameterDefaults = ""
	  End
	  Begin ColumnWidths = 9
		 Width = 284
		 Width = 2070
		 Width = 1260
		 Width = 1740
		 Width = 1500
		 Width = 2430
		 Width = 1500
		 Width = 1500
		 Width = 1500
	  End
   End
   Begin CriteriaPane = 
	  Begin ColumnWidths = 11
		 Column = 2115
		 Alias = 1950
		 Table = 1170
		 Output = 720
		 Append = 1400
		 NewValue = 1170
		 SortType = 1350
		 SortOrder = 1410
		 GroupBy = 1350
		 Filter ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisLanguageElementsNames'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'= 1350
		 Or = 1350
		 Or = 1350
		 Or = 1350
	  End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisLanguageElementsNames'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisLanguageElementsNames'
GO
/****** Object:  View [dbo].[vKartrisLanguageElements]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vKartrisLanguageElements]
AS
SELECT     TOP (100) PERCENT LE_LanguageID, LE_TypeID, LE_FieldID, LE_ParentID, LE_Value
FROM         dbo.tblKartrisLanguageElements
WHERE     (LE_Value IS NOT NULL)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
	  Begin PaneConfiguration = 0
		 NumPanes = 4
		 Configuration = "(H (1[29] 4[31] 2[10] 3) )"
	  End
	  Begin PaneConfiguration = 1
		 NumPanes = 3
		 Configuration = "(H (1 [50] 4 [25] 3))"
	  End
	  Begin PaneConfiguration = 2
		 NumPanes = 3
		 Configuration = "(H (1 [50] 2 [25] 3))"
	  End
	  Begin PaneConfiguration = 3
		 NumPanes = 3
		 Configuration = "(H (4 [30] 2 [40] 3))"
	  End
	  Begin PaneConfiguration = 4
		 NumPanes = 2
		 Configuration = "(H (1 [56] 3))"
	  End
	  Begin PaneConfiguration = 5
		 NumPanes = 2
		 Configuration = "(H (2 [66] 3))"
	  End
	  Begin PaneConfiguration = 6
		 NumPanes = 2
		 Configuration = "(H (4 [50] 3))"
	  End
	  Begin PaneConfiguration = 7
		 NumPanes = 1
		 Configuration = "(V (3))"
	  End
	  Begin PaneConfiguration = 8
		 NumPanes = 3
		 Configuration = "(H (1[56] 4[18] 2) )"
	  End
	  Begin PaneConfiguration = 9
		 NumPanes = 2
		 Configuration = "(H (1 [75] 4))"
	  End
	  Begin PaneConfiguration = 10
		 NumPanes = 2
		 Configuration = "(H (1[66] 2) )"
	  End
	  Begin PaneConfiguration = 11
		 NumPanes = 2
		 Configuration = "(H (4 [60] 2))"
	  End
	  Begin PaneConfiguration = 12
		 NumPanes = 1
		 Configuration = "(H (1) )"
	  End
	  Begin PaneConfiguration = 13
		 NumPanes = 1
		 Configuration = "(V (4))"
	  End
	  Begin PaneConfiguration = 14
		 NumPanes = 1
		 Configuration = "(V (2))"
	  End
	  ActivePaneConfig = 0
   End
   Begin DiagramPane = 
	  Begin Origin = 
		 Top = 0
		 Left = 0
	  End
	  Begin Tables = 
		 Begin Table = "tblKartrisLanguageElements"
			Begin Extent = 
			   Top = 5
			   Left = 204
			   Bottom = 138
			   Right = 368
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
	  End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
	  Begin ParameterDefaults = ""
	  End
	  Begin ColumnWidths = 9
		 Width = 284
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1455
		 Width = 1500
		 Width = 1500
		 Width = 1500
	  End
   End
   Begin CriteriaPane = 
	  Begin ColumnWidths = 11
		 Column = 1440
		 Alias = 900
		 Table = 1170
		 Output = 720
		 Append = 1400
		 NewValue = 1170
		 SortType = 1350
		 SortOrder = 1410
		 GroupBy = 1350
		 Filter = 1350
		 Or = 1350
		 Or = 1350
		 Or = 1350
	  End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisLanguageElements'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisLanguageElements'
GO
/****** Object:  Table [dbo].[tblKartrisReviews]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblKartrisReviews](
	[REV_ID] [smallint] IDENTITY(1,1) NOT NULL,
	[REV_ProductID] [int] NULL,
	[REV_LanguageID] [tinyint] NULL,
	[REV_CustomerID] [int] NULL,
	[REV_Title] [nvarchar](60) NULL,
	[REV_Text] [nvarchar](4000) NULL,
	[REV_Rating] [tinyint] NULL,
	[REV_Name] [nvarchar](30) NULL,
	[REV_Email] [nvarchar](75) NULL,
	[REV_Location] [nvarchar](30) NULL,
	[REV_DateCreated] [smalldatetime] NULL,
	[REV_DateLastUpdated] [smalldatetime] NULL,
	[REV_Live] [char](1) NULL,
 CONSTRAINT [aaaaatblKartrisReviews_PK] PRIMARY KEY NONCLUSTERED 
(
	[REV_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE UNIQUE CLUSTERED INDEX [idxREV_ID] ON [dbo].[tblKartrisReviews] 
(
	[REV_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [REV_CustomerID] ON [dbo].[tblKartrisReviews] 
(
	[REV_CustomerID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [REV_ID] ON [dbo].[tblKartrisReviews] 
(
	[REV_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [REV_LanguageID] ON [dbo].[tblKartrisReviews] 
(
	[REV_LanguageID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [REV_ProductID] ON [dbo].[tblKartrisReviews] 
(
	[REV_ProductID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisRelatedProducts]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisRelatedProducts](
	[RP_ParentID] [int] NOT NULL,
	[RP_ChildID] [int] NOT NULL,
 CONSTRAINT [PK_tblKartrisRelatedProducts] PRIMARY KEY CLUSTERED 
(
	[RP_ParentID] ASC,
	[RP_ChildID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [RP_ChildID] ON [dbo].[tblKartrisRelatedProducts] 
(
	[RP_ChildID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [RP_ParentID] ON [dbo].[tblKartrisRelatedProducts] 
(
	[RP_ParentID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tblKartrisCategoryHierarchy]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisCategoryHierarchy](
	[CH_ParentID] [int] NOT NULL,
	[CH_ChildID] [int] NOT NULL,
	[CH_OrderNo] [smallint] NULL,
 CONSTRAINT [PK_tblKartrisCategoryHierarchy] PRIMARY KEY CLUSTERED 
(
	[CH_ParentID] ASC,
	[CH_ChildID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [CH_ParentCategoryID] ON [dbo].[tblKartrisCategoryHierarchy] 
(
	[CH_ParentID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  View [dbo].[vKartrisTypeAttributes]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vKartrisTypeAttributes]
AS
SELECT     dbo.tblKartrisAttributes.ATTRIB_ID, dbo.tblKartrisLanguageElements.LE_LanguageID AS LANG_ID, dbo.tblKartrisLanguageElements.LE_Value AS ATTRIB_Name, 
					  dbo.tblKartrisAttributes.ATTRIB_Type, dbo.tblKartrisAttributes.ATTRIB_Live, dbo.tblKartrisAttributes.ATTRIB_FastEntry, dbo.tblKartrisAttributes.ATTRIB_ShowFrontend, 
					  dbo.tblKartrisAttributes.ATTRIB_ShowSearch, dbo.tblKartrisAttributes.ATTRIB_OrderByValue, dbo.tblKartrisAttributes.ATTRIB_Compare, 
					  dbo.tblKartrisAttributes.ATTRIB_Special
FROM         dbo.tblKartrisLanguageElements INNER JOIN
					  dbo.tblKartrisAttributes ON dbo.tblKartrisLanguageElements.LE_ParentID = dbo.tblKartrisAttributes.ATTRIB_ID
WHERE     (dbo.tblKartrisLanguageElements.LE_TypeID = 4) AND (dbo.tblKartrisLanguageElements.LE_FieldID = 1) AND 
					  (dbo.tblKartrisLanguageElements.LE_Value IS NOT NULL)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
	  Begin PaneConfiguration = 0
		 NumPanes = 4
		 Configuration = "(H (1[41] 4[20] 2[12] 3) )"
	  End
	  Begin PaneConfiguration = 1
		 NumPanes = 3
		 Configuration = "(H (1 [50] 4 [25] 3))"
	  End
	  Begin PaneConfiguration = 2
		 NumPanes = 3
		 Configuration = "(H (1 [50] 2 [25] 3))"
	  End
	  Begin PaneConfiguration = 3
		 NumPanes = 3
		 Configuration = "(H (4 [30] 2 [40] 3))"
	  End
	  Begin PaneConfiguration = 4
		 NumPanes = 2
		 Configuration = "(H (1 [56] 3))"
	  End
	  Begin PaneConfiguration = 5
		 NumPanes = 2
		 Configuration = "(H (2 [66] 3))"
	  End
	  Begin PaneConfiguration = 6
		 NumPanes = 2
		 Configuration = "(H (4 [50] 3))"
	  End
	  Begin PaneConfiguration = 7
		 NumPanes = 1
		 Configuration = "(V (3))"
	  End
	  Begin PaneConfiguration = 8
		 NumPanes = 3
		 Configuration = "(H (1[56] 4[18] 2) )"
	  End
	  Begin PaneConfiguration = 9
		 NumPanes = 2
		 Configuration = "(H (1 [75] 4))"
	  End
	  Begin PaneConfiguration = 10
		 NumPanes = 2
		 Configuration = "(H (1[66] 2) )"
	  End
	  Begin PaneConfiguration = 11
		 NumPanes = 2
		 Configuration = "(H (4 [60] 2))"
	  End
	  Begin PaneConfiguration = 12
		 NumPanes = 1
		 Configuration = "(H (1) )"
	  End
	  Begin PaneConfiguration = 13
		 NumPanes = 1
		 Configuration = "(V (4))"
	  End
	  Begin PaneConfiguration = 14
		 NumPanes = 1
		 Configuration = "(V (2))"
	  End
	  ActivePaneConfig = 0
   End
   Begin DiagramPane = 
	  Begin Origin = 
		 Top = 0
		 Left = 0
	  End
	  Begin Tables = 
		 Begin Table = "tblKartrisLanguageElements"
			Begin Extent = 
			   Top = 6
			   Left = 277
			   Bottom = 140
			   Right = 460
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisAttributes"
			Begin Extent = 
			   Top = 6
			   Left = 38
			   Bottom = 199
			   Right = 239
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
	  End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
	  Begin ParameterDefaults = ""
	  End
	  Begin ColumnWidths = 13
		 Width = 284
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
	  End
   End
   Begin CriteriaPane = 
	  Begin ColumnWidths = 11
		 Column = 1440
		 Alias = 2445
		 Table = 2070
		 Output = 720
		 Append = 1400
		 NewValue = 1170
		 SortType = 1350
		 SortOrder = 1410
		 GroupBy = 1350
		 Filter = 1350
		 Or = 1350
		 Or = 1350
		 Or = 1350
	  End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeAttributes'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeAttributes'
GO
/****** Object:  View [dbo].[vKartrisTypeCategories]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vKartrisTypeCategories]
AS
SELECT     TOP (100) PERCENT dbo.tblKartrisCategories.CAT_ID, dbo.tblKartrisLanguages.LANG_ID, dbo.tblKartrisLanguageElements.LE_Value AS CAT_Name, 
					  tblKartrisLanguageElements_1.LE_Value AS CAT_Desc, tblKartrisLanguageElements_2.LE_Value AS CAT_PageTitle, dbo.tblKartrisCategories.CAT_Live, 
					  dbo.tblKartrisCategories.CAT_ProductDisplayType, dbo.tblKartrisCategories.CAT_SubCatDisplayType, dbo.tblKartrisCategories.CAT_OrderProductsBy, 
					  dbo.tblKartrisCategories.CAT_ProductsSortDirection, dbo.tblKartrisCategories.CAT_CustomerGroupID
FROM         dbo.tblKartrisCategories INNER JOIN
					  dbo.tblKartrisLanguageElements ON dbo.tblKartrisCategories.CAT_ID = dbo.tblKartrisLanguageElements.LE_ParentID INNER JOIN
					  dbo.tblKartrisLanguages ON dbo.tblKartrisLanguageElements.LE_LanguageID = dbo.tblKartrisLanguages.LANG_ID INNER JOIN
					  dbo.tblKartrisLanguageElements AS tblKartrisLanguageElements_1 ON dbo.tblKartrisLanguages.LANG_ID = tblKartrisLanguageElements_1.LE_LanguageID AND 
					  dbo.tblKartrisCategories.CAT_ID = tblKartrisLanguageElements_1.LE_ParentID INNER JOIN
					  dbo.tblKartrisLanguageElements AS tblKartrisLanguageElements_2 ON dbo.tblKartrisLanguages.LANG_ID = tblKartrisLanguageElements_2.LE_LanguageID AND 
					  dbo.tblKartrisCategories.CAT_ID = tblKartrisLanguageElements_2.LE_ParentID
WHERE     (dbo.tblKartrisLanguageElements.LE_TypeID = 3) AND (dbo.tblKartrisLanguageElements.LE_FieldID = 1) AND (tblKartrisLanguageElements_1.LE_TypeID = 3) AND 
					  (tblKartrisLanguageElements_1.LE_FieldID = 2) AND (dbo.tblKartrisLanguageElements.LE_Value IS NOT NULL) AND (tblKartrisLanguageElements_2.LE_TypeID = 3) 
					  AND (tblKartrisLanguageElements_2.LE_FieldID = 3) OR
					  (dbo.tblKartrisLanguageElements.LE_TypeID = 3) AND (dbo.tblKartrisLanguageElements.LE_FieldID = 1) AND (tblKartrisLanguageElements_1.LE_TypeID = 3) AND 
					  (tblKartrisLanguageElements_1.LE_FieldID = 2) AND (tblKartrisLanguageElements_1.LE_Value IS NOT NULL) AND (tblKartrisLanguageElements_2.LE_TypeID = 3) 
					  AND (tblKartrisLanguageElements_2.LE_FieldID = 3) OR
					  (dbo.tblKartrisLanguageElements.LE_TypeID = 3) AND (dbo.tblKartrisLanguageElements.LE_FieldID = 1) AND (tblKartrisLanguageElements_1.LE_TypeID = 3) AND 
					  (tblKartrisLanguageElements_1.LE_FieldID = 2) AND (tblKartrisLanguageElements_2.LE_Value IS NOT NULL) AND (tblKartrisLanguageElements_2.LE_TypeID = 3) 
					  AND (tblKartrisLanguageElements_2.LE_FieldID = 3)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
	  Begin PaneConfiguration = 0
		 NumPanes = 4
		 Configuration = "(H (1[40] 4[20] 2[20] 3) )"
	  End
	  Begin PaneConfiguration = 1
		 NumPanes = 3
		 Configuration = "(H (1[36] 4[44] 3) )"
	  End
	  Begin PaneConfiguration = 2
		 NumPanes = 3
		 Configuration = "(H (1 [50] 2 [25] 3))"
	  End
	  Begin PaneConfiguration = 3
		 NumPanes = 3
		 Configuration = "(H (4 [30] 2 [40] 3))"
	  End
	  Begin PaneConfiguration = 4
		 NumPanes = 2
		 Configuration = "(H (1 [56] 3))"
	  End
	  Begin PaneConfiguration = 5
		 NumPanes = 2
		 Configuration = "(H (2 [66] 3))"
	  End
	  Begin PaneConfiguration = 6
		 NumPanes = 2
		 Configuration = "(H (4 [50] 3))"
	  End
	  Begin PaneConfiguration = 7
		 NumPanes = 1
		 Configuration = "(V (3))"
	  End
	  Begin PaneConfiguration = 8
		 NumPanes = 3
		 Configuration = "(H (1[56] 4[18] 2) )"
	  End
	  Begin PaneConfiguration = 9
		 NumPanes = 2
		 Configuration = "(H (1 [75] 4))"
	  End
	  Begin PaneConfiguration = 10
		 NumPanes = 2
		 Configuration = "(H (1[66] 2) )"
	  End
	  Begin PaneConfiguration = 11
		 NumPanes = 2
		 Configuration = "(H (4 [60] 2))"
	  End
	  Begin PaneConfiguration = 12
		 NumPanes = 1
		 Configuration = "(H (1) )"
	  End
	  Begin PaneConfiguration = 13
		 NumPanes = 1
		 Configuration = "(V (4))"
	  End
	  Begin PaneConfiguration = 14
		 NumPanes = 1
		 Configuration = "(V (2))"
	  End
	  ActivePaneConfig = 1
   End
   Begin DiagramPane = 
	  Begin Origin = 
		 Top = 0
		 Left = 0
	  End
	  Begin Tables = 
		 Begin Table = "tblKartrisCategories"
			Begin Extent = 
			   Top = 102
			   Left = 304
			   Bottom = 250
			   Right = 514
			End
			DisplayFlags = 280
			TopColumn = 2
		 End
		 Begin Table = "tblKartrisLanguageElements"
			Begin Extent = 
			   Top = 17
			   Left = 21
			   Bottom = 153
			   Right = 236
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisLanguages"
			Begin Extent = 
			   Top = 0
			   Left = 302
			   Bottom = 101
			   Right = 521
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisLanguageElements_1"
			Begin Extent = 
			   Top = 0
			   Left = 587
			   Bottom = 136
			   Right = 751
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisLanguageElements_2"
			Begin Extent = 
			   Top = 158
			   Left = 686
			   Bottom = 295
			   Right = 900
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
	  End
   End
   Begin SQLPane = 
	  PaneHidden = 
   End
   Begin DataPane = 
	  Begin ParameterDefaults = ""
	  End
	  Begin ColumnWidths = 14
		 Width = 284
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 3345
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeCategories'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'         Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
	  End
   End
   Begin CriteriaPane = 
	  Begin ColumnWidths = 11
		 Column = 3750
		 Alias = 1620
		 Table = 3120
		 Output = 720
		 Append = 1400
		 NewValue = 1170
		 SortType = 1350
		 SortOrder = 1410
		 GroupBy = 1350
		 Filter = 1350
		 Or = 1350
		 Or = 1350
		 Or = 1350
	  End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeCategories'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeCategories'
GO
/****** Object:  View [dbo].[vKartrisTypeAttributeValues]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vKartrisTypeAttributeValues]
AS
SELECT     dbo.tblKartrisAttributeValues.ATTRIBV_ID, dbo.tblKartrisLanguageElements.LE_LanguageID AS LANG_ID, 
					  dbo.tblKartrisLanguageElements.LE_Value AS ATTRIBV_Value, dbo.tblKartrisAttributeValues.ATTRIBV_ProductID, 
					  dbo.tblKartrisAttributeValues.ATTRIBV_AttributeID
FROM         dbo.tblKartrisLanguageElements INNER JOIN
					  dbo.tblKartrisAttributeValues ON dbo.tblKartrisLanguageElements.LE_ParentID = dbo.tblKartrisAttributeValues.ATTRIBV_ID
WHERE     (dbo.tblKartrisLanguageElements.LE_TypeID = 14) AND (dbo.tblKartrisLanguageElements.LE_FieldID = 1) AND 
					  (dbo.tblKartrisLanguageElements.LE_Value IS NOT NULL)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
	  Begin PaneConfiguration = 0
		 NumPanes = 4
		 Configuration = "(H (1[40] 4[20] 2[20] 3) )"
	  End
	  Begin PaneConfiguration = 1
		 NumPanes = 3
		 Configuration = "(H (1 [50] 4 [25] 3))"
	  End
	  Begin PaneConfiguration = 2
		 NumPanes = 3
		 Configuration = "(H (1 [50] 2 [25] 3))"
	  End
	  Begin PaneConfiguration = 3
		 NumPanes = 3
		 Configuration = "(H (4 [30] 2 [40] 3))"
	  End
	  Begin PaneConfiguration = 4
		 NumPanes = 2
		 Configuration = "(H (1 [56] 3))"
	  End
	  Begin PaneConfiguration = 5
		 NumPanes = 2
		 Configuration = "(H (2 [66] 3))"
	  End
	  Begin PaneConfiguration = 6
		 NumPanes = 2
		 Configuration = "(H (4 [50] 3))"
	  End
	  Begin PaneConfiguration = 7
		 NumPanes = 1
		 Configuration = "(V (3))"
	  End
	  Begin PaneConfiguration = 8
		 NumPanes = 3
		 Configuration = "(H (1[56] 4[18] 2) )"
	  End
	  Begin PaneConfiguration = 9
		 NumPanes = 2
		 Configuration = "(H (1 [75] 4))"
	  End
	  Begin PaneConfiguration = 10
		 NumPanes = 2
		 Configuration = "(H (1[66] 2) )"
	  End
	  Begin PaneConfiguration = 11
		 NumPanes = 2
		 Configuration = "(H (4 [60] 2))"
	  End
	  Begin PaneConfiguration = 12
		 NumPanes = 1
		 Configuration = "(H (1) )"
	  End
	  Begin PaneConfiguration = 13
		 NumPanes = 1
		 Configuration = "(V (4))"
	  End
	  Begin PaneConfiguration = 14
		 NumPanes = 1
		 Configuration = "(V (2))"
	  End
	  ActivePaneConfig = 0
   End
   Begin DiagramPane = 
	  Begin Origin = 
		 Top = 0
		 Left = 0
	  End
	  Begin Tables = 
		 Begin Table = "tblKartrisLanguageElements"
			Begin Extent = 
			   Top = 6
			   Left = 38
			   Bottom = 138
			   Right = 224
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisAttributeValues"
			Begin Extent = 
			   Top = 6
			   Left = 262
			   Bottom = 120
			   Right = 453
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
	  End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
	  Begin ParameterDefaults = ""
	  End
	  Begin ColumnWidths = 9
		 Width = 284
		 Width = 1500
		 Width = 1500
		 Width = 2430
		 Width = 1890
		 Width = 1875
		 Width = 1500
		 Width = 1500
		 Width = 1500
	  End
   End
   Begin CriteriaPane = 
	  Begin ColumnWidths = 11
		 Column = 1440
		 Alias = 1530
		 Table = 1170
		 Output = 720
		 Append = 1400
		 NewValue = 1170
		 SortType = 1350
		 SortOrder = 1410
		 GroupBy = 1350
		 Filter = 1350
		 Or = 1350
		 Or = 1350
		 Or = 1350
	  End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeAttributeValues'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeAttributeValues'
GO
/****** Object:  View [dbo].[vKartrisTypeVersions]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vKartrisTypeVersions]
AS
SELECT     TOP (100) PERCENT dbo.tblKartrisVersions.V_ID, dbo.tblKartrisLanguages.LANG_ID, dbo.tblKartrisLanguageElements.LE_Value AS V_Name, 
					  tblKartrisLanguageElements_1.LE_Value AS V_Desc, dbo.tblKartrisVersions.V_CodeNumber, dbo.fnKartrisObjectConfig_GetValueByParent(N'K:version.extrasku', 
					  dbo.tblKartrisVersions.V_ID) AS V_ExtraCodeNumber, dbo.tblKartrisVersions.V_ProductID, dbo.tblKartrisVersions.V_Price, 
					  dbo.tblKartrisVersions.V_Tax, dbo.tblKartrisVersions.V_Weight, dbo.tblKartrisVersions.V_DeliveryTime, dbo.tblKartrisVersions.V_Quantity, 
					  dbo.tblKartrisVersions.V_QuantityWarnLevel, dbo.tblKartrisVersions.V_Live, dbo.tblKartrisVersions.V_DownLoadInfo, dbo.tblKartrisVersions.V_DownloadType, 
					  dbo.tblKartrisVersions.V_OrderByValue, dbo.tblKartrisVersions.V_RRP, dbo.tblKartrisVersions.V_Type, dbo.tblKartrisVersions.V_CustomerGroupID, 
					  dbo.tblKartrisVersions.V_CustomizationType, dbo.tblKartrisVersions.V_CustomizationDesc, dbo.tblKartrisVersions.V_CustomizationCost, 
					  dbo.tblKartrisVersions.V_Tax2, dbo.tblKartrisVersions.V_TaxExtra
FROM         dbo.tblKartrisLanguageElements INNER JOIN
					  dbo.tblKartrisVersions ON dbo.tblKartrisLanguageElements.LE_ParentID = dbo.tblKartrisVersions.V_ID INNER JOIN
					  dbo.tblKartrisLanguageElements AS tblKartrisLanguageElements_1 ON dbo.tblKartrisVersions.V_ID = tblKartrisLanguageElements_1.LE_ParentID INNER JOIN
					  dbo.tblKartrisLanguages ON dbo.tblKartrisLanguageElements.LE_LanguageID = dbo.tblKartrisLanguages.LANG_ID AND 
					  tblKartrisLanguageElements_1.LE_LanguageID = dbo.tblKartrisLanguages.LANG_ID
WHERE        (dbo.tblKartrisLanguageElements.LE_FieldID = 1) AND (tblKartrisLanguageElements_1.LE_FieldID = 2) AND (dbo.tblKartrisLanguageElements.LE_Value IS NOT NULL) AND 
						 (dbo.tblKartrisLanguageElements.LE_TypeID = 1) AND (tblKartrisLanguageElements_1.LE_TypeID = 1) OR
						 (dbo.tblKartrisLanguageElements.LE_FieldID = 1) AND (tblKartrisLanguageElements_1.LE_FieldID = 2) AND (dbo.tblKartrisLanguageElements.LE_TypeID = 1) AND (tblKartrisLanguageElements_1.LE_TypeID = 1) 
						 AND (tblKartrisLanguageElements_1.LE_Value IS NOT NULL)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
	  Begin PaneConfiguration = 0
		 NumPanes = 4
		 Configuration = "(H (1[22] 4[43] 2[6] 3) )"
	  End
	  Begin PaneConfiguration = 1
		 NumPanes = 3
		 Configuration = "(H (1[50] 4[25] 3) )"
	  End
	  Begin PaneConfiguration = 2
		 NumPanes = 3
		 Configuration = "(H (1[50] 2[25] 3) )"
	  End
	  Begin PaneConfiguration = 3
		 NumPanes = 3
		 Configuration = "(H (4[30] 2[27] 3) )"
	  End
	  Begin PaneConfiguration = 4
		 NumPanes = 2
		 Configuration = "(H (1[31] 3) )"
	  End
	  Begin PaneConfiguration = 5
		 NumPanes = 2
		 Configuration = "(H (2 [66] 3))"
	  End
	  Begin PaneConfiguration = 6
		 NumPanes = 2
		 Configuration = "(H (4[50] 3) )"
	  End
	  Begin PaneConfiguration = 7
		 NumPanes = 1
		 Configuration = "(V (3) )"
	  End
	  Begin PaneConfiguration = 8
		 NumPanes = 3
		 Configuration = "(H (1[56] 4[18] 2) )"
	  End
	  Begin PaneConfiguration = 9
		 NumPanes = 2
		 Configuration = "(H (1 [75] 4))"
	  End
	  Begin PaneConfiguration = 10
		 NumPanes = 2
		 Configuration = "(H (1[66] 2) )"
	  End
	  Begin PaneConfiguration = 11
		 NumPanes = 2
		 Configuration = "(H (4 [60] 2))"
	  End
	  Begin PaneConfiguration = 12
		 NumPanes = 1
		 Configuration = "(H (1) )"
	  End
	  Begin PaneConfiguration = 13
		 NumPanes = 1
		 Configuration = "(V (4))"
	  End
	  Begin PaneConfiguration = 14
		 NumPanes = 1
		 Configuration = "(V (2))"
	  End
	  ActivePaneConfig = 0
   End
   Begin DiagramPane = 
	  Begin Origin = 
		 Top = 0
		 Left = 0
	  End
	  Begin Tables = 
		 Begin Table = "tblKartrisLanguageElements"
			Begin Extent = 
			   Top = 6
			   Left = 45
			   Bottom = 147
			   Right = 209
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisVersions"
			Begin Extent = 
			   Top = 112
			   Left = 352
			   Bottom = 229
			   Right = 546
			End
			DisplayFlags = 280
			TopColumn = 15
		 End
		 Begin Table = "tblKartrisLanguageElements_1"
			Begin Extent = 
			   Top = 6
			   Left = 662
			   Bottom = 147
			   Right = 826
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisLanguages"
			Begin Extent = 
			   Top = 0
			   Left = 336
			   Bottom = 117
			   Right = 555
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
	  End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
	  Begin ParameterDefaults = ""
	  End
	  Begin ColumnWidths = 21
		 Width = 284
		 Width = 1560
		 Width = 1620
		 Width = 2775
		 Width = 2460
		 Width = 2055
		 Width = 1500
		 Width = 2370
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
	  End
   End
   Begin CriteriaPane = 
	  Begin' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeVersions'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N' ColumnWidths = 11
		 Column = 2400
		 Alias = 1605
		 Table = 2460
		 Output = 720
		 Append = 1400
		 NewValue = 1170
		 SortType = 900
		 SortOrder = 975
		 GroupBy = 1350
		 Filter = 1200
		 Or = 1485
		 Or = 1170
		 Or = 1350
		 Or = 1350
	  End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeVersions'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisTypeVersions'
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPages_GetByID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisPages_GetByID]
(
	@LANG_ID as tinyint,
	@Page_ID as smallint
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	-- Insert statements for procedure here
	SELECT *
	FROM dbo.vKartrisTypePages
	WHERE LANG_ID = @LANG_ID AND Page_ID = @Page_ID

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPages_Get]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisPages_Get]
(
	@LANG_ID as tinyint
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	-- Insert statements for procedure here
	SELECT * 
	FROM dbo.vKartrisTypePages
	WHERE LANG_ID = @LANG_ID
END
GO
/****** Object:  Table [dbo].[tblKartrisCustomerGroupPrices]    Script Date: 01/23/2013 21:59:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisCustomerGroupPrices](
	[CGP_ID] [int] IDENTITY(1,1) NOT NULL,
	[CGP_CustomerGroupID] [smallint] NULL,
	[CGP_VersionID] [bigint] NULL,
	[CGP_Price] DECIMAL(18,4) NULL,
 CONSTRAINT [aaaaatblKartrisCustomerGroupPrices_PK] PRIMARY KEY NONCLUSTERED 
(
	[CGP_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE UNIQUE CLUSTERED INDEX [idxCGP_ID] ON [dbo].[tblKartrisCustomerGroupPrices] 
(
	[CGP_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [CGP_CustomerGroupID] ON [dbo].[tblKartrisCustomerGroupPrices] 
(
	[CGP_CustomerGroupID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [CGP_ID] ON [dbo].[tblKartrisCustomerGroupPrices] 
(
	[CGP_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [CGP_VersionID] ON [dbo].[tblKartrisCustomerGroupPrices] 
(
	[CGP_VersionID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  UserDefinedFunction [dbo].[fnKartrisVersions_GetProductID]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnKartrisVersions_GetProductID] 
(
	-- Add the parameters for the function here
	@V_ID as bigint
)
RETURNS int
AS
BEGIN
	-- Declare the return variable here
	DECLARE @Result int;

	-- Add the T-SQL statements to compute the return value here
	SELECT @Result = V_ProductID FROM tblKartrisVersions WHERE V_ID = @V_ID;

	-- Return the result of the function
	RETURN @Result

END
GO
/****** Object:  Table [dbo].[tblKartrisVersionOptionLink]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblKartrisVersionOptionLink](
	[V_OPT_VersionID] [bigint] NOT NULL,
	[V_OPT_OptionID] [int] NOT NULL,
 CONSTRAINT [PK_tblKartrisVersionOptionLink] PRIMARY KEY CLUSTERED 
(
	[V_OPT_VersionID] ASC,
	[V_OPT_OptionID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [V_OPT_OptionID] ON [dbo].[tblKartrisVersionOptionLink] 
(
	[V_OPT_VersionID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisNews_GetForCache]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisNews_GetForCache]

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	-- Insert statements for procedure here
	SELECT * 
	FROM dbo.vKartrisTypeNews
	ORDER BY N_DateCreated DESC, N_ID ASC
END
GO
/****** Object:  UserDefinedFunction [dbo].[fnKartrisVersions_GetCodeNumber]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnKartrisVersions_GetCodeNumber] 
(
	-- Add the parameters for the function here
	@V_ID as bigint
)
RETURNS nvarchar(25)
AS
BEGIN
	-- Declare the return variable here
	DECLARE @Result nvarchar(25);

	-- Add the T-SQL statements to compute the return value here
	SELECT @Result = V_CodeNumber FROM tblKartrisVersions WHERE V_ID = @V_ID;

	-- Return the result of the function
	RETURN @Result

END
GO
/****** Object:  UserDefinedFunction [dbo].[fnKartrisProduct_GetMinPrice]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnKartrisProduct_GetMinPrice] 
(
	-- Add the parameters for the function here
	@V_ProductID as int
	
)
RETURNS real
AS
BEGIN
	-- Declare the return variable here
	DECLARE @Result real;

	-- Add the T-SQL statements to compute the return value here
	SELECT @Result = Min(V_Price) FROM tblKartrisVersions WHERE V_ProductID = @V_ProductID AND V_Live = 1 AND tblKartrisVersions.V_CustomerGroupID IS NULL;
	
	DECLARE @QD_MinPrice as real;
	SELECT @QD_MinPrice = Min(QD_Price)
	FROM dbo.tblKartrisQuantityDiscounts INNER JOIN tblKartrisVersions 
		ON tblKartrisQuantityDiscounts.QD_VersionID = tblKartrisVersions.V_ID
	WHERE tblKartrisVersions.V_Live = 1 AND tblKartrisVersions.V_ProductID = @V_ProductID AND tblKartrisVersions.V_CustomerGroupID IS NULL;

	IF @QD_MinPrice <> 0 AND @QD_MinPrice IS NOT NULL AND @QD_MinPrice < @Result
	BEGIN
		SET @Result = @QD_MinPrice
	END

	IF @Result IS NULL
	BEGIN
		SET @Result = 0;
	END
	-- Return the result of the function
	RETURN @Result

END
GO
/****** Object:  UserDefinedFunction [dbo].[fnKartrisLanguageElement_GetProductID]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnKartrisLanguageElement_GetProductID] 
(
	-- Add the parameters for the function here
	@LE_TypeID as tinyint,
	@LE_ParentID as int
	
)
RETURNS int
AS
BEGIN
	-- Declare the return variable here
	DECLARE @Result int;
	SET @Result = 0;
	
	IF @LE_TypeID = 1	BEGIN SELECT @Result = V_ProductID FROM tblKartrisVersions WHERE V_ID = @LE_ParentID; END
	IF @LE_TypeID = 2	BEGIN SET @Result = @LE_ParentID; END
	IF @LE_TypeID = 14	BEGIN SELECT @Result = ATTRIBV_ProductID FROM tblKartrisAttributeValues WHERE ATTRIBV_ID = @LE_ParentID; END
	
	-- Return the result of the function
	RETURN @Result

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisStatistics_GetProductStatsDetailsByDate]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisStatistics_GetProductStatsDetailsByDate]
(
	@ProductID as int,
	@Month as int,
	@Year as int,
	@LANG_ID as tinyint
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT     COUNT(ST_ID) AS NoOfHits, 
	ST_ItemParentID AS CategoryID, dbo.fnKartrisLanguageElement_GetItemValue(@LANG_ID, 3, 1, ST_ItemParentID) AS CategoryName
	FROM         tblKartrisStatistics
	WHERE     (ST_Type = 'P') AND (ST_ItemID = @ProductID) AND
				(MONTH(ST_Date) = @Month) AND (YEAR(ST_Date) = @Year)
	GROUP BY ST_ItemID, ST_ItemParentID
	ORDER BY NoOfHits DESC

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisStatistics_GetProductStatsByDate]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisStatistics_GetProductStatsByDate]
(
	@Month as int,
	@Year as int,
	@LANG_ID as tinyint
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT     COUNT(ST_ID) AS NoOfHits, ST_ItemID AS ProductID,	
			dbo.fnKartrisLanguageElement_GetItemValue(@LANG_ID, 2, 1, ST_ItemID) AS ProductName
	FROM         tblKartrisStatistics
	WHERE     (ST_Type = 'P') AND (MONTH(ST_Date) = @Month) AND (YEAR(ST_Date) = @Year)
	GROUP BY ST_ItemID
	ORDER BY NoOfHits DESC
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisStatistics_GetCategoryStatsByDate]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisStatistics_GetCategoryStatsByDate]
(
	@Month as int,
	@Year as int,
	@LANG_ID as tinyint
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT     COUNT(ST_ID) AS NoOfHits, ST_ItemID AS CategoryID,	
			dbo.fnKartrisLanguageElement_GetItemValue(@LANG_ID, 3, 1, ST_ItemID) AS CategoryName
	FROM         tblKartrisStatistics
	WHERE     (ST_Type = 'C') AND (MONTH(ST_Date) = @Month) AND (YEAR(ST_Date) = @Year)
	GROUP BY ST_ItemID
	ORDER BY NoOfHits DESC
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisShippingZones_Get]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisShippingZones_Get]
(
	@LANG_ID tinyint
)
AS
	SET NOCOUNT ON;
SELECT        SZ_ID, LANG_ID, SZ_Name, SZ_Live, SZ_OrderByValue
FROM            vKartrisTypeShippingZones
WHERE        (LANG_ID = @LANG_ID)
ORDER BY SZ_OrderByValue
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_SearchVersionsByCode]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_SearchVersionsByCode]
(
	@Key as nvarchar(50)
)
AS
	SET NOCOUNT ON;
SELECT        V_ID, V_CodeNumber
FROM            dbo.tblKartrisVersions
WHERE        V_Type <> 's' AND V_CodeNumber LIKE '%' + @Key + '%'
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_MarkupPrices]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: 26th, June 2011
-- Description:	Mark up/down versions' prices
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_MarkupPrices]
(
	@List as nvarchar(max),
	@Target as nvarchar(5)
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	-- Insert statements for procedure here
	
	DECLARE @Pos int, @Pos2 int, @Pos3 int, @Item nvarchar(max), @ID nvarchar(50),@QTY nvarchar(10), @Price nvarchar(50)
	SET @List = LTRIM(RTRIM(@List))+ ';'    
	SET @Pos = CHARINDEX(';', @List, 1)    
	IF REPLACE(@List, ';', '') <> '' BEGIN        
		WHILE @Pos > 0 BEGIN 
			SET @Item = LTRIM(RTRIM(LEFT(@List, @Pos - 1)))                
			IF @Item <> '' BEGIN
				SET @Pos2 = CHARINDEX('#', @Item, 1)
				IF @Pos2 > 0 BEGIN
					SET @ID = LTRIM(RTRIM(LEFT(@Item, @Pos2 - 1)))
					SET @Price = REPLACE(@Item, @ID + '#', '')
					--PRINT 'ID:' + @ID + '    Price:' + @Price;					
					IF LOWER(@Target) = 'price' BEGIN
						UPDATE dbo.tblKartrisVersions
						SET V_Price = CAST(@Price as DECIMAL(18,4))
						WHERE V_ID = CAST(@ID as bigint);
					END
					IF LOWER(@Target) = 'rrp' BEGIN
						UPDATE dbo.tblKartrisVersions
						SET V_RRP = CAST(@Price as DECIMAL(18,4))
						WHERE V_ID = CAST(@ID as bigint);
					END
					IF LOWER(@Target) = 'qd' BEGIN
						SET @Pos3 = CHARINDEX(',', @ID, 1)
						SET @QTY = LTRIM(RTRIM(SUBSTRING(@ID,@Pos3+1,10)))
						print @QTY
						SET @ID = LTRIM(RTRIM(REPLACE(@ID, ',' + @QTY,'')))
						print @ID
						UPDATE dbo.tblKartrisQuantityDiscounts
						SET QD_Price = CAST(@Price as DECIMAL(18,4))
						WHERE QD_VersionID = CAST(@ID as bigint) AND QD_Quantity= CAST(@QTY as real);
					END
				END
			END                
			SET @List = RIGHT(@List, LEN(@List) - @Pos)                
			SET @Pos = CHARINDEX(';', @List, 1)        
		END    
	END;
	
	
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_GetTotalByProductID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	replaces [spKartris_VER_SelectByP_ID]
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_GetTotalByProductID](@P_ID as int)
AS
BEGIN

	SELECT Count(V_ID) AS TotalVersions
	FROM dbo.tblKartrisVersions
	WHERE V_ProductID = @P_ID;
				
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_UpdateCombinationVersion]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	Updates a specific combination version
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_UpdateCombinationVersion]
(
	@ID as bigint,
	@Name as nvarchar(50), 
	@CodeNumber as nvarchar(50),
	@Price as real,
	@StockQty as real,
	@QtyWarnLevel as real,
	@Live as bit,
	@V_BulkUpdateTimeStamp as datetime = NULL
)
AS
BEGIN
	SET NOCOUNT ON;
	
	UPDATE tblKartrisVersions
	SET V_CodeNumber = @CodeNumber, V_Price = @Price, V_Quantity = @StockQty, V_QuantityWarnLevel = @QtyWarnLevel, V_Live = @Live,
	V_BulkUpdateTimeStamp = Coalesce(@V_BulkUpdateTimeStamp, GetDate())
	WHERE V_ID = @ID;

	
	UPDATE tblKartrisLanguageElements
	SET LE_Value = @Name
	WHERE LE_TypeID = 1 AND LE_FieldID = 1 AND LE_ParentID = @ID;
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_UpdateCombinationsFromBasicInfo]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	Updates a specific combination version
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_UpdateCombinationsFromBasicInfo]
(
	@ProductID as int,
	@Price as real, 
	@Tax as tinyint,
	@Tax2 as tinyint,
	@TaxExtra as nvarchar(50),
	@Weight as real,
	@RRP as real
)
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @DownloadInfo as nvarchar(255), @DownloadType as nvarchar(50);
	SELECT @DownloadInfo = [V_DownLoadInfo], @DownloadType = [V_DownloadType]
	FROM [dbo].[tblKartrisVersions]
	WHERE [V_ProductID] = @ProductID AND [V_Type] = 'b';
	
	UPDATE tblKartrisVersions
	SET V_Price = @Price, V_Tax = @Tax, V_Weight = @Weight, V_RRP = @RRP, V_Tax2 = @Tax2, V_TaxExtra = @TaxExtra,
		V_DownLoadInfo = @DownloadInfo, V_DownloadType = @DownloadType
	WHERE V_ProductID = @ProductID AND (V_Type = 'c' OR V_Type = 's');
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_Update]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_Update]
(
	@V_ID as bigint,
	@V_CodeNumber as nvarchar(25),
	@V_ProductID as int,
	@V_Price as DECIMAL(18,4),
	@V_Tax as tinyint,
	@V_Weight as real,
	@V_DeliveryTime as tinyint,
	@V_Quantity as real,
	@V_QuantityWarnLevel as real,
	@V_Live as bit,
	@V_DownLoadInfo as nvarchar(255),
	@V_DownloadType as nvarchar(50),
	@V_RRP as DECIMAL(18,4),
	@V_Type as char(1),
	@V_CustomerGroupID as smallint,
	@V_CustomizationType as char(1),
	@V_CustomizationDesc as nvarchar(255),
	@V_CustomizationCost as DECIMAL(18,4),
	@V_Tax2 as tinyint,
	@V_TaxExtra as nvarchar(255),
	@V_BulkUpdateTimeStamp as datetime = NULL
)
								
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE tblKartrisVersions
	SET V_CodeNumber = @V_CodeNumber, V_ProductID = @V_ProductID, V_Price = @V_Price, V_Tax = @V_Tax, V_Weight = @V_Weight, 
		V_DeliveryTime = @V_DeliveryTime, V_Quantity = @V_Quantity, V_QuantityWarnLevel = @V_QuantityWarnLevel, 
		V_Live = @V_Live, V_DownLoadInfo = @V_DownLoadInfo, V_DownloadType = @V_DownloadType,
		V_RRP = @V_RRP, V_Type = @V_Type, V_CustomerGroupID = @V_CustomerGroupID, V_CustomizationType = @V_CustomizationType,
		V_CustomizationDesc = @V_CustomizationDesc, V_CustomizationCost = @V_CustomizationCost, 
		V_Tax2 = @V_Tax2, V_TaxExtra = @V_TaxExtra,
		V_BulkUpdateTimeStamp = Coalesce(@V_BulkUpdateTimeStamp, GetDate())
	WHERE V_ID = @V_ID;
	
	IF @V_Type = 'b' BEGIN
		UPDATE tblKartrisVersions
		SET V_DownLoadInfo = @V_DownLoadInfo, V_DownloadType = @V_DownloadType
		WHERE V_ProductID = @V_ProductID AND V_Type = 'c';
	END

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_SuspendProductVersions]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	Used in the OptionsBLL in the "_SuspendProductVersions" Function.
--					Transactional Usage.
-- Back/Front : Back-End
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_SuspendProductVersions](@P_ID as int)
AS
BEGIN
	SET NOCOUNT ON;
	
	UPDATE		tblKartrisVersions
	SET			V_Type = 's'
	WHERE		(V_ProductID = @P_ID) AND (V_Type = 'c');
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_SetBaseByProduct]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisVersions_SetBaseByProduct]
(
	@ProductID as int
)								
AS
BEGIN
	
	SET NOCOUNT ON;
	
	UPDATE tblKartrisVersions
	SET  V_Type = 'b'
	WHERE V_ProductID = @ProductID;
	
	

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_GetByID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_GetByID](@V_ID as bigint)
AS
BEGIN
	SET NOCOUNT ON;

	SELECT * FROM tblKartrisVersions WHERE V_ID = @V_ID;
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_GetByCodeNumber]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	Checking if the code number is already in use.
-- Back/Front : Back-End
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_GetByCodeNumber]
(
	@V_CodeNumber as nvarchar(50),
	@Execluded_ProductID as int,
	@Excluded_V_ID as bigint
)
AS
BEGIN
	SET NOCOUNT ON;

	SELECT V_ID 
	FROM tblKartrisVersions 
	WHERE (V_ID <> @Excluded_V_ID) AND (V_ProductID <> @Execluded_ProductID) AND (V_CodeNumber = @V_CodeNumber);
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_GetCombinationByProductID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_GetCombinationByProductID](@P_ID as int)
AS
BEGIN
	SET NOCOUNT ON;
	SELECT		tblKartrisVersions.V_ProductID, tblKartrisVersions.V_ID, tblKartrisLanguageElements.LE_Value AS V_Name, 
				tblKartrisVersions.V_CodeNumber, tblKartrisVersions.V_Price, tblKartrisVersions.V_Tax, 
				tblKartrisVersions.V_Weight, tblKartrisVersions.V_Quantity, tblKartrisVersions.V_QuantityWarnLevel, 
				tblKartrisVersions.V_Type, tblKartrisVersions.V_Live
	FROM		tblKartrisVersions INNER JOIN tblKartrisLanguageElements 
				ON tblKartrisVersions.V_ID = tblKartrisLanguageElements.LE_ParentID
	WHERE     (tblKartrisVersions.V_ProductID = @P_ID) 
				AND (tblKartrisLanguageElements.LE_Value IS NOT NULL) 
				AND (tblKartrisLanguageElements.LE_TypeID = 1) 
				AND (tblKartrisLanguageElements.LE_FieldID = 1) 
				AND (tblKartrisLanguageElements.LE_LanguageID = 1)
				AND (tblKartrisVersions.V_Type = 'c')
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisUsers_DeleteOrders]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ==============================================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	Deletes an Order
-- ===============================================================
CREATE PROCEDURE [dbo].[_spKartrisUsers_DeleteOrders]
(
	@U_ID as int,
	@O_DeleteReturnStock bit
)
AS
BEGIN
	SET NOCOUNT ON;
	
IF (@O_DeleteReturnStock = 1) 
	BEGIN
		
					DECLARE @O_Sent bit
					DECLARE @V_Codenumber nvarchar(25)
					DECLARE @IR_Quantity int
					DECLARE tnames_cursor CURSOR
				FOR
			-- check if return stock flag is on
				SELECT   tblKartrisOrders.O_Sent ,tblKartrisInvoiceRows.IR_VersionCode, tblKartrisInvoiceRows.IR_Quantity
				FROM         tblKartrisOrders INNER JOIN
									  tblKartrisInvoiceRows ON tblKartrisOrders.O_ID = tblKartrisInvoiceRows.IR_OrderNumberID
				WHERE     (tblKartrisOrders.O_CustomerID = @U_ID)

				
				OPEN tnames_cursor
				--loop through the invoicerows records and return the stocks back to individual versions
				FETCH NEXT FROM tnames_cursor INTO @O_Sent, @V_Codenumber,@IR_Quantity
				WHILE (@@FETCH_STATUS <> -1)
				BEGIN
					IF (@@FETCH_STATUS <> -2)
					BEGIN 
						IF (@O_Sent = 1)
						BEGIN
							UPDATE tblKartrisVersions SET V_Quantity= V_Quantity + @IR_Quantity WHERE V_CodeNumber=@V_Codenumber AND V_QuantityWarnLevel<>0;
						END
					END
					FETCH NEXT FROM tnames_cursor INTO @O_Sent, @V_Codenumber,@IR_Quantity
				END
				CLOSE tnames_cursor
				DEALLOCATE tnames_cursor ;
		
	END;

	

		--delete the order invoicerows
DELETE FROM tblKartrisInvoiceRows
FROM         tblKartrisInvoiceRows LEFT OUTER JOIN
					  tblKartrisOrders ON tblKartrisInvoiceRows.IR_OrderNumberID = tblKartrisOrders.O_ID
WHERE     (tblKartrisOrders.O_CustomerID = @U_ID);




		--delete the order promotion records
		DELETE FROM tblKartrisOrdersPromotions
FROM         tblKartrisOrdersPromotions INNER JOIN
					  tblKartrisOrders ON tblKartrisOrdersPromotions.OrderID = tblKartrisOrders.O_ID
WHERE     (tblKartrisOrders.O_CustomerID = @U_ID);

	
	
		--delete the main order record
		DELETE  FROM dbo.tblKartrisOrders
		WHERE O_CustomerID = @U_ID;
	
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_ChangeSortValue]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisVersions_ChangeSortValue]
(
	@VersionID as bigint,
	@ProductID as int,
	@Direction as char
)
AS
BEGIN
	SET NOCOUNT OFF;
	
	
	DECLARE @VersionOrder as int;
	SELECT @VersionOrder = V_OrderByValue
	FROM  dbo.tblKartrisVersions
	WHERE V_ProductID = @ProductID AND V_ID = @VersionID;

	-- *********************************************************
	-- Need to check if there are siblings with same sort order
	--  if yes, we need to reset those values
	DECLARE @DuplicateOrders as int;
	SELECT @DuplicateOrders = COUNT(1)
	FROM dbo.tblKartrisVersions
	WHERE V_OrderByValue = @VersionOrder AND V_ProductID = @ProductID;
	
	IF (SELECT COUNT(1)	FROM dbo.tblKartrisVersions WHERE V_OrderByValue = @VersionOrder AND V_ProductID = @ProductID) > 1 BEGIN
		DECLARE @MaxNo as int;
		SELECT @MaxNo = MAX(V_OrderByValue) 
		FROM dbo.tblKartrisVersions  
		WHERE V_ProductID = @ProductID;
		
		WHILE (SELECT COUNT(1)	FROM dbo.tblKartrisVersions WHERE V_OrderByValue = @VersionOrder AND V_ProductID = @ProductID) > 1
		BEGIN
			UPDATE TOP(1) dbo.tblKartrisVersions
			SET V_OrderByValue = @MaxNo + 1
			WHERE V_ProductID = @ProductID AND V_OrderByValue = @VersionOrder;
			SET @MaxNo = @MaxNo + 1;
		END
	END
	-- *********************************************************

	DECLARE @SwitchVersionID as bigint, @SwitchOrder as int;
	IF @Direction = 'u'
	BEGIN
		SELECT @SwitchOrder = MAX(V_OrderByValue) 
		FROM  dbo.tblKartrisVersions
		WHERE V_ProductID = @ProductID AND V_OrderByValue < @VersionOrder;

		SELECT TOP(1) @SwitchVersionID = V_ID
		FROM  dbo.tblKartrisVersions
		WHERE V_ProductID = @ProductID AND V_OrderByValue = @SwitchOrder;		
	END
	ELSE
	BEGIN
		SELECT @SwitchOrder = MIN(V_OrderByValue) 
		FROM dbo.tblKartrisVersions
		WHERE V_ProductID = @ProductID AND V_OrderByValue > @VersionOrder;

		SELECT TOP(1) @SwitchVersionID = V_ID
		FROM dbo.tblKartrisVersions
		WHERE V_ProductID = @ProductID AND V_OrderByValue = @SwitchOrder;
	END;

	UPDATE dbo.tblKartrisVersions
	SET V_OrderByValue = @SwitchOrder
	WHERE V_ProductID = @ProductID AND V_ID = @VersionID; 

	UPDATE dbo.tblKartrisVersions
	SET V_OrderByValue = @VersionOrder
	WHERE V_ProductID = @ProductID AND V_ID = @SwitchVersionID;
		
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_AddAsSingle]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_AddAsSingle]
(
	@V_CodeNumber as nvarchar(25),
	@V_ProductID as int,
	@V_CustomerGroupID as smallint,
	@V_NewID as bigint OUT
)
								
AS
BEGIN
	
	SET NOCOUNT ON;

	
	INSERT INTO tblKartrisVersions
	VALUES (@V_CodeNumber, @V_ProductID, NULL, NULL, 0, 0, 0, 0, 0, NULL, NULL, 10, 0, 'v', @V_CustomerGroupID, 'n', NULL, 0, NULL, NULL, NULL);
			
	SELECT @V_NewID = SCOPE_IDENTITY();
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_AddAsCombination]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_AddAsCombination]
(
	@V_CodeNumber as nvarchar(25),
	@V_ProductID as int,
	@V_Price as DECIMAL(18,4),
	@V_Tax as tinyint,
	@V_Tax2 as tinyint,
	@V_TaxExtra as nvarchar(50),
	@V_Weight as real,
	@V_Quantity as real,
	@V_QuantityWarnLevel as real,
	@V_RRP as DECIMAL(18,4),
	@V_Type as char(1),
	@V_NewID as bigint OUT
)
								
AS
BEGIN
	
	SET NOCOUNT ON;

	
	DECLARE @DownloadInfo as nvarchar(255), @DownloadType as nvarchar(50);
	SELECT @DownloadInfo = [V_DownLoadInfo], @DownloadType = [V_DownloadType]
	FROM [dbo].[tblKartrisVersions]
	WHERE [V_ProductID] = @V_ProductID AND [V_Type] = 'b';

	INSERT INTO tblKartrisVersions
	VALUES (@V_CodeNumber, @V_ProductID, @V_Price, @V_Tax, @V_Weight, 0, @V_Quantity, @V_QuantityWarnLevel, 
			1, @DownloadInfo, @DownloadType, 20, @V_RRP, @V_Type, NULL, 'n', NULL, 0, @V_Tax2, @V_TaxExtra, NULL);
			
	SELECT @V_NewID = SCOPE_IDENTITY();
	

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_Add]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_Add]
(
	@V_CodeNumber as nvarchar(25),
	@V_ProductID as int,
	@V_Price as DECIMAL(18,4),
	@V_Tax as tinyint,
	@V_Tax2 as tinyint,
	@V_TaxExtra as nvarchar(255),
	@V_Weight as real,
	@V_DeliveryTime as tinyint,
	@V_Quantity as real,
	@V_QuantityWarnLevel as real,
	@V_Live as bit,
	@V_DownLoadInfo as nvarchar(255),
	@V_DownloadType as nvarchar(50),
	@V_RRP as DECIMAL(18,4),
	@V_Type as char(1),
	@V_CustomerGroupID as smallint,
	@V_CustomizationType as char(1),
	@V_CustomizationDesc as nvarchar(255),
	@V_CustomizationCost as DECIMAL(18,4),
	@V_NewID as bigint OUT
)
								
AS
BEGIN
	
	SET NOCOUNT ON;

	DECLARE @MaxOrder as int;
	SELECT @MaxOrder = Max(V_OrderByValue) FROM dbo.tblKartrisVersions WHERE V_ProductID = @V_ProductID;
	IF @MaxOrder is NULL BEGIN SET @MaxOrder = 0 END;

	
	INSERT INTO tblKartrisVersions
	VALUES (@V_CodeNumber, @V_ProductID, @V_Price, @V_Tax, @V_Weight, @V_DeliveryTime, @V_Quantity, @V_QuantityWarnLevel, 
			@V_Live, @V_DownLoadInfo, @V_DownloadType, @MaxOrder + 1, @V_RRP, @V_Type, @V_CustomerGroupID, @V_CustomizationType,
			@V_CustomizationDesc, @V_CustomizationCost, @V_Tax2, @V_TaxExtra, GetDate());
			
	SELECT @V_NewID = SCOPE_IDENTITY();

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_GetBasicVersionByProductID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_GetBasicVersionByProductID](@ProductID as bigint)
AS
BEGIN
	SET NOCOUNT ON;

	SELECT     V_ID, V_CodeNumber, V_ProductID, V_Price, V_Tax, V_Weight, V_Quantity, V_QuantityWarnLevel, V_RRP, V_Type
FROM         tblKartrisVersions
WHERE     (V_ProductID = @ProductID) AND ((V_Type = 'b') OR (V_Type = 'o'));
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisCategoryHierarchy_GetByLanguageID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ======================================================
-- Author:		Medz
-- Create date: 02/14/2008 12:22:45
-- Description:	generate the category menu hierarchy
-- ======================================================
CREATE PROCEDURE [dbo].[spKartrisCategoryHierarchy_GetByLanguageID]
	(@LANG_ID tinyint,
	@SortByName bit)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	If @SortByName = 1
		BEGIN
			SELECT     tblKartrisCategoryHierarchy.CH_ChildID AS CAT_ID, tblKartrisCategoryHierarchy.CH_ParentID AS ParentID, vKartrisTypeCategories.CAT_Name AS Title, 
							  vKartrisTypeCategories.CAT_CustomerGroupID
			FROM         vKartrisTypeCategories INNER JOIN
								  tblKartrisCategoryHierarchy ON vKartrisTypeCategories.CAT_ID = tblKartrisCategoryHierarchy.CH_ChildID
			WHERE     (vKartrisTypeCategories.LANG_ID = @LANG_ID) AND (vKartrisTypeCategories.CAT_Live = 1)
			ORDER BY vKartrisTypeCategories.CAT_Name
		END
	ELSE
		BEGIN
		 SELECT     tblKartrisCategoryHierarchy.CH_ChildID AS CAT_ID, tblKartrisCategoryHierarchy.CH_ParentID AS ParentID, vKartrisTypeCategories.CAT_Name AS Title, 
							  vKartrisTypeCategories.CAT_CustomerGroupID
			FROM         vKartrisTypeCategories INNER JOIN
								  tblKartrisCategoryHierarchy ON vKartrisTypeCategories.CAT_ID = tblKartrisCategoryHierarchy.CH_ChildID
			WHERE     (vKartrisTypeCategories.LANG_ID = @LANG_ID) AND (vKartrisTypeCategories.CAT_Live = 1)
			ORDER BY tblKartrisCategoryHierarchy.CH_OrderNo;
		END
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisCategoryHierarchy_Get]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisCategoryHierarchy_Get]
AS
	SET NOCOUNT ON;
SELECT        tblKartrisCategoryHierarchy.*
FROM            tblKartrisCategoryHierarchy
GO
/****** Object:  StoredProcedure [dbo].[spKartrisCategories_GetTotalByParentID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	Get the total no. of Products in Category "used for ItemPager"
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisCategories_GetTotalByParentID]
			(
			@LANG_ID as tinyint,
			@ParentID as int,
			@CGroupID as smallint,
			@TotalCategories as int OUTPUT
			)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT  @TotalCategories = COUNT(vKartrisTypeCategories.CAT_ID)
		FROM    tblKartrisCategoryHierarchy INNER JOIN
				vKartrisTypeCategories ON tblKartrisCategoryHierarchy.CH_ChildID = vKartrisTypeCategories.CAT_ID INNER JOIN
				tblKartrisCategories ON tblKartrisCategoryHierarchy.CH_ParentID = tblKartrisCategories.CAT_ID
		WHERE   (tblKartrisCategoryHierarchy.CH_ParentID = @ParentID) 
					AND (vKartrisTypeCategories.LANG_ID = @LANG_ID) AND (vKartrisTypeCategories.CAT_Live = 1)
					AND (vKartrisTypeCategories.CAT_CustomerGroupID IS NULL OR vKartrisTypeCategories.CAT_CustomerGroupID = @CGroupID)
	
	
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisCategories_GetPageByParentID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisCategories_GetPageByParentID]
	(
	@LANG_ID as tinyint, 
	@ParentID as int,
	@PageIndex as tinyint, -- 0 Based index
	@RowsPerPage as smallint,
	@CGroupID as smallint
	)
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @StartRowNumber as int;
	SET @StartRowNumber = (@PageIndex * @RowsPerPage) + 1;
	DECLARE @EndRowNumber as int;
	SET @EndRowNumber = @StartRowNumber + @RowsPerPage - 1;

	DECLARE @OrderBy as nvarchar(50), @OrderDirection as char(1)

	SELECT @OrderBy = CAT_OrderCategoriesBy, @OrderDirection = CAT_CategoriesSortDirection
	FROM dbo.tblKartrisCategories
	WHERE CAT_ID = @ParentID;

	IF @OrderBy is NULL OR @OrderBy = 'd'
	BEGIN 
		SELECT @OrderBy = CFG_Value FROM tblKartrisConfig WHERE CFG_Name = 'frontend.categories.display.sortdefault';
	END;
	IF @OrderDirection is NULL OR @OrderDirection = '' BEGIN 
		SELECT @OrderDirection = CFG_Value FROM tblKartrisConfig WHERE CFG_Name = 'frontend.categories.display.sortdirection';
	END;

	IF @ParentID = 0 
	BEGIN
		 SET @OrderBy = 'CH_OrderNo';
		 SET @OrderDirection = 'A';
	END;
	
	WITH CategoryList AS
	(
		SELECT	CASE 
				WHEN (@OrderBy = 'CAT_ID' AND @OrderDirection = 'A') THEN	ROW_NUMBER() OVER (ORDER BY tblKartrisCategories.CAT_ID ASC) 
				WHEN (@OrderBy = 'CAT_ID' AND @OrderDirection = 'D') THEN	ROW_NUMBER() OVER (ORDER BY tblKartrisCategories.CAT_ID DESC) 
				WHEN (@OrderBy = 'CAT_Name' AND @OrderDirection = 'A') THEN ROW_NUMBER() OVER (ORDER BY CAT_Name ASC) 
				WHEN (@OrderBy = 'CAT_Name' AND @OrderDirection = 'D') THEN ROW_NUMBER() OVER (ORDER BY CAT_Name DESC) 
				WHEN (@OrderBy = 'CH_OrderNo' AND @OrderDirection = 'A') THEN ROW_NUMBER() OVER (ORDER BY CH_OrderNo ASC) 
				WHEN (@OrderBy = 'CH_OrderNo' AND @OrderDirection = 'D') THEN ROW_NUMBER() OVER (ORDER BY CH_OrderNo DESC) 
				END AS Row,
				vKartrisTypeCategories.CAT_ID, vKartrisTypeCategories.CAT_Name, vKartrisTypeCategories.CAT_Desc, 
				tblKartrisCategories.CAT_ProductDisplayType AS Parent_ProductDisplay, 
				tblKartrisCategories.CAT_SubCatDisplayType AS Parent_SubCategoryDisplay
		FROM    tblKartrisCategoryHierarchy INNER JOIN
				vKartrisTypeCategories ON tblKartrisCategoryHierarchy.CH_ChildID = vKartrisTypeCategories.CAT_ID INNER JOIN
				tblKartrisCategories ON tblKartrisCategoryHierarchy.CH_ParentID = tblKartrisCategories.CAT_ID
		WHERE   (tblKartrisCategoryHierarchy.CH_ParentID = @ParentID) AND (vKartrisTypeCategories.LANG_ID = @LANG_ID) 
					AND (vKartrisTypeCategories.CAT_Live = 1) 
					AND (vKartrisTypeCategories.CAT_CustomerGroupID IS NULL OR vKartrisTypeCategories.CAT_CustomerGroupID = @CGroupID)
		
	)

	SELECT *
	FROM CategoryList
	WHERE Row BETWEEN @StartRowNumber AND @EndRowNumber
	ORDER BY Row ASC;

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisCategories_GetNameByCategoryID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ========================================================
-- Author:		Medz
-- Create date: 04/13/2008 11:53:30
-- Description:	Get the category name for the SEO Friendly Links.
-- ========================================================
CREATE PROCEDURE [dbo].[spKartrisCategories_GetNameByCategoryID]
(
	@CAT_ID int,
	@LANG_ID tinyint
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	SELECT CAT_Name
	FROM   vKartrisTypeCategories
	WHERE  (CAT_ID = @CAT_ID) AND (LANG_ID = @LANG_ID) AND (CAT_Live = 1)
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisCategories_GetByProductID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisCategories_GetByProductID]
(
	@P_ID int,
	@LANG_ID tinyint	
)
AS
	SET NOCOUNT ON;
SELECT     vKartrisTypeCategories.CAT_ID, vKartrisTypeCategories.CAT_Name
FROM         vKartrisTypeCategories INNER JOIN
					  tblKartrisProductCategoryLink ON vKartrisTypeCategories.CAT_ID = tblKartrisProductCategoryLink.PCAT_CategoryID
WHERE     (vKartrisTypeCategories.LANG_ID = @LANG_ID) AND (tblKartrisProductCategoryLink.PCAT_ProductID = @P_ID)
GO
/****** Object:  StoredProcedure [dbo].[spKartrisCategories_GetByParentID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisCategories_GetByParentID](@LanguageID as tinyint, @ParentCategoryID as int)
AS
BEGIN
	SET NOCOUNT ON;

SELECT     vKartrisTypeCategories.CAT_ID, vKartrisTypeCategories.CAT_Name, vKartrisTypeCategories.CAT_Desc
FROM         tblKartrisCategoryHierarchy INNER JOIN
					  vKartrisTypeCategories ON tblKartrisCategoryHierarchy.CH_ChildID = vKartrisTypeCategories.CAT_ID
WHERE     (tblKartrisCategoryHierarchy.CH_ParentID = @ParentCategoryID) AND (vKartrisTypeCategories.LANG_ID = @LanguageID) AND (vKartrisTypeCategories.CAT_Live = 1)
ORDER BY tblKartrisCategoryHierarchy.CH_OrderNo
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisCategories_GetByID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisCategories_GetByID]
(
	@CAT_ID int,
	@LANG_ID tinyint
)
AS
	SET NOCOUNT ON;
SELECT        vKartrisTypeCategories.*
FROM            vKartrisTypeCategories
WHERE        (CAT_ID = @CAT_ID) AND (LANG_ID = @LANG_ID) AND CAT_Live=1
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasketOptionValues_Update]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisBasketOptionValues_Update]
(
	@BSKTOPT_BasketValueID bigint,
	@BSKTOPT_OptionID smallint,
	@Original_BSKTOPT_ID bigint,
	@BSKTOPT_ID bigint
)
AS
	SET NOCOUNT OFF;
--	
	UPDATE [tblKartrisBasketOptionValues] SET [BSKTOPT_BasketValueID] = @BSKTOPT_BasketValueID, [BSKTOPT_OptionID] = @BSKTOPT_OptionID WHERE (([BSKTOPT_ID] = @Original_BSKTOPT_ID));
--	

	
SELECT BSKTOPT_ID, BSKTOPT_BasketValueID, BSKTOPT_OptionID FROM tblKartrisBasketOptionValues WHERE (BSKTOPT_ID = @BSKTOPT_ID)
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasketOptionValues_GetMiniBasketOptions]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisBasketOptionValues_GetMiniBasketOptions]
(
	@BV_ID bigint
)
AS
	SET NOCOUNT OFF;
SELECT     tblKartrisBasketValues.BV_ID, tblKartrisBasketValues.BV_VersionID, 
					  tblKartrisBasketOptionValues.BSKTOPT_ID, tblKartrisBasketOptionValues.BSKTOPT_OptionID
FROM         tblKartrisBasketValues INNER JOIN
					  tblKartrisBasketOptionValues ON tblKartrisBasketValues.BV_ID = tblKartrisBasketOptionValues.BSKTOPT_BasketValueID
WHERE     (tblKartrisBasketValues.BV_ID = @BV_ID)
ORDER BY BSKTOPT_OptionID
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasketOptionValues_Get]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisBasketOptionValues_Get]
AS
	SET NOCOUNT ON;
SELECT        tblKartrisBasketOptionValues.*
FROM            tblKartrisBasketOptionValues
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasketOptionValues_Delete]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisBasketOptionValues_Delete]
(
	@Original_BSKTOPT_ID bigint
)
AS
	SET NOCOUNT OFF;
--	
	DELETE FROM [tblKartrisBasketOptionValues] WHERE (([BSKTOPT_ID] = @Original_BSKTOPT_ID));
--
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasketOptionValues_Add]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisBasketOptionValues_Add]
(
	@BSKTOPT_BasketValueID bigint,
	@BSKTOPT_OptionID smallint
)
AS
	SET NOCOUNT OFF;
--	
	INSERT INTO [tblKartrisBasketOptionValues] ([BSKTOPT_BasketValueID], [BSKTOPT_OptionID]) VALUES (@BSKTOPT_BasketValueID, @BSKTOPT_OptionID);
--	
	SELECT BSKTOPT_ID, BSKTOPT_BasketValueID, BSKTOPT_OptionID FROM tblKartrisBasketOptionValues WHERE (BSKTOPT_ID = SCOPE_IDENTITY());
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasket_SaveBasket]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 12/May/2008
-- Update date: 11/June/2008
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisBasket_SaveBasket] ( 
	@CustomerID INT,
	@BasketName NVARCHAR(200),
	@BasketID BIGINT,
	@NowOffset datetime
) AS
BEGIN

	SET NOCOUNT ON;

	DECLARE @SavedBasketID BIGINT;
	DECLARE @newBV_ID BIGINT;

	
--	
--	

	INSERT INTO tblKartrisSavedBaskets (SBSKT_UserID,SBSKT_Name,SBSKT_DateTimeAdded)
	VALUES (@CustomerID,@BasketName,@NowOffset);
	
	SET @SavedBasketID=SCOPE_IDENTITY() ;

	DECLARE @BV_ID INT
	DECLARE @BV_VersionID INT
	DECLARE @BV_Quantity FLOAT
	DECLARE @BV_CustomText nvarchar(2000)

	DECLARE Basket_cursor CURSOR FOR 
	SELECT BV_ID,BV_VersionID,BV_Quantity,BV_CustomText FROM tblKartrisBasketValues WHERE BV_ParentID=@BasketID AND BV_ParentType='b';

	OPEN Basket_cursor
	FETCH NEXT FROM Basket_cursor INTO @BV_ID,@BV_VersionID,@BV_Quantity,@BV_CustomText
	WHILE @@FETCH_STATUS = 0
	BEGIN
		INSERT INTO tblKartrisBasketValues(BV_ParentType,BV_ParentID,BV_VersionID,BV_Quantity,BV_CustomText,BV_DateTimeAdded)
		VALUES ('s',@SavedBasketID,@BV_VersionID,@BV_Quantity,@BV_CustomText,@NowOffset)

		SET @newBV_ID=SCOPE_IDENTITY() 

		IF EXISTS (SELECT * FROM tblKartrisBasketOptionValues WHERE BSKTOPT_BasketValueID=@BV_ID) 
		BEGIN
			INSERT INTO tblKartrisBasketOptionValues
			SELECT @newBV_ID,BSKTOPT_OptionID FROM tblKartrisBasketOptionValues WHERE BSKTOPT_BasketValueID=@BV_ID
		END

		FETCH NEXT FROM Basket_cursor INTO @BV_ID,@BV_VersionID,@BV_Quantity,@BV_CustomText
	End

	CLOSE Basket_cursor
	DEALLOCATE Basket_cursor;


--	
--	

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasket_LoadWishlists]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 20/May/2008
-- Modified date: 25/June/2008
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisBasket_LoadWishlists] ( 
	@WishlistsID bigint,
	@BasketID bigint,
	@NowOffset datetime
) AS
BEGIN
	SET NOCOUNT ON;

	/**
	delete tblKartrisBasketValues
	where BV_ParentType='b' and BV_ParentID=@BasketID

	insert into tblKartrisBasketValues (BV_ParentType,BV_ParentID,BV_VersionID,BV_Quantity,BV_DateTimeAdded)
	
	select 'b' as BV_ParentType,@BasketID as BV_ParentID,BV_VersionID,BV_Quantity,getdate() as BV_DateTimeAdded from tblKartrisBasketValues
	where BV_ParentType='w' and BV_ParentID=@WishlistsID
	**/

	DECLARE @BV_ID BIGINT
	DECLARE @BV_VersionID BIGINT
	DECLARE @BV_Quantity FLOAT
	DECLARE @BV_CustomText NVARCHAR(2000)
	DECLARE @newBV_ID BIGINT;

--	
--	

	DELETE FROM tblKartrisBasketOptionValues
	WHERE BSKTOPT_BasketValueID IN (SELECT BV_ID FROM tblKartrisBasketValues WHERE BV_ParentID=@BasketID and BV_ParentType='b')

	DELETE tblKartrisBasketValues
	WHERE BV_ParentType='b' AND BV_ParentID=@BasketID

	DECLARE Basket_cursor CURSOR FOR 
	SELECT BV_ID,BV_VersionID,BV_Quantity,BV_CustomText FROM tblKartrisBasketValues WHERE BV_ParentID=@WishlistsID and BV_ParentType='w'

	OPEN Basket_cursor
	FETCH NEXT FROM Basket_cursor INTO @BV_ID,@BV_VersionID,@BV_Quantity,@BV_CustomText
	WHILE @@FETCH_STATUS = 0
	BEGIN
		INSERT INTO tblKartrisBasketValues (BV_ParentType,BV_ParentID,BV_VersionID,BV_Quantity,BV_CustomText,BV_DateTimeAdded)
		SELECT 'b' as BV_ParentType,@BasketID as BV_ParentID,@BV_VersionID,@BV_Quantity,@BV_CustomText,@NowOffset FROM tblKartrisBasketValues 
		WHERE BV_ID=@BV_ID

		SET @newBV_ID=SCOPE_IDENTITY() 

		IF EXISTS (SELECT * FROM tblKartrisBasketOptionValues WHERE BSKTOPT_BasketValueID=@BV_ID) 
		BEGIN
			--PRINT cast(@BV_ID as varchar(20)) + ' exist'
			INSERT INTO tblKartrisBasketOptionValues (BSKTOPT_BasketValueID,BSKTOPT_OptionID)
			SELECT @newBV_ID,BSKTOPT_OptionID FROM tblKartrisBasketOptionValues WHERE BSKTOPT_BasketValueID=@BV_ID
		END

		FETCH NEXT FROM Basket_cursor INTO @BV_ID,@BV_VersionID,@BV_Quantity,@BV_CustomText
	END

	CLOSE Basket_cursor
	DEALLOCATE Basket_cursor;

--	
--	

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasket_LoadSavedBasket]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 13/May/2008
-- Update date: 11/June/2008
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisBasket_LoadSavedBasket] ( 
	@BasketSavedID BIGINT,
	@BasketID BIGINT,
	@NowOffset datetime
) AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @BV_ID BIGINT
	DECLARE @BV_VersionID BIGINT
	DECLARe @BV_Quantity FLOAT
	DECLARE @newBV_ID BIGINT
	DECLARE @BV_CustomText nvarchar(2000);

--	
--	

	DELETE FROM tblKartrisBasketOptionValues
	WHERE BSKTOPT_BasketValueID IN (SELECT BV_ID FROM tblKartrisBasketValues WHERE BV_ParentID=@BasketID and BV_ParentType='b')

	DELETE tblKartrisBasketValues
	WHERE BV_ParentType='b' AND BV_ParentID=@BasketID

	DECLARE Basket_cursor CURSOR FOR 
	SELECT BV_ID,BV_VersionID,BV_Quantity,BV_CustomText FROM tblKartrisBasketValues WHERE BV_ParentID=@BasketSavedID and BV_ParentType='s'

	OPEN Basket_cursor
	FETCH NEXT FROM Basket_cursor INTO @BV_ID,@BV_VersionID,@BV_Quantity,@BV_CustomText
	WHILE @@FETCH_STATUS = 0
	BEGIN
		
		INSERT INTO tblKartrisBasketValues (BV_ParentType,BV_ParentID,BV_VersionID,BV_Quantity,BV_CustomText,BV_DateTimeAdded)
			SELECT 'b' as BV_ParentType,@BasketID as BV_ParentID,@BV_VersionID,@BV_Quantity,@BV_CustomText,@NowOffset FROM tblKartrisBasketValues 
			WHERE BV_ID=@BV_ID

		SET @newBV_ID=SCOPE_IDENTITY() 

		IF EXISTS (SELECT * FROM tblKartrisBasketOptionValues WHERE BSKTOPT_BasketValueID=@BV_ID) 
		BEGIN
			--PRINT cast(@BV_ID as varchar(20)) + ' exist'
			INSERT INTO tblKartrisBasketOptionValues (BSKTOPT_BasketValueID,BSKTOPT_OptionID)
				SELECT @newBV_ID,BSKTOPT_OptionID FROM tblKartrisBasketOptionValues WHERE BSKTOPT_BasketValueID=@BV_ID
		END

		FETCH NEXT FROM Basket_cursor INTO @BV_ID,@BV_VersionID,@BV_Quantity,@BV_CustomText
	END

	CLOSE Basket_cursor
	DEALLOCATE Basket_cursor;

--	
--	


END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasket_GetWishList]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisBasket_GetWishList](
	@intType smallint,
	@CustomerID int,
	@PageIndexStart int=1,
	@PageIndexEnd int=1000,
	@WishListID int=0,
	@Email nvarchar(100)='',
	@Password nvarchar(100)='',
	@Language tinyint=1
) 
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @cnt bigint

	If @intType=0
	Begin -- get wishlist total
		select @cnt=count(WL_ID) from tblKartrisWishLists
			where WL_UserID=@CustomerID
		select isnull(@cnt,0)'TotalRec'
	End	
	Else If @intType=1
	Begin -- get wishlist data
		select * from (
			select ROW_NUMBER() OVER (ORDER BY WL_ID desc) as RowNum,WL_ID,WL_Name,WL_DateTimeAdded from tblKartrisWishLists
			where WL_UserID=@CustomerID ) as A	
		where RowNum>=@PageIndexStart AND RowNum<=@PageIndexEnd 
	End
	Else If @intType=2
	Begin -- get wishlist by wishlist id and customer id
		select * from tblKartrisWishLists WL
		left join tblKartrisUsers U on WL.WL_UserID=U.U_ID
		left join tblKartrisAddresses ADR on U.U_ID=ADR.ADR_UserID
		where WL_ID=@WishListID and U.U_ID=@CustomerID
	End
	Else If @intType=3
	Begin
		select WL.*,ADR_Name,USR.* from tblKartrisUsers as USR
		inner join tblKartrisWishlists as WL on WL.WL_UserID=USR.U_ID
		left join tblKartrisAddresses ADR on ADR.ADR_UserID=USR.U_ID
		where U_EmailAddress=@Email and WL_PublicPassword=@Password
	End
	Else If @intType=4
	Begin
		select WL.WL_UserID,WL.WL_ID,V_ProductID,BV_ID,BV.BV_VersionID,isnull(dbo.fnKartris_GetRemainingWishlist(BV_ParentID,BV_VersionID,BV_CustomText),BV_Quantity) as WishlistQty,BV.BV_Quantity,BV.BV_CustomText,LE.LE_Value 'VersionCode',B.LE_Value 'VersionName' from tblKartrisWishlists as WL
		inner join tblKartrisBasketValues as BV on WL.WL_ID=BV.BV_ParentID and WL_UserID=@CustomerID and WL_ID=@WishListID and BV_ParentType='w'
		inner join tblKartrisVersions as V on V.V_ID=BV.BV_VersionID
		inner join tblKartrisLanguageElements as LE on LE.LE_ParentID=BV.BV_VersionID
		inner join tblKartrisLanguageElementTypes as LET on LET.LET_ID=LE.LE_TypeID and LET_Name='tblKartrisVersions'
		inner join tblKartrisLanguageElementFieldNames as LEFN on LEFN.LEFN_ID=LE.LE_FieldID and LEFN.LEFN_Name='Name'
		left join (
			select LE_ParentID,LE_Value from tblKartrisLanguageElements LE
			inner join tblKartrisLanguageElementFieldNames LEFN on LEFN.LEFN_ID=LE.LE_FieldID and LEFN.LEFN_Name='Name'
			inner join tblKartrisLanguageElementTypes LET on LET.LET_ID=LE.LE_TypeID and LET_Name='tblKartrisProducts'
			where LE_LanguageID=1) B
		on V.V_ProductID=B.LE_ParentID
		where LE_LanguageID=@Language
		order by BV_ID
	End
	Else
	Begin -- get wishlist by wishlist id
		select * from tblKartrisWishLists WL
		left join tblKartrisUsers U on WL.WL_UserID=U.U_ID
		where WL_ID=@WishListID
	End

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasket_GetShippingMethod]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 19/June/2008
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisBasket_GetShippingMethod] ( 
	@LanguageID int,
	@ShippingID int,
	@DestinationID int,
	@T_ID int=0
) AS
BEGIN
	SET NOCOUNT ON;

	declare @ShippingName nvarchar(200)
	declare @ShippingDesc nvarchar(200)
	declare @Tax float
	declare @TaxRate float

	select @ShippingName=SM_Name, @ShippingDesc=SM_Desc from dbo.vKartrisTypeShippingMethods
	where LANG_ID=@LanguageID and SM_ID=@ShippingID

	select @Tax=D_Tax from dbo.vKartrisTypeDestinations
	where LANG_ID=1 and D_ID=@DestinationID

	select @TaxRate=T_TaxRate from tblKartrisTaxRates
	where T_ID=@T_ID

	select isnull(@ShippingName,'') 'ShippingName',isnull(@ShippingDesc,'') 'ShippingDesc', isnull(@Tax,0) 'Tax', isnull(@TaxRate,0) 'TaxRate'

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasketValues_DeleteItems]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 20/Apr/2008
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisBasketValues_DeleteItems](
	@intType int, 
	@intID int
)
AS

--	
--	

if @intType=1 -- delete all basket items
begin

	delete from tblKartrisBasketOptionValues
	where BSKTOPT_BasketValueID in (
		select BV_ID from tblKartrisBasketValues
		where BV_ParentID=@intID and BV_ParentType='b')

	delete from tblKartrisBasketValues
	where BV_ParentType='b' and BV_ParentID=@intID 
end;

if @intType=2 -- delete basket item only
begin

	delete tblKartrisBasketOptionValues where 
	BSKTOPT_BasketValueID=@intID

	delete from tblKartrisBasketValues
	where BV_ParentType='b' and BV_ID=@intID
end;

--	
--
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasket_GetOptionText]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 02/June/2008
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisBasket_GetOptionText](
	@LanguageID int,
	@BasketItemID int
)AS
BEGIN
	SET NOCOUNT ON;

	select BSKTOPT_OptionID,OPTG_OptionDisplayType,OPTG_BackendName,LE_Value from tblKartrisBasketOptionValues BOV
		inner join tblKartrisLanguageElements LE on BOV.BSKTOPT_OptionID=LE.LE_ParentID
		inner join tblKartrisLanguageElementTypes LET on LE.LE_TypeID=LET.LET_ID
		inner join tblKartrisOptions O on BOV.BSKTOPT_OptionID=O.OPT_ID
		inner join tblKartrisOptionGroups OG on O.OPT_OptionGroupID=OG.OPTG_ID
	where BSKTOPT_BasketValueID=@BasketItemID and LE_LanguageID=@LanguageID and LET_Name='tblKartrisOptions'
	order by BSKTOPT_ID


END
GO
/****** Object:  UserDefinedFunction [dbo].[fnKartrisCategories_GetName]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnKartrisCategories_GetName] 
(
	-- Add the parameters for the function here
	@CAT_ID as int,
	@LANG_ID as tinyint
)
RETURNS nvarchar(MAX)
AS
BEGIN
	-- Declare the return variable here
	DECLARE @Result nvarchar(MAX);

	-- Add the T-SQL statements to compute the return value here
	SELECT @Result = CAT_Name FROM vKartrisTypeCategories WHERE CAT_ID = @CAT_ID AND LANG_ID = @LANG_ID ;

	-- Return the result of the function
	RETURN @Result

END
GO
/****** Object:  UserDefinedFunction [dbo].[fnKartrisBasketOptionValues_GetOptionsTotalPrice]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date, ,>
-- Description:	
-- =============================================
CREATE FUNCTION [dbo].[fnKartrisBasketOptionValues_GetOptionsTotalPrice] 
(
	@ProductID as int,
	@VersionID as bigint,
	@BV_ParentID as bigint,
	@BV_ID as bigint	
)
RETURNS real
AS
BEGIN
	-- Declare the return variable here
	DECLARE @Result real;

	SELECT  @Result = SUM(tblKartrisProductOptionLink.P_OPT_PriceChange)
	FROM         tblKartrisBasketOptionValues RIGHT OUTER JOIN
						  tblKartrisProductOptionLink ON tblKartrisBasketOptionValues.BSKTOPT_OptionID = tblKartrisProductOptionLink.P_OPT_OptionID RIGHT OUTER JOIN
						  tblKartrisBasketValues ON tblKartrisBasketOptionValues.BSKTOPT_BasketValueID = tblKartrisBasketValues.BV_ID
	GROUP BY tblKartrisBasketOptionValues.BSKTOPT_BasketValueID, tblKartrisBasketValues.BV_ParentID, tblKartrisBasketValues.BV_VersionID, 
						  tblKartrisProductOptionLink.P_OPT_ProductID
	HAVING      (tblKartrisBasketOptionValues.BSKTOPT_BasketValueID = @BV_ID) AND (tblKartrisBasketValues.BV_ParentID = @BV_ParentID) AND 
						  (tblKartrisBasketValues.BV_VersionID = @VersionID) AND (tblKartrisProductOptionLink.P_OPT_ProductID = @ProductID)

	IF @Result is NULL
	BEGIN
		SET @Result = 0;
	END
	-- Return the result of the function
	RETURN @Result

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasket_GetCategoryID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 15/June/2008
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisBasket_GetCategoryID] (
	@ProductID int
) AS
BEGIN
	SET NOCOUNT ON;

	SELECT PCAT_CategoryID,PCAT_OrderNo FROM tblKartrisProductCategoryLink
	WHERE PCAT_ProductID = @ProductID

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasket_DeleteSavedBasket]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 12/May/2008
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisBasket_DeleteSavedBasket] (
	@BasketID bigint	
) AS
BEGIN
	
	SET NOCOUNT ON;

	
	DELETE tblKartrisSavedBaskets 
	WHERE SBSKT_ID=@BasketID;
	

--	
	DELETE tblKartrisBasketOptionValues
	WHERE BSKTOPT_BasketValueID in (SELECT BV_ID FROM tblKartrisBasketValues WHERE BV_ParentID=@BasketID and BV_ParentType='s');
--	

--	
	DELETE tblKartrisBasketValues
	WHERE BV_ParentID=@BasketID and BV_ParentType='s';
--	

END
GO
/****** Object:  UserDefinedFunction [dbo].[fnKartrisBasket_GetItemWeight]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnKartrisBasket_GetItemWeight]
(
	@BasketValueID as bigint,
	@VersionID as bigint,
	@ProductID as int
)
RETURNS real
AS
BEGIN
	-- Declare the return variable here
	DECLARE @Weight as real;
	DECLARE @WeightBase as real;

	DECLARE @ProductType as char(1);
	
	SELECT @ProductType = P_Type
	FROM tblKartrisProducts 
	WHERE P_ID = @ProductID;
	
	IF @ProductType IN ('s','m') BEGIN
		SELECT @Weight = V_Weight
		FROM tblKartrisVersions
		WHERE V_ID = @VersionID;
	END ELSE BEGIN
		DECLARE @OptionsList as nvarchar(max);
		SELECT @OptionsList = COALESCE(@OptionsList + ',', '') + CAST(T.BSKTOPT_OptionID As nvarchar(10))
		FROM (SELECT BSKTOPT_OptionID FROM dbo.tblKartrisBasketOptionValues WHERE  BSKTOPT_BasketValueID = @BasketValueID) AS T;
		
		SELECT @Weight = SUM(P_OPT_WeightChange)
		FROM dbo.tblKartrisProductOptionLink
		WHERE P_OPT_ProductID = @ProductID AND P_OPT_OptionID IN (SELECT * FROM dbo.fnTbl_SplitNumbers(@OptionsList));
		
		-- If weight = 0, then no weight change for the options, we need to use the base version.
		IF @Weight = 0 BEGIN
			SELECT @Weight = V_Weight FROM tblKartrisVersions WHERE V_ID = @VersionID;
			END
		ELSE
			-- Get weight of options and weight of base version, add together
			BEGIN
				SELECT @WeightBase = V_Weight FROM tblKartrisVersions WHERE V_ID = @VersionID;
				SET @Weight = @Weight + @WeightBase;
			END
	END
	
	-- Return the result of the function
	RETURN @Weight;

END
GO
/****** Object:  UserDefinedFunction [dbo].[fnKartrisAttributeValues_GetProductID]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnKartrisAttributeValues_GetProductID] 
(
	-- Add the parameters for the function here
	@ATTRIBV_ID as int
)
RETURNS int
AS
BEGIN
	-- Declare the return variable here
	DECLARE @Result int;

	-- Add the T-SQL statements to compute the return value here
	SELECT @Result = ATTRIBV_ProductID FROM tblKartrisAttributeValues WHERE ATTRIBV_ID = @ATTRIBV_ID;

	-- Return the result of the function
	RETURN @Result

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_GetSingleVersionByProductID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_GetSingleVersionByProductID](@ProductID as bigint)
AS
BEGIN
	SET NOCOUNT ON;

	SELECT     V_ID, V_CodeNumber, V_ProductID, V_Price, V_Tax, V_Weight, V_Quantity, V_QuantityWarnLevel, V_RRP, V_Type
	FROM         tblKartrisVersions
	WHERE     (V_ProductID = @ProductID) AND (V_Type = 'v');
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_GetRowsByProductID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_GetRowsByProductID](@P_ID as int)
AS
BEGIN
	SET NOCOUNT ON;
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
	SELECT     V_ID, V_CodeNumber, V_ProductID, V_Price, V_Tax, V_Weight, V_DeliveryTime, V_Quantity, V_QuantityWarnLevel, V_Live, V_DownLoadInfo, V_DownloadType, 
					  V_OrderByValue, V_RRP, V_Type, V_CustomerGroupID, V_CustomizationType, V_CustomizationDesc, V_CustomizationCost
	FROM         tblKartrisVersions
	WHERE     (tblKartrisVersions.V_ProductID = @P_ID) 
	
END
GO
/****** Object:  UserDefinedFunction [dbo].[fnKartris_GetBaseVersionID]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 18-Feb-2009
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnKartris_GetBaseVersionID](
	@V_ID bigint
)
RETURNS bigint
AS
BEGIN

	DECLARE @Result bigint

	declare @V_Type nvarchar(1)
	declare @V_ProductID bigint

	SELECT  @V_Type=V_Type, @V_ProductID=V_ProductID FROM tblKartrisVersions WHERE V_ID = @V_ID
	
	If @V_Type <> 'v'
	Begin
		SELECT  @Result=V_ID FROM tblKartrisVersions 
		WHERE V_Type='b' and V_ProductID=@V_ProductID
	End
	Else
	Begin
		SELECT  @Result=V_ID FROM tblKartrisVersions WHERE V_ID = @V_ID
	End

	RETURN isnull(@Result,0) 

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_UpdateStockLevelByCode]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_UpdateStockLevelByCode]
(
	@V_CodeNumber as nvarchar(25),
	@V_Quantity as real,
	@V_QuantityWarnLevel as real = NULL,
	@V_BulkUpdateTimeStamp as datetime = NULL
)							
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE tblKartrisVersions
	SET V_Quantity = @V_Quantity, V_QuantityWarnLevel = ISNULL(@V_QuantityWarnLevel, V_QuantityWarnLevel),
	V_BulkUpdateTimeStamp = Coalesce(@V_BulkUpdateTimeStamp, GetDate())
	WHERE V_CodeNumber = @V_CodeNumber;
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_UpdateStockLevel]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_UpdateStockLevel]
(
	@V_ID as bigint,
	@V_Quantity as real,
	@V_QuantityWarnLevel as real,
	@V_BulkUpdateTimeStamp as datetime = NULL
)
								
AS
BEGIN
	
	SET NOCOUNT ON;

	
	UPDATE tblKartrisVersions
	SET V_Quantity = @V_Quantity, V_QuantityWarnLevel = @V_QuantityWarnLevel,
	V_BulkUpdateTimeStamp = Coalesce(@V_BulkUpdateTimeStamp, GetDate())
	WHERE V_ID = @V_ID;
END
GO

/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_UpdatePriceList]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_UpdatePriceList]
(
	@PriceList as nvarchar(max),
	@LineNumber as bigint out
)								
AS
BEGIN
	
	SET NOCOUNT ON;
	SET @LineNumber = 0;
	--SET @PriceList = REPLACE(@PriceList, char(13), '#');
	SET @PriceList = REPLACE(@PriceList, char(10), '');

	DECLARE @ParsedList as table(Line varchar(200))
	DECLARE @Line varchar(200), @Pos int    
	SET @PriceList = LTRIM(RTRIM(@PriceList))+ '#'    
	SET @Pos = CHARINDEX('#', @PriceList, 1)    
	IF REPLACE(@PriceList, '#', '') <> '' BEGIN        
		WHILE @Pos > 0 BEGIN                
			SET @Line = LTRIM(RTRIM(LEFT(@PriceList, @Pos - 1)))                
			IF @Line <> '' BEGIN INSERT INTO @ParsedList (Line) VALUES (@Line);	END                
			SET @PriceList = RIGHT(@PriceList, LEN(@PriceList) - @Pos)                
			SET @Pos = CHARINDEX('#', @PriceList, 1)        
		END    
	END
;
	
	DECLARE @NewValues as nvarchar(50);
	DECLARE crsrPriceList CURSOR FOR
	select * from @ParsedList;

	OPEN crsrPriceList
	FETCH NEXT FROM crsrPriceList
	INTO @NewValues

	DECLARE @VersionCode as nvarchar(25), @PriceSubString as nvarchar(25), @Price as real, @RRP as real;
	DECLARE @CommaPosition as int, @RPPCommaPosition as int, @SubstringLength as int;
	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @LineNumber = @LineNumber + 1;
		SET @CommaPosition = CHARINDEX(',', @NewValues, 1);
		SET @RPPCommaPosition = CHARINDEX(',', @NewValues, @CommaPosition+1);
		SET @VersionCode = LTRIM(RTRIM(LEFT(@NewValues, @CommaPosition - 1)));
		SET @VersionCode = REPLACE(@VersionCode,'''','');
		SET @SubstringLength = (@RPPCommaPosition-@CommaPosition)-1;
		SET @PriceSubString = SUBSTRING(@NewValues, @CommaPosition+1, @SubstringLength);
		SET @Price = CAST(LTRIM(RTRIM(@PriceSubString)) As real);
		
		SET @RRP = CAST(LTRIM(RTRIM( RIGHT(@NewValues, LEN(@NewValues) - @RPPCommaPosition))) as real);

		UPDATE dbo.tblKartrisVersions
		SET V_Price = @Price,
			V_RRP = @RRP
		WHERE V_CodeNumber = @VersionCode;

		FETCH NEXT FROM crsrPriceList
		INTO @NewValues
	END
	
	CLOSE crsrPriceList
	DEALLOCATE crsrPriceList;
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_UpdateDownloadInfo]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_UpdateDownloadInfo]
(
	@V_ID as bigint,
	@V_DownLoadInfo as nvarchar(255)	
)
								
AS
BEGIN
	
	SET NOCOUNT ON;

	
	UPDATE tblKartrisVersions
	SET V_DownLoadInfo = @V_DownLoadInfo
	WHERE V_ID = @V_ID;
	
	

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisProductOptionLink_GetByProductIDGroupID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisProductOptionLink_GetByProductIDGroupID]
(
	@ProductID int,
	@GroupID as int,
	@LANGID as tinyint
)
AS
	SET NOCOUNT ON;
SELECT		tblKartrisProductOptionLink.P_OPT_OptionID as OPT_ID, vKartrisTypeOptions.OPT_Name, 
			vKartrisTypeOptions.LANG_ID, CAST(tblKartrisProductOptionLink.P_OPT_OptionID as nvarchar) as ID_List
FROM        tblKartrisProductOptionLink INNER JOIN vKartrisTypeOptions 
			ON tblKartrisProductOptionLink.P_OPT_OptionID = vKartrisTypeOptions.OPT_ID
WHERE		(tblKartrisProductOptionLink.P_OPT_ProductID = @ProductID) 
			AND (vKartrisTypeOptions.OPT_OptionGroupID = @GroupID)
			AND (vKartrisTypeOptions.LANG_ID = @LANGID)
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisProductOptionLink_GetByProductID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisProductOptionLink_GetByProductID]
(
	@ProductID int
)
AS
	SET NOCOUNT ON;
SELECT        P_OPT_OptionID, P_OPT_ProductID, P_OPT_OrderByValue, P_OPT_PriceChange, P_OPT_WeightChange, P_OPT_Selected
FROM            tblKartrisProductOptionLink
WHERE        (P_OPT_ProductID = @ProductID)
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisProductOptionLink_DeleteByProductID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisProductOptionLink_DeleteByProductID]
(
	@ProductID int
)
AS
	SET NOCOUNT OFF;
	
	DELETE FROM [tblKartrisProductOptionLink] 
	WHERE ([P_OPT_ProductID] = @ProductID);
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisProductOptionLink_Add]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisProductOptionLink_Add]
(
	@OptionID as int,
	@ProductID int,
	@OrderBy as smallint,
	@PriceChange as real,
	@WeightChange as real,
	@Selected as bit
)
AS
	SET NOCOUNT OFF;
	
	INSERT INTO [tblKartrisProductOptionLink] 
	VALUES (@OptionID, @ProductID, @OrderBy, @PriceChange, @WeightChange, @Selected);
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisProductOptionGroupLink_GetByProductID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisProductOptionGroupLink_GetByProductID]
(
	@ProductID int
)
AS
	SET NOCOUNT ON;
SELECT        P_OPTG_ProductID, P_OPTG_OptionGroupID, P_OPTG_OrderByValue, P_OPTG_MustSelected
FROM            tblKartrisProductOptionGroupLink
WHERE        (P_OPTG_ProductID = @ProductID)
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisProductOptionGroupLink_DeleteByProductID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisProductOptionGroupLink_DeleteByProductID]
(
	@ProductID int
)
AS
	SET NOCOUNT OFF;

	DELETE FROM [tblKartrisProductOptionGroupLink] 
	WHERE ([P_OPTG_ProductID] = @ProductID);
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisProductOptionGroupLink_Add]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisProductOptionGroupLink_Add]
(
	@ProductID int,
	@GroupID as smallint,
	@OrderBy as smallint,
	@MustSelect as bit
)
AS
	SET NOCOUNT OFF;
	
	INSERT INTO [tblKartrisProductOptionGroupLink] 
	VALUES (@ProductID, @GroupID, @OrderBy, @MustSelect);
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisProductCategoryLink_DeleteByProduct]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisProductCategoryLink_DeleteByProduct]
(
	@ProductID int
)
AS
BEGIN
	SET NOCOUNT OFF;
	
	DELETE FROM [tblKartrisProductCategoryLink] 
	WHERE [PCAT_ProductID] = @ProductID;
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisProductCategoryLink_ChangeSortValue]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisProductCategoryLink_ChangeSortValue]
(
	@ProductID as int,
	@CatID as int,
	@Direction as char
)
AS
BEGIN
	SET NOCOUNT OFF;
	

		
	DECLARE @ProductOrder as int;
	SELECT @ProductOrder = PCAT_OrderNo
	FROM  dbo.tblKartrisProductCategoryLink
	WHERE PCAT_ProductID = @ProductID AND PCAT_CategoryID = @CatID;

	-- *********************************************************
	-- Need to check if there are siblings with same sort order
	--  if yes, we need to reset those values
	DECLARE @DuplicateOrders as int;
	SELECT @DuplicateOrders = COUNT(1)
	FROM dbo.tblKartrisProductCategoryLink
	WHERE PCAT_OrderNo = @ProductOrder AND PCAT_CategoryID = @CatID;
	
	IF (SELECT COUNT(1)	FROM dbo.tblKartrisProductCategoryLink WHERE PCAT_OrderNo = @ProductOrder AND PCAT_CategoryID = @CatID) > 1 BEGIN
		DECLARE @MaxNo as int;
		SELECT @MaxNo = MAX(PCAT_OrderNo) 
		FROM dbo.tblKartrisProductCategoryLink 
		WHERE PCAT_CategoryID = @CatID AND PCAT_ProductID <> @ProductID;
		
		WHILE (SELECT COUNT(1)	FROM dbo.tblKartrisProductCategoryLink WHERE PCAT_OrderNo = @ProductOrder AND PCAT_CategoryID = @CatID) > 1
		BEGIN
			UPDATE TOP(1) dbo.tblKartrisProductCategoryLink
			SET PCAT_OrderNo = @MaxNo + 1
			WHERE PCAT_CategoryID = @CatID AND PCAT_OrderNo = @ProductOrder AND PCAT_ProductID <> @ProductID;
			SET @MaxNo = @MaxNo + 1;
		END
	END
	-- *********************************************************

	DECLARE @SwitchProductID as int, @SwitchOrder as int;
	IF @Direction = 'u'
	BEGIN
		SELECT @SwitchOrder = MAX(PCAT_OrderNo) 
		FROM dbo.tblKartrisProductCategoryLink 
		WHERE PCAT_CategoryID = @CatID AND PCAT_OrderNo < @ProductOrder;

		SELECT TOP(1) @SwitchProductID = PCAT_ProductID
		FROM  dbo.tblKartrisProductCategoryLink
		WHERE PCAT_CategoryID = @CatID AND PCAT_OrderNo = @SwitchOrder;		
	END
	ELSE
	BEGIN
		SELECT @SwitchOrder = MIN(PCAT_OrderNo) 
		FROM dbo.tblKartrisProductCategoryLink 
		WHERE PCAT_CategoryID = @CatID AND PCAT_OrderNo > @ProductOrder;

		SELECT TOP(1) @SwitchProductID = PCAT_ProductID
		FROM dbo.tblKartrisProductCategoryLink
		WHERE PCAT_CategoryID = @CatID AND PCAT_OrderNo = @SwitchOrder;
	END;

UPDATE dbo.tblKartrisProductCategoryLink
	SET PCAT_OrderNo = @SwitchOrder
	WHERE PCAT_CategoryID = @CatID AND PCAT_ProductID = @ProductID; 

	UPDATE dbo.tblKartrisProductCategoryLink
	SET PCAT_OrderNo = @ProductOrder
	WHERE PCAT_CategoryID = @CatID AND PCAT_ProductID = @SwitchProductID;

		
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisProductCategoryLink_AddParentList]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisProductCategoryLink_AddParentList]
(
	@ProductID int,
	@ParentList as nvarchar(MAX)
)
AS
BEGIN
		

	DELETE FROM dbo.tblKartrisProductCategoryLink	
	WHERE PCAT_ProductID = @ProductID 
		AND PCAT_CategoryID NOT IN (SELECT * FROM dbo.fnTbl_SplitNumbers(@ParentList));

	IF LEN(@ParentList) = 0	BEGIN RETURN END
	
	DECLARE @SIndx as int;
	DECLARE @CIndx as int;
	DECLARE @ParentID as int;

	DECLARE @MaxOrder as int;

	DECLARE @Records as int;

	SET @SIndx = 0;
	WHILE @SIndx <= LEN(@ParentList)
	BEGIN
		SET @Records = 0;
		-- Loop through out the parent's list
		SET @CIndx = CHARINDEX(',', @ParentList, @SIndx)	-- Next keyword starting index (1-Based Index)
		IF @CIndx = 0 BEGIN SET @CIndx = LEN(@ParentList)+ 1 END	-- If no more keywords, set next starting index to not exist
		SET @ParentID = CAST(SUBSTRING(@ParentList, @SIndx, @CIndx - @SIndx) AS int)
		
		SELECT @Records = Count(1) 
		FROM dbo.tblKartrisProductCategoryLink
		WHERE PCAT_ProductID = @ProductID AND PCAT_CategoryID = @ParentID;

		IF @Records = 0
		BEGIN
			SELECT @MaxOrder = Max(PCAT_OrderNo) FROM dbo.tblKartrisProductCategoryLink WHERE PCAT_CategoryID = @ParentID;
			IF @MaxOrder is NULL BEGIN SET @MaxOrder = 0 END
			INSERT INTO [tblKartrisProductCategoryLink]
			VALUES (@ProductID, @ParentID, @MaxOrder + 1); 
		END
		
		SET @SIndx = @CIndx + 1;
	END;
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisKnowledgeBase_GetByID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisKnowledgeBase_GetByID]
(
	@LANG_ID as tinyint,
	@KB_ID as int
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	-- Insert statements for procedure here
	SELECT *
	FROM dbo.vKartrisTypeKnowledgeBase
	WHERE LANG_ID = @LANG_ID AND KB_ID = @KB_ID

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisKnowledgeBase_Get]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisKnowledgeBase_Get]
(
	@LANG_ID as tinyint
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	-- Insert statements for procedure here
	SELECT * 
	FROM dbo.vKartrisTypeKnowledgeBase
	WHERE LANG_ID = @LANG_ID
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisProducts_Get]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisProducts_Get]
(
	@LANG_ID tinyint
)
AS
	SET NOCOUNT ON;
SELECT        vKartrisTypeProducts.P_ID, vKartrisTypeProducts.P_Name
FROM            vKartrisTypeProducts
WHERE        (LANG_ID = @LANG_ID)
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisRelatedProducts_GetByParentID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ========================================================
-- Author:		Mohammad
-- Create date: 
-- Description:	
-- ========================================================
CREATE PROCEDURE [dbo].[_spKartrisRelatedProducts_GetByParentID]
(
	@ParentID int
)
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT	tblKartrisRelatedProducts.RP_ParentID, tblKartrisRelatedProducts.RP_ChildID
	FROM    tblKartrisRelatedProducts 
	WHERE	RP_ParentID = @ParentID;
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisRelatedProducts_DeleteByParentID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ========================================================
-- Author:		Mohammad
-- Create date: 
-- Description:	
-- ========================================================
CREATE PROCEDURE [dbo].[_spKartrisRelatedProducts_DeleteByParentID]
(
	@ParentID int
)
AS
BEGIN
	
	SET NOCOUNT ON;
	
	DELETE FROM    tblKartrisRelatedProducts 
	WHERE	RP_ParentID = @ParentID;
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisRelatedProducts_AddChildList]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisRelatedProducts_AddChildList]
(
	@ParentID as int,
	@ChildList as nvarchar(MAX)
)
AS
BEGIN
	SET NOCOUNT OFF;
	
	IF LEN(@ChildList) = 0	BEGIN RETURN END

	DECLARE @SIndx as int;
	DECLARE @CIndx as int;
	DECLARE @ChildID as int;
	
	SET @SIndx = 0;
	WHILE @SIndx <= LEN(@ChildList)
	BEGIN

		-- Loop through out the parent's list
		SET @CIndx = CHARINDEX(',', @ChildList, @SIndx)	-- Next keyword starting index (1-Based Index)
		IF @CIndx = 0 BEGIN SET @CIndx = LEN(@ChildList)+ 1 END	-- If no more keywords, set next starting index to not exist
		SET @ChildID = CAST(SUBSTRING(@ChildList, @SIndx, @CIndx - @SIndx) AS int)
		INSERT INTO tblKartrisRelatedProducts
		VALUES (@ParentID, @ChildID); 
		SET @SIndx = @CIndx + 1;
	END;
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisOrders_Delete]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ==============================================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	Deletes an Order
-- ===============================================================
CREATE PROCEDURE [dbo].[_spKartrisOrders_Delete]
(
	@O_ID as int,
	@O_DeleteReturnStock as bit
)
AS
BEGIN
	SET NOCOUNT ON;
	IF (@O_DeleteReturnStock = 1)
	BEGIN


			DECLARE @V_Codenumber nvarchar(25)
			DECLARE @IR_Quantity real
			DECLARE tnames_cursor CURSOR
		FOR
	-- check if return stock flag is on
		SELECT     tblKartrisInvoiceRows.IR_VersionCode, tblKartrisInvoiceRows.IR_Quantity
		FROM         tblKartrisOrders INNER JOIN
							  tblKartrisInvoiceRows ON tblKartrisOrders.O_ID = tblKartrisInvoiceRows.IR_OrderNumberID
		WHERE     (tblKartrisOrders.O_ID = @O_ID)

		
		OPEN tnames_cursor
		--loop through the invoicerows records and return the stocks back to individual versions
		FETCH NEXT FROM tnames_cursor INTO @V_Codenumber,@IR_Quantity
		WHILE (@@FETCH_STATUS <> -1)
		BEGIN
			IF (@@FETCH_STATUS <> -2)
			BEGIN 
				UPDATE tblKartrisVersions SET V_Quantity= V_Quantity + @IR_Quantity WHERE V_CodeNumber=@V_Codenumber AND V_QuantityWarnLevel<>0;
			END
			FETCH NEXT FROM tnames_cursor INTO @V_Codenumber,@IR_Quantity
		END
		CLOSE tnames_cursor
		DEALLOCATE tnames_cursor ;

	END
;

		--delete the order invoicerows
		DELETE FROM dbo.tblKartrisInvoiceRows
		WHERE IR_OrderNumberID = @O_ID;



		--delete the order promotion records
		DELETE  FROM dbo.tblKartrisOrdersPromotions
		WHERE OrderID = @O_ID;
		SELECT @O_ID;


	
	DELETE FROM dbo.tblKartrisOrderPaymentLink WHERE OP_OrderID = @O_ID;


	
		--delete the main order record
		DELETE  FROM dbo.tblKartrisOrders
		WHERE O_ID = @O_ID;
		SELECT @O_ID;
	
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisOptions_GetByGroupID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisOptions_GetByGroupID]
(
	@LANG_ID tinyint,
	@OptionGroupID smallint
)
AS
	SET NOCOUNT ON;
SELECT     vKartrisTypeOptions.OPT_ID, vKartrisTypeOptions.LANG_ID, vKartrisTypeOptions.OPT_Name, vKartrisTypeOptions.OPT_OptionGroupID, 
					  vKartrisTypeOptions.OPT_CheckBoxValue, vKartrisTypeOptions.OPT_DefPriceChange, vKartrisTypeOptions.OPT_DefWeightChange, 
					  vKartrisTypeOptions.OPT_DefOrderByValue, tblKartrisOptionGroups.OPTG_OptionDisplayType
FROM         vKartrisTypeOptions INNER JOIN
					  tblKartrisOptionGroups ON vKartrisTypeOptions.OPT_OptionGroupID = tblKartrisOptionGroups.OPTG_ID
WHERE     (vKartrisTypeOptions.LANG_ID = @LANG_ID) AND (vKartrisTypeOptions.OPT_OptionGroupID = @OptionGroupID)
ORDER BY vKartrisTypeOptions.OPT_DefOrderByValue, vKartrisTypeOptions.OPT_Name
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisAttributeValues_GetByProductID]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisAttributeValues_GetByProductID]
(
	@ProductID as int
)
AS
BEGIN
	
	SET NOCOUNT ON;

	SELECT ATTRIBV_ID, ATTRIBV_AttributeID
	FROM dbo.tblKartrisAttributeValues
	WHERE ATTRIBV_ProductID = @ProductID;

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisAttributeValues_DeleteByProductID]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisAttributeValues_DeleteByProductID]
(
	@ProductID as int
)
AS
BEGIN
	
	SET NOCOUNT ON;


	DELETE 
	FROM	tblKartrisLanguageElements
	FROM    tblKartrisAttributeValues	INNER JOIN	tblKartrisLanguageElements ON 
			tblKartrisAttributeValues.ATTRIBV_ID = tblKartrisLanguageElements.LE_ParentID
	WHERE   (tblKartrisAttributeValues.ATTRIBV_ProductID = @ProductID) AND (tblKartrisLanguageElements.LE_TypeID = 14);



	DELETE
	FROM dbo.tblKartrisAttributeValues
	WHERE ATTRIBV_ProductID = @ProductID;


END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisAttributeValues_Add]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisAttributeValues_Add]
(
	@ProductID as int,
	@AttributeID as int,
	@NewAttributeValue_ID as int OUT
)
AS
BEGIN
	
	SET NOCOUNT ON;



	INSERT INTO dbo.tblKartrisAttributeValues
	VALUES (@ProductID, @AttributeID);

	SELECT @NewAttributeValue_ID = SCOPE_IDENTITY();
	


END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCustomerGroups_GetForCache]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ==============================================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	
-- ===============================================================
CREATE PROCEDURE [dbo].[_spKartrisCustomerGroups_GetForCache]
AS
BEGIN
	SET NOCOUNT ON;
	SELECT        vKartrisTypeCustomerGroups.*
	FROM            vKartrisTypeCustomerGroups
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCustomerGroups_Get]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ==============================================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	
-- ===============================================================
CREATE PROCEDURE [dbo].[_spKartrisCustomerGroups_Get]
(
	@LANG_ID as tinyint
)
AS
BEGIN
	SET NOCOUNT ON;
	SELECT        vKartrisTypeCustomerGroups.*
	FROM            vKartrisTypeCustomerGroups
	WHERE        (LANG_ID = @LANG_ID) AND CG_Live = 1
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCategories_Get]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisCategories_Get]
(
	@LANG_ID tinyint
)
AS
	SET NOCOUNT ON;
SELECT        vKartrisTypeCategories.*
FROM            vKartrisTypeCategories
WHERE        (CAT_ID <> 0) AND (LANG_ID = @LANG_ID)
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisAttributes_GetByLanguage]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisAttributes_GetByLanguage]
(
	@LANG_ID as tinyint
)
AS
	SET NOCOUNT ON;
SELECT        vKartrisTypeAttributes.*
FROM            vKartrisTypeAttributes
WHERE ( LANG_ID = @LANG_ID)
ORDER BY ATTRIB_OrderByValue
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisDestinations_GetByZone]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	Get All Destinations list
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisDestinations_GetByZone]
(
	@D_ShippingZoneID as tinyint,
	@LANG_ID as tinyint
)
AS
BEGIN
	SET NOCOUNT ON;
	SELECT	*
	FROM	vKartrisTypeDestinations
	WHERE	D_ShippingZoneID = @D_ShippingZoneID AND LANG_ID = @LANG_ID
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisDestinations_Get]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ==============================================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	Get Shipping Methods - by Destination and Boundary
-- ===============================================================
CREATE PROCEDURE [dbo].[_spKartrisDestinations_Get]
(
	@LANG_ID as tinyint
)
AS
BEGIN
	SET NOCOUNT ON;
	SELECT *
	FROM dbo.vKartrisTypeDestinations
	WHERE LANG_ID = @LANG_ID;

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisDB_GetTaskList]    Script Date: 19/05/2016 16:27:51 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisDB_GetTaskList]
(	
	@NoOrdersToInvoice as int OUTPUT,
	@NoOrdersNeedPayment as int OUTPUT,
	@NoOrdersToDispatch as int OUTPUT,
	@NoStockWarnings as int OUTPUT,
	@NoOutOfStock as int OUTPUT,
	@NoReviewsWaiting as int OUTPUT,
	@NoAffiliatesWaiting as int OUTPUT,
	@NoCustomersWaitingRefunds as int OUTPUT,
	@NoCustomersInArrears as int OUTPUT
)
AS
BEGIN

	SELECT @NoOrdersToInvoice = Count(O_ID) FROM dbo.tblKartrisOrders WHERE O_Invoiced = 'False' AND O_Paid = 'False' AND O_Sent = 'True' AND O_Cancelled = 'False';
	SELECT @NoOrdersNeedPayment = Count(O_ID) FROM dbo.tblKartrisOrders WHERE O_Paid = 'False' AND O_Invoiced = 'True' AND O_Sent = 'True' AND O_Cancelled = 'False';
	SELECT @NoOrdersToDispatch = Count(O_ID) FROM dbo.tblKartrisOrders WHERE O_Sent = 'True' AND O_Paid = 'True' AND O_Shipped = 'False' AND O_Cancelled = 'False';
	SELECT @NoStockWarnings = Count(DISTINCT V_ID) FROM dbo.vKartrisVersionsStock WHERE V_QuantityWarnLevel >= V_Quantity AND V_QuantityWarnLevel <> 0 OPTION (FORCE ORDER);
	SELECT @NoOutOfStock = Count(DISTINCT V_ID) FROM dbo.vKartrisVersionsStock WHERE V_Quantity <= 0 AND V_QuantityWarnLevel <> 0 OPTION (FORCE ORDER);
	SELECT @NoReviewsWaiting = Count(REV_ID) FROM dbo.tblKartrisReviews WHERE REV_Live = 'a';
	SELECT @NoAffiliatesWaiting  = Count(U_ID) FROM dbo.tblKartrisUsers WHERE U_IsAffiliate = 'True' AND U_AffiliateCommission = 0;
	SELECT @NoCustomersWaitingRefunds  = Count(U_ID) FROM dbo.tblKartrisUsers WHERE U_CustomerBalance > 0;
	SELECT @NoCustomersInArrears  = Count(U_ID) FROM dbo.tblKartrisUsers WHERE U_CustomerBalance < 0;
END

GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCategoryHierarchy_GetTotalSubcategories_s]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisCategoryHierarchy_GetTotalSubcategories_s]
(
	@ParentID as int,
	@TotalSubcategories as int OUT
)
AS
	SET NOCOUNT ON;
	
	SELECT @TotalSubcategories = Count(1)
	FROM         tblKartrisCategoryHierarchy 
	WHERE     (tblKartrisCategoryHierarchy.CH_ParentID = @ParentID)
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCategoryHierarchy_GetSubcategories]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisCategoryHierarchy_GetSubcategories]
(
	@CategoryID as int
)
AS
BEGIN
	SET NOCOUNT ON;

		
	SELECT CH_ParentID, CH_ChildID
	FROM dbo.tblKartrisCategoryHierarchy
	WHERE CH_ParentID = @CategoryID;
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCategoryHierarchy_GetParentsByID]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisCategoryHierarchy_GetParentsByID]
(
	@LANG_ID as tinyint,
	@ChildID as int
)
AS
	SET NOCOUNT ON;
SELECT tblKartrisCategoryHierarchy.CH_ChildID AS CAT_ID, tblKartrisCategoryHierarchy.CH_ParentID AS ParentID, tblKartrisLanguageElements.LE_Value AS ParentName
FROM         tblKartrisCategoryHierarchy LEFT OUTER JOIN
					  tblKartrisLanguageElements ON tblKartrisCategoryHierarchy.CH_ParentID = tblKartrisLanguageElements.LE_ParentID
WHERE     (tblKartrisLanguageElements.LE_LanguageID = @LANG_ID) AND (tblKartrisLanguageElements.LE_TypeID = 3) 
		AND (tblKartrisLanguageElements.LE_FieldID = 1) AND (tblKartrisCategoryHierarchy.CH_ChildID = @ChildID)
		AND (tblKartrisCategoryHierarchy.CH_ParentID <> 0)
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCategoryHierarchy_GetOtherParents]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisCategoryHierarchy_GetOtherParents]
(
	@CategoryID as int,
	@ExecludedParentID as int
)
AS
BEGIN
	SET NOCOUNT ON;

	
	SELECT CH_ParentID, CH_ChildID
	FROM dbo.tblKartrisCategoryHierarchy
	WHERE CH_ParentID <> @ExecludedParentID AND CH_ChildID = @CategoryID;
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCategoryHierarchy_GetByLanguageID]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ======================================================
-- Author:		Mohammad
-- Create date: 02/14/2008 12:22:45
-- Description:	generate the category menu hierarchy (Same as the one that Medz created except Live = 1)
-- ======================================================
CREATE PROCEDURE [dbo].[_spKartrisCategoryHierarchy_GetByLanguageID]
	(@LANG_ID tinyint)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT     tblKartrisCategoryHierarchy.CH_ChildID AS CAT_ID, tblKartrisCategoryHierarchy.CH_ParentID AS ParentID, vKartrisTypeCategories.CAT_Name AS Title, 
					  vKartrisTypeCategories.CAT_Desc AS Description
	FROM         vKartrisTypeCategories INNER JOIN
						  tblKartrisCategoryHierarchy ON vKartrisTypeCategories.CAT_ID = tblKartrisCategoryHierarchy.CH_ChildID
	WHERE     (vKartrisTypeCategories.LANG_ID = @LANG_ID)
	ORDER BY tblKartrisCategoryHierarchy.CH_OrderNo
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCategoryHierarchy_DeleteLink]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisCategoryHierarchy_DeleteLink]
(
	@ChildID int,
	@ParentID int
)
AS
BEGIN
	
	SET NOCOUNT OFF;

	DELETE FROM tblKartrisCategoryHierarchy WHERE ([CH_ChildID] = @ChildID AND [CH_ParentID] = @ParentID);


END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCategoryHierarchy_DeleteByChild]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisCategoryHierarchy_DeleteByChild]
(
	@ChildID int
)
AS
BEGIN
	
	SET NOCOUNT OFF;

	DELETE FROM tblKartrisCategoryHierarchy WHERE ([CH_ChildID] = @ChildID);


END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCategoryHierarchy_ChangeSortValue]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisCategoryHierarchy_ChangeSortValue]
(
	@ParentID as int,
	@CatID as int,
	@Direction as char
)
AS
BEGIN
	SET NOCOUNT OFF;
	

		
	DECLARE @CatOrder as int;
	SELECT @CatOrder = CH_OrderNo 
	FROM dbo.tblKartrisCategoryHierarchy 
	WHERE CH_ParentID = @ParentID AND CH_ChildID = @CatID;

	-- *********************************************************
	-- Need to check if there are siblings with same sort order
	--  if yes, we need to reset those values
	DECLARE @DuplicateOrders as int;
	SELECT @DuplicateOrders = COUNT(1)
	FROM dbo.tblKartrisCategoryHierarchy
	WHERE CH_OrderNo = @CatOrder AND CH_ParentID = @ParentID;
	
	IF (SELECT COUNT(1)	FROM dbo.tblKartrisCategoryHierarchy WHERE CH_OrderNo = @CatOrder AND CH_ParentID = @ParentID) > 1 BEGIN
		DECLARE @MaxNo as int;
		SELECT @MaxNo = MAX(CH_OrderNo) 
		FROM dbo.tblKartrisCategoryHierarchy  
		WHERE CH_ParentID = @ParentID AND CH_ChildID <> @CatID;
		
		WHILE (SELECT COUNT(1)	FROM dbo.tblKartrisCategoryHierarchy WHERE CH_OrderNo = @CatOrder AND CH_ParentID = @ParentID) > 1
		BEGIN
			UPDATE TOP(1) dbo.tblKartrisCategoryHierarchy
			SET CH_OrderNo = @MaxNo + 1
			WHERE CH_ParentID = @ParentID AND CH_OrderNo = @CatOrder AND CH_ChildID <> @CatID;
			SET @MaxNo = @MaxNo + 1;
		END
	END
	-- *********************************************************

	DECLARE @SwitchCatID as int, @SwitchOrder as int;
	IF @Direction = 'u'
	BEGIN
		SELECT @SwitchOrder = MAX(CH_OrderNo) 
		FROM dbo.tblKartrisCategoryHierarchy 
		WHERE CH_ParentID = @ParentID AND CH_OrderNo < @CatOrder;

		SELECT TOP(1) @SwitchCatID = CH_ChildID
		FROM dbo.tblKartrisCategoryHierarchy 
		WHERE CH_ParentID = @ParentID AND CH_OrderNo = @SwitchOrder;		
	END
	ELSE
	BEGIN
		SELECT @SwitchOrder = Min(CH_OrderNo) 
		FROM dbo.tblKartrisCategoryHierarchy 
		WHERE CH_ParentID = @ParentID AND CH_OrderNo > @CatOrder;

		SELECT TOP(1) @SwitchCatID = CH_ChildID
		FROM dbo.tblKartrisCategoryHierarchy 
		WHERE CH_ParentID = @ParentID AND CH_OrderNo = @SwitchOrder;
	END;

UPDATE [tblKartrisCategoryHierarchy]
	SET CH_OrderNo = @SwitchOrder
	WHERE CH_ParentID = @ParentID AND CH_ChildID = @CatID; 

	UPDATE [tblKartrisCategoryHierarchy]
	SET CH_OrderNo = @CatOrder
	WHERE CH_ParentID = @ParentID AND CH_ChildID = @SwitchCatID;

		
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCategoryHierarchy_AddParentList]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisCategoryHierarchy_AddParentList]
(
	@ParentList as nvarchar(MAX),
	@ChildID int
)
AS
BEGIN
	SET NOCOUNT OFF;
	
	IF LEN(@ParentList) = 0	BEGIN RETURN END
	
	DECLARE @SIndx as int;
	DECLARE @CIndx as int;
	DECLARE @ParentID as int;

	DECLARE @MaxOrder as int;

	SET @SIndx = 0;
	WHILE @SIndx <= LEN(@ParentList)
	BEGIN

		-- Loop through out the parent's list
		SET @CIndx = CHARINDEX(',', @ParentList, @SIndx)	-- Next keyword starting index (1-Based Index)
		IF @CIndx = 0 BEGIN SET @CIndx = LEN(@ParentList)+ 1 END	-- If no more keywords, set next starting index to not exist
		SET @ParentID = CAST(SUBSTRING(@ParentList, @SIndx, @CIndx - @SIndx) AS int)
		SELECT @MaxOrder = Max(CH_OrderNo) FROM dbo.tblKartrisCategoryHierarchy WHERE CH_ParentID = @ParentID;
		IF @MaxOrder is NULL BEGIN SET @MaxOrder = 0 END
		INSERT INTO [tblKartrisCategoryHierarchy]
		VALUES (@ParentID, @ChildID, @MaxOrder + 1); 
		SET @SIndx = @CIndx + 1;
	END;

		

--	DELETE FROM [tblKartrisProductCategoryLink] 
--	WHERE [PCAT_ProductID] = @ProductID;
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCategories_SearchCategoriesByName]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisCategories_SearchCategoriesByName]
(
	@Key nvarchar(50),
	@LANG_ID tinyint
)
AS
	SET NOCOUNT ON;
SELECT        CAT_ID, CAT_Name
FROM            vKartrisTypeCategories
WHERE        (CAT_ID <> 0) AND (LANG_ID = @LANG_ID) AND (CAT_Name LIKE @Key + '%')
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCategories_GetWithProductsOnly]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisCategories_GetWithProductsOnly]
(
	@LANG_ID tinyint
)
AS
	SET NOCOUNT ON;
SELECT   DISTINCT  vKartrisTypeCategories.CAT_ID, vKartrisTypeCategories.CAT_Name
FROM         vKartrisTypeCategories INNER JOIN
					  tblKartrisProductCategoryLink ON vKartrisTypeCategories.CAT_ID = tblKartrisProductCategoryLink.PCAT_CategoryID
WHERE     (vKartrisTypeCategories.CAT_ID <> 0) AND (vKartrisTypeCategories.LANG_ID = @LANG_ID)
ORDER BY vKartrisTypeCategories.CAT_Name
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCategories_GetTotalByParentID]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	Get the total no. of Products in Category "used for ItemPager"
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisCategories_GetTotalByParentID]
			(
			@LANG_ID as tinyint,
			@ParentID as int,
			@TotalCategories as int OUTPUT
			)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT  @TotalCategories = COUNT(vKartrisTypeCategories.CAT_ID)
		FROM    tblKartrisCategoryHierarchy INNER JOIN
				vKartrisTypeCategories ON tblKartrisCategoryHierarchy.CH_ChildID = vKartrisTypeCategories.CAT_ID INNER JOIN
				tblKartrisCategories ON tblKartrisCategoryHierarchy.CH_ParentID = tblKartrisCategories.CAT_ID
		WHERE   (tblKartrisCategoryHierarchy.CH_ParentID = @ParentID) AND (vKartrisTypeCategories.LANG_ID = @LANG_ID)

	
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCategories_GetTotalByLanguageID]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisCategories_GetTotalByLanguageID]
(
	@LANG_ID as tinyint,
	@NoOfCategories as int OUTPUT
)
AS
	SET NOCOUNT ON;
SELECT     @NoOfCategories = COUNT(CAT_Name)
FROM         vKartrisTypeCategories
WHERE     (LANG_ID = @LANG_ID) AND (NOT (CAT_Name IS NULL)) AND (CAT_ID <> 0)
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCategories_GetStatus]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ===================================================
-- Author:		Mohammad
-- Create date: 
-- Description:	
-- ===================================================
CREATE PROCEDURE [dbo].[_spKartrisCategories_GetStatus]
(
	@CAT_ID int,
	@CategoryLive as bit OUT,
	@NoOfLiveParents as int OUT,
	@CategoryCustomerGroup as smallint OUT
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	-- Check if the product is live, Type, CustomerGroup
	SELECT @CategoryLive = CAT_Live, @CategoryCustomerGroup = CAT_CustomerGroupID
	FROM   dbo.tblKartrisCategories
	WHERE  (CAT_ID = @CAT_ID);

	-- No of live parents
	SELECT     @NoOfLiveParents = Count(1)
	FROM         tblKartrisCategories INNER JOIN tblKartrisCategoryHierarchy 
				ON tblKartrisCategories.CAT_ID = tblKartrisCategoryHierarchy.CH_ParentID
	WHERE     (tblKartrisCategoryHierarchy.CH_ChildID = @CAT_ID) AND (tblKartrisCategories.CAT_Live = 1)
		

	

	
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCategories_GetPageByParentID]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisCategories_GetPageByParentID]
(
	@LANG_ID as tinyint, 
	@ParentID as int,
	@PageIndex as tinyint, -- 0 Based index
	@RowsPerPage as smallint
)
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @StartRowNumber as int;
	SET @StartRowNumber = (@PageIndex * @RowsPerPage) + 1;
	DECLARE @EndRowNumber as int;
	SET @EndRowNumber = @StartRowNumber + @RowsPerPage - 1;

	DECLARE @OrderBy as nvarchar(50), @OrderDirection as char(1)

	SELECT @OrderBy = CAT_OrderCategoriesBy, @OrderDirection = CAT_CategoriesSortDirection
	FROM dbo.tblKartrisCategories
	WHERE CAT_ID = @ParentID;

	IF @OrderBy is NULL OR @OrderBy = 'd'
	BEGIN 
		SELECT @OrderBy = CFG_Value FROM tblKartrisConfig WHERE CFG_Name = 'frontend.categories.display.sortdefault';
	END;
	IF @OrderDirection is NULL OR @OrderDirection = '' BEGIN 
		SELECT @OrderDirection = CFG_Value FROM tblKartrisConfig WHERE CFG_Name = 'frontend.categories.display.sortdirection';
	END;

	DECLARE @SortByValue as bit;
	SET @SortByValue = 0;
	IF @OrderBy = 'CH_OrderNo' BEGIN SET @SortByValue = 1 END;
	
	IF @ParentID = 0 
	BEGIN
		 SET @SortByValue = 1;
		 SET @OrderBy = 'CH_OrderNo';
	END;
	
	WITH CategoryList AS
	(
		SELECT	CASE 
				WHEN (@OrderBy = 'CAT_ID' AND @OrderDirection = 'A') THEN	ROW_NUMBER() OVER (ORDER BY tblKartrisCategories.CAT_ID ASC) 
				WHEN (@OrderBy = 'CAT_ID' AND @OrderDirection = 'D') THEN	ROW_NUMBER() OVER (ORDER BY tblKartrisCategories.CAT_ID DESC) 
				WHEN (@OrderBy = 'CAT_Name' AND @OrderDirection = 'A') THEN ROW_NUMBER() OVER (ORDER BY CAT_Name ASC) 
				WHEN (@OrderBy = 'CAT_Name' AND @OrderDirection = 'D') THEN ROW_NUMBER() OVER (ORDER BY CAT_Name DESC) 
				WHEN (@OrderBy = 'CH_OrderNo' AND @OrderDirection = 'A') THEN ROW_NUMBER() OVER (ORDER BY CH_OrderNo ASC) 
				WHEN (@OrderBy = 'CH_OrderNo' AND @OrderDirection = 'D') THEN ROW_NUMBER() OVER (ORDER BY CH_OrderNo DESC) 
				END AS Row,
				vKartrisTypeCategories.CAT_ID, vKartrisTypeCategories.CAT_Name, vKartrisTypeCategories.CAT_Desc, tblKartrisCategories.CAT_ProductDisplayType AS Parent_ProductDisplay, 
				tblKartrisCategories.CAT_SubCatDisplayType AS Parent_SubCategoryDisplay, @SortByValue AS SortByValue, vKartrisTypeCategories.CAT_Live
		FROM    tblKartrisCategoryHierarchy INNER JOIN
				vKartrisTypeCategories ON tblKartrisCategoryHierarchy.CH_ChildID = vKartrisTypeCategories.CAT_ID INNER JOIN
				tblKartrisCategories ON tblKartrisCategoryHierarchy.CH_ParentID = tblKartrisCategories.CAT_ID
		WHERE   (tblKartrisCategoryHierarchy.CH_ParentID = @ParentID) AND (vKartrisTypeCategories.LANG_ID = @LANG_ID)
		
	)

	SELECT *
	FROM CategoryList
	WHERE Row BETWEEN @StartRowNumber AND @EndRowNumber
	ORDER BY Row ASC;

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCategories_GetNameByCategoryID]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ========================================================
-- Author:		Medz
-- Create date: 04/13/2008 11:53:30
-- Description:	Get the category name for the SEO Friendly Links.
-- ========================================================
CREATE PROCEDURE [dbo].[_spKartrisCategories_GetNameByCategoryID]
(
	@CAT_ID int,
	@LANG_ID tinyint
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	SELECT CAT_Name
	FROM   vKartrisTypeCategories
	WHERE  (CAT_ID = @CAT_ID) AND (LANG_ID = @LANG_ID)
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisAttributes_Delete]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisAttributes_Delete]
(
	@AttributeID as int
)
AS
BEGIN
	SET NOCOUNT ON;

	
		DELETE FROM dbo.tblKartrisLanguageElements 
		WHERE (LE_TypeID = 14 AND LE_ParentID IN (SELECT ATTRIBV_ID FROM dbo.tblKartrisAttributeValues WHERE ATTRIBV_AttributeID = @AttributeID))
			OR (LE_TypeID = 4 AND LE_ParentID = @AttributeID);
	
		DELETE FROM dbo.tblKartrisAttributeValues WHERE ATTRIBV_AttributeID = @AttributeID;
		DELETE FROM tblKartrisAttributes WHERE ATTRIB_ID = @AttributeID;
	
END
GO
/****** Object:  UserDefinedFunction [dbo].[fnKartrisSuppliers_GetNameByVersionCode]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: 4-Mar-2012
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnKartrisSuppliers_GetNameByVersionCode](
	@VersionCode as nvarchar(25)
)
RETURNS nvarchar(50)
AS
BEGIN

	DECLARE @Result nvarchar(50);

	SELECT   @Result = tblKartrisSuppliers.SUP_Name
	FROM         tblKartrisVersions INNER JOIN
						  tblKartrisProducts ON tblKartrisVersions.V_ProductID = tblKartrisProducts.P_ID INNER JOIN
						  tblKartrisSuppliers ON tblKartrisProducts.P_SupplierID = tblKartrisSuppliers.SUP_ID
	WHERE     (tblKartrisVersions.V_CodeNumber = @VersionCode)

	RETURN @Result

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisShippingMethods_Get]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ==============================================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	Get Shipping Methods - by Destination and Boundary
-- ===============================================================
CREATE PROCEDURE [dbo].[_spKartrisShippingMethods_Get]
(
	@LANG_ID as tinyint
)
AS
BEGIN
	SET NOCOUNT ON;
	SELECT *
	FROM dbo.vKartrisTypeShippingMethods
	WHERE LANG_ID = @LANG_ID
	ORDER BY SM_OrderByValue;

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisReviews_Update]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisReviews_Update]
(
	@LanguageID tinyint,
	@CustomerID int,
	@Title nvarchar(60),
	@Text nvarchar(MAX),
	@Rating tinyint,
	@Name nvarchar(30),
	@Email nvarchar(75),
	@Location nvarchar(30),
	@Live char(1),
	@Original_ID smallint,
	@NowOffset as datetime
)
AS
	SET NOCOUNT OFF;
	
UPDATE [tblKartrisReviews] 
SET [REV_LanguageID] = @LanguageID, [REV_CustomerID] = @CustomerID, 
	[REV_Title] = @Title, [REV_Text] = @Text, [REV_Rating] = @Rating, 
	[REV_Name] = @Name, [REV_Email] = @Email, [REV_Location] = @Location, 
	[REV_DateLastUpdated] = @NowOffset, [REV_Live] = @Live 
WHERE (([REV_ID] = @Original_ID));
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisReviews_GetByProductID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisReviews_GetByProductID]
(
	@ProductID int,
	@LanguageID tinyint
)
AS
	SET NOCOUNT ON;
SELECT     tblKartrisReviews.REV_ID, tblKartrisReviews.REV_ProductID, tblKartrisReviews.REV_LanguageID, tblKartrisReviews.REV_CustomerID, tblKartrisReviews.REV_Title, 
					  tblKartrisReviews.REV_Text, tblKartrisReviews.REV_Rating, tblKartrisReviews.REV_Name, tblKartrisReviews.REV_Email, tblKartrisReviews.REV_Location, 
					  tblKartrisReviews.REV_DateCreated, tblKartrisReviews.REV_DateLastUpdated, tblKartrisReviews.REV_Live, vKartrisTypeProducts.P_Name
FROM         tblKartrisReviews INNER JOIN
					  vKartrisTypeProducts ON tblKartrisReviews.REV_ProductID = vKartrisTypeProducts.P_ID AND 
					  tblKartrisReviews.REV_LanguageID = vKartrisTypeProducts.LANG_ID
WHERE     (tblKartrisReviews.REV_ProductID = @ProductID) AND (tblKartrisReviews.REV_LanguageID = @LanguageID)
ORDER BY tblKartrisReviews.REV_DateLastUpdated DESC
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisReviews_GetByLanguage]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisReviews_GetByLanguage]
(
	@LanguageID tinyint
)
AS
	SET NOCOUNT ON;
SELECT     tblKartrisReviews.REV_ID, tblKartrisReviews.REV_ProductID, tblKartrisReviews.REV_LanguageID, tblKartrisReviews.REV_CustomerID, tblKartrisReviews.REV_Title, 
					  tblKartrisReviews.REV_Text, tblKartrisReviews.REV_Rating, tblKartrisReviews.REV_Name, tblKartrisReviews.REV_Email, tblKartrisReviews.REV_Location, 
					  tblKartrisReviews.REV_DateCreated, tblKartrisReviews.REV_DateLastUpdated, tblKartrisReviews.REV_Live, vKartrisTypeProducts.P_Name
FROM         tblKartrisReviews INNER JOIN
					  vKartrisTypeProducts ON tblKartrisReviews.REV_ProductID = vKartrisTypeProducts.P_ID AND 
					  tblKartrisReviews.REV_LanguageID = vKartrisTypeProducts.LANG_ID
WHERE     (tblKartrisReviews.REV_LanguageID = @LanguageID)
ORDER BY tblKartrisReviews.REV_DateLastUpdated DESC
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisReviews_GetByID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisReviews_GetByID]
(
	@ReviewID smallint
)
AS
	SET NOCOUNT ON;
SELECT     tblKartrisReviews.*
FROM         tblKartrisReviews 
WHERE     (tblKartrisReviews.REV_ID = @ReviewID)
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisReviews_Get]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisReviews_Get]
AS
	SET NOCOUNT ON;
SELECT     tblKartrisReviews.*
FROM         tblKartrisReviews
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisReviews_Delete]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisReviews_Delete]
(
	@Original_ID smallint
)
AS
	SET NOCOUNT OFF;
	
	DELETE FROM [tblKartrisReviews] WHERE (([REV_ID] = @Original_ID));
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisReviews_Add]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisReviews_Add]
(
	@ProductID int,
	@LanguageID tinyint,
	@CustomerID int,
	@Title nvarchar(60),
	@Text nvarchar(MAX),
	@Rating tinyint,
	@Name nvarchar(30),
	@Email nvarchar(75),
	@Location nvarchar(30),
	@Live CHAR(1),
	@NowOffset as datetime
)
AS
	SET NOCOUNT OFF;
	
	INSERT INTO [tblKartrisReviews] 
	([REV_ProductID], [REV_LanguageID], [REV_CustomerID], [REV_Title], [REV_Text], [REV_Rating], [REV_Name], [REV_Email], [REV_Location], [REV_DateCreated], [REV_DateLastUpdated], [REV_Live]) 
	VALUES 
	(@ProductID, @LanguageID, @CustomerID, @Title, @Text, @Rating, @Name, @Email, @Location, @NowOffset, @NowOffset, @Live);
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisProducts_GetFeaturedProducts]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammd
-- =============================================

CREATE PROCEDURE [dbo].[_spKartrisProducts_GetFeaturedProducts]
(
	@LANG_ID as tinyint
)
AS
BEGIN
	SET NOCOUNT ON;


	SELECT     P_ID As ProductID, P_Name as ProductName, P_Featured as ProductPriority
	FROM         dbo.vKartrisTypeProducts
	WHERE     (P_Featured <> 0) AND (LANG_ID = @LANG_ID)
	ORDER BY P_Featured DESC

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisProducts_GetBySupplier]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ===================================================
-- Author:		Medz
-- Create date: 02/12/2008 13:53:30
-- Description:	Replaces the [spKartris_PROD_Select]
-- ===================================================
CREATE PROCEDURE [dbo].[_spKartrisProducts_GetBySupplier]
(
	@LANG_ID tinyint,
	@SupplierID as smallint
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	SELECT P_ID, P_Name
	FROM   vKartrisTypeProducts
	WHERE  (LANG_ID = @LANG_ID) AND (P_SupplierID = @SupplierID)
	
END
GO
/****** Object:  View [dbo].[vKartrisCategoryHierarchy]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vKartrisCategoryHierarchy]
AS
SELECT  dbo.tblKartrisCategoryHierarchy.CH_ChildID, dbo.vKartrisTypeCategories.LANG_ID, 
		dbo.vKartrisTypeCategories.CAT_ID, dbo.vKartrisTypeCategories.CAT_Name, 
		dbo.vKartrisTypeCategories.CAT_Desc
FROM    dbo.tblKartrisCategoryHierarchy RIGHT OUTER JOIN dbo.vKartrisTypeCategories 
		ON dbo.tblKartrisCategoryHierarchy.CH_ParentID = dbo.vKartrisTypeCategories.CAT_ID
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
	  Begin PaneConfiguration = 0
		 NumPanes = 4
		 Configuration = "(H (1[40] 4[20] 2[20] 3) )"
	  End
	  Begin PaneConfiguration = 1
		 NumPanes = 3
		 Configuration = "(H (1 [50] 4 [25] 3))"
	  End
	  Begin PaneConfiguration = 2
		 NumPanes = 3
		 Configuration = "(H (1 [50] 2 [25] 3))"
	  End
	  Begin PaneConfiguration = 3
		 NumPanes = 3
		 Configuration = "(H (4 [30] 2 [40] 3))"
	  End
	  Begin PaneConfiguration = 4
		 NumPanes = 2
		 Configuration = "(H (1 [56] 3))"
	  End
	  Begin PaneConfiguration = 5
		 NumPanes = 2
		 Configuration = "(H (2 [66] 3))"
	  End
	  Begin PaneConfiguration = 6
		 NumPanes = 2
		 Configuration = "(H (4 [50] 3))"
	  End
	  Begin PaneConfiguration = 7
		 NumPanes = 1
		 Configuration = "(V (3))"
	  End
	  Begin PaneConfiguration = 8
		 NumPanes = 3
		 Configuration = "(H (1[56] 4[18] 2) )"
	  End
	  Begin PaneConfiguration = 9
		 NumPanes = 2
		 Configuration = "(H (1 [75] 4))"
	  End
	  Begin PaneConfiguration = 10
		 NumPanes = 2
		 Configuration = "(H (1[66] 2) )"
	  End
	  Begin PaneConfiguration = 11
		 NumPanes = 2
		 Configuration = "(H (4 [60] 2))"
	  End
	  Begin PaneConfiguration = 12
		 NumPanes = 1
		 Configuration = "(H (1) )"
	  End
	  Begin PaneConfiguration = 13
		 NumPanes = 1
		 Configuration = "(V (4))"
	  End
	  Begin PaneConfiguration = 14
		 NumPanes = 1
		 Configuration = "(V (2))"
	  End
	  ActivePaneConfig = 0
   End
   Begin DiagramPane = 
	  Begin Origin = 
		 Top = 0
		 Left = 0
	  End
	  Begin Tables = 
		 Begin Table = "tblKartrisCategoryHierarchy"
			Begin Extent = 
			   Top = 6
			   Left = 38
			   Bottom = 108
			   Right = 198
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "vKartrisTypeCategories"
			Begin Extent = 
			   Top = 6
			   Left = 236
			   Bottom = 123
			   Right = 455
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
	  End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
	  Begin ParameterDefaults = ""
	  End
   End
   Begin CriteriaPane = 
	  Begin ColumnWidths = 11
		 Column = 1440
		 Alias = 900
		 Table = 1170
		 Output = 720
		 Append = 1400
		 NewValue = 1170
		 SortType = 1350
		 SortOrder = 1410
		 GroupBy = 1350
		 Filter = 1350
		 Or = 1350
		 Or = 1350
		 Or = 1350
	  End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisCategoryHierarchy'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisCategoryHierarchy'
GO
/****** Object:  StoredProcedure [dbo].[spKartrisVersions_GetOptions]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	replaces [spKartris_VER_GetVersionOptions]
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisVersions_GetOptions](@P_ID as int, @LANG_ID as tinyint)
AS
BEGIN
	SET NOCOUNT ON;

	SELECT     vKartrisTypeOptionGroups.OPTG_ID, vKartrisTypeOptionGroups.OPTG_Name, vKartrisTypeOptionGroups.OPTG_Desc, 
					  vKartrisTypeOptionGroups.OPTG_OptionDisplayType, tblKartrisProductOptionGroupLink.P_OPTG_MustSelected
FROM         vKartrisTypeOptionGroups INNER JOIN
					  tblKartrisProductOptionGroupLink ON vKartrisTypeOptionGroups.OPTG_ID = tblKartrisProductOptionGroupLink.P_OPTG_OptionGroupID
WHERE     (vKartrisTypeOptionGroups.LANG_ID = @LANG_ID) AND (tblKartrisProductOptionGroupLink.P_OPTG_ProductID = @P_ID)
ORDER BY tblKartrisProductOptionGroupLink.P_OPTG_OrderByValue, vKartrisTypeOptionGroups.OPTG_DefOrderByValue
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisProducts_SearchProductsByName]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisProducts_SearchProductsByName]
(
	@Key as nvarchar(50),
	@LANG_ID tinyint
)
AS
	SET NOCOUNT ON;
SELECT        P_ID, P_Name
FROM            vKartrisTypeProducts
WHERE        (LANG_ID = @LANG_ID) AND P_Name LIKE @Key + '%'
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisProducts_GetTotalByCatID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	Get the total no. of Products in Category "used for ItemPager"
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisProducts_GetTotalByCatID]
			(
			@LANG_ID as tinyint,
			@CAT_ID as int,
			@Return_Value as int OUTPUT
			)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT     @Return_Value = COUNT(vKartrisTypeProducts.P_ID)
	FROM         vKartrisTypeProducts INNER JOIN
					  tblKartrisProductCategoryLink ON vKartrisTypeProducts.P_ID = tblKartrisProductCategoryLink.PCAT_ProductID
	WHERE     (vKartrisTypeProducts.LANG_ID = @LANG_ID) 
				AND (tblKartrisProductCategoryLink.PCAT_CategoryID = @CAT_ID);
	-- Insert statements for procedure here

	
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisProducts_GetStatus]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ===================================================
-- Author:		Mohammad
-- Create date: 
-- Description:	
-- ===================================================
CREATE PROCEDURE [dbo].[_spKartrisProducts_GetStatus]
(
	@P_ID int,
	@ProductLive as bit OUT,
	@ProductType as nvarchar(1) OUT,
	@NoOfLiveVersions as int OUT,
	@NoOfLiveCategories as int OUT,
	@ProductCustomerGroup as smallint OUT
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	-- Check if the product is live, Type, CustomerGroup
	SELECT @ProductLive = P_Live, @ProductType = P_Type, @ProductCustomerGroup = P_CustomerGroupID
	FROM   tblKartrisProducts
	WHERE  (P_ID = @P_ID);

	-- No Of Live Versions
	IF @ProductType = 'o'
	BEGIN
		-- Get no. of live base/combinations
		SELECT @NoOfLiveVersions = Count(1)
		FROM dbo.tblKartrisVersions
		WHERE V_ProductID = @P_ID AND V_Type = 'b' AND V_Live = 1;
	END
	ELSE
	BEGIN
		SELECT @NoOfLiveVersions = Count(1)
		FROM dbo.tblKartrisVersions
		WHERE V_ProductID = @P_ID AND V_Type = 'v' AND V_Live = 1;
	END

	-- No of live categories
	SELECT     @NoOfLiveCategories = Count(tblKartrisCategories.CAT_ID)
	FROM         tblKartrisCategories INNER JOIN tblKartrisProductCategoryLink 
		ON tblKartrisCategories.CAT_ID = tblKartrisProductCategoryLink.PCAT_CategoryID
	WHERE PCAT_ProductID = @P_ID AND CAT_Live = 1

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisProducts_GetRowsBetweenByCatID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisProducts_GetRowsBetweenByCatID]
(
	@LANG_ID as tinyint,
	@CAT_ID as int,
	@PageIndex as tinyint, -- 0 Based index
	@RowsPerPage as smallint
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	
	-- Insert statements for procedure here

	DECLARE @StartRowNumber as int;
	SET @StartRowNumber = (@PageIndex * @RowsPerPage) + 1;
	DECLARE @EndRowNumber as int;
	SET @EndRowNumber = @StartRowNumber + @RowsPerPage - 1;
	
	DECLARE @OrderBy as nvarchar(50), @OrderDirection as char(1)
	SELECT @OrderBy = CAT_OrderProductsBy, @OrderDirection = CAT_ProductsSortDirection
	FROM dbo.tblKartrisCategories
	WHERE CAT_ID = @CAT_ID;

	IF @OrderBy is NULL OR @OrderBy = 'd'
	BEGIN 
		SELECT @OrderBy = CFG_Value FROM tblKartrisConfig WHERE CFG_Name = 'frontend.products.display.sortdefault';
	END;
	IF @OrderDirection is NULL OR @OrderDirection = '' BEGIN 
		SELECT @OrderDirection = CFG_Value FROM tblKartrisConfig WHERE CFG_Name = 'frontend.products.display.sortdirection';
	END;

	DECLARE @SortByValue as bit;
	SET @SortByValue = 0;
	IF @OrderBy = 'PCAT_OrderNo' BEGIN SET @SortByValue = 1 END;

	With ProductList AS 
	(
		SELECT	CASE 
				WHEN (@OrderBy = 'P_ID' AND @OrderDirection = 'A') THEN	ROW_NUMBER() OVER (ORDER BY P_ID ASC) 
				WHEN (@OrderBy = 'P_ID' AND @OrderDirection = 'D') THEN	ROW_NUMBER() OVER (ORDER BY P_ID DESC) 
				WHEN (@OrderBy = 'P_Name' AND @OrderDirection = 'A') THEN ROW_NUMBER() OVER (ORDER BY P_Name ASC) 
				WHEN (@OrderBy = 'P_Name' AND @OrderDirection = 'D') THEN ROW_NUMBER() OVER (ORDER BY P_Name DESC) 
				WHEN (@OrderBy = 'P_DateCreated' AND @OrderDirection = 'A') THEN ROW_NUMBER() OVER (ORDER BY P_DateCreated ASC) 
				WHEN (@OrderBy = 'P_DateCreated' AND @OrderDirection = 'D') THEN ROW_NUMBER() OVER (ORDER BY P_DateCreated DESC) 
				WHEN (@OrderBy = 'P_LastModified' AND @OrderDirection = 'A') THEN ROW_NUMBER() OVER (ORDER BY P_LastModified ASC) 
				WHEN (@OrderBy = 'P_LastModified' AND @OrderDirection = 'D') THEN ROW_NUMBER() OVER (ORDER BY P_LastModified DESC) 
				WHEN (@OrderBy = 'PCAT_OrderNo' AND @OrderDirection = 'A') THEN ROW_NUMBER() OVER (ORDER BY PCAT_OrderNo ASC) 
				WHEN (@OrderBy = 'PCAT_OrderNo' AND @OrderDirection = 'D') THEN ROW_NUMBER() OVER (ORDER BY PCAT_OrderNo DESC) 
				END AS Row,
				vKartrisTypeProducts.P_ID, vKartrisTypeProducts.P_Name, dbo.fnKartrisDB_TruncateDescription(vKartrisTypeProducts.P_Desc) AS P_Desc, vKartrisTypeProducts.P_StrapLine,
				vKartrisTypeProducts.P_VersionDisplayType, vKartrisTypeProducts.P_DateCreated, vKartrisTypeProducts.P_LastModified, 
				tblKartrisProductCategoryLink.PCAT_OrderNo, vKartrisTypeProducts.P_Type, @SortByValue AS SortByValue, vKartrisTypeProducts.P_Live
		FROM    tblKartrisProductCategoryLink INNER JOIN
				vKartrisTypeProducts ON tblKartrisProductCategoryLink.PCAT_ProductID = vKartrisTypeProducts.P_ID 
		WHERE   (vKartrisTypeProducts.LANG_ID = @LANG_ID) AND (tblKartrisProductCategoryLink.PCAT_CategoryID = @CAT_ID)
		GROUP BY vKartrisTypeProducts.P_Name, vKartrisTypeProducts.P_Desc, vKartrisTypeProducts.P_StrapLine, vKartrisTypeProducts.P_ID,
					vKartrisTypeProducts.P_VersionDisplayType, vKartrisTypeProducts.P_DateCreated, vKartrisTypeProducts.P_LastModified, 
				tblKartrisProductCategoryLink.PCAT_OrderNo, vKartrisTypeProducts.P_Type, vKartrisTypeProducts.P_Live
		
	)

	SELECT *
	FROM ProductList
	WHERE Row BETWEEN @StartRowNumber AND @EndRowNumber
	ORDER BY Row ASC
END
GO
/****** Object:  UserDefinedFunction [dbo].[fnKartrisProducts_GetName]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnKartrisProducts_GetName] 
(
	-- Add the parameters for the function here
	@P_ID as int,
	@LANG_ID as tinyint
)
RETURNS nvarchar(MAX)
AS
BEGIN
	-- Declare the return variable here
	DECLARE @Result nvarchar(MAX);

	-- Add the T-SQL statements to compute the return value here
	SELECT @Result = P_Name FROM vKartrisTypeProducts WHERE P_ID = @P_ID AND LANG_ID = @LANG_ID ;

	-- Return the result of the function
	RETURN @Result

END
GO
/****** Object:  UserDefinedFunction [dbo].[fnKartrisProducts_GetSupplierID]    Script Date: 04/04/2013 18:44:40 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		Paul
-- Create date: 2013/04/04
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnKartrisProducts_GetSupplierID] 
(
	-- Add the parameters for the function here
	@P_ID as int,
	@LANG_ID as tinyint
)
RETURNS nvarchar(MAX)
AS
BEGIN
	-- Declare the return variable here
	DECLARE @Result nvarchar(MAX);

	-- Add the T-SQL statements to compute the return value here
	SELECT @Result = P_SupplierID FROM vKartrisTypeProducts WHERE P_ID = @P_ID AND LANG_ID = @LANG_ID ;

	-- Return the result of the function
	RETURN @Result

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisOrders_CallbackUpdate]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisOrders_CallbackUpdate]
(
	@O_ID int,
	@O_ReferenceCode nvarchar(100),
	@O_LastModified smalldatetime,
	@O_Sent bit,
	@O_Invoiced bit,
	@O_Paid bit,
	@O_Status nvarchar(MAX),
	@O_WLID int
)
AS
BEGIN
	SET NOCOUNT ON;

			
		UPDATE [tblKartrisOrders] SET 
		[O_ReferenceCode] = @O_ReferenceCode, 
		[O_LastModified] = @O_LastModified, 
		[O_Sent] = @O_Sent, 
		[O_Invoiced] = @O_Invoiced, 
		[O_Paid] = @O_Paid,
		[O_Status] = @O_Status
		WHERE [O_ID] = @O_ID;
			

			DECLARE @V_Codenumber nvarchar(25)
			DECLARE @IR_Quantity int
			DECLARE @V_ID int
			DECLARE tnames_cursor CURSOR
		FOR
	-- check if return stock flag is on
		SELECT     tblKartrisInvoiceRows.IR_VersionCode, tblKartrisInvoiceRows.IR_Quantity
		FROM         tblKartrisOrders INNER JOIN
							  tblKartrisInvoiceRows ON tblKartrisOrders.O_ID = tblKartrisInvoiceRows.IR_OrderNumberID
		WHERE     (tblKartrisOrders.O_ID = @O_ID)
		
		OPEN tnames_cursor
		--loop through the invoicerows records and return the stocks back to individual versions
		FETCH NEXT FROM tnames_cursor INTO @V_Codenumber,@IR_Quantity
		WHILE (@@FETCH_STATUS <> -1)
		BEGIN
			IF (@@FETCH_STATUS <> -2)
			BEGIN 
					
				--Process version stocks
				UPDATE tblKartrisVersions SET V_Quantity= V_Quantity - @IR_Quantity WHERE V_CodeNumber=@V_Codenumber AND V_QuantityWarnLevel<>0;
				SELECT @V_ID = V_ID FROM tblKartrisVersions WHERE V_CodeNumber = @V_Codenumber;
					
				--Process version stocks
				IF (@O_WLID > 0)
				BEGIN
					--	
					UPDATE tblKartrisBasketValues SET BV_Quantity= BV_Quantity - @IR_Quantity 
						WHERE BV_VersionID=@V_ID AND BV_ParentID = @O_WLID AND BV_ParentType = 'r';
					--	
				END
			END
			FETCH NEXT FROM tnames_cursor INTO @V_Codenumber,@IR_Quantity
		END
		CLOSE tnames_cursor
		DEALLOCATE tnames_cursor ;
	

	
	SELECT @O_ID;
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisKnowledgebase_Search]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisKnowledgebase_Search]
(	@keyWordsList as nvarchar(500),
	@LANG_ID as tinyint
)
AS
BEGIN
	SET NOCOUNT ON;
	
	-----------------------
	-- Variable Declaration
	-----------------------
	DECLARE @SIndx as int;
	DECLARE @CIndx as int;
	DECLARE @Keyword as nvarchar(150);
	DECLARE @Counter as int;
	DECLARE @CurrentScore as int;

	-- Creating a temporary table to hold/modify the needed data
	CREATE TABLE #TempSearchScoreTbl(TypeID tinyint, FieldID tinyint, ParentID bigint, TextValue nvarchar(MAX) COLLATE DATABASE_DEFAULT, Score int)

	SET @SIndx = 0;
	SET @Counter = 0;
	WHILE @SIndx <= LEN(@keyWordsList)
	BEGIN
		
		-- Loop through out the keyword's list
		SET @Counter = @Counter + 1;	-- keywords counter
		SET @CIndx = CHARINDEX(',', @keyWordsList, @SIndx)	-- Next keyword starting index (1-Based Index)
		IF @CIndx = 0 BEGIN SET @CIndx = LEN(@keyWordsList)+ 1 END	-- If no more keywords, set next starting index to not exist
		SET @KeyWord = SUBSTRING(@keyWordsList, @SIndx, @CIndx - @SIndx)
		
		SET @SIndx = @CIndx + 1;	-- The next starting index
				
		-- For each keyword Occurance
		SET @CurrentScore = 0;
		
		-- For the first match .. "The Exact Phrase"
		IF @Counter = 1 BEGIN SET @CurrentScore = 0 END
		
		INSERT INTO #TempSearchScoreTbl (TypeID,FieldID,ParentID,TextValue, Score)
		SELECT     LE_TypeID, LE_FieldID, LE_ParentID, LE_Value, @CurrentScore
		FROM       tblKartrisLanguageElements
		WHERE     (LE_LanguageID = @LANG_ID) AND
				  ((LE_TypeID = 17) AND (LE_FieldID = 1 OR LE_FieldID = 3 OR LE_FieldID = 4 OR LE_FieldID = 5 OR LE_FieldID = 6))  -- Search in Products (Name, Desc ..)
					AND LE_Value LIKE '%' + @KeyWord + '%';
	END

	UPDATE #TempSearchScoreTbl 	SET Score = Score + 200	WHERE FieldID = 1;
	UPDATE #TempSearchScoreTbl 	SET Score = Score + 100	WHERE FieldID = 6;
	UPDATE #TempSearchScoreTbl 	SET Score = Score + 50	WHERE FieldID = 3;
	UPDATE #TempSearchScoreTbl 	SET Score = Score + 30	WHERE FieldID = 5;
	UPDATE #TempSearchScoreTbl 	SET Score = Score + 20	WHERE FieldID = 4;

	DECLARE keywordCursor CURSOR FOR 
	SELECT TypeID, ParentID, TextValue, Score
	FROM #TempSearchScoreTbl
		
	DECLARE @Type as tinyint;
	DECLARE @Parent as bigint;
	DECLARE @TextValue as nvarchar(MAX);
	DECLARE @Score as int;

	OPEN keywordCursor
	FETCH NEXT FROM keywordCursor
	INTO @Type, @Parent, @TextValue, @Score;
	
	WHILE @@FETCH_STATUS = 0
	BEGIN
		
		SET @SIndx = 0;
		
		WHILE @SIndx <= LEN(@keyWordsList)
		BEGIN
			
			SET @CIndx = CHARINDEX(',', @keyWordsList, @SIndx)
			IF @CIndx = 0 BEGIN SET @CIndx = LEN(@keyWordsList) + 1 END
			SET @KeyWord = SUBSTRING(@keyWordsList, @SIndx, @CIndx - @SIndx)
			SET @SIndx = @CIndx + 1;
			SET @Counter = 0;
			DECLARE @Start as int;
			DECLARE @CharIndx as int;
			SET @Start = 0;
			
			WHILE @Start <= LEN(@TextValue)
			BEGIN
				SET @Counter = @Counter + 1;
				SET @CharIndx = CHARINDEX(@KeyWord, @TextValue, @Start)
				IF @CharIndx = 0 
				BEGIN 
					SET @CharIndx = LEN(@TextValue) + 1 
				END
				ELSE
				BEGIN
					DECLARE @ScoreDegree as int;
					SET @ScoreDegree = 1;
					IF @Counter = 1 BEGIN SET @ScoreDegree = 10 END
					UPDATE #TempSearchScoreTbl 
					SET Score = Score + @ScoreDegree 
					WHERE TextValue LIKE '%' + @keyWord + '%' AND TextValue = @TextValue;
				END
				SET @Start = @CharIndx + 1;
			END
		END		
	
		FETCH NEXT FROM keywordCursor
		INTO @Type, @Parent, @TextValue, @Score;
	END

	CLOSE keywordCursor
	DEALLOCATE keywordCursor;

	
	SELECT KB_ID, KB_Name, dbo.fnKartrisDB_TruncateDescription(KB_Text) as KB_Text, TotalScore 
	FROM dbo.vKartrisTypeKnowledgeBase 
		INNER JOIN (SELECT ParentID, Sum(Score) as TotalScore
					FROM #TempSearchScoreTbl
					Group By ParentID) Result 
					ON Result.ParentID = vKartrisTypeKnowledgeBase.KB_ID
	WHERE LANG_ID = @LANG_ID AND KB_Live = 1
	ORDER BY TotalScore DESC;

	DROP TABLE #TempSearchScoreTbl;

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisKnowledgeBase_GetTitleByID]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisKnowledgeBase_GetTitleByID]
(
	@LangID as tinyint,
	@KB_ID as int
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	-- Insert statements for procedure here
	SELECT KB_PageTitle
	FROM dbo.vKartrisTypeKnowledgeBase
	WHERE LANG_ID = @LangID AND KB_ID = @KB_ID AND KB_Live = 1

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisKnowledgeBase_GetByID]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisKnowledgeBase_GetByID]
(
	@LangID as tinyint,
	@KB_ID as int
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	-- Insert statements for procedure here
	SELECT *
	FROM dbo.vKartrisTypeKnowledgeBase
	WHERE LANG_ID = @LangID AND KB_ID = @KB_ID AND KB_Live = 1

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisKnowledgeBase_Get]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisKnowledgeBase_Get]
(
	@LangID as tinyint
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	-- Insert statements for procedure here
	SELECT *
	FROM dbo.vKartrisTypeKnowledgeBase
	WHERE LANG_ID = @LangID AND KB_Live = 1

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisDestinations_GetbyIsoCode]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	Get All Destinations list
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisDestinations_GetbyIsoCode](@D_IsoCode as char(2),@LANG_ID as tinyint)

AS
BEGIN
	SET NOCOUNT ON;
	SELECT		D_ID,D_Name,D_IsoCode,D_ID,D_Tax,D_Tax2, D_TaxExtra, D_ShippingZoneID
	FROM         vKartrisTypeDestinations
	WHERE      D_IsoCode = @D_IsoCode AND LANG_ID = @LANG_ID
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisDestinations_GetAll]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	Get All Destinations list
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisDestinations_GetAll]
(
	@LANG_ID as tinyint
)
AS
BEGIN
	SET NOCOUNT ON;
	SELECT		D_ID,D_Name,D_IsoCode,D_Tax, D_Tax2, D_TaxExtra, D_ShippingZoneID
	FROM         vKartrisTypeDestinations WHERE D_Live = 'true' AND LANG_ID = @LANG_ID ORDER BY D_Name ASC
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisDestinations_Get]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	Get All Destinations list
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisDestinations_Get](@D_ID as int,@LANG_ID as tinyint)
AS
BEGIN
	SET NOCOUNT ON;
	SELECT		D_ID,D_Name,D_IsoCode,D_Tax, D_Tax2, D_TaxExtra, D_ShippingZoneID, D_Live
	FROM         vKartrisTypeDestinations
	WHERE      D_ID = @D_ID AND LANG_ID = @LANG_ID
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisCustomer_GetDownloadableProducts]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: 05/May/09
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisCustomer_GetDownloadableProducts] ( 
	@U_ID int,
	@MustBeShipped bit,
	@AvailableUpTo smalldatetime
) AS
BEGIN
	SET NOCOUNT ON;

	IF @MustBeShipped = 0
		BEGIN
			SET @MustBeShipped = NULL;
		END

	SELECT O_CustomerID, O_Date, IR_VersionCode, IR_VersionName, V_ID, V_DownLoadInfo, V_DownloadType 
	FROM 
		(tblKartrisVersions INNER JOIN tblKartrisInvoiceRows ON tblKartrisVersions.V_CodeNumber = tblKartrisInvoiceRows.IR_VersionCode) 
			INNER JOIN tblKartrisOrders ON tblKartrisInvoiceRows.IR_OrderNumberID = tblKartrisOrders.O_ID 
	WHERE 
			O_CustomerID = @U_ID AND O_Sent = 1 AND
			O_Shipped = COALESCE(@MustBeShipped,O_Shipped) AND
			O_Date >= @AvailableUpTo AND
			 V_DownLoadType <> 'n' AND V_DownloadType <> 'f' AND V_DownloadInfo <> ''
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisProductOptionLink_Get]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisProductOptionLink_Get]
AS
	SET NOCOUNT ON;
SELECT        tblKartrisProductOptionLink.*
FROM            tblKartrisProductOptionLink
ORDER BY P_OPT_OrderByValue
GO
/****** Object:  StoredProcedure [dbo].[spKartrisProductOptionGroupLink_Get]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisProductOptionGroupLink_Get]
AS
	SET NOCOUNT ON;
SELECT        tblKartrisProductOptionGroupLink.*
FROM            tblKartrisProductOptionGroupLink
ORDER BY P_OPTG_OrderByValue
GO
/****** Object:  StoredProcedure [dbo].[spKartrisProductCategoryLink_GetCategoriesByProductID]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisProductCategoryLink_GetCategoriesByProductID]
(
	@PCAT_ProductID int
)
AS
	SET NOCOUNT OFF;

SELECT     PCAT_CategoryID
FROM         tblKartrisProductCategoryLink
WHERE     (PCAT_ProductID = @PCAT_ProductID)
GO
/****** Object:  StoredProcedure [dbo].[spKartrisProductCategoryLink_Get]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisProductCategoryLink_Get]
AS
	SET NOCOUNT ON;
SELECT        tblKartrisProductCategoryLink.*
FROM            tblKartrisProductCategoryLink
GO
/****** Object:  StoredProcedure [dbo].[spKartrisOrders_UpdateByReferenceCode]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisOrders_UpdateByReferenceCode]
(
	@O_ReferenceCode nvarchar(100),
	@O_LastModified smalldatetime,
	@O_Sent bit,
	@O_Invoiced bit,
	@O_Paid bit,
	@O_Status nvarchar(MAX)
)
AS
BEGIN
	SET NOCOUNT ON;
	IF (@O_Paid = 1)
	BEGIN
	
		UPDATE [tblKartrisOrders] SET 
		[O_LastModified] = @O_LastModified, 
		[O_Sent] = @O_Sent, 
		[O_Invoiced] = @O_Invoiced, 
		[O_Paid] = @O_Paid,
		[O_Status] = @O_Status
		WHERE [O_ReferenceCode] = @O_ReferenceCode;
	

		DECLARE @O_WLID int
		Select  @O_WLID = [O_WishListID] from [tblKartrisOrders] WHERE [O_ReferenceCode] = @O_ReferenceCode;

		DECLARE @V_ID int
		DECLARE @IR_Quantity int
		
		DECLARE tnames_cursor CURSOR
			
		FOR
	-- check if return stock flag is on
		SELECT V_ID,IR_Quantity FROM 
				((tblKartrisOrders INNER JOIN tblKartrisInvoiceRows ON tblKartrisOrders.O_ID = tblKartrisInvoiceRows.IR_OrderNumberID) 
				INNER JOIN tblKartrisVersions ON tblKartrisInvoiceRows.IR_VersionCode=tblKartrisVersions.V_CodeNumber) 
		WHERE [O_ReferenceCode] = @O_ReferenceCode AND V_QuantityWarnLevel<>0
		
		OPEN tnames_cursor
		--loop through the invoicerows records and return the stocks back to individual versions
		FETCH NEXT FROM tnames_cursor INTO @V_ID,@IR_Quantity
		WHILE (@@FETCH_STATUS <> -1)
		BEGIN
			IF (@@FETCH_STATUS <> -2)
			BEGIN 
	
				--Process version stocks
				UPDATE tblKartrisVersions SET V_Quantity= V_Quantity - @IR_Quantity WHERE V_ID=@V_ID;
	
				--Process version stocks
				IF (@O_WLID > 0)
				BEGIN
--	
					UPDATE tblKartrisBasketValues SET BV_Quantity= BV_Quantity - @IR_Quantity 
						WHERE BV_VersionID=@V_ID AND BV_ParentID = @O_WLID AND BV_ParentType = 'w';
--	
				END
			END
			FETCH NEXT FROM tnames_cursor INTO @V_ID,@IR_Quantity
		END
		CLOSE tnames_cursor
		DEALLOCATE tnames_cursor ;
	END

	
	SELECT @O_ReferenceCode;
END
GO

/****** Object:  Function: fnKartrisProduct_IsReadyToLive ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnKartrisProduct_IsReadyToLive] 
(
	@P_ID as int
)
RETURNS bit
AS
BEGIN
	-- Declare the return variable here
	DECLARE @IsReadyToLive as bit;
	SET @IsReadyToLive = 0;

	DECLARE @ProductLive as bit ,@ProductType as nvarchar(1),
	@NoOfLiveVersions as int, @NoOfLiveCategories as int;

	SELECT @ProductLive = P_Live, @ProductType = P_Type
	FROM   tblKartrisProducts
	WHERE  (P_ID = @P_ID);

	IF @ProductLive = 1 BEGIN

		-- No Of Live Versions
		IF @ProductType = 'o'
		BEGIN
			-- Get no. of live base/combinations
			SELECT @NoOfLiveVersions = Count(1)
			FROM dbo.tblKartrisVersions
			WHERE V_ProductID = @P_ID AND V_Type = 'b' AND V_Live = 1;
		END
		ELSE
		BEGIN
			SELECT @NoOfLiveVersions = Count(1)
			FROM dbo.tblKartrisVersions
			WHERE V_ProductID = @P_ID AND V_Type = 'v' AND V_Live = 1;
		END

		IF @NoOfLiveVersions > 0 BEGIN
			-- No of live categories
			SELECT     @NoOfLiveCategories = Count(tblKartrisCategories.CAT_ID)
			FROM         tblKartrisCategories INNER JOIN tblKartrisProductCategoryLink 
				ON tblKartrisCategories.CAT_ID = tblKartrisProductCategoryLink.PCAT_CategoryID
			WHERE PCAT_ProductID = @P_ID AND CAT_Live = 1

			IF @NoOfLiveCategories > 0 BEGIN 
				SET @IsReadyToLive = 1;
			END
		END
	END
	
	-- Return the result of the function
	RETURN @IsReadyToLive

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisProducts_GetRelatedProducts]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisProducts_GetRelatedProducts] 
(
	@P_ID as int, 
	@LANG_ID as tinyint,
	@CG_ID as smallint
)
AS
BEGIN

	SET NOCOUNT ON;

	SELECT     vKartrisTypeProducts.P_ID, vKartrisTypeProducts.P_Name
	FROM         tblKartrisRelatedProducts INNER JOIN
						  vKartrisTypeProducts ON tblKartrisRelatedProducts.RP_ChildID = vKartrisTypeProducts.P_ID
	WHERE     (vKartrisTypeProducts.LANG_ID = @LANG_ID) AND (RP_ParentID = @P_ID) AND
				dbo.fnKartrisProduct_IsReadyToLive(vKartrisTypeProducts.P_ID) = 1
				AND (vKartrisTypeProducts.P_CustomerGroupID IS NULL OR vKartrisTypeProducts.P_CustomerGroupID = @CG_ID);

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisProducts_GetPeopleWhoBoughtThis]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- Remarks: Optimized by Mohammad
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisProducts_GetPeopleWhoBoughtThis](
			@P_ID as int, 
			@LANG_ID as tinyint, 
			@numPeopleWhoBoughtThis as int, 
			@Type as bit)
AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @LANG_COUNT tinyint;
	SET @LANG_COUNT = (SELECT COUNT(1) FROM tblKartrisLanguages);
	
	IF @Type = 1 
		BEGIN
			IF @LANG_COUNT = 1 
				BEGIN
					WITH PeopleWhoBoughtThisList AS
					(
					SELECT TOP (@numPeopleWhoBoughtThis) AlsoProducts.P_ID, AlsoProducts.P_Name, Count(AlsoProducts.P_ID) AS TotalMatches,1 AS LANG_ID 
					FROM (((tblKartrisVersions INNER JOIN tblKartrisInvoiceRows ON tblKartrisVersions.V_CodeNumber = tblKartrisInvoiceRows.IR_VersionCode) 
					INNER JOIN (SELECT TOP(10000) O_ID, O_CustomerID FROM tblKartrisOrders WHERE O_Sent = 1 or O_Paid = 1 ORDER BY O_ID DESC) As RecentOrders ON tblKartrisInvoiceRows.IR_OrderNumberID = RecentOrders.O_ID) 
					INNER JOIN tblKartrisInvoiceRows AS AlsoInvoiceRows ON RecentOrders.O_ID = AlsoInvoiceRows.IR_OrderNumberID) 
					INNER JOIN (tblKartrisVersions AS AlsoVersions 
					INNER JOIN vKartrisTypeProducts AS AlsoProducts ON AlsoVersions.V_ProductID = AlsoProducts.P_ID) 
					ON AlsoInvoiceRows.IR_VersionCode = AlsoVersions.V_CodeNumber
					WHERE tblKartrisVersions.V_ProductID = @P_ID AND AlsoVersions.V_ProductID <> @P_ID AND AlsoProducts.P_Name <> '' AND P_Live = 1 
							

					GROUP BY AlsoProducts.P_ID, AlsoProducts.P_Name
					)
					SELECT *
					FROM PeopleWhoBoughtThisList ORDER BY TotalMatches DESC;
				END
			ELSE
				BEGIN
					WITH PeopleWhoBoughtThisList AS
					(
					SELECT TOP (@numPeopleWhoBoughtThis) AlsoProducts.P_ID, AlsoProducts.P_Name, Count(AlsoProducts.P_ID) AS TotalMatches,AlsoProducts.LANG_ID 
					FROM (((tblKartrisVersions INNER JOIN tblKartrisInvoiceRows ON tblKartrisVersions.V_CodeNumber = tblKartrisInvoiceRows.IR_VersionCode) 
					INNER JOIN (SELECT TOP(10000) O_ID, O_CustomerID FROM tblKartrisOrders WHERE O_Sent = 1 or O_Paid = 1 ORDER BY O_ID DESC) As RecentOrders ON tblKartrisInvoiceRows.IR_OrderNumberID = RecentOrders.O_ID) 
					INNER JOIN tblKartrisInvoiceRows AS AlsoInvoiceRows ON RecentOrders.O_ID = AlsoInvoiceRows.IR_OrderNumberID) 
					INNER JOIN (tblKartrisVersions AS AlsoVersions 
					INNER JOIN vKartrisTypeProducts AS AlsoProducts ON AlsoVersions.V_ProductID = AlsoProducts.P_ID) 
					ON AlsoInvoiceRows.IR_VersionCode = AlsoVersions.V_CodeNumber
					WHERE tblKartrisVersions.V_ProductID = @P_ID AND AlsoVersions.V_ProductID <> @P_ID AND AlsoProducts.P_Name <> '' AND P_Live = 1 
							

					GROUP BY AlsoProducts.P_ID, AlsoProducts.P_Name, AlsoProducts.LANG_ID
					)
					SELECT *
					FROM PeopleWhoBoughtThisList ORDER BY TotalMatches DESC;
				END
		END
	ELSE
		BEGIN
			IF @LANG_COUNT = 1 
				BEGIN
					WITH PeopleWhoBoughtThisList AS
					(
					SELECT     TOP (@numPeopleWhoBoughtThis) AlsoProducts.P_ID, AlsoProducts.P_Name, COUNT(1) AS TotalMatches, 1 AS LANG_ID
					FROM         tblKartrisInvoiceRows AS AlsoInvoiceRows INNER JOIN
										  tblKartrisVersions AS AlsoVersions INNER JOIN
										  vKartrisTypeProducts AS AlsoProducts ON AlsoVersions.V_ProductID = AlsoProducts.P_ID ON 
										  AlsoInvoiceRows.IR_VersionCode = AlsoVersions.V_CodeNumber INNER JOIN
										  (SELECT TOP(10000) O_ID, O_CustomerID FROM tblKartrisOrders WHERE O_Sent = 1 or O_Paid = 1 ORDER BY O_ID DESC) AS AlsoOrderNumbers 
										  INNER JOIN tblKartrisVersions INNER JOIN
										  tblKartrisInvoiceRows ON tblKartrisVersions.V_CodeNumber = tblKartrisInvoiceRows.IR_VersionCode INNER JOIN
										  (SELECT TOP(10000) O_ID, O_CustomerID FROM tblKartrisOrders WHERE O_Sent = 1 or O_Paid = 1 ORDER BY O_ID DESC) As RecentOrders  
										  ON tblKartrisInvoiceRows.IR_OrderNumberID = RecentOrders.O_ID INNER JOIN
										  tblKartrisUsers ON RecentOrders.O_CustomerID = tblKartrisUsers.U_ID ON AlsoOrderNumbers.O_CustomerID = tblKartrisUsers.U_ID ON 
										  AlsoInvoiceRows.IR_OrderNumberID = AlsoOrderNumbers.O_ID
					WHERE     (tblKartrisVersions.V_ProductID = @P_ID) AND (AlsoVersions.V_ProductID <> @P_ID) AND (AlsoProducts.P_Name <> '') AND (AlsoProducts.P_Live = 1) 
					GROUP BY AlsoProducts.P_ID, AlsoProducts.P_Name
					)
					SELECT *
					FROM PeopleWhoBoughtThisList ORDER BY TotalMatches DESC;
				END
			ELSE
				BEGIN
					WITH PeopleWhoBoughtThisList AS
					(
					SELECT     TOP (@numPeopleWhoBoughtThis) AlsoProducts.P_ID, AlsoProducts.P_Name, COUNT(1) AS TotalMatches, AlsoProducts.LANG_ID
					FROM         tblKartrisInvoiceRows AS AlsoInvoiceRows INNER JOIN
										  tblKartrisVersions AS AlsoVersions INNER JOIN
										  vKartrisTypeProducts AS AlsoProducts ON AlsoVersions.V_ProductID = AlsoProducts.P_ID ON 
										  AlsoInvoiceRows.IR_VersionCode = AlsoVersions.V_CodeNumber INNER JOIN
										  (SELECT TOP(10000) O_ID, O_CustomerID FROM tblKartrisOrders WHERE O_Sent = 1 or O_Paid = 1 ORDER BY O_ID DESC) AS AlsoOrderNumbers INNER JOIN
										  tblKartrisVersions INNER JOIN
										  tblKartrisInvoiceRows ON tblKartrisVersions.V_CodeNumber = tblKartrisInvoiceRows.IR_VersionCode INNER JOIN
										  (SELECT TOP(10000) O_ID, O_CustomerID FROM tblKartrisOrders WHERE O_Sent = 1 or O_Paid = 1 ORDER BY O_ID DESC) As RecentOrders 
										  ON tblKartrisInvoiceRows.IR_OrderNumberID = RecentOrders.O_ID INNER JOIN
										  tblKartrisUsers ON RecentOrders.O_CustomerID = tblKartrisUsers.U_ID ON AlsoOrderNumbers.O_CustomerID = tblKartrisUsers.U_ID ON 
										  AlsoInvoiceRows.IR_OrderNumberID = AlsoOrderNumbers.O_ID
					WHERE     (tblKartrisVersions.V_ProductID = @P_ID) AND (AlsoVersions.V_ProductID <> @P_ID) AND (AlsoProducts.P_Name <> '') AND (AlsoProducts.P_Live = 1) 
					GROUP BY AlsoProducts.P_ID, AlsoProducts.P_Name, AlsoProducts.LANG_ID
					)
					SELECT *
					FROM PeopleWhoBoughtThisList
					WHERE LANG_ID = @LANG_ID ORDER BY TotalMatches DESC;
				END
		END
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisProducts_GetParentCategories]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisProducts_GetParentCategories]
(
	@LANG_ID tinyint,
	@P_ID int
)
AS
	SET NOCOUNT ON;
SELECT        vKartrisTypeCategories.CAT_ID, vKartrisTypeCategories.CAT_Name
FROM            vKartrisTypeCategories INNER JOIN
						 tblKartrisProductCategoryLink ON vKartrisTypeCategories.CAT_ID = tblKartrisProductCategoryLink.PCAT_CategoryID
WHERE        (vKartrisTypeCategories.LANG_ID = @LANG_ID) AND (tblKartrisProductCategoryLink.PCAT_ProductID = @P_ID)
GO
/****** Object:  StoredProcedure [dbo].[spKartrisProducts_GetNewestProducts]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: 
-- Description:	
-- Remarks: Optimization (Medz) - Modified to use product views instead and to lessen use of GetName function - 14-07-2010
-- Remarks2: Further Optimization (Mohammad) - Remove usage of product versions view and use the Language Elements directly - 15-11-2013
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisProducts_GetNewestProducts]
	(
	@LANG_ID tinyint
	)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	SELECT DISTINCT TOP (10) tblKartrisProducts.P_ID, tblKartrisLanguageElements.LE_Value AS P_Name, tblKartrisProducts.P_DateCreated, @LANG_ID LANG_ID
	FROM    tblKartrisProducts INNER JOIN
			  tblKartrisVersions ON tblKartrisProducts.P_ID = tblKartrisVersions.V_ProductID INNER JOIN
			  tblKartrisProductCategoryLink ON tblKartrisProducts.P_ID = tblKartrisProductCategoryLink.PCAT_ProductID INNER JOIN
			  tblKartrisCategories ON tblKartrisProductCategoryLink.PCAT_CategoryID = tblKartrisCategories.CAT_ID INNER JOIN
			  tblKartrisLanguageElements ON tblKartrisProducts.P_ID = tblKartrisLanguageElements.LE_ParentID
	WHERE   (tblKartrisProducts.P_CustomerGroupID IS NULL) AND (tblKartrisCategories.CAT_CustomerGroupID IS NULL) AND (tblKartrisVersions.V_CustomerGroupID IS NULL) AND
		   (tblKartrisLanguageElements.LE_LanguageID = @LANG_ID) AND (tblKartrisLanguageElements.LE_TypeID = 2) AND (tblKartrisLanguageElements.LE_FieldID = 1) AND 
		  (NOT (tblKartrisLanguageElements.LE_Value IS NULL))
	ORDER BY tblKartrisProducts.P_DateCreated DESC, tblKartrisProducts.P_ID DESC

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisProducts_GetNameByProductID]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ========================================================
-- Author:		Medz
-- Create date: 03/19/2008 17:45:30
-- Description:	Get the product name for the SiteMap trail.
-- ========================================================
CREATE PROCEDURE [dbo].[spKartrisProducts_GetNameByProductID]
(
	@P_ID int,
	@LANG_ID tinyint
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	SELECT P_Name
	FROM   vKartrisTypeProducts
	WHERE  (P_ID = @P_ID) AND (LANG_ID = @LANG_ID) AND (P_Live = 1)
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisProducts_GetTotalByCatID]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	Get the total no. of Products in Category "used for ItemPager"
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisProducts_GetTotalByCatID]
			(
			@LANG_ID as tinyint,
			@CAT_ID as int,	
			@CGroupID as smallint,
			@TotalProducts as int OUTPUT
			)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

		SELECT	@TotalProducts = Count(DISTINCT vKartrisTypeProducts.P_ID)
		FROM    tblKartrisProductCategoryLink INNER JOIN
			  vKartrisTypeProducts ON tblKartrisProductCategoryLink.PCAT_ProductID = vKartrisTypeProducts.P_ID INNER JOIN
			  tblKartrisVersions ON vKartrisTypeProducts.P_ID = tblKartrisVersions.V_ProductID LEFT OUTER JOIN
			  tblKartrisTaxRates ON tblKartrisTaxRates.T_ID = tblKartrisVersions.V_Tax
		WHERE   (tblKartrisVersions.V_Live = 1) AND (tblKartrisVersions.V_Type = 'b' OR tblKartrisVersions.V_Type = 'v' ) 
				AND (vKartrisTypeProducts.LANG_ID = @LANG_ID) AND (vKartrisTypeProducts.P_Live = 1) 
				AND (tblKartrisProductCategoryLink.PCAT_CategoryID = @CAT_ID) 
				AND (vKartrisTypeProducts.P_CustomerGroupID IS NULL OR vKartrisTypeProducts.P_CustomerGroupID = @CGroupID)
		
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisPages_GetByName]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisPages_GetByName]
(
	@LangID as tinyint,
	@PageName as nvarchar(50)
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	-- Insert statements for procedure here
	SELECT *
	FROM dbo.vKartrisTypePages
	WHERE LANG_ID = @LangID AND PAGE_Name = @PageName AND PAGE_Live = 1

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisSessions_DeleteExpired]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 09/Sept/08
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisSessions_DeleteExpired] (
	@NowOffset datetime
)
AS
BEGIN
	SET NOCOUNT ON;

BEGIN TRANSACTION;

-- delete basket option values of all session expired
--	
	delete from tblKartrisBasketOptionValues 
	where BSKTOPT_BasketValueID in (
		select BV_ID from tblKartrisBasketValues
		where BV_ParentType='b' and BV_ParentID in (
			select SESS_ID from tblKartrisSessions
			where dateadd(minute,sess_expiry,sess_datelastupdated) < @NowOffset
		)
	);
	IF @@ERROR <> 0
	BEGIN
		ROLLBACK
		RETURN
	END;


	delete from tblKartrisBasketOptionValues 
	where BSKTOPT_BasketValueID in (
		select BV_ID from tblKartrisBasketValues
		where BV_ParentType='b' and BV_ParentID not in (
			select SESS_ID from tblKartrisSessions
		)
	);

	IF @@ERROR <> 0
	BEGIN
		ROLLBACK
		RETURN
	END;
--	

-- delete basket values of all session expired
--	
	delete from tblKartrisBasketValues
	where BV_ParentType='b' and BV_ParentID in (
		select SESS_ID from tblKartrisSessions
		where dateadd(minute,sess_expiry,sess_datelastupdated) < @NowOffset
	);
	IF @@ERROR <> 0
	BEGIN
		ROLLBACK
		RETURN
	END;

	/**
	delete from tblKartrisBasketValues
	where BV_ParentType = 'b' and BV_ParentID not in (
		select SESS_ID from tblKartrisSessions
	);
	IF @@ERROR <> 0
	BEGIN
		ROLLBACK
		RETURN
	END;
	**/
--	



-- delete session values of all session expired
--	
	delete from tblKartrisSessionValues
	where SESSV_SessionID in (
		select SESS_ID from tblKartrisSessions
		where dateadd(minute,sess_expiry,sess_datelastupdated) < @NowOffset
	);
	IF @@ERROR <> 0
	BEGIN
		ROLLBACK
		RETURN
	END;
--	

-- delete all session expired
--	
	delete from tblKartrisSessions
	where dateadd(minute,sess_expiry,sess_datelastupdated) < @NowOffset;
	IF @@ERROR <> 0
	BEGIN
		ROLLBACK
		RETURN
	END;
--	

COMMIT

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisReviews_GetByProductID]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisReviews_GetByProductID]
(
	@ProductID int,
	@LanguageID tinyint
)
AS
	SET NOCOUNT ON;
SELECT     tblKartrisReviews.REV_ID, tblKartrisReviews.REV_ProductID, tblKartrisReviews.REV_LanguageID, tblKartrisReviews.REV_CustomerID, tblKartrisReviews.REV_Title, 
					  tblKartrisReviews.REV_Text, tblKartrisReviews.REV_Rating, tblKartrisReviews.REV_Name, tblKartrisReviews.REV_Email, tblKartrisReviews.REV_Location, 
					  tblKartrisReviews.REV_DateCreated, tblKartrisReviews.REV_DateLastUpdated, tblKartrisReviews.REV_Live, vKartrisTypeProducts.P_Name
FROM         tblKartrisReviews INNER JOIN
					  vKartrisTypeProducts ON tblKartrisReviews.REV_ProductID = vKartrisTypeProducts.P_ID AND 
					  tblKartrisReviews.REV_LanguageID = vKartrisTypeProducts.LANG_ID
WHERE     (tblKartrisReviews.REV_ProductID = @ProductID) AND 
			(tblKartrisReviews.REV_LanguageID = @LanguageID) AND
				(tblKartrisReviews.REV_Live = 'y')
ORDER BY tblKartrisReviews.REV_DateLastUpdated DESC
GO
/****** Object:  StoredProcedure [dbo].[spKartrisReviews_Get]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisReviews_Get]
AS
	SET NOCOUNT ON;
SELECT        tblKartrisReviews.*
FROM            tblKartrisReviews
GO
/****** Object:  StoredProcedure [dbo].[spKartrisVersions_GetCustomization]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 18-Feb-2009
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisVersions_GetCustomization](
	@V_ID as bigint
) AS
BEGIN
	
	SET NOCOUNT ON;

	declare @V_Type nvarchar(1)
	declare @V_ProductID bigint
	
	SELECT  @V_Type=V_Type, @V_ProductID=V_ProductID FROM tblKartrisVersions WHERE V_ID = @V_ID
	
	If @V_Type <> 'v'
	Begin
		SELECT  V_CustomizationType, V_CustomizationDesc, V_CustomizationCost FROM tblKartrisVersions 
		WHERE V_Type='b' and V_ProductID=@V_ProductID
	End
	Else
	Begin
		SELECT  V_CustomizationType, V_CustomizationDesc, V_CustomizationCost FROM tblKartrisVersions WHERE V_ID = @V_ID
	End

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisShippingMethods_GetByName]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ==============================================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	Get Shipping Method - by Destination , Boundary and Name
-- ===============================================================
CREATE PROCEDURE [dbo].[spKartrisShippingMethods_GetByName](@D_ID as int,@Boundary as dec,@SM_Name as char,@LANG_ID as int)
AS
BEGIN
	SET NOCOUNT ON;
SELECT S_ShippingRate, SM_ID, SM_Name, SM_Desc, S_ShippingGateways, SM_Tax, SM_Tax2 FROM (tblKartrisDestination 
	INNER JOIN tblKartrisShippingRates ON tblKartrisDestination.D_ShippingZoneID = tblKartrisShippingRates.S_ShippingZoneID) 
	INNER JOIN vKartrisTypeShippingMethods ON vKartrisTypeShippingMethods.SM_ID = tblKartrisShippingRates.S_ShippingMethodID 
	
	WHERE SM_Live = 'true' AND S_Boundary>= @Boundary  AND D_ID = @D_ID AND LANG_ID = @LANG_ID AND SM_Name = @SM_Name
	
	ORDER BY SM_OrderByValue ASC, SM_ID ASC, S_Boundary ASC

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisShippingMethods_Get]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ==============================================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	Get Shipping Methods - by Destination and Boundary
-- ===============================================================
CREATE PROCEDURE [dbo].[spKartrisShippingMethods_Get](@D_ID as int,@Boundary as real,@LANG_ID as int)
AS
BEGIN
	SET NOCOUNT ON;
SELECT S_ShippingRate, SM_ID, SM_Name, SM_Desc, S_ShippingGateways, SM_Tax, SM_Tax2 FROM (tblKartrisDestination 
	INNER JOIN tblKartrisShippingRates ON tblKartrisDestination.D_ShippingZoneID = tblKartrisShippingRates.S_ShippingZoneID) 
	INNER JOIN vKartrisTypeShippingMethods ON vKartrisTypeShippingMethods.SM_ID = tblKartrisShippingRates.S_ShippingMethodID 
	
	WHERE SM_Live = 'true' AND S_Boundary>= @Boundary  AND D_ID = @D_ID AND LANG_ID = @LANG_ID
	
	ORDER BY SM_OrderByValue ASC, SM_ID ASC, S_Boundary ASC

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisVersions_GetBasicVersionByProductID]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisVersions_GetBasicVersionByProductID](@ProductID as bigint)
AS
BEGIN
	SET NOCOUNT ON;

	SELECT     V_ID, V_CodeNumber, V_ProductID, V_Price, V_Tax, V_Weight, V_Quantity, V_QuantityWarnLevel, V_RRP, V_Type
FROM         tblKartrisVersions
WHERE     (V_ProductID = @ProductID) AND (V_Live = 1) AND ((V_Type = 'b') OR (V_Type = 'o'));
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisWishLists_Delete]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-------------

CREATE PROCEDURE [dbo].[spKartrisWishLists_Delete] (
	@WishListsID bigint
) AS
BEGIN
	SET NOCOUNT ON;


--	
--	

	DELETE tblKartrisWishLists 
	WHERE WL_ID=@WishListsID;

	DELETE tblKartrisBasketOptionValues
	WHERE BSKTOPT_BasketValueID in (SELECT BV_ID FROM tblKartrisBasketValues WHERE BV_ParentID=@WishListsID and BV_ParentType='w');

	DELETE tblKartrisBasketValues
	WHERE BV_ParentID=@WishListsID and BV_ParentType='w';

	DELETE tblKartrisBasketOptionValues
	WHERE BSKTOPT_BasketValueID in (SELECT BV_ID FROM tblKartrisBasketValues WHERE BV_ParentID=@WishListsID and BV_ParentType='r');

	DELETE tblKartrisBasketValues
	WHERE BV_ParentID=@WishListsID and BV_ParentType='r';


--	
--	

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisWishLists_Add]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
----------------

CREATE PROCEDURE [dbo].[spKartrisWishLists_Add] (
	@WL_ID bigint,
	@BasketID int,
	@WL_UserID int,
	@WL_Name nvarchar(200),
	@WL_PublicPassword nvarchar(200),
	@WL_Message nvarchar(2000),
	@NowOffset datetime
) AS
BEGIN
	SET NOCOUNT ON;


--	
--	


	If @WL_ID=0
	Begin
		insert into tblKartrisWishLists (WL_UserID,WL_Name,WL_PublicPassword,WL_Message,WL_DateTimeAdded)
		values (@WL_UserID,@WL_Name,@WL_PublicPassword,@WL_Message,@NowOffset)

		declare @NewWL_ID int
		set @NewWL_ID=SCOPE_IDENTITY() ;

		DECLARE @newBV_ID BIGINT;


	DECLARE @BV_ID INT
	DECLARE @BV_VersionID INT
	DECLARE @BV_Quantity real
	DECLARE @BV_CustomText nvarchar(2000)

	DECLARE Basket_cursor CURSOR FOR 
	SELECT BV_ID,BV_VersionID,BV_Quantity,BV_CustomText FROM tblKartrisBasketValues WHERE BV_ParentID=@BasketID AND BV_ParentType='b';

	OPEN Basket_cursor
	FETCH NEXT FROM Basket_cursor INTO @BV_ID,@BV_VersionID,@BV_Quantity,@BV_CustomText
	WHILE @@FETCH_STATUS = 0
	BEGIN
		-- wishlish
		insert into tblKartrisBasketValues (BV_ParentType,BV_ParentID,BV_VersionID,BV_Quantity,BV_CustomText,BV_DateTimeAdded)
		VALUES ('w',@NewWL_ID,@BV_VersionID,@BV_Quantity,@BV_CustomText,@NowOffset)
	
		SET @newBV_ID=SCOPE_IDENTITY() 

		IF EXISTS (SELECT * FROM tblKartrisBasketOptionValues WHERE BSKTOPT_BasketValueID=@BV_ID) 
		BEGIN
			INSERT INTO tblKartrisBasketOptionValues
			SELECT @newBV_ID,BSKTOPT_OptionID FROM tblKartrisBasketOptionValues WHERE BSKTOPT_BasketValueID=@BV_ID
		END

		-- wishlist remaining
		INSERT INTO tblKartrisBasketValues(BV_ParentType,BV_ParentID,BV_VersionID,BV_Quantity,BV_CustomText,BV_DateTimeAdded)
		VALUES ('r',@NewWL_ID,@BV_VersionID,@BV_Quantity,@BV_CustomText,@NowOffset)

		SET @newBV_ID=SCOPE_IDENTITY() 

		IF EXISTS (SELECT * FROM tblKartrisBasketOptionValues WHERE BSKTOPT_BasketValueID=@BV_ID) 
		BEGIN
			INSERT INTO tblKartrisBasketOptionValues
			SELECT @newBV_ID,BSKTOPT_OptionID FROM tblKartrisBasketOptionValues WHERE BSKTOPT_BasketValueID=@BV_ID
		END

		FETCH NEXT FROM Basket_cursor INTO @BV_ID,@BV_VersionID,@BV_Quantity,@BV_CustomText
	End

	CLOSE Basket_cursor
	DEALLOCATE Basket_cursor;

	End

	-- update wishlist
	Else
	Begin
		Update 	tblKartrisWishLists
		set WL_Name=@WL_Name, WL_PublicPassword=@WL_PublicPassword, WL_Message=@WL_Message, WL_LastUpdated=@NowOffset
		where WL_ID=@WL_ID	
	End;


--	
--	

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisVersions_GetQBTaxRefCode]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisVersions_GetQBTaxRefCode]
(
	@V_CodeNumber nvarchar(50)
)
AS
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT OFF;

	SELECT     tblKartrisTaxRates.T_QBRefCode
FROM         tblKartrisVersions INNER JOIN
					  tblKartrisTaxRates ON tblKartrisVersions.V_Tax = tblKartrisTaxRates.T_ID
WHERE     (tblKartrisVersions.V_CodeNumber = @V_CodeNumber)
GO
/****** Object:  StoredProcedure [dbo].[spKartrisVersions_GetProductID_s]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	Get the total no. of Products in Category "used for ItemPager"
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisVersions_GetProductID_s]
			(
			@V_ID as bigint,
			@Return_Value as int OUTPUT
			)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

SELECT     @Return_Value = V_ProductID
FROM         tblKartrisVersions
WHERE     (V_ID = @V_ID)
	-- Insert statements for procedure here

	
	
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisVersions_GetOptionValues]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	replaces [spKartris_VER_GetVersionOptionValues]
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisVersions_GetOptionValues](@P_ID as int, @OPT_OptionGroupID as tinyint, @LANG_ID as tinyint)
AS
BEGIN
	SET NOCOUNT ON;
	SELECT		vKartrisTypeOptions.OPT_ID, vKartrisTypeOptions.OPT_Name, vKartrisTypeOptions.OPT_CheckBoxValue, 
				tblKartrisProductOptionLink.P_OPT_PriceChange, tblKartrisProductOptionLink.P_OPT_Selected
	FROM         vKartrisTypeOptions INNER JOIN tblKartrisProductOptionLink 
				ON vKartrisTypeOptions.OPT_ID = tblKartrisProductOptionLink.P_OPT_OptionID
	WHERE      (vKartrisTypeOptions.LANG_ID = @LANG_ID) 
				AND (vKartrisTypeOptions.OPT_OptionGroupID = @OPT_OptionGroupID) 
				AND (tblKartrisProductOptionLink.P_OPT_ProductID = @P_ID)
	ORDER BY    tblKartrisProductOptionLink.P_OPT_OrderByValue, vKartrisTypeOptions.OPT_DefOrderByValue
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisVersions_GetOptionsStockQuantity]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Paul
-- Create date: <Create Date,,>
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisVersions_GetOptionsStockQuantity]
(
	@P_ID as int,
	@OptionList as nvarchar(500),
	@Qty as real OUT
)
AS
BEGIN
	DECLARE @NoOfCombinations as int;
	SELECT	@NoOfCombinations = Count(V_ID)
	FROM    tblKartrisVersions 
	WHERE   (tblKartrisVersions.V_ProductID = @P_ID) 
			AND (tblKartrisVersions.V_Type = 'c') 
			AND (tblKartrisVersions.V_Live = 1);
	IF @NoOfCombinations = 0
	BEGIN
		-- Get stock quanity of the base version, should be only one
		SELECT @Qty = V_Quantity FROM tblKartrisVersions WHERE V_ProductID = @P_ID AND V_Type='b'
	END
	ELSE
	BEGIN
		-- SET NOCOUNT ON added to prevent extra result sets from
		-- interfering with SELECT statements.
		SET NOCOUNT ON;

		-- need to sort the options' list to match the already sorted options
		--@OptionsList
		DECLARE @SortedOptions as nvarchar(max);
		SELECT @SortedOptions = COALESCE(@SortedOptions + ',', '') + CAST(T._ID as nvarchar(10))
		FROM (	SELECT DISTINCT Top(5000) _ID
				FROM dbo.fnTbl_SplitNumbers(@OptionList)
				ORDER BY _ID) AS T;

		SELECT @Qty = V_Quantity
		FROM dbo.vKartrisCombinationPrices
		WHERE V_ProductID = @P_ID AND V_OptionsIDs = @SortedOptions;
	END
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisProducts_GetByProductID]    Script Date: 2016-01-21 16:10:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[_spKartrisProducts_NumberOfCombinations]
(
	@P_ID int
)
AS
BEGIN
	SELECT	Count(V_ID) as Combinations
	FROM    tblKartrisVersions 
	WHERE   (tblKartrisVersions.V_ProductID = @P_ID) 
			AND (tblKartrisVersions.V_Type = 'c') 
			AND (tblKartrisVersions.V_Live = 1)
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisStatistics_GetRecentlyViewedProducts]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Paul
-- Create date: <Create Date, ,>
-- Description:	NOT USED - Session variable is used instead
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisStatistics_GetRecentlyViewedProducts]
(
	@LanguageID as tinyint
)
AS
	SET NOCOUNT ON;

	CREATE TABLE #TempRecentlyViewedProducts(S_ID bigint, S_ItemID int)

	INSERT INTO #TempRecentlyViewedProducts
	
	-- Format the query
	SELECT ST_ID, ST_ItemID
	FROM tblKartrisStatistics INNER JOIN tblKartrisProducts ON ST_ItemID = P_ID
	WHERE ST_Type = 'P' AND P_Live = 1
	ORDER BY ST_Date DESC;

	SELECT DISTINCT TOP(5) S_ItemID AS ProductID, dbo.fnKartrisProducts_GetName(S_ItemID, @LanguageID) AS ProductName
	FROM #TempRecentlyViewedProducts;

	DROP TABLE #TempRecentlyViewedProducts;
GO
/****** Object:  StoredProcedure [dbo].[spKartrisVersionOptionLink_Get]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisVersionOptionLink_Get]
AS
	SET NOCOUNT ON;
SELECT        tblKartrisVersionOptionLink.*
FROM            tblKartrisVersionOptionLink
GO
/****** Object:  StoredProcedure [dbo].[spKartrisVersions_GetByProductID]    Script Date: 04/19/2014 16:04:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Paul
-- Updated to fix issues with 'simple' tax mode
-- and remove user of 'us' tax config setting
-- which is deprecated.
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisVersions_GetByProductID]
(
	@P_ID as int, 
	@LANG_ID as tinyint,
	@CGroupID as smallint
)
AS
BEGIN
SET NOCOUNT ON;
	
	DECLARE @OrderBy as nvarchar(50), @OrderDirection as char(1);
	SELECT @OrderBy = P_OrderVersionsBy, @OrderDirection = P_VersionsSortDirection
	FROM tblKartrisProducts WHERE P_ID = @P_ID;

	IF @OrderBy IS NULL OR @OrderBy = '' OR @OrderBy = 'd'
	BEGIN
		 SELECT @OrderBy = CFG_Value FROM tblKartrisConfig WHERE CFG_Name = 'frontend.versions.display.sortdefault';
	END

	IF @OrderDirection IS NULL OR @OrderDirection = ''
	BEGIN
		 SELECT @OrderDirection = CFG_Value FROM tblKartrisConfig WHERE CFG_Name = 'frontend.versions.display.sortdirection';
	END

	BEGIN
		SELECT     vKartrisTypeVersions.V_ID, tblKartrisTaxRates.T_Taxrate, vKartrisTypeVersions.V_Price, vKartrisTypeVersions.V_Weight, vKartrisTypeVersions.V_RRP, 
					  vKartrisTypeVersions.V_Tax, tblKartrisTaxRates.T_Taxrate AS Expr1, '0' AS CalculatedTax, vKartrisTypeVersions.V_ProductID, vKartrisTypeVersions.V_CodeNumber, 
					  vKartrisTypeVersions.V_ExtraCodeNumber, vKartrisTypeVersions.V_Quantity, vKartrisTypeVersions.V_QuantityWarnLevel, vKartrisTypeVersions.V_Price AS OrderByBit, 
					  vKartrisTypeVersions.V_Name, vKartrisTypeVersions.V_Desc, MIN(tblKartrisQuantityDiscounts.QD_Price) AS QuantityDiscount, vKartrisTypeVersions.V_OrderByValue, 
					  vKartrisTypeVersions.V_CustomizationType, vKartrisTypeVersions.V_CustomizationDesc, vKartrisTypeVersions.V_CustomizationCost
		FROM         vKartrisTypeVersions LEFT OUTER JOIN
							  tblKartrisTaxRates ON vKartrisTypeVersions.V_Tax = tblKartrisTaxRates.T_ID LEFT OUTER JOIN
							  tblKartrisQuantityDiscounts ON vKartrisTypeVersions.V_ID = tblKartrisQuantityDiscounts.QD_VersionID
		WHERE     (vKartrisTypeVersions.LANG_ID = @LANG_ID) AND (vKartrisTypeVersions.V_ProductID = @P_ID) AND (vKartrisTypeVersions.V_Live = 1)
				AND (vKartrisTypeVersions.V_CustomerGroupID IS NULL OR vKartrisTypeVersions.V_CustomerGroupID = @CGroupID)
				AND vKartrisTypeVersions.V_Type <> 's'
		GROUP BY vKartrisTypeVersions.V_ID, tblKartrisTaxRates.T_Taxrate, vKartrisTypeVersions.V_Price, vKartrisTypeVersions.V_Weight, vKartrisTypeVersions.V_RRP, 
							  vKartrisTypeVersions.V_Tax, vKartrisTypeVersions.V_ProductID, vKartrisTypeVersions.V_CodeNumber, vKartrisTypeVersions.V_ExtraCodeNumber,
							  vKartrisTypeVersions.V_Quantity, vKartrisTypeVersions.V_QuantityWarnLevel, vKartrisTypeVersions.V_Name, vKartrisTypeVersions.V_Desc, 
							  vKartrisTypeVersions.V_OrderByValue, vKartrisTypeVersions.V_CustomizationType, vKartrisTypeVersions.V_CustomizationDesc, 
							  vKartrisTypeVersions.V_CustomizationCost
		HAVING      (vKartrisTypeVersions.V_Name IS NOT NULL)
		ORDER BY	CASE
					WHEN (@OrderBy = 'V_Name' AND @OrderDirection = 'A') THEN (RANK() OVER(ORDER BY vKartrisTypeVersions.V_Name ASC))
					WHEN (@OrderBy = 'V_Name' AND @OrderDirection = 'D') THEN (RANK() OVER(ORDER BY vKartrisTypeVersions.V_Name DESC))
					WHEN (@OrderBy = 'V_ID' AND @OrderDirection = 'A') THEN (RANK() OVER(ORDER BY vKartrisTypeVersions.V_ID ASC))
					WHEN (@OrderBy = 'V_ID' AND @OrderDirection = 'D') THEN (RANK() OVER(ORDER BY vKartrisTypeVersions.V_ID DESC))
					WHEN (@OrderBy = 'V_OrderByValue' AND @OrderDirection = 'A') THEN (RANK() OVER(ORDER BY vKartrisTypeVersions.V_OrderByValue ASC))
					WHEN (@OrderBy = 'V_OrderByValue' AND @OrderDirection = 'D') THEN (RANK() OVER(ORDER BY vKartrisTypeVersions.V_OrderByValue DESC))
					WHEN (@OrderBy = 'V_Quantity' AND @OrderDirection = 'A') THEN (RANK() OVER(ORDER BY vKartrisTypeVersions.V_Quantity ASC))
					WHEN (@OrderBy = 'V_Quantity' AND @OrderDirection = 'D') THEN (RANK() OVER(ORDER BY vKartrisTypeVersions.V_Quantity DESC))
					WHEN (@OrderDirection = 'A') THEN (RANK() OVER(ORDER BY vKartrisTypeVersions.V_Price ASC))
					ELSE (RANK() OVER(ORDER BY vKartrisTypeVersions.V_Price DESC))
					END
	END			
END
/****** Object:  StoredProcedure [dbo].[spKartrisVersions_GetByLanguageID]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisVersions_GetByLanguageID](@LANG_ID as tinyint)
AS
BEGIN
	SET NOCOUNT ON;

	SELECT * FROM vKartrisTypeVersions WHERE LANG_ID = @LANG_ID;
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisQuantityDiscounts_GetByProduct]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisQuantityDiscounts_GetByProduct]
(
	@ProductID as int,
	@LangID as tinyint
)
AS
	SET NOCOUNT ON;
SELECT     tblKartrisQuantityDiscounts.QD_Quantity, tblKartrisQuantityDiscounts.QD_Price, vKartrisTypeVersions.V_Name, vKartrisTypeVersions.V_CodeNumber, vKartrisTypeVersions.V_ID
FROM         tblKartrisQuantityDiscounts INNER JOIN
					  vKartrisTypeVersions ON tblKartrisQuantityDiscounts.QD_VersionID = vKartrisTypeVersions.V_ID
WHERE     (vKartrisTypeVersions.V_ProductID = @ProductID) AND (vKartrisTypeVersions.LANG_ID = @LangID) AND (vKartrisTypeVersions.V_Live = 1)
GO
/****** Object:  StoredProcedure [dbo].[spKartrisProducts_GetAttributeValue]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: 
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisProducts_GetAttributeValue]
	(
	@P_ID int,
	@ATTRIB_ID int,
	@LANG_ID tinyint,
	@ATTRIBV_Value nvarchar(50) OUT
	)
AS
SELECT @ATTRIBV_Value = ATTRIBV_Value 
FROM vKartrisTypeAttributeValues 
WHERE vKartrisTypeAttributeValues.ATTRIBV_AttributeID = @ATTRIB_ID
	AND vKartrisTypeAttributeValues.ATTRIBV_ProductID = @P_ID
	AND vKartrisTypeAttributeValues.LANG_ID = @LANG_ID
GO
/****** Object:  StoredProcedure [dbo].[spKartrisProducts_GetAttributesbyProductID]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: 02/12/2008 12:09:34
-- Description:	Replaces the [spKartris_PROD_Attributes]
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisProducts_GetAttributesbyProductID]
	(
	@P_ID int,
	@LANG_ID tinyint
	)
AS
	SELECT * FROM vKartrisTypeAttributes
INNER JOIN vKartrisTypeAttributeValues ON vKartrisTypeAttributes.ATTRIB_ID = vKartrisTypeAttributeValues.ATTRIBV_AttributeID
WHERE vKartrisTypeAttributes.ATTRIB_Name <> ''
AND vKartrisTypeAttributeValues.ATTRIBV_Value <> ''
AND vKartrisTypeAttributes.ATTRIB_Live = 1
AND vKartrisTypeAttributeValues.ATTRIBV_ProductID = @P_ID
AND vKartrisTypeAttributes.LANG_ID = @LANG_ID
ORDER BY vKartrisTypeAttributes.ATTRIB_OrderByValue
GO
/****** Object:  StoredProcedure [dbo].[spKartrisProducts_GetTopList]    Script Date: 7/21/2014 10:14:31 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		Medz
-- Create date: 02/12/2008 13:52:43
-- Last Modified: Mohammad - July 2014
-- Description:	Replaces spKartris_Prod_TopList
-- Remarks:	Optimization (Medz) - 04-07-2010
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisProducts_GetTopList]
	(
	@Limit int,
	@LANG_ID tinyint,
	@StartDate datetime
	)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	WITH tblTopList AS
	(
		SELECT  tblKartrisInvoiceRows.IR_VersionCode AS IR_VersionCode, SUM(tblKartrisInvoiceRows.IR_Quantity) AS IR_Quantity
		FROM    tblKartrisInvoiceRows LEFT OUTER JOIN tblKartrisOrders ON tblKartrisInvoiceRows.IR_OrderNumberID = tblKartrisOrders.O_ID
		WHERE   (tblKartrisOrders.O_Paid = 1) AND (tblKartrisOrders.O_Date >= @StartDate)
		GROUP BY tblKartrisInvoiceRows.IR_VersionCode
	)
	SELECT TOP (@Limit) vKartrisCategoryProductsVersionsLink.P_ID, [dbo].[fnKartrisProducts_GetName](vKartrisCategoryProductsVersionsLink.P_ID, @LANG_ID) AS P_Name, 
				@LANG_ID as LANG_ID, SUM(tblTopList.IR_Quantity) as ProductHits
	FROM tblTopList INNER JOIN dbo.vKartrisCategoryProductsVersionsLink ON tblTopList.IR_VersionCode = dbo.vKartrisCategoryProductsVersionsLink.V_CodeNumber
	WHERE	vKartrisCategoryProductsVersionsLink.V_CustomerGroupID IS NULL 
		AND vKartrisCategoryProductsVersionsLink.P_CustomerGroupID IS NULL 
		AND vKartrisCategoryProductsVersionsLink.CAT_CustomerGroupID IS NULL
	GROUP BY vKartrisCategoryProductsVersionsLink.P_ID, [dbo].[fnKartrisProducts_GetName](vKartrisCategoryProductsVersionsLink.P_ID, @LANG_ID)
	ORDER BY ProductHits DESC

END

GO
/****** Object:  StoredProcedure [dbo].[spKartrisCustomer_GetOrderDetails]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 21/Aug/08
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisCustomer_GetOrderDetails] ( 
	@O_ID int
) AS
BEGIN
	SET NOCOUNT ON;

	select *, [dbo].[fnKartrisSuppliers_GetNameByVersionCode](IR_VersionCode) As SupplierName 
	from tblKartrisCurrencies C
	inner join tblKartrisOrders O on C.CUR_ID=O.O_CurrencyID
	inner join tblKartrisInvoiceRows IR on O.O_ID=IR.IR_OrderNumberID
	inner join tblKartrisUsers U on O.O_CustomerID=U.U_ID
	inner join tblKartrisLanguages L on O.O_LanguageID=L.LANG_ID
	where O_ID=@O_ID

END
GO
/****** Object:  UserDefinedFunction [dbo].[fnKartrisProduct_GetMinPriceWithCG]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnKartrisProduct_GetMinPriceWithCG] 
(
	-- Add the parameters for the function here
	@V_ProductID as int,
	@CG_ID as smallint
	
)
RETURNS real
AS
BEGIN
	-- Declare the return variable here
	DECLARE @Result real;

	IF @CG_ID = 0 OR @CG_ID IS NULL BEGIN
		SET @Result = dbo.fnKartrisProduct_GetMinPrice(@V_ProductID);
	END	
	ELSE BEGIN
		-- Add the T-SQL statements to compute the return value here
		SELECT @Result = Min(V_Price) FROM tblKartrisVersions 
		WHERE V_ProductID = @V_ProductID AND V_Live = 1
			AND (tblKartrisVersions.V_CustomerGroupID IS NULL OR tblKartrisVersions.V_CustomerGroupID = @CG_ID);

		DECLARE @CGP_MinPrice as real;
		SELECT @CGP_MinPrice = ISNULL(Min([CGP_Price]), @Result)
		FROM [dbo].[tblKartrisCustomerGroupPrices]
		WHERE [CGP_CustomerGroupID] = @CG_ID 
			AND [CGP_VersionID] IN (SELECT V_ID FROM tblKartrisVersions WHERE V_ProductID = @V_ProductID);

		IF @CGP_MinPrice <> 0 AND @CGP_MinPrice IS NOT NULL AND @CGP_MinPrice < @Result
		BEGIN
			SET @Result = @CGP_MinPrice
		END
		
		DECLARE @QD_MinPrice as real;
		SELECT @QD_MinPrice = Min(QD_Price)
		FROM dbo.tblKartrisQuantityDiscounts INNER JOIN tblKartrisVersions 
			ON tblKartrisQuantityDiscounts.QD_VersionID = tblKartrisVersions.V_ID
		WHERE tblKartrisVersions.V_Live = 1 AND tblKartrisVersions.V_ProductID = @V_ProductID 
			AND (tblKartrisVersions.V_CustomerGroupID IS NULL OR tblKartrisVersions.V_CustomerGroupID = @CG_ID);

		IF @QD_MinPrice <> 0 AND @QD_MinPrice IS NOT NULL AND @QD_MinPrice < @Result
		BEGIN
			SET @Result = @QD_MinPrice
		END
	END

	IF @Result IS NULL
	BEGIN
		SET @Result = 0;
	END
	-- Return the result of the function
	RETURN @Result

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisProducts_Update]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisProducts_Update](
								@P_ID as int,
								@P_Live as bit, 
								@P_Featured as tinyint,
								@P_OrderVersionsBy as nvarchar(50),
								@P_VersionsSortDirection as char(1),
								@P_VersionDisplayType as char(1),
								@P_Reviews as char(1),
								@P_SupplierID as smallint,
								@P_Type as char(1),
								@P_CustomerGroupID as smallint,
								@NowOffset as datetime 
								)
AS
BEGIN
	
	SET NOCOUNT ON;

	DECLARE @OldType as char(1);
	SELECT @OldType = P_Type FROM dbo.tblKartrisProducts WHERE P_ID = @P_ID;
	IF @OldType <> @P_Type BEGIN
		IF @OldType = 'o' BEGIN
			EXEC	[dbo].[_spKartrisProductOptionGroupLink_DeleteByProductID]	
			@ProductID = @P_ID;
			EXEC	[dbo].[_spKartrisProductOptionLink_DeleteByProductID]
			@ProductID = @P_ID;
		END
	END;
	
	UPDATE tblKartrisProducts
	SET P_Live = @P_Live, P_Featured = @P_Featured, P_OrderVersionsBy = @P_OrderVersionsBy,
		P_VersionsSortDirection  = @P_VersionsSortDirection,
		P_VersionDisplayType = @P_VersionDisplayType, P_Reviews = @P_Reviews, P_SupplierID = @P_SupplierID, 
		P_Type = @P_Type, P_CustomerGroupID = @P_CustomerGroupID, P_LastModified = @NowOffset
	WHERE P_ID = @P_ID;
	
		
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisAttributes_GetSpecialByProductID]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisAttributes_GetSpecialByProductID]
	(
		@P_ID int,
		@LANG_ID tinyint
	)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT     vKartrisTypeAttributes.ATTRIB_Name, vKartrisTypeAttributeValues.ATTRIBV_Value
	FROM         vKartrisTypeAttributeValues INNER JOIN
						  vKartrisTypeAttributes ON vKartrisTypeAttributeValues.ATTRIBV_AttributeID = vKartrisTypeAttributes.ATTRIB_ID AND 
						  vKartrisTypeAttributeValues.LANG_ID = vKartrisTypeAttributes.LANG_ID
	WHERE     (vKartrisTypeAttributes.ATTRIB_Live = 1) AND (vKartrisTypeAttributeValues.ATTRIBV_ProductID = @P_ID) AND (vKartrisTypeAttributeValues.LANG_ID = @LANG_ID) 
						  AND (vKartrisTypeAttributes.ATTRIB_Special = 1)
	ORDER BY vKartrisTypeAttributes.ATTRIB_OrderByValue
END
GO

/****** Object:  StoredProcedure [dbo].[_spKartrisDB_ExportProductRelatedData]    Script Date: 27/06/2016 13:37:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Paul
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisDB_ExportProductRelatedData]
(
	@LanguageID as int
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	-- Put products from View into temp table
	SELECT * INTO #TempProducts FROM dbo.vKartrisTypeProducts WHERE LANG_ID = @LanguageID;
	-- apply index
	CREATE CLUSTERED INDEX IDX_P_ID ON #TempProducts(P_ID);
	CREATE INDEX IDX_LANG_ID ON #TempProducts(LANG_ID);

	-- Put versions from View into temp table
	SELECT * INTO #TempVersions FROM dbo.vKartrisTypeVersions WHERE LANG_ID = @LanguageID;
	-- apply indexes
	CREATE CLUSTERED INDEX IDX_V_ID ON #TempVersions(V_ID);
	CREATE INDEX IDX_V_ProductID ON #TempVersions(V_ProductID);
	CREATE INDEX IDX_LANG_ID ON #TempVersions(LANG_ID);

	-- Put categories from View into temp table
	SELECT * INTO #TempCategories FROM dbo.vKartrisTypeCategories WHERE LANG_ID = @LanguageID;
	-- apply indexes
	CREATE CLUSTERED INDEX IDX_CAT_ID ON #TempCategories(CAT_ID);
	CREATE INDEX IDX_LANG_ID ON #TempCategories(LANG_ID);

	-- Put category hierarchy from View into temp table
	SELECT * INTO #TempCategoryHierarchy FROM dbo.vKartrisCategoryHierarchy WHERE LANG_ID = @LanguageID;
	-- apply indexes
	CREATE CLUSTERED INDEX IDX_CH_CAT_ID ON #TempCategoryHierarchy(CAT_ID);
	CREATE INDEX IDX_CH_ChildID ON #TempCategoryHierarchy(CH_ChildID);
	CREATE INDEX IDX_LANG_ID ON #TempCategoryHierarchy(LANG_ID);

	-- Put attributes from View into temp table
	SELECT * INTO #TempAttributes FROM dbo.vKartrisTypeAttributes WHERE LANG_ID = @LanguageID;
	-- apply indexes
	CREATE CLUSTERED INDEX IDX_ATTRIB_ID ON #TempAttributes(ATTRIB_ID);
	CREATE INDEX IDX_LANG_ID ON #TempAttributes(LANG_ID);

	-- Put attributes from View into temp table
	SELECT * INTO #TempAttributeValues FROM dbo.vKartrisTypeAttributeValues WHERE LANG_ID = @LanguageID;
	-- apply indexes
	CREATE CLUSTERED INDEX IDX_ATTRIBV_ID ON #TempAttributeValues(ATTRIBV_ID);
	CREATE INDEX IDX_ATTRIB_ID ON #TempAttributeValues(ATTRIBV_AttributeID);
	CREATE INDEX IDX_LANG_ID ON #TempAttributeValues(LANG_ID);

SELECT * INTO #TempProductData
		FROM
			((SELECT 'CAT1_NAME' AS Cat5_Name1,	'DO NOT MODIFY OR DELETE THIS LINE. THIS SHOULD HELP ADDRESS THE ISSUES WITH THE OLEDB DRIVER LIMITATION. BY ADDING THIS LINE WE ARE LETTING THE DRIVER KNOW THE CORRECT DATA TYPE OF EACH FIELD.  THIS IS BETTER THAN MODIFYING THE REGISTRY TO SET A HIGHER ROWSCAN VALUE.' AS Cat5_Desc1, 'CAT1_IMAGE' AS Cat5_Image, 'CAT2_NAME' AS Cat4_Name1, '################################################################################################################################################################################################################################################################' AS Cat4_Desc1, 'CAT2_IMAGE' AS Cat4_Image, 'CAT3_NAME' AS Cat3_Name1, '################################################################################################################################################################################################################################################################' AS Cat3_Desc1, 'CAT3_IMAGE' AS Cat3_Image, 'CAT4_NAME' AS Cat2_Name1, '################################################################################################################################################################################################################################################################' AS Cat2_Desc1, 'CAT4_IMAGE' AS Cat2_Image,	'CAT5_NAME' AS Cat1_Name1, '################################################################################################################################################################################################################################################################' AS Cat1_Desc1, 'CAT5_IMAGE' AS Cat1_Image, 'P_NAME1' AS P_Name1, '################################################################################################################################################################################################################################################################' AS P_Desc1, 'P_IMAGEFIELD' AS P_Image, 'P_STRAPLINE1' AS P_StrapLine1, 'V_NAME1' AS V_Name1, '################################################################################################################################################################################################################################################################' AS V_Desc1, 'V_IMAGEFIELD' AS V_Image, 'V_CODENUMBER' AS V_CodeNumber, 'V_TYPE' AS V_Type, '0' AS V_Price, '0' AS V_Quantity, '0' AS V_Weight, '0' AS V_RRP, '0' AS T_Taxrate, '0' AS T_Taxrate2, 'V_TAXEXTRA' As V_TaxExtra, 'SUPPLIER' AS Supplier, 'ATTRIBUTES' AS Attributes, 'OPTIONS' AS Options)
			UNION
			(
			SELECT  COALESCE(#TempCategories.CAT_Name, '') AS Cat5_Name1, COALESCE(#TempCategories.CAT_Desc,'') AS Cat5_Desc1, '' AS Cat5_Image, 
				  COALESCE(#TempCategoryHierarchy.CAT_Name, '') AS Cat4_Name1, COALESCE(#TempCategoryHierarchy.CAT_Desc, '') AS Cat4_Desc1, '' AS Cat4_Image, 
				  COALESCE(vKartrisCategoryHierarchy_1.CAT_Name, '') AS Cat3_Name1, COALESCE(vKartrisCategoryHierarchy_1.CAT_Desc, '') AS Cat3_Desc1, '' AS Cat3_Image, 
				  COALESCE(vKartrisCategoryHierarchy_2.CAT_Name, '') AS Cat2_Name1, COALESCE(vKartrisCategoryHierarchy_2.CAT_Desc, '') AS Cat2_Desc1, '' AS Cat2_Image, 
				  COALESCE(vKartrisCategoryHierarchy_3.CAT_Name, '') AS Cat1_Name1, COALESCE(vKartrisCategoryHierarchy_3.CAT_Desc, '') AS Cat1_Desc1, '' AS Cat1_Image, 
				  #TempProducts.P_Name AS P_Name1, #TempProducts.P_Desc AS P_Desc1, '' AS P_Image, 
				  #TempProducts.P_StrapLine AS P_Strapline1, #TempVersions.V_Name AS V_Name1, #TempVersions.V_Desc AS V_Desc1, 
				  '' AS V_Image, #TempVersions.V_CodeNumber, #TempVersions.V_Type, #TempVersions.V_Price, #TempVersions.V_Quantity, 
				  #TempVersions.V_Weight, #TempVersions.V_RRP, dbo.tblKartrisTaxRates.T_Taxrate, COALESCE(#TempVersions.V_Tax2, 0), #TempVersions.V_TaxExtra, dbo.tblKartrisSuppliers.SUP_Name AS Supplier, 
				  COALESCE(STUFF((SELECT ' || ' +    CONVERT(NVARCHAR(max), #TempAttributes.ATTRIB_Name),
						' {{' + CONVERT(NVARCHAR(max), #TempAttributeValues.ATTRIBV_Value) + '}}'
FROM #TempAttributeValues INNER JOIN
					  #TempAttributes ON #TempAttributeValues.ATTRIBV_AttributeID = #TempAttributes.ATTRIB_ID AND 
					  #TempAttributeValues.LANG_ID = #TempAttributes.LANG_ID
WHERE (#TempAttributes.ATTRIB_Live = 1) AND (#TempAttributes.ATTRIB_ShowFrontend = 1) AND (#TempAttributeValues.ATTRIBV_ProductID = #TempProducts.P_ID) 
ORDER BY #TempAttributes.ATTRIB_OrderByValue
							FOR xml path('')
						)
						, 1
						, 4
						, ''), '') AS Attributes, '' AS Options
			FROM dbo.tblKartrisTaxRates RIGHT OUTER JOIN
				  #TempVersions INNER JOIN
				  #TempProducts ON #TempVersions.V_ProductID = #TempProducts.P_ID AND 
				  #TempVersions.LANG_ID = #TempProducts.LANG_ID ON dbo.tblKartrisTaxRates.T_ID = #TempVersions.V_Tax LEFT OUTER JOIN
				  dbo.tblKartrisSuppliers ON #TempProducts.P_SupplierID = dbo.tblKartrisSuppliers.SUP_ID LEFT OUTER JOIN
				  dbo.#TempCategories INNER JOIN
				  dbo.tblKartrisProductCategoryLink ON #TempCategories.CAT_ID = dbo.tblKartrisProductCategoryLink.PCAT_CategoryID LEFT OUTER JOIN
				  #TempCategoryHierarchy LEFT OUTER JOIN
				  #TempCategoryHierarchy AS vKartrisCategoryHierarchy_3 RIGHT OUTER JOIN
				  #TempCategoryHierarchy AS vKartrisCategoryHierarchy_2 ON vKartrisCategoryHierarchy_3.LANG_ID = vKartrisCategoryHierarchy_2.LANG_ID AND 
				  vKartrisCategoryHierarchy_3.CH_ChildID = vKartrisCategoryHierarchy_2.CAT_ID RIGHT OUTER JOIN
				  #TempCategoryHierarchy AS vKartrisCategoryHierarchy_1 ON vKartrisCategoryHierarchy_2.LANG_ID = vKartrisCategoryHierarchy_1.LANG_ID AND 
				  vKartrisCategoryHierarchy_2.CH_ChildID = vKartrisCategoryHierarchy_1.CAT_ID ON 
				  #TempCategoryHierarchy.LANG_ID = vKartrisCategoryHierarchy_1.LANG_ID AND 
				  #TempCategoryHierarchy.CAT_ID = vKartrisCategoryHierarchy_1.CH_ChildID ON 
				  #TempCategories.LANG_ID = #TempCategoryHierarchy.LANG_ID AND 
				  #TempCategories.CAT_ID = #TempCategoryHierarchy.CH_ChildID ON 
				  #TempProducts.P_ID = dbo.tblKartrisProductCategoryLink.PCAT_ProductID
			WHERE  (#TempProducts.P_Type <> 'o')
			)) ProductData
	ORDER BY Cat5_Name1, P_Name1
--SELECT * FROM #TempProductData 

SELECT * FROM (
(SELECT Cat5_Name1, Cat5_Desc1, '' As Cat5_Image, '' As Cat4_Name1, '' As Cat4_Desc1, '' As Cat4_Image, '' As Cat3_Name1, '' As Cat3_Desc1, '' As Cat3_Image, '' As Cat2_Name1, '' As Cat2_Desc1, '' As Cat2_Image, '' As Cat1_Name1, '' As Cat1_Desc1, '' As Cat1_Image, P_Name1, P_Desc1, P_Image, P_StrapLine1, V_Name1, V_Desc1, V_Image, V_CodeNumber, V_Type, V_Price, V_Quantity, V_Weight, V_RRP, T_Taxrate, T_Taxrate2, V_TaxExtra, Supplier, Attributes, '' As Options FROM #TempProductData WHERE Coalesce(Cat5_Name1, '')<>'' AND Coalesce(Cat4_Name1, '')='' AND Coalesce(Cat3_Name1, '')='' AND Coalesce(Cat2_Name1, '')='' AND Coalesce(Cat1_Name1, '')='')
UNION
(SELECT Cat4_Name1, Cat4_Desc1, '', Cat5_Name1, Cat5_Desc1, '', '', '', '', '', '', '', '', '', '', P_Name1, P_Desc1, P_Image, P_StrapLine1, V_Name1, V_Desc1, V_Image, V_CodeNumber, V_Type, V_Price, V_Quantity, V_Weight, V_RRP, T_Taxrate, T_Taxrate2, V_TaxExtra, Supplier, Attributes, '' As Options FROM #TempProductData WHERE Coalesce(Cat5_Name1, '')<>'' AND Coalesce(Cat4_Name1, '')<>'' AND Coalesce(Cat3_Name1, '')='' AND Coalesce(Cat2_Name1, '')='' AND Coalesce(Cat1_Name1, '')='')
UNION
(SELECT Cat3_Name1, Cat3_Desc1, '', Cat4_Name1, Cat4_Desc1, '', Cat5_Name1, Cat5_Desc1, '', '', '', '', '', '', '', P_Name1, P_Desc1, P_Image, P_StrapLine1, V_Name1, V_Desc1, V_Image, V_CodeNumber, V_Type, V_Price, V_Quantity, V_Weight, V_RRP, T_Taxrate, T_Taxrate2, V_TaxExtra, Supplier, Attributes, '' As Options FROM #TempProductData WHERE Coalesce(Cat5_Name1, '')<>'' AND Coalesce(Cat4_Name1, '')<>'' AND Coalesce(Cat3_Name1, '')<>'' AND Coalesce(Cat2_Name1, '')='' AND Coalesce(Cat1_Name1, '')='')
UNION
(SELECT Cat2_Name1, Cat2_Desc1, '', Cat3_Name1, Cat3_Desc1, '', Cat4_Name1, Cat4_Desc1, '', Cat5_Name1, Cat5_Desc1, '', '', '', '', P_Name1, P_Desc1, P_Image, P_StrapLine1, V_Name1, V_Desc1, V_Image, V_CodeNumber, V_Type, V_Price, V_Quantity, V_Weight, V_RRP, T_Taxrate, T_Taxrate2, V_TaxExtra, Supplier, Attributes, '' As Options FROM #TempProductData WHERE Coalesce(Cat5_Name1, '')<>'' AND Coalesce(Cat4_Name1, '')<>'' AND Coalesce(Cat3_Name1, '')<>'' AND Coalesce(Cat2_Name1, '')<>'' AND Coalesce(Cat1_Name1, '')='')
UNION
(SELECT Cat1_Name1, Cat1_Desc1, Cat1_Image, Cat2_Name1, Cat2_Desc1, Cat2_Image, Cat3_Name1, Cat3_Desc1, Cat3_Image, Cat4_Name1, Cat4_Desc1, Cat4_Image, Cat5_Name1, Cat5_Desc1, Cat5_Image, P_Name1, P_Desc1, P_Image, P_StrapLine1, V_Name1, V_Desc1, V_Image, V_CodeNumber, V_Type, V_Price, V_Quantity, V_Weight, V_RRP, T_Taxrate, T_Taxrate2, V_TaxExtra, Supplier, Attributes, '' As Options FROM #TempProductData WHERE Coalesce(Cat5_Name1, '')<>'' AND Coalesce(Cat4_Name1, '')<>'' AND Coalesce(Cat3_Name1, '')<>'' AND Coalesce(Cat2_Name1, '')<>'' AND Coalesce(Cat1_Name1, '')<>'')
) As OutputProducts

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisDB_AdminSearch]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
 CREATE PROCEDURE [dbo].[_spKartrisDB_AdminSearch]
(	
	@searchLocation as nvarchar(25),
	@keyWordsList as nvarchar(100),
	@LANG_ID as tinyint,
	@PageIndex as tinyint, -- 0 Based index
	@RowsPerPage as tinyint,
	@TotalResult as int OUTPUT
)
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @SIndx as int;
	DECLARE @CIndx as int;
	DECLARE @KeyWord as nvarchar(30);
	SET @SIndx = 0;
	DECLARE @StartRowNumber as int;
	SET @StartRowNumber = (@PageIndex * @RowsPerPage) + 1;
	DECLARE @EndRowNumber as int;
	SET @EndRowNumber = @StartRowNumber + @RowsPerPage - 1;

	DECLARE @TypeNo as tinyint;
	SET @TypeNo = 0;
	IF @searchLocation = 'products' BEGIN SET @TypeNo = 2 END
	IF @searchLocation = 'categories' BEGIN SET @TypeNo = 3 END
	
	--================ PRODUCTS/CATEGORIES ==================
	IF @searchLocation = 'products' OR @searchLocation = 'categories'
	BEGIN
			CREATE TABLE #_ProdCatSearchTbl(ItemID nvarchar(255) COLLATE DATABASE_DEFAULT, ItemValue nvarchar(MAX) COLLATE DATABASE_DEFAULT)
			WHILE @SIndx <= LEN(@keyWordsList)
			BEGIN
				
				SET @CIndx = CHARINDEX(',', @keyWordsList, @SIndx)
				IF @CIndx = 0 BEGIN SET @CIndx = LEN(@keyWordsList)+1 END
				SET @KeyWord = SUBSTRING(@keyWordsList, @SIndx, @CIndx - @SIndx)
				SET @SIndx = @CIndx + 1;
				INSERT INTO #_ProdCatSearchTbl (ItemID,ItemValue)
				SELECT     CAST(LE_ParentID as nvarchar(255)), LE_Value
				FROM		tblKartrisLanguageElements
				WHERE     (LE_LanguageID = @LANG_ID) AND (LE_TypeID = @TypeNo) AND (LE_FieldID = 1) AND LE_Value LIKE '%' + @KeyWord + '%';
			END

			SELECT @TotalResult =  Count(ItemID) FROM #_ProdCatSearchTbl;

--			With SearchResult AS
--			(
--				SELECT     ROW_NUMBER() OVER (ORDER BY ItemValue ASC) AS Row, ItemID, ItemValue
--				FROM         #_ProdCatSearchTbl
--			)
--			
--			SELECT *
--			FROM SearchResult
--			WHERE Row BETWEEN @StartRowNumber AND @EndRowNumber
			SELECT     ItemID, ItemValue
			FROM         #_ProdCatSearchTbl
			
			DROP TABLE #_ProdCatSearchTbl;
		END

	--================ VERSIONS ==================
	IF @searchLocation = 'versions'
	BEGIN
		CREATE TABLE #_VersionSearchTbl(VersionID nvarchar(255) COLLATE DATABASE_DEFAULT, VersionName nvarchar(MAX) COLLATE DATABASE_DEFAULT, VersionCode nvarchar(25) COLLATE DATABASE_DEFAULT, ProductID nvarchar(255) COLLATE DATABASE_DEFAULT)
		WHILE @SIndx <= LEN(@keyWordsList)
		BEGIN
			
			SET @CIndx = CHARINDEX(',', @keyWordsList, @SIndx)
			IF @CIndx = 0 BEGIN SET @CIndx = LEN(@keyWordsList)+1 END
			SET @KeyWord = SUBSTRING(@keyWordsList, @SIndx, @CIndx - @SIndx)
			SET @SIndx = @CIndx + 1;
			INSERT INTO #_VersionSearchTbl (VersionID, VersionName, VersionCode, ProductID)
			SELECT     CAST(LE_ParentID as nvarchar(255)), LE_Value, dbo.fnKartrisVersions_GetCodeNumber(LE_ParentID),
						CAST(dbo.fnKartrisVersions_GetProductID(LE_ParentID) as nvarchar(255))
			FROM		tblKartrisLanguageElements
			WHERE     (LE_LanguageID = @LANG_ID) AND (LE_TypeID = 1) AND (LE_FieldID = 1) AND LE_Value LIKE '%' + @KeyWord + '%';

			-- SEARCH FOR THE CODE NUMBER
			INSERT INTO #_VersionSearchTbl (VersionID, VersionName, VersionCode, ProductID)
			SELECT     CAST(LE_ParentID as nvarchar(255)), LE_Value, dbo.fnKartrisVersions_GetCodeNumber(LE_ParentID),
						CAST(dbo.fnKartrisVersions_GetProductID(LE_ParentID) as nvarchar(255))
			FROM		tblKartrisLanguageElements
			WHERE     (LE_LanguageID = @LANG_ID) AND (LE_TypeID = 1) AND (LE_FieldID = 1) 
					AND LE_ParentID 
						IN (SELECT V_ID 
							FROM tblKartrisVersions LEFT OUTER JOIN dbo.vKartrisObjectConfigValues 
								ON V_ID = OCV_ParentID AND OC_Name = 'K:version.extrasku'
							WHERE V_CodeNumber Like '%' + @KeyWord + '%' OR OCV_Value LIKE '%' + @Keyword + '%');

		END

		SELECT @TotalResult =  Count(VersionID) FROM #_VersionSearchTbl;
		
--		With SearchResult AS
--		(
--			SELECT     ROW_NUMBER() OVER (ORDER BY VersionName ASC) AS Row, VersionID, VersionName, VersionCode, ProductID
--			FROM         #_VersionSearchTbl
--		)
--		
--		SELECT *
--		FROM SearchResult
--		WHERE Row BETWEEN @StartRowNumber AND @EndRowNumber
		SELECT     VersionID, VersionName, VersionCode, ProductID
		FROM         #_VersionSearchTbl
		DROP TABLE #_VersionSearchTbl;
	END

	--================ CUSTOMERS ==================
	IF @searchLocation = 'customers'
	BEGIN
			
			CREATE TABLE #_CustomerSearchTbl(CustomerID nvarchar(255) COLLATE DATABASE_DEFAULT, CustomerName nvarchar(50) COLLATE DATABASE_DEFAULT, CustomerEmail nvarchar(100) COLLATE DATABASE_DEFAULT)
			WHILE @SIndx <= LEN(@keyWordsList)
			BEGIN
				
				SET @CIndx = CHARINDEX(',', @keyWordsList, @SIndx)
				IF @CIndx = 0 BEGIN SET @CIndx = LEN(@keyWordsList)+1 END
				SET @KeyWord = SUBSTRING(@keyWordsList, @SIndx, @CIndx - @SIndx)
				SET @SIndx = @CIndx + 1;

				INSERT INTO #_CustomerSearchTbl (CustomerID, CustomerName, CustomerEmail)
				SELECT     tblKartrisUsers.U_ID, tblKartrisAddresses.ADR_Name, tblKartrisUsers.U_EmailAddress
				FROM         tblKartrisAddresses RIGHT OUTER JOIN
									  tblKartrisUsers ON tblKartrisAddresses.ADR_ID = tblKartrisUsers.U_DefBillingAddressID
				WHERE     (tblKartrisAddresses.ADR_Name LIKE '%' + @KeyWord + '%') OR
						(tblKartrisUsers.U_EmailAddress LIKE '%' + @KeyWord + '%');

			END

			SELECT @TotalResult =  Count(CustomerID) FROM #_CustomerSearchTbl;

--			With SearchResult AS
--			(
--				SELECT     ROW_NUMBER() OVER (ORDER BY CustomerName ASC) AS Row, CustomerID, CustomerName, CustomerEmail
--				FROM         #_CustomerSearchTbl
--			)
--			
--			SELECT *
--			FROM SearchResult
--			WHERE Row BETWEEN @StartRowNumber AND @EndRowNumber
			
			SELECT     CustomerID, CustomerName, CustomerEmail
			FROM         #_CustomerSearchTbl
			
			DROP TABLE #_CustomerSearchTbl;
		END

		--================ ORDERS ==================
		IF @searchLocation = 'orders'
		BEGIN
			CREATE TABLE #_OrdersSearchTbl(OrderID int, PurchaseOrderNumber nvarchar(50) COLLATE DATABASE_DEFAULT)
			WHILE @SIndx <= LEN(@keyWordsList)
			BEGIN
				
				SET @CIndx = CHARINDEX(',', @keyWordsList, @SIndx)
				IF @CIndx = 0 BEGIN SET @CIndx = LEN(@keyWordsList)+1 END
				SET @KeyWord = SUBSTRING(@keyWordsList, @SIndx, @CIndx - @SIndx)
				SET @SIndx = @CIndx + 1;

				INSERT INTO #_OrdersSearchTbl (OrderID, PurchaseOrderNumber)
				SELECT     tblKartrisOrders.O_ID, tblKartrisOrders.O_PurchaseOrderNo
				FROM         tblKartrisOrders 
				WHERE     (tblKartrisOrders.O_PurchaseOrderNo LIKE '%' + @KeyWord + '%');

				BEGIN TRY
					INSERT INTO #_OrdersSearchTbl (OrderID, PurchaseOrderNumber)
					SELECT     tblKartrisOrders.O_ID, tblKartrisOrders.O_PurchaseOrderNo
					FROM         tblKartrisOrders 
					WHERE     (tblKartrisOrders.O_ID = @KeyWord);
				END TRY
				BEGIN CATCH
				END CATCH

			END

			SELECT @TotalResult =  Count(OrderID) FROM #_OrdersSearchTbl;


			SELECT     OrderID, PurchaseOrderNumber
			FROM         #_OrdersSearchTbl
			
			DROP TABLE #_OrdersSearchTbl;
		END

	--================ CONFIG ==================
	IF @searchLocation = 'config'
	BEGIN
			
		CREATE TABLE #_ConfigSearchTbl(ConfigName nvarchar(100) COLLATE DATABASE_DEFAULT, ConfigValue nvarchar(255) COLLATE DATABASE_DEFAULT)
		WHILE @SIndx <= LEN(@keyWordsList)
		BEGIN
			
			SET @CIndx = CHARINDEX(',', @keyWordsList, @SIndx)
			IF @CIndx = 0 BEGIN SET @CIndx = LEN(@keyWordsList)+1 END
			SET @KeyWord = SUBSTRING(@keyWordsList, @SIndx, @CIndx - @SIndx)
			SET @SIndx = @CIndx + 1;

			INSERT INTO #_ConfigSearchTbl (ConfigName, ConfigValue)
			SELECT     tblKartrisConfig.CFG_Name, tblKartrisConfig.CFG_Value
			FROM         tblKartrisConfig 
			WHERE     (tblKartrisConfig.CFG_Name LIKE '%' + @KeyWord + '%') 
					OR (tblKartrisConfig.CFG_Value LIKE '%' + @KeyWord + '%') ;

		END

		SELECT @TotalResult =  Count(ConfigName) FROM #_ConfigSearchTbl;

--		With SearchResult AS
--		(
--			SELECT     ROW_NUMBER() OVER (ORDER BY ConfigName ASC) AS Row, ConfigName, ConfigValue
--			FROM         #_ConfigSearchTbl
--		)
--		
--		SELECT *
--		FROM SearchResult
--		WHERE Row BETWEEN @StartRowNumber AND @EndRowNumber
		SELECT     ConfigName, ConfigValue
		FROM         #_ConfigSearchTbl
		
		DROP TABLE #_ConfigSearchTbl;
	END

	--================ LS ==================
	IF @searchLocation = 'site'
	BEGIN
			
		CREATE TABLE #_LSSearchTbl(LSFB char(1) COLLATE DATABASE_DEFAULT, LSLang tinyint, LSName nvarchar(255) COLLATE DATABASE_DEFAULT, LSValue nvarchar(MAX) COLLATE DATABASE_DEFAULT, LSClass nvarchar(50) COLLATE DATABASE_DEFAULT)
		WHILE @SIndx <= LEN(@keyWordsList)
		BEGIN
			
			SET @CIndx = CHARINDEX(',', @keyWordsList, @SIndx)
			IF @CIndx = 0 BEGIN SET @CIndx = LEN(@keyWordsList)+1 END
			SET @KeyWord = SUBSTRING(@keyWordsList, @SIndx, @CIndx - @SIndx)
			SET @SIndx = @CIndx + 1;

			INSERT INTO #_LSSearchTbl (LSFB, LSLang, LSName, LSValue, LSClass)
			SELECT     tblKartrisLanguageStrings.LS_FrontBack, tblKartrisLanguageStrings.LS_LangID,
						tblKartrisLanguageStrings.LS_Name, tblKartrisLanguageStrings.LS_Value, tblKartrisLanguageStrings.LS_ClassName
			FROM         tblKartrisLanguageStrings 
			WHERE     tblKartrisLanguageStrings.LS_LangID = @LANG_ID AND((tblKartrisLanguageStrings.LS_Name LIKE '%' + @KeyWord + '%') OR
						(tblKartrisLanguageStrings.LS_Value LIKE '%' + @KeyWord + '%'));

		END

		SELECT @TotalResult =  Count(LSName) FROM #_LSSearchTbl;

--		With SearchResult AS
--		(
--			SELECT     ROW_NUMBER() OVER (ORDER BY LSName ASC) AS Row, LSFB, LSName, LSValue
--			FROM         #_LSSearchTbl
--		)
--		
--		SELECT *
--		FROM SearchResult
--		WHERE Row BETWEEN @StartRowNumber AND @EndRowNumber
		SELECT     LSFB, LSLang, LSName, LSValue, LSClass
		FROM         #_LSSearchTbl
		
		DROP TABLE #_LSSearchTbl;
	END


	--============== Custom Pages =======================
	IF @searchLocation = 'pages'
	BEGIN
		CREATE TABLE #_CustomPagesSearchTbl(PageID smallint, PageName nvarchar(50) COLLATE DATABASE_DEFAULT)
		WHILE @SIndx <= LEN(@keyWordsList)
		BEGIN
			
			SET @CIndx = CHARINDEX(',', @keyWordsList, @SIndx)
			IF @CIndx = 0 BEGIN SET @CIndx = LEN(@keyWordsList)+1 END
			SET @KeyWord = SUBSTRING(@keyWordsList, @SIndx, @CIndx - @SIndx)
			SET @SIndx = @CIndx + 1;
			
			INSERT INTO #_CustomPagesSearchTbl (PageID, PageName)
			SELECT DISTINCT LE_ParentID, PAGE_Name
			FROM dbo.tblKartrisLanguageElements INNER JOIN dbo.tblKartrisPages
				ON tblKartrisLanguageElements.LE_ParentID = tblKartrisPages.PAGE_ID
			WHERE (LE_LanguageID = @LANG_ID) AND (LE_TypeID = 8) AND (LE_Value LIKE '%' + @KeyWord + '%');
			
		END

		SELECT @TotalResult =  Count(DISTINCT PageID) FROM #_CustomPagesSearchTbl;
		

		SELECT  DISTINCT PageID, PageName
		FROM         #_CustomPagesSearchTbl
		DROP TABLE #_CustomPagesSearchTbl;
	END
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisOptions_Delete]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisOptions_Delete]
(
	@OPT_ID int
)
AS
BEGIN
	SET NOCOUNT ON;

	
		DELETE FROM dbo.tblKartrisVersionOptionLink	WHERE V_OPT_OptionID = @OPT_ID;
	

	
		DELETE FROM dbo.tblKartrisProductOptionLink	WHERE P_OPT_OptionID = @OPT_ID;
	

		DELETE FROM dbo.tblKartrisBasketOptionValues WHERE BSKTOPT_OptionID = @OPT_ID;

	
		DELETE FROM dbo.tblKartrisLanguageElements WHERE LE_TypeID = 5 and LE_ParentID = @OPT_ID;
	

	
		DELETE FROM dbo.tblKartrisOptions WHERE OPT_ID = @OPT_ID;
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisQuantityDiscounts_GetByVersionIDs]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisQuantityDiscounts_GetByVersionIDs]
(
	@VersionIDList as nvarchar(max),
	@LANG_ID tinyint
)
AS
	SET NOCOUNT ON;
	
	
SELECT     dbo.fnKartrisProducts_GetName(vKartrisTypeVersions.V_ProductID, @LANG_ID) AS P_Name, tblKartrisQuantityDiscounts.QD_VersionID AS V_ID, 
					  tblKartrisQuantityDiscounts.QD_Quantity, tblKartrisQuantityDiscounts.QD_Price, vKartrisTypeVersions.V_Name
FROM         tblKartrisQuantityDiscounts LEFT OUTER JOIN
					  vKartrisTypeVersions ON tblKartrisQuantityDiscounts.QD_VersionID = vKartrisTypeVersions.V_ID
WHERE     (vKartrisTypeVersions.LANG_ID = @LANG_ID) AND (tblKartrisQuantityDiscounts.QD_VersionID IN
						  (SELECT     _ID
							FROM          dbo.fnTbl_SplitNumbers(@VersionIDList) AS fnTbl_SplitNumbers_1))
ORDER BY tblKartrisQuantityDiscounts.QD_VersionID
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisOrders_PurgeOrders]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisOrders_PurgeOrders]
(
	
	@O_PurgeDate smalldatetime = NULL
)
AS
BEGIN
	
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
		DECLARE @O_ID int
		DECLARE @RC int
		DECLARE tnames_cursor CURSOR
		FOR
	
		SELECT O_ID FROM tblKartrisOrders WHERE O_Date <= @O_PurgeDate
		
		OPEN tnames_cursor
		--loop through the orders table and return the ID
		FETCH NEXT FROM tnames_cursor INTO @O_ID
		WHILE (@@FETCH_STATUS <> -1)
		BEGIN
			IF (@@FETCH_STATUS <> -2)
			BEGIN 
				EXECUTE @RC = [_spKartrisOrders_Delete] @O_ID,0
			END
			FETCH NEXT FROM tnames_cursor INTO @O_ID
		END
		CLOSE tnames_cursor
		DEALLOCATE tnames_cursor ;
	SELECT @O_PurgeDate;
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_UpdateCustomerGroupPrices]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 1/Nov/2009
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_UpdateCustomerGroupPrices] ( 
	@CustomerGroupID int,
	@VersionID int,
	@Price DECIMAL(18,4),
	@CustomerGroupPriceID int	
) AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @cnt as int
	SELECT @cnt = COUNT(CGP_ID) FROM tblKartrisCustomerGroupPrices
	WHERE CGP_CustomerGroupID = @CustomerGroupID and CGP_VersionID = @VersionID;

	IF @cnt = 0
	BEGIN -- insert data
		INSERT INTO tblKartrisCustomerGroupPrices (CGP_CustomerGroupID,CGP_VersionID,CGP_Price)
			VALUES (@CustomerGroupID,@VersionID,@Price)
	END
	ELSE
	BEGIN -- update record
		UPDATE tblKartrisCustomerGroupPrices
			SET CGP_Price = @Price WHERE CGP_ID = @CustomerGroupPriceID
	END;


END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasket_GetCustomerGroupPrice]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 28/Oct/2009
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisBasket_GetCustomerGroupPrice] (
	@CustomerID int,
	@VersionID bigint
) AS
BEGIN
	SET NOCOUNT ON;

	select CGP_Price,U_CustomerDiscount from tblKartrisUsers USR
	inner join tblKartrisCustomerGroups CG on USR.U_CustomerGroupID = CG.CG_ID
	inner join tblKartrisCustomerGroupPrices CGP on CGP.CGP_CustomerGroupID = CG.CG_ID
	where U_ID = @CustomerID and CG_Live=1 and CGP_VersionID = @VersionID

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_Get]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_Get]
(
	@LANG_ID tinyint
)
AS
	SET NOCOUNT ON;
SELECT        vKartrisTypeVersions.V_ID, vKartrisTypeVersions.V_Name
FROM            vKartrisTypeVersions
WHERE        (LANG_ID = @LANG_ID) AND V_Type <> 'c' AND V_Type <> 's'
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_DeleteSuspendedVersions]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_DeleteSuspendedVersions](@P_ID as bigint)
AS
BEGIN
	SET NOCOUNT ON;
	
	-- 1. Delete Related Data From VersionOptionLink
	
	DELETE FROM tblKartrisVersionOptionLink
	FROM        tblKartrisVersionOptionLink INNER JOIN
				tblKartrisVersions ON tblKartrisVersionOptionLink.V_OPT_VersionID = tblKartrisVersions.V_ID
	WHERE		(tblKartrisVersions.V_ProductID = @P_ID) AND (tblKartrisVersions.V_Type = 's');
	

	-- 2. Delete Related Data From LanguageElements
	
	DELETE FROM tblKartrisLanguageElements
	FROM        tblKartrisLanguageElements INNER JOIN
				tblKartrisLanguageElementTypes ON tblKartrisLanguageElements.LE_TypeID = tblKartrisLanguageElementTypes.LET_ID INNER JOIN
				tblKartrisVersions ON tblKartrisLanguageElements.LE_ParentID = tblKartrisVersions.V_ID
	WHERE		(tblKartrisLanguageElementTypes.LET_Name = 'tblKartrisVersions') AND (tblKartrisVersions.V_ProductID = @P_ID) AND (tblKartrisVersions.V_Type = 's');
	
	DELETE FROM tblKartrisCustomerGroupPrices
	FROM        tblKartrisCustomerGroupPrices INNER JOIN
				tblKartrisVersions ON tblKartrisCustomerGroupPrices.CGP_VersionID = tblKartrisVersions.V_ID
	WHERE		(tblKartrisVersions.V_ProductID = @P_ID) AND (tblKartrisVersions.V_Type = 's');

	DELETE FROM tblKartrisQuantityDiscounts
	FROM        tblKartrisQuantityDiscounts INNER JOIN
				tblKartrisVersions ON tblKartrisQuantityDiscounts.QD_VersionID = tblKartrisVersions.V_ID
	WHERE		(tblKartrisVersions.V_ProductID = @P_ID) AND (tblKartrisVersions.V_Type = 's');

	DELETE FROM tblKartrisObjectConfigValue
	FROM        tblKartrisObjectConfig INNER JOIN
				tblKartrisObjectConfigValue ON tblKartrisObjectConfigValue.OCV_ObjectConfigID = tblKartrisObjectConfig.OC_ID
				 INNER JOIN
				tblKartrisVersions ON tblKartrisObjectConfigValue.OCV_ParentID = tblKartrisVersions.V_ID
	WHERE		(tblKartrisVersions.V_ProductID = @P_ID) AND (tblKartrisVersions.V_Type = 's') AND tblKartrisObjectConfig.OC_Name LIKE 'K:version.%';

	-- 3. Delete Suspended Versions From Versions
	
	DELETE FROM tblKartrisVersions
	WHERE (tblKartrisVersions.V_ProductID = @P_ID) AND (tblKartrisVersions.V_Type = 's');
	

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersionOptionLink_GetByProductID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersionOptionLink_GetByProductID](@P_ID as int)
AS
BEGIN
	SET NOCOUNT ON;
	SELECT     tblKartrisVersions.V_ProductID, tblKartrisVersions.V_ID, 
				tblKartrisVersionOptionLink.V_OPT_OptionID, tblKartrisVersions.V_Type
FROM         tblKartrisVersions INNER JOIN
					  tblKartrisVersionOptionLink ON tblKartrisVersions.V_ID = tblKartrisVersionOptionLink.V_OPT_VersionID
WHERE     (tblKartrisVersions.V_ProductID = @P_ID)
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersionOptionLink_AddOptionsList]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisVersionOptionLink_AddOptionsList]
(
	@VersionID bigint,
	@OptionList nvarchar(MAX)
)
AS
	SET NOCOUNT OFF;
	
	IF LEN(@OptionList) = 0	BEGIN RETURN END
	
	DECLARE @SIndx as int;
	DECLARE @CIndx as int;
	DECLARE @OptionID as int;

	
	SET @SIndx = 0;
	WHILE @SIndx <= LEN(@OptionList)
	BEGIN

		-- Loop through out the parent's list
		SET @CIndx = CHARINDEX(',', @OptionList, @SIndx)	-- Next keyword starting index (1-Based Index)
		IF @CIndx = 0 BEGIN SET @CIndx = LEN(@OptionList)+ 1 END	-- If no more keywords, set next starting index to not exist
		SET @OptionID = CAST(SUBSTRING(@OptionList, @SIndx, @CIndx - @SIndx) AS int)
		INSERT INTO tblKartrisVersionOptionLink
		VALUES (@VersionID, @OptionID); 
		SET @SIndx = @CIndx + 1;
	END;
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisUsers_Delete]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ==============================================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	Deletes an Order
-- ===============================================================
CREATE PROCEDURE [dbo].[_spKartrisUsers_Delete]
(
	@U_ID as int,
	@U_OrderDeleteReturnStock as bit
)
AS
BEGIN
	SET NOCOUNT ON;


	--	DECLARE @OrderID int
	--	DECLARE @O_Sent bit
	--	DECLARE tnames_cursor CURSOR
	--FOR
		
	--SELECT O_ID, O_Sent FROM tblKartrisOrders WHERE O_CustomerID= @U_ID
	
	--OPEN tnames_cursor
	--loop through the order records and delete them one by one
	--FETCH NEXT FROM tnames_cursor INTO @OrderID, @O_Sent
	--WHILE (@@FETCH_STATUS <> -1)
	--BEGIN
	--	IF (@@FETCH_STATUS <> -2)
	--	BEGIN 
			EXEC	[dbo].[_spKartrisUsers_DeleteOrders]
				@U_ID = @U_ID,
				@O_DeleteReturnStock = @U_OrderDeleteReturnStock;

	--	END
	--	FETCH NEXT FROM tnames_cursor INTO @OrderID, @O_Sent
	--END
	--CLOSE tnames_cursor
	--DEALLOCATE tnames_cursor ;

	
		--delete the customer addresses
		DELETE FROM dbo.tblKartrisAddresses
		WHERE ADR_UserID = @U_ID	;
	

	
		--delete the customer record
		DELETE FROM dbo.tblKartrisUsers
		WHERE U_ID = @U_ID	;
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_GetLinksInfo]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisVersions_GetLinksInfo]
(
	@LANG_ID tinyint
)
AS
	SET NOCOUNT ON;
	SELECT     V_ID, V_Name, V_DownLoadInfo, V_ProductID
FROM         vKartrisTypeVersions
WHERE     (V_DownloadType = N'l') AND (LANG_ID = @LANG_ID)
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_GetDownloadableInfo]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisVersions_GetDownloadableInfo]
(
	@LANG_ID tinyint
)
AS
	SET NOCOUNT ON;
	SELECT     V_ID, V_Name, V_CodeNumber, V_DownLoadInfo, V_ProductID
FROM         vKartrisTypeVersions
WHERE     (V_DownloadType = N'u') AND (LANG_ID = @LANG_ID)
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_GetCustomerGroupPrices]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 1/Nov/2009
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_GetCustomerGroupPrices] ( 
	@LanguageID int,	
	@VersionID int
) AS
BEGIN

	SET NOCOUNT ON;

	SELECT CG.CG_ID,CG_Name,CG.CG_Live,CG.CG_Discount,ISNULL(CGP_ID,0)'CGP_ID',
	ISNULL(CGP_Price,0)'CGP_Price',ISNULL(CGP_VersionID,0)'CGP_VersionID' FROM vKartrisTypeCustomerGroups vCG
	INNER JOIN tblKartrisCustomerGroups CG ON vCG.CG_ID = CG.CG_ID
	LEFT JOIN (SELECT * FROM tblKartrisCustomerGroupPrices WHERE CGP_VersionID=@VersionID) A
	ON CG.CG_ID = A.CGP_CustomerGroupID
	WHERE LANG_ID = @LanguageID

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_GetByProductID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	
-- BACK/FRONT : Back-End (Not Necessary to be V_Live=True)
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_GetByProductID](@P_ID as int, @LANG_ID as tinyint)
AS
BEGIN

	DECLARE @OrderBy as nvarchar(50);
	SELECT @OrderBy = P_OrderVersionsBy FROM tblKartrisProducts WHERE P_ID = @P_ID;
	IF @OrderBy IS NULL OR @OrderBy = '' OR @OrderBy = 'd'
	BEGIN
		 SELECT @OrderBy = CFG_Value FROM tblKartrisConfig WHERE CFG_Name = 'frontend.versions.display.sortdefault';
	END

	DECLARE @SortByValue as bit;
	SET @SortByValue = 0;
	IF @OrderBy = 'V_OrderByValue' BEGIN SET @SortByValue = 1 END;

	SET NOCOUNT ON;
	SELECT     vKartrisTypeVersions.V_ID, tblKartrisTaxRates.T_Taxrate, vKartrisTypeVersions.V_Price, vKartrisTypeVersions.V_Weight, vKartrisTypeVersions.V_RRP, 
					  vKartrisTypeVersions.V_Tax, tblKartrisTaxRates.T_Taxrate AS Expr1, '0' AS CalculatedTax, vKartrisTypeVersions.V_ProductID, vKartrisTypeVersions.V_CodeNumber, 
					  vKartrisTypeVersions.V_Quantity, vKartrisTypeVersions.V_QuantityWarnLevel, vKartrisTypeVersions.V_Price AS OrderByBit, vKartrisTypeVersions.V_Name, 
					  vKartrisTypeVersions.V_Desc, MIN(tblKartrisQuantityDiscounts.QD_Price) AS QuantityDiscount, vKartrisTypeVersions.V_OrderByValue, vKartrisTypeVersions.V_Type, 
					  vKartrisTypeVersions.V_CustomizationType, vKartrisTypeVersions.V_CustomizationDesc, vKartrisTypeVersions.V_CustomizationCost, @SortByValue AS SortByValue
FROM         vKartrisTypeVersions LEFT OUTER JOIN
					  tblKartrisTaxRates ON vKartrisTypeVersions.V_Tax = tblKartrisTaxRates.T_ID LEFT OUTER JOIN
					  tblKartrisQuantityDiscounts ON vKartrisTypeVersions.V_ID = tblKartrisQuantityDiscounts.QD_VersionID
WHERE     (vKartrisTypeVersions.LANG_ID = @LANG_ID) AND (vKartrisTypeVersions.V_ProductID = @P_ID) AND (vKartrisTypeVersions.V_Type <> 's')
GROUP BY vKartrisTypeVersions.V_ID, tblKartrisTaxRates.T_Taxrate, vKartrisTypeVersions.V_Price, vKartrisTypeVersions.V_Weight, vKartrisTypeVersions.V_RRP, 
					  vKartrisTypeVersions.V_Tax, vKartrisTypeVersions.V_ProductID, vKartrisTypeVersions.V_CodeNumber, vKartrisTypeVersions.V_Quantity, 
					  vKartrisTypeVersions.V_QuantityWarnLevel, vKartrisTypeVersions.V_Name, vKartrisTypeVersions.V_Desc, vKartrisTypeVersions.V_OrderByValue, 
					  vKartrisTypeVersions.V_Type, vKartrisTypeVersions.V_CustomizationType, vKartrisTypeVersions.V_CustomizationDesc, 
					  vKartrisTypeVersions.V_CustomizationCost

--ORDER BY vKartrisTypeVersions.V_Type, vKartrisTypeVersions.V_Name, vKartrisTypeVersions.V_CodeNumber
	ORDER BY	CASE
				WHEN @OrderBy = 'V_Name' THEN  (RANK() OVER(ORDER BY vKartrisTypeVersions.V_Name))
				WHEN @OrderBy = 'V_Price' THEN vKartrisTypeVersions.V_Price
				WHEN @OrderBy = 'V_OrderByValue' THEN vKartrisTypeVersions.V_OrderByValue
				WHEN @OrderBy = 'V_Quantity' THEN vKartrisTypeVersions.V_Quantity
				ELSE vKartrisTypeVersions.V_Price
				END
				
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_GetByCategoryList]    Script Date: 04/04/2013 16:19:45 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_GetByCategoryList]
(
	@LANG_ID tinyint,
	@FromPrice float,
	@ToPrice float,
	@CategoryList nvarchar(max)
)
AS
	SET NOCOUNT ON;
	IF @CategoryList = '0' BEGIN
		SELECT DISTINCT dbo.fnKartrisProducts_GetName(V_ProductID, @LANG_ID) as P_Name, V_ID, V_Name, V_CodeNumber, V_Price, V_RRP, dbo.fnKartrisProducts_GetSupplierID(V_ProductID, @LANG_ID) as P_SupplierID
		FROM dbo.vKartrisTypeVersions
		WHERE LANG_ID = @LANG_ID AND V_Type IN ('v','b','c') AND V_Price BETWEEN @FromPrice AND @ToPrice
		ORDER BY P_Name, V_CodeNumber
	END ELSE BEGIN
		SELECT DISTINCT dbo.fnKartrisProducts_GetName(V_ProductID, @LANG_ID) as P_Name, V_ID, V_Name, V_CodeNumber, V_Price, V_RRP, dbo.fnKartrisProducts_GetSupplierID(V_ProductID, @LANG_ID) as P_SupplierID
		FROM dbo.vKartrisTypeVersions
		WHERE V_ProductID IN(SELECT DISTINCT PCAT_ProductID	
							 FROM dbo.tblKartrisProductCategoryLink
							 WHERE PCAT_CategoryID IN ( SELECT * FROM dbo.fnTbl_SplitNumbers(@CategoryList))) 
			AND LANG_ID = @LANG_ID AND V_Type IN ('v','b','c') AND V_Price BETWEEN @FromPrice AND @ToPrice
		ORDER BY P_Name, V_CodeNumber
	END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_SearchVersionsByName]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_SearchVersionsByName]
(
	@Key as nvarchar(50),
	@LANG_ID tinyint
)
AS
	SET NOCOUNT ON;
SELECT        V_ID, V_Name
FROM            vKartrisTypeVersions
WHERE        (LANG_ID = @LANG_ID) AND V_Type <> 'c' AND V_Type <> 's' AND V_Name LIKE '%' + @Key + '%'
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_GetSuspendedByID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_GetSuspendedByID](@V_ID as bigint, @LANG_ID as tinyint)
AS
BEGIN
	SET NOCOUNT ON;

	SELECT     V_ID, V_Name, V_CodeNumber, V_Price, V_Quantity, V_QuantityWarnLevel, V_Type, LANG_ID
	FROM         vKartrisTypeVersions
	WHERE     (V_ID = @V_ID) AND (LANG_ID = @LANG_ID)
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisOptionGroups_Delete]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisOptionGroups_Delete]
(
	@OPTG_ID smallint
)
AS
BEGIN
	SET NOCOUNT ON;

	
		DELETE FROM dbo.tblKartrisVersionOptionLink
		WHERE V_OPT_OptionID IN (SELECT OPT_ID FROM dbo.tblKartrisOptions WHERE OPT_OptionGroupID = @OPTG_ID);
	

	
		DELETE FROM dbo.tblKartrisProductOptionLink
		WHERE P_OPT_OptionID IN (SELECT OPT_ID FROM dbo.tblKartrisOptions WHERE OPT_OptionGroupID = @OPTG_ID);
	

	
		DELETE FROM dbo.tblKartrisProductOptionGroupLink
		WHERE P_OPTG_OptionGroupID = @OPTG_ID;
	

		DELETE FROM dbo.tblKartrisBasketOptionValues
		WHERE BSKTOPT_OptionID IN (SELECT OPT_ID FROM dbo.tblKartrisOptions WHERE OPT_OptionGroupID = @OPTG_ID);

	
		DELETE FROM dbo.tblKartrisLanguageElements 
		WHERE (LE_TypeID = 5 AND LE_ParentID IN (SELECT OPT_ID FROM dbo.tblKartrisOptions WHERE OPT_OptionGroupID = @OPTG_ID))
			OR (LE_TypeID = 6 AND LE_ParentID = @OPTG_ID);
	

	
		DELETE FROM dbo.tblKartrisOptions WHERE OPT_OptionGroupID = @OPTG_ID;
	

	
		DELETE FROM	tblKartrisOptionGroups	WHERE OPTG_ID = @OPTG_ID;
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_DeleteByProduct]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_DeleteByProduct](@P_ID as int, @DownloadFiles as nvarchar(MAX) OUTPUT)
AS
BEGIN
	SET NOCOUNT ON;
	SET @DownloadFiles = '';

	DECLARE versionCursor CURSOR FOR 
	SELECT V_ID
	FROM dbo.tblKartrisVersions
	WHERE V_ProductID = @P_ID
		
	DECLARE @V_ID as bigint;
	
	OPEN versionCursor
	FETCH NEXT FROM versionCursor
	INTO @V_ID;

	WHILE @@FETCH_STATUS = 0
	BEGIN

	EXEC [dbo].[_spKartrisMediaLinks_DeleteByParent] 
			@ParentID = @V_ID, 
			@ParentType = 'v';
			
	EXEC [dbo].[_spKartrisPromotions_DeleteByParent] 
			@ParentID = @V_ID, 
			@ParentType = 'v';
			
	DELETE FROM tblKartrisLanguageElements
	WHERE     (LE_TypeID = 1)	-- For Versions
	AND (LE_ParentID = @V_ID);	-- VersionID
	
	DELETE FROM dbo.tblKartrisVersionOptionLink
	WHERE V_OPT_VersionID = @V_ID;
	
	DELETE FROM dbo.tblKartrisCustomerGroupPrices
	WHERE CGP_VersionID = @V_ID;

	DELETE FROM dbo.tblKartrisQuantityDiscounts
	WHERE QD_VersionID = @V_ID;

	SELECT @DownloadFiles = V_DownLoadInfo + '##' + @DownloadFiles
	FROM dbo.tblKartrisVersions
	WHERE V_ID = @V_ID AND V_DownloadType = 'u';

	DELETE tblKartrisObjectConfigValue
	FROM tblKartrisObjectConfig INNER JOIN tblKartrisObjectConfigValue ON tblKartrisObjectConfig.OC_ID = tblKartrisObjectConfigValue.OCV_ObjectConfigID
	WHERE (tblKartrisObjectConfigValue.OCV_ParentID = @V_ID) AND (tblKartrisObjectConfig.OC_ObjectType = 'Version');

	DELETE FROM dbo.tblKartrisVersions
	WHERE V_ID = @V_ID;
	
	IF @V_ID <> 0 AND @V_ID NOT IN (SELECT DELETED_ID FROM dbo.tblKartrisDeletedItems WHERE Deleted_Type = 'v') BEGIN
		
			DECLARE @Timeoffset as int;
			set @Timeoffset = CAST(dbo.fnKartrisConfig_GetValue('general.timeoffset') as int);
			INSERT INTO dbo.tblKartrisDeletedItems VALUES(@V_ID, 'v', @P_ID, DateAdd(hour, @Timeoffset, GetDate()));
		
	END
		FETCH NEXT FROM versionCursor
		INTO @V_ID;

	END

	CLOSE versionCursor
	DEALLOCATE versionCursor;
	
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_Delete]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_Delete](@V_ID as bigint, @DownloadFile as nvarchar(MAX) out)
AS
BEGIN
	SET NOCOUNT ON;
EXEC [dbo].[_spKartrisMediaLinks_DeleteByParent] 
			@ParentID = @V_ID, 
			@ParentType = 'v';
			
	EXEC [dbo].[_spKartrisPromotions_DeleteByParent] 
			@ParentID = @V_ID, 
			@ParentType = 'v';	

	SELECT @DownloadFile = V_DownLoadInfo
	FROM dbo.tblKartrisVersions
	WHERE V_ID = @V_ID AND V_DownloadType = 'u';
	
	DELETE FROM tblKartrisLanguageElements
	WHERE     (LE_TypeID = 1)	-- For Versions
	AND (LE_ParentID = @V_ID);	-- VersionID
	
	DELETE FROM dbo.tblKartrisVersionOptionLink
	WHERE V_OPT_VersionID = @V_ID;
	
	DELETE FROM dbo.tblKartrisCustomerGroupPrices
	WHERE CGP_VersionID = @V_ID;

	DELETE FROM dbo.tblKartrisQuantityDiscounts
	WHERE QD_VersionID = @V_ID;

	DELETE tblKartrisObjectConfigValue
	FROM tblKartrisObjectConfig INNER JOIN tblKartrisObjectConfigValue ON tblKartrisObjectConfig.OC_ID = tblKartrisObjectConfigValue.OCV_ObjectConfigID
	WHERE (tblKartrisObjectConfigValue.OCV_ParentID = @V_ID) AND (tblKartrisObjectConfig.OC_ObjectType = 'Version');

IF @V_ID <> 0 AND @V_ID NOT IN (SELECT DELETED_ID FROM dbo.tblKartrisDeletedItems WHERE Deleted_Type = 'v') BEGIN
	
		DECLARE @Timeoffset as int;
		set @Timeoffset = CAST(dbo.fnKartrisConfig_GetValue('general.timeoffset') as int);
		INSERT INTO dbo.tblKartrisDeletedItems VALUES(@V_ID, 'v', dbo.fnKartrisVersions_GetProductID(@V_ID), DateAdd(hour, @Timeoffset, GetDate()));
	
END
;
	
	DELETE FROM dbo.tblKartrisVersions
	WHERE V_ID = @V_ID;
	
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisAttributes_GetSummaryByProductID]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisAttributes_GetSummaryByProductID]
	(
		@P_ID int,
		@LANG_ID tinyint
	)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

 SELECT     vKartrisTypeAttributes.ATTRIB_ID, vKartrisTypeAttributes.ATTRIB_Name, vKartrisTypeAttributeValues.ATTRIBV_Value,
			vKartrisTypeAttributeValues.ATTRIBV_ProductID, vKartrisTypeAttributes.ATTRIB_Compare
FROM         vKartrisTypeAttributeValues INNER JOIN
					  vKartrisTypeAttributes ON vKartrisTypeAttributeValues.ATTRIBV_AttributeID = vKartrisTypeAttributes.ATTRIB_ID AND 
					  vKartrisTypeAttributeValues.LANG_ID = vKartrisTypeAttributes.LANG_ID
WHERE     (vKartrisTypeAttributes.ATTRIB_Live = 1) AND (vKartrisTypeAttributes.ATTRIB_ShowFrontend = 1) AND (vKartrisTypeAttributeValues.ATTRIBV_ProductID = @P_ID) AND
					   (vKartrisTypeAttributeValues.LANG_ID = @LANG_ID)
ORDER BY vKartrisTypeAttributes.ATTRIB_OrderByValue
END
GO
/****** Object:  UserDefinedFunction [dbo].[fnKartrisVersions_GetName]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnKartrisVersions_GetName] 
(
	-- Add the parameters for the function here
	@V_ID as bigint,
	@LANG_ID as tinyint
)
RETURNS nvarchar(MAX)
AS
BEGIN
	-- Declare the return variable here
	DECLARE @Result nvarchar(MAX);

	-- Add the T-SQL statements to compute the return value here
	SELECT @Result = V_Name FROM vKartrisTypeVersions WHERE V_ID = @V_ID AND LANG_ID = @LANG_ID ;

	-- Return the result of the function
	RETURN @Result

END
GO
/****** Object:  UserDefinedFunction [dbo].[fnKartrisVersions_GetSortedOptionsByVersion]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnKartrisVersions_GetSortedOptionsByVersion]
(
	@VersionID as bigint
)
RETURNS nvarchar(max)
AS
BEGIN
	DECLARE @Options as nvarchar(max)
	SELECT @Options = COALESCE(@Options + ',', '') + CAST(T.V_OPT_OptionID as nvarchar(10))
	FROM (	SELECT DISTINCT Top(5000) V_OPT_OptionID
			FROM dbo.tblKartrisVersionOptionLink
			WHERE V_OPT_VersionID = @VersionID
			ORDER BY V_OPT_OptionID) AS T;

	RETURN @Options
END
GO
/****** Object:  View [dbo].[vKartrisProductsVersions]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vKartrisProductsVersions]
AS
SELECT     dbo.vKartrisTypeProducts.P_ID, dbo.vKartrisTypeProducts.P_OrderVersionsBy, dbo.vKartrisTypeProducts.P_VersionsSortDirection, 
					  dbo.vKartrisTypeProducts.P_VersionDisplayType, dbo.vKartrisTypeProducts.P_Type, tblKartrisTaxRates_1.T_Taxrate, 
					  dbo.tblKartrisProductCategoryLink.PCAT_CategoryID AS CAT_ID, dbo.vKartrisTypeProducts.LANG_ID, dbo.vKartrisTypeProducts.P_Live, 
					  dbo.tblKartrisCategories.CAT_Live, dbo.vKartrisTypeVersions.V_Live, dbo.vKartrisTypeVersions.V_ID, dbo.vKartrisTypeVersions.V_Name, 
					  dbo.vKartrisTypeVersions.V_Desc, dbo.vKartrisTypeVersions.V_CodeNumber, dbo.vKartrisTypeVersions.V_Price, dbo.vKartrisTypeVersions.V_Tax, 
					  dbo.vKartrisTypeVersions.V_Weight, dbo.vKartrisTypeVersions.V_DeliveryTime, dbo.vKartrisTypeVersions.V_Quantity, 
					  dbo.vKartrisTypeVersions.V_QuantityWarnLevel, dbo.vKartrisTypeVersions.V_DownLoadInfo, dbo.vKartrisTypeVersions.V_DownloadType, 
					  dbo.vKartrisTypeVersions.V_RRP, dbo.vKartrisTypeVersions.V_OrderByValue, dbo.vKartrisTypeVersions.V_Type, dbo.vKartrisTypeVersions.V_CustomerGroupID, 
					  dbo.vKartrisTypeProducts.P_Name, dbo.vKartrisTypeProducts.P_Desc, dbo.vKartrisTypeProducts.P_StrapLine, dbo.vKartrisTypeProducts.P_PageTitle, 
					  dbo.vKartrisTypeProducts.P_Featured, dbo.vKartrisTypeProducts.P_SupplierID, dbo.vKartrisTypeProducts.P_CustomerGroupID, dbo.vKartrisTypeProducts.P_Reviews, 
					  dbo.vKartrisTypeProducts.P_AverageRating, dbo.vKartrisTypeProducts.P_DateCreated, dbo.vKartrisTypeVersions.V_CustomizationType, 
					  dbo.vKartrisTypeVersions.V_CustomizationDesc, dbo.vKartrisTypeVersions.V_CustomizationCost, dbo.tblKartrisTaxRates.T_Taxrate AS T_TaxRate2, dbo.tblKartrisCategories.CAT_CustomerGroupID 
FROM         dbo.tblKartrisCategories INNER JOIN
					  dbo.vKartrisTypeProducts INNER JOIN
					  dbo.tblKartrisProductCategoryLink ON dbo.vKartrisTypeProducts.P_ID = dbo.tblKartrisProductCategoryLink.PCAT_ProductID ON 
					  dbo.tblKartrisCategories.CAT_ID = dbo.tblKartrisProductCategoryLink.PCAT_CategoryID INNER JOIN
					  dbo.vKartrisTypeVersions ON dbo.vKartrisTypeProducts.P_ID = dbo.vKartrisTypeVersions.V_ProductID AND 
					  dbo.vKartrisTypeProducts.LANG_ID = dbo.vKartrisTypeVersions.LANG_ID LEFT OUTER JOIN
					  dbo.tblKartrisTaxRates ON dbo.vKartrisTypeVersions.V_Tax2 = dbo.tblKartrisTaxRates.T_ID LEFT OUTER JOIN
					  dbo.tblKartrisTaxRates AS tblKartrisTaxRates_1 ON dbo.vKartrisTypeVersions.V_Tax = tblKartrisTaxRates_1.T_ID
WHERE     (dbo.vKartrisTypeProducts.P_Live = 1) AND (dbo.tblKartrisCategories.CAT_Live = 1) AND (dbo.vKartrisTypeVersions.V_Live = 1)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
	  Begin PaneConfiguration = 0
		 NumPanes = 4
		 Configuration = "(H (1[37] 4[36] 2[6] 3) )"
	  End
	  Begin PaneConfiguration = 1
		 NumPanes = 3
		 Configuration = "(H (1 [50] 4 [25] 3))"
	  End
	  Begin PaneConfiguration = 2
		 NumPanes = 3
		 Configuration = "(H (1 [50] 2 [25] 3))"
	  End
	  Begin PaneConfiguration = 3
		 NumPanes = 3
		 Configuration = "(H (4 [30] 2 [40] 3))"
	  End
	  Begin PaneConfiguration = 4
		 NumPanes = 2
		 Configuration = "(H (1 [56] 3))"
	  End
	  Begin PaneConfiguration = 5
		 NumPanes = 2
		 Configuration = "(H (2 [66] 3))"
	  End
	  Begin PaneConfiguration = 6
		 NumPanes = 2
		 Configuration = "(H (4 [50] 3))"
	  End
	  Begin PaneConfiguration = 7
		 NumPanes = 1
		 Configuration = "(V (3))"
	  End
	  Begin PaneConfiguration = 8
		 NumPanes = 3
		 Configuration = "(H (1[56] 4[18] 2) )"
	  End
	  Begin PaneConfiguration = 9
		 NumPanes = 2
		 Configuration = "(H (1 [75] 4))"
	  End
	  Begin PaneConfiguration = 10
		 NumPanes = 2
		 Configuration = "(H (1[66] 2) )"
	  End
	  Begin PaneConfiguration = 11
		 NumPanes = 2
		 Configuration = "(H (4 [60] 2))"
	  End
	  Begin PaneConfiguration = 12
		 NumPanes = 1
		 Configuration = "(H (1) )"
	  End
	  Begin PaneConfiguration = 13
		 NumPanes = 1
		 Configuration = "(V (4))"
	  End
	  Begin PaneConfiguration = 14
		 NumPanes = 1
		 Configuration = "(V (2))"
	  End
	  ActivePaneConfig = 0
   End
   Begin DiagramPane = 
	  Begin Origin = 
		 Top = 0
		 Left = 0
	  End
	  Begin Tables = 
		 Begin Table = "tblKartrisCategories"
			Begin Extent = 
			   Top = 147
			   Left = 531
			   Bottom = 250
			   Right = 741
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "vKartrisTypeProducts"
			Begin Extent = 
			   Top = 6
			   Left = 38
			   Bottom = 282
			   Right = 232
			End
			DisplayFlags = 280
			TopColumn = 2
		 End
		 Begin Table = "tblKartrisProductCategoryLink"
			Begin Extent = 
			   Top = 155
			   Left = 283
			   Bottom = 265
			   Right = 460
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "vKartrisTypeVersions"
			Begin Extent = 
			   Top = 6
			   Left = 787
			   Bottom = 266
			   Right = 981
			End
			DisplayFlags = 280
			TopColumn = 9
		 End
		 Begin Table = "tblKartrisTaxRates"
			Begin Extent = 
			   Top = 10
			   Left = 562
			   Bottom = 97
			   Right = 722
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
	  End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
	  Begin ParameterDefaults = ""
	  End
	  Begin ColumnWidths = 28
		 Width = 284
		 Width = 975
		 Width = 2175
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisProductsVersions'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N' = 870
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
		 Width = 1500
	  End
   End
   Begin CriteriaPane = 
	  Begin ColumnWidths = 11
		 Column = 4560
		 Alias = 1035
		 Table = 1170
		 Output = 720
		 Append = 1400
		 NewValue = 1170
		 SortType = 1350
		 SortOrder = 1410
		 GroupBy = 1350
		 Filter = 1350
		 Or = 1350
		 Or = 1350
		 Or = 1350
	  End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisProductsVersions'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisProductsVersions'
GO
/****** Object:  View [dbo].[vKartrisVersionsStock]    Script Date: 10/15/2013 23:51:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vKartrisVersionsStock]
AS
SELECT     dbo.tblKartrisVersions.V_ID, dbo.tblKartrisVersions.V_Quantity, dbo.tblKartrisVersions.V_QuantityWarnLevel
FROM         dbo.tblKartrisCategories INNER JOIN
					  dbo.tblKartrisProductCategoryLink ON dbo.tblKartrisCategories.CAT_ID = dbo.tblKartrisProductCategoryLink.PCAT_CategoryID INNER JOIN
					  dbo.tblKartrisProducts ON dbo.tblKartrisProductCategoryLink.PCAT_ProductID = dbo.tblKartrisProducts.P_ID INNER JOIN
					  dbo.tblKartrisVersions ON dbo.tblKartrisProducts.P_ID = dbo.tblKartrisVersions.V_ProductID
WHERE     (dbo.tblKartrisCategories.CAT_Live = 1) AND (dbo.tblKartrisProducts.P_Live = 1) AND (dbo.tblKartrisVersions.V_Live = 1)

GO

EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
	  Begin PaneConfiguration = 0
		 NumPanes = 4
		 Configuration = "(H (1[40] 4[20] 2[20] 3) )"
	  End
	  Begin PaneConfiguration = 1
		 NumPanes = 3
		 Configuration = "(H (1 [50] 4 [25] 3))"
	  End
	  Begin PaneConfiguration = 2
		 NumPanes = 3
		 Configuration = "(H (1 [50] 2 [25] 3))"
	  End
	  Begin PaneConfiguration = 3
		 NumPanes = 3
		 Configuration = "(H (4 [30] 2 [40] 3))"
	  End
	  Begin PaneConfiguration = 4
		 NumPanes = 2
		 Configuration = "(H (1 [56] 3))"
	  End
	  Begin PaneConfiguration = 5
		 NumPanes = 2
		 Configuration = "(H (2 [66] 3))"
	  End
	  Begin PaneConfiguration = 6
		 NumPanes = 2
		 Configuration = "(H (4 [50] 3))"
	  End
	  Begin PaneConfiguration = 7
		 NumPanes = 1
		 Configuration = "(V (3))"
	  End
	  Begin PaneConfiguration = 8
		 NumPanes = 3
		 Configuration = "(H (1[56] 4[18] 2) )"
	  End
	  Begin PaneConfiguration = 9
		 NumPanes = 2
		 Configuration = "(H (1 [75] 4))"
	  End
	  Begin PaneConfiguration = 10
		 NumPanes = 2
		 Configuration = "(H (1[66] 2) )"
	  End
	  Begin PaneConfiguration = 11
		 NumPanes = 2
		 Configuration = "(H (4 [60] 2))"
	  End
	  Begin PaneConfiguration = 12
		 NumPanes = 1
		 Configuration = "(H (1) )"
	  End
	  Begin PaneConfiguration = 13
		 NumPanes = 1
		 Configuration = "(V (4))"
	  End
	  Begin PaneConfiguration = 14
		 NumPanes = 1
		 Configuration = "(V (2))"
	  End
	  ActivePaneConfig = 0
   End
   Begin DiagramPane = 
	  Begin Origin = 
		 Top = 0
		 Left = 0
	  End
	  Begin Tables = 
		 Begin Table = "tblKartrisCategories"
			Begin Extent = 
			   Top = 6
			   Left = 38
			   Bottom = 114
			   Right = 258
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisProductCategoryLink"
			Begin Extent = 
			   Top = 6
			   Left = 296
			   Bottom = 99
			   Right = 464
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisProducts"
			Begin Extent = 
			   Top = 6
			   Left = 502
			   Bottom = 114
			   Right = 696
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisVersions"
			Begin Extent = 
			   Top = 6
			   Left = 734
			   Bottom = 161
			   Right = 919
			End
			DisplayFlags = 280
			TopColumn = 5
		 End
	  End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
	  Begin ParameterDefaults = ""
	  End
   End
   Begin CriteriaPane = 
	  Begin ColumnWidths = 11
		 Column = 1440
		 Alias = 900
		 Table = 1170
		 Output = 720
		 Append = 1400
		 NewValue = 1170
		 SortType = 1350
		 SortOrder = 1410
		 GroupBy = 1350
		 Filter = 1350
		 Or = 1350
		 Or = 1350
		 Or = 1350
	  End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisVersionsStock'
GO

EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisVersionsStock'
GO
/****** Object:  UserDefinedFunction [dbo].[fnKartrisVersions_GetProductName]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnKartrisVersions_GetProductName] 
(
	-- Add the parameters for the function here
	@V_ID as bigint,
	@LANG_ID as tinyint
)
RETURNS nvarchar(20)
AS
BEGIN
	-- Declare the return variable here
	DECLARE @Result nvarchar(20);

	-- Add the T-SQL statements to compute the return value here
	SELECT @Result = P_Name FROM vKartrisProductsVersions WHERE V_ID = @V_ID AND LANG_ID = @LANG_ID ;

	-- Return the result of the function
	RETURN @Result

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_GetStockLevel]    Script Date: 7/21/2014 10:14:31 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		Mohammad
-- Last Modified: Mohammad - July 2014
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_GetStockLevel]
(
	@LANG_ID tinyint
)
AS
	SET NOCOUNT ON;
SELECT DISTINCT V_ID, [dbo].[fnKartrisVersions_GetName](V_ID, @LANG_ID) As V_Name, V_CodeNumber, 
			V_Quantity, V_QuantityWarnLevel, P_SupplierID, P_ID
FROM           dbo.vKartrisCategoryProductsVersionsLink
WHERE       (V_Quantity <= V_QuantityWarnLevel) AND (V_QuantityWarnLevel <> 0)
ORDER BY V_Quantity , V_QuantityWarnLevel

GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasketValues_GetBasketItems]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisBasketValues_GetBasketItems]
(
	@Session_ID bigint,
	@LANG_ID tinyint
)
AS
	SET NOCOUNT OFF;
SELECT DISTINCT 
					  A.LANG_ID, tblKartrisBasketValues.BV_ParentType, tblKartrisBasketValues.BV_ParentID, tblKartrisBasketValues.BV_ID, tblKartrisBasketValues.BV_VersionID, 
					  tblKartrisBasketValues.BV_Quantity, A.P_ID, A.P_Name, A.V_Name, A.V_Price * tblKartrisBasketValues.BV_Quantity AS TotalPrice, 
					  COUNT(tblKartrisBasketOptionValues.BSKTOPT_OptionID) AS NoOfOptions, tblKartrisBasketValues.BV_CustomText, 
					  dbo.fnKartrisBasketOptionValues_GetOptionsTotalPrice(A.P_ID,tblKartrisBasketValues.BV_VersionID,tblKartrisBasketValues.BV_ParentID,tblKartrisBasketValues.BV_ID) AS OptionsPrice
FROM         tblKartrisBasketValues INNER JOIN
						  (SELECT DISTINCT LANG_ID, V_ID, P_ID, P_Name, V_Name, V_Price
							FROM          vKartrisProductsVersions) AS A ON tblKartrisBasketValues.BV_VersionID = A.V_ID LEFT OUTER JOIN
					  tblKartrisBasketOptionValues ON tblKartrisBasketValues.BV_ID = tblKartrisBasketOptionValues.BSKTOPT_BasketValueID
GROUP BY A.LANG_ID, tblKartrisBasketValues.BV_ParentType, tblKartrisBasketValues.BV_ParentID, tblKartrisBasketValues.BV_ID, tblKartrisBasketValues.BV_VersionID, 
					  tblKartrisBasketValues.BV_Quantity, A.P_ID, A.P_Name, A.V_Name, A.V_Price * tblKartrisBasketValues.BV_Quantity, tblKartrisBasketValues.BV_CustomText
HAVING      (tblKartrisBasketValues.BV_ParentType = 'b') AND (tblKartrisBasketValues.BV_ParentID = @Session_ID) AND (A.LANG_ID = @LANG_ID)
ORDER BY tblKartrisBasketValues.BV_ID
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisProducts_Delete]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	replaces [spKartris_VER_GetBaseVersion]
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisProducts_Delete](@ProductID as bigint)
AS
BEGIN
	SET NOCOUNT ON;

	EXEC [dbo].[_spKartrisVersions_DeleteByProduct] 
			@P_ID = @ProductID,
			@DownloadFiles='';	

EXEC [dbo].[_spKartrisMediaLinks_DeleteByParent] 
			@ParentID = @ProductID, 
			@ParentType = 'p';
			
	EXEC [dbo].[_spKartrisPromotions_DeleteByParent] 
			@ParentID = @ProductID, 
			@ParentType = 'p';
	
	DELETE FROM tblKartrisLanguageElements
	WHERE     (LE_TypeID = 2) AND (LE_ParentID = @ProductID);
		
	DELETE FROM tblKartrisProductCategoryLink
	WHERE     (PCAT_ProductID = @ProductID);
	
	DELETE FROM tblKartrisProductOptionGroupLink
	WHERE     (P_OPTG_ProductID = @ProductID);

	DELETE FROM tblKartrisProductOptionLink
	WHERE     (P_OPT_ProductID = @ProductID);
	
	DELETE FROM tblKartrisRelatedProducts
	WHERE     (RP_ParentID = @ProductID) OR (RP_ChildID = @ProductID);
	
	DELETE FROM tblKartrisReviews
	WHERE	(REV_ProductID = @ProductID);

	DELETE FROM dbo.tblKartrisAttributeValues
	WHERE	(ATTRIBV_ProductID = @ProductID);
	
	DELETE FROM dbo.tblKartrisProducts
	WHERE P_ID = @ProductID;
	
	DELETE tblKartrisObjectConfigValue
	FROM tblKartrisObjectConfig INNER JOIN tblKartrisObjectConfigValue ON tblKartrisObjectConfig.OC_ID = tblKartrisObjectConfigValue.OCV_ObjectConfigID
	WHERE (tblKartrisObjectConfigValue.OCV_ParentID = @ProductID) AND (tblKartrisObjectConfig.OC_ObjectType = 'Product');

IF @ProductID <> 0 AND @ProductID NOT IN (SELECT DELETED_ID FROM dbo.tblKartrisDeletedItems WHERE Deleted_Type = 'p') BEGIN
	
		DECLARE @Timeoffset as int;
		set @Timeoffset = CAST(dbo.fnKartrisConfig_GetValue('general.timeoffset') as int);
		INSERT INTO dbo.tblKartrisDeletedItems VALUES(@ProductID, 'p', NULL, DateAdd(hour, @Timeoffset, GetDate()));
		
END

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisVersions_GetMinPriceByProductList]    Script Date: 7/21/2014 10:14:31 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		Mohammad
-- Last Modified: Mohammad - July 2014
-- Description:	Used in the Compare.aspx Page
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisVersions_GetMinPriceByProductList](@LANG_ID as tinyint, @P_List as nvarchar(100), @CG_ID as smallint)
AS
BEGIN
	
	SET NOCOUNT ON;
	
	DECLARE @SIndx as int;
	DECLARE @CIndx as int;
	SET @SIndx = 0;

	CREATE TABLE #TempTbl(ProductID int)


	WHILE @SIndx <= LEN(@P_List)
	BEGIN
		
		SET @CIndx = CHARINDEX(',', @P_List, @SIndx)
		IF @CIndx = 0 BEGIN SET @CIndx = LEN(@P_List)+1 END
		INSERT INTO #TempTbl VALUES (CAST(SUBSTRING(@P_List, @SIndx, @CIndx - @SIndx) as int));
		SET @SIndx = @CIndx + 1;

	END

	SELECT     distinct P_ID, P_Name, dbo.fnKartrisProduct_GetMinPriceWithCG(P_ID,@CG_ID) as P_Price
	FROM         vKartrisTypeProducts
	WHERE     (LANG_ID = @LANG_ID) AND (P_ID  IN (SELECT     ProductID
											FROM         [#TempTbl])) 
	GROUP BY P_ID, P_Name

	DROP TABLE #TempTbl;

END

GO
/****** Object:  StoredProcedure [dbo].[spKartrisVersions_GetMinPriceByProductID]    Script Date: 7/21/2014 10:14:31 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		Mohammad
-- Last Modified: Mohammad - July 2014
-- Description:	Used in the Compare.aspx Page
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisVersions_GetMinPriceByProductID](@LANG_ID as tinyint, @P_ID as int, @CG_ID as smallint)
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT     distinct P_ID, P_Name, dbo.fnKartrisProduct_GetMinPriceWithCG(P_ID, @CG_ID) as P_Price
	FROM         vKartrisTypeProducts
	WHERE     (LANG_ID = @LANG_ID) AND (P_ID = @P_ID)
	GROUP BY P_ID, P_Name

END

GO
/****** Object:  View [dbo].[vKartrisCombinationPrices]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vKartrisCombinationPrices]
AS
SELECT        V_ProductID, V_ID, V_CodeNumber, V_Price, dbo.fnKartrisVersions_GetSortedOptionsByVersion(V_ID) AS V_OptionsIDs, V_Quantity, V_QuantityWarnLevel
FROM            dbo.tblKartrisVersions
WHERE        (V_Type = 'c') AND (V_Live = 1)

GO

/****** Object:  StoredProcedure [dbo].[spKartrisDB_Search]    Script Date: 2016-03-01 10:17:55 ******/
-- Updated to use nvarchar throughout for non-western charset support
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spKartrisDB_Search]
(	
	@SearchText as nvarchar(500),
	@keyWordsList as nvarchar(500),
	@LANG_ID as tinyint,
	@PageIndex as tinyint, -- 0 Based index
	@RowsPerPage as tinyint,
	@TotalResultProducts as int OUTPUT,
	@MinPrice as real,
	@MaxPrice as real,
	@Method as nvarchar(10),
	@CustomerGroupID as smallint
)
AS
BEGIN
SET NOCOUNT ON;
	
	SET NOCOUNT ON;
	
	IF @CustomerGroupID IS NULL BEGIN SET @CustomerGroupID = 0 END
	
	-----------------------
	-- Variable Declaration
	-----------------------
	DECLARE @SIndx as int;
	DECLARE @CIndx as int;
	DECLARE @Keyword as nvarchar(150);
	DECLARE @Counter as int;
	
	DECLARE @NoOfVersions as bigint;
	SELECT @NoOfVersions = Count(1)	FROM tblKartrisVersions;
	
	-- Include Products and Attributes if no. of versions > 10,000
	-- Include Versions, Products and Attributes if no. of versions <= 10,000
	DECLARE @DataToSearch as nvarchar(100);
	IF @NoOfVersions > 10000 BEGIN
		SET @DataToSearch = '(LE_TypeID IN (2,14) AND LE_FieldID IN (1,2,5))'
	END ELSE BEGIN
		SET @DataToSearch = '(LE_TypeID IN (1,2,14) AND LE_FieldID IN (1,2,5))'
	END
		
	DECLARE @ExactCriteriaNoNoise as nvarchar(500);
	SET @ExactCriteriaNoNoise = Replace(@keyWordsList, ',', ' ');
	
	IF @Method = 'exact' BEGIN	
		-- Searching value of LanguageElements - Add results to search helper (LIKE Operator)
		EXECUTE('
		INSERT INTO tblKartrisSearchHelper
		SELECT TOP(1000) @@SPID, LE_TypeID, LE_FieldID, LE_ParentID, LE_Value, 
					dbo.fnKartrisLanguageElement_GetProductID(LE_TypeID, LE_ParentID) , 0, 100/LE_FieldID, N''' + @KeyWord + '''
		FROM       tblKartrisLanguageElements 
		WHERE	LE_LanguageID = ' + @LANG_ID +' AND ' + @DataToSearch + '
					AND (	(LE_Value LIKE N''% ' + @SearchText + ' %'')
						OR	(LE_Value LIKE N''' + @SearchText + ' %'')
						OR	(LE_Value LIKE N''% ' + @SearchText + ''')
						OR	(LE_Value = N''' + @SearchText + ''')
						)');
						
		-- Searching version code of Versions - Add results to search helper				
		EXECUTE('
		INSERT INTO tblKartrisSearchHelper
		SELECT TOP(1000) @@SPID, 1, NULL, V_ID, NULL, V_ProductID, V_Price, 0, N''' + @SearchText + '''
		FROM         tblKartrisVersions LEFT OUTER JOIN dbo.vKartrisObjectConfigValues 
			ON V_ID = OCV_ParentID AND OC_Name = ''K:version.extrasku''
		WHERE     (V_Live = 1) AND (V_CodeNumber LIKE N''' + @SearchText + '%'' OR OCV_Value LIKE N''' + @SearchText + '%'' )' );		
	END ELSE BEGIN
		-- Loop through out the list of keywords and search each keyword
		SET @SIndx = 0;	SET @Counter = 0;
		WHILE @SIndx <= LEN(@keyWordsList)	BEGIN
		SET @Counter = @Counter + 1;	-- keywords counter
		SET @CIndx = CHARINDEX(',', @keyWordsList, @SIndx)	-- Next keyword starting index (1-Based Index)
		IF @CIndx = 0 BEGIN SET @CIndx = LEN(@keyWordsList)+ 1 END	-- If no more keywords, set next starting index to not exist
		SET @KeyWord = SUBSTRING(@keyWordsList, @SIndx, @CIndx - @SIndx)
		
		-- The next starting index
		SET @SIndx = @CIndx + 1;
		
		EXECUTE('
		INSERT INTO tblKartrisSearchHelper
		SELECT TOP(1000) @@SPID, LE_TypeID, LE_FieldID, LE_ParentID, LE_Value, 
					dbo.fnKartrisLanguageElement_GetProductID(LE_TypeID, LE_ParentID) , 0, 100/LE_FieldID, N''' + @KeyWord + '''
		FROM       tblKartrisLanguageElements 
		WHERE	LE_LanguageID = ' + @LANG_ID +' AND ' + @DataToSearch + '
					AND (	(LE_Value LIKE N''% ' + @SearchText + ' %'')
						OR	(LE_Value LIKE N''' + @SearchText + ' %'')
						OR	(LE_Value LIKE N''% ' + @SearchText + ''')
						OR	(LE_Value = N''' + @SearchText + ''')
						)');
							
		-- Searching value of LanguageElements - Add results to search helper (LIKE Operator)
		EXECUTE('
		INSERT INTO tblKartrisSearchHelper
		SELECT TOP(1000) @@SPID, LE_TypeID, LE_FieldID, LE_ParentID, LE_Value, 
					dbo.fnKartrisLanguageElement_GetProductID(LE_TypeID, LE_ParentID) , 0, 100/LE_FieldID, ''' + @KeyWord + '''
		FROM       tblKartrisLanguageElements 
		WHERE	LE_LanguageID = ' + @LANG_ID +' AND ' + @DataToSearch + '
					AND (	(LE_Value LIKE N''% ' + @KeyWord + ' %'')
						OR	(LE_Value LIKE N''' + @KeyWord + ' %'')
						OR	(LE_Value LIKE N''% ' + @KeyWord + ''')
						OR	(LE_Value = N''' + @KeyWord + ''')
						)');
						
		-- Searching version code of Versions - Add results to search helper				
		EXECUTE('
		INSERT INTO tblKartrisSearchHelper
		SELECT TOP(1000) @@SPID, 1, NULL, V_ID, NULL, V_ProductID, V_Price, 0, N''' + @KeyWord + '''
		FROM         tblKartrisVersions LEFT OUTER JOIN dbo.vKartrisObjectConfigValues 
			ON V_ID = OCV_ParentID AND OC_Name = ''K:version.extrasku''
		WHERE     (V_Live = 1) AND (V_CodeNumber LIKE N''' + @Keyword + '%'' OR OCV_Value LIKE N''' + @Keyword + '%'' )' );	
	END 
	END
	
	-- (Advanced Search) Exclude products that are not between the price range
	IF @MinPrice <> -1 AND @MaxPrice <> -1	BEGIN
		UPDATE tblKartrisSearchHelper
		SET SH_Price = dbo.fnKartrisProduct_GetMinPriceWithCG(SH_ProductID, @CustomerGroupID)
		WHERE SH_SessionID = @@SPID;
		DELETE FROM tblKartrisSearchHelper WHERE SH_SessionID = @@SPID AND SH_Price NOT BETWEEN @MinPrice AND @MaxPrice;
	END

	-- Exclude products in which their categories are not live
	DELETE FROM tblKartrisSearchHelper
	WHERE SH_SessionID = @@SPID
		AND SH_ProductID NOT IN (SELECT distinct tblKartrisProductCategoryLink.PCAT_ProductID
								 FROM	tblKartrisCategories INNER JOIN tblKartrisProductCategoryLink 
										ON tblKartrisCategories.CAT_ID = tblKartrisProductCategoryLink.PCAT_CategoryID
								 WHERE  tblKartrisCategories.CAT_Live = 1)

	-- Exclude products that are Not Live or that are not belongs to customer group
	DELETE FROM tblKartrisSearchHelper
	WHERE SH_SessionID = @@SPID 
		AND SH_ProductID IN (	SELECT P_ID 
								FROM dbo.tblKartrisProducts 
								WHERE P_Live = 0 OR (P_CustomerGroupID IS NOT NULL AND P_CustomerGroupID <> @CustomerGroupID)); 

	-- Exclude products that has no Live versions or that are not belongs to customer group
	DELETE FROM tblKartrisSearchHelper
	WHERE SH_SessionID = @@SPID 
		AND SH_ProductID NOT IN (SELECT V_ProductID 
								 FROM dbo.tblKartrisVersions INNER JOIN dbo.tblKartrisProducts ON V_ProductID = P_ID
								 WHERE V_Live = 1 AND (V_CustomerGroupID IS NULL OR V_CustomerGroupID = @CustomerGroupID)); 
	
	-- Exclude products that are not resulted from non-searchable attributes
	DELETE FROM tblKartrisSearchHelper
	WHERE SH_SessionID = @@SPID AND SH_TypeID = 14 
			AND SH_ParentID IN (SELECT tblKartrisAttributeValues.ATTRIBV_ID
							FROM tblKartrisAttributes INNER JOIN tblKartrisAttributeValues 
							ON tblKartrisAttributes.ATTRIB_ID = tblKartrisAttributeValues.ATTRIBV_AttributeID
							WHERE   tblKartrisAttributes.ATTRIB_ShowSearch = 0);
					
	-- Update the scores of the products with exact match			
	IF @Counter > 1	BEGIN
		UPDATE tblKartrisSearchHelper SET SH_Score = SH_Score + (400) 
		WHERE SH_SessionID = @@SPID AND ((SH_TextValue LIKE N'%' + @ExactCriteriaNoNoise + '%') OR (SH_TextValue LIKE N'%' + @SearchText + '%'));
	END
	
	-- Update the scores according to number of versions
	IF @NoOfVersions > 10000 BEGIN
		UPDATE tblKartrisSearchHelper SET SH_Score = SH_Score + (30) WHERE SH_SessionID = @@SPID AND SH_FieldID = 2;
		UPDATE tblKartrisSearchHelper SET SH_Score = SH_Score + (200) WHERE SH_SessionID = @@SPID AND SH_FieldID IN (1, 5);
	END	ELSE BEGIN
		UPDATE tblKartrisSearchHelper SET SH_Score = SH_Score + (30 * SH_TypeID) WHERE SH_SessionID = @@SPID AND SH_TypeID IN (1, 2);
	END
	
	-- Set the starting and ending row numbers
	DECLARE @StartRowNumber as int;
	SET @StartRowNumber = (@PageIndex * @RowsPerPage) + 1;
	DECLARE @EndRowNumber as int;
	SET @EndRowNumber = @StartRowNumber + @RowsPerPage - 1;	

	-- Search method 'ANY' - Default Search and 'EXACT' - Advanced Search
	IF @Method = 'any' OR @Method = 'exact' BEGIN
		SELECT @TotalResultProducts =  Count(DISTINCT SH_ProductID) FROM tblKartrisSearchHelper WHERE SH_SessionID = @@SPID;
		
		WITH SearchResult as
		(
			SELECT ROW_NUMBER() OVER (ORDER BY TotalScore DESC) as Row, 
					ProductID, TotalScore
			FROM (	SELECT 
						CASE 
						WHEN T1.SH_ProductID IS NULL THEN T2.SH_ProductID
						ELSE T1.SH_ProductID
						END AS ProductID,
						CASE 
						WHEN Score1 IS NULL THEN Score2
						WHEN Score2 IS NULL THEN Score1
						ELSE (Score1 + Score2) 
						END AS TotalScore
					FROM (
							SELECT SH_SessionID, SH_ProductID, Sum(SH_Score) as Score1
							FROM tblKartrisSearchHelper 
							WHERE SH_TypeID = 2 OR SH_TypeID = 14
							GROUP BY SH_SessionID, SH_ProductID
							HAVING SH_SessionID = @@SPID
						) T1 
						FULL OUTER JOIN 
						(
							SELECT SH_SessionID, SH_ProductID, Max(SH_Score) as Score2
							FROM tblKartrisSearchHelper 
							WHERE SH_TypeID = 1
							Group BY SH_SessionID, SH_ProductID
							HAVING SH_SessionID = @@SPID
						) T2 
						ON T1.SH_ProductID = T2.SH_ProductID
				) T3
		)
		SELECT Row, P_ID, P_Name, dbo.fnKartrisDB_TruncateDescription(P_Desc) as P_Desc, 
				dbo.fnKartrisProduct_GetMinPriceWithCG(P_ID, @CustomerGroupID) as MinPrice, TotalScore, 
				dbo.fnKartrisSearchHelper_GetKeywordsListByProduct(@@SPID, P_ID) AS KeywordList
		FROM SearchResult INNER JOIN dbo.vKartrisTypeProducts ON SearchResult.ProductID = dbo.vKartrisTypeProducts.P_ID
		WHERE vKartrisTypeProducts.LANG_ID = @LANG_ID AND ROW BETWEEN @StartRowNumber AND @EndRowNumber
		GROUP BY Row, P_ID, P_Name, P_Desc, TotalScore
		ORDER BY TotalScore DESC
	END
	
	-- Search method 'ALL' - Advanced Search
	IF @Method = 'all' BEGIN
	
		DECLARE @SortedSearchKeywords as nvarchar(max);
		SELECT @SortedSearchKeywords = COALESCE(@SortedSearchKeywords + ',', '') + T._ID
		FROM (SELECT TOP(500) _ID FROM dbo.fnTbl_SplitStrings(@keyWordsList) ORDER BY _ID) AS T;

		SELECT @TotalResultProducts =  Count(DISTINCT SH_ProductID) FROM tblKartrisSearchHelper 
		WHERE SH_SessionID = @@SPID AND @SortedSearchKeywords = dbo.fnKartrisSearchHelper_GetKeywordsListByProduct(@@SPID, SH_ProductID);
		
		WITH SearchResult as
		(
			SELECT ROW_NUMBER() OVER (ORDER BY TotalScore DESC) as Row, 
					ProductID, TotalScore
			FROM (	SELECT 
						CASE 
						WHEN T1.SH_ProductID IS NULL THEN T2.SH_ProductID
						ELSE T1.SH_ProductID
						END AS ProductID,
						CASE 
						WHEN Score1 IS NULL THEN Score2
						WHEN Score2 IS NULL THEN Score1
						ELSE (Score1 + Score2) 
						END AS TotalScore
					FROM (
							SELECT SH_SessionID, SH_ProductID, Sum(SH_Score) as Score1
							FROM tblKartrisSearchHelper 
							WHERE SH_TypeID = 2 OR SH_TypeID = 14
							GROUP BY SH_SessionID, SH_ProductID
							HAVING SH_SessionID = @@SPID AND @SortedSearchKeywords = dbo.fnKartrisSearchHelper_GetKeywordsListByProduct(@@SPID, SH_ProductID)
						) T1 
						FULL OUTER JOIN 
						(
							SELECT SH_SessionID, SH_ProductID, Max(SH_Score) as Score2
							FROM tblKartrisSearchHelper 
							WHERE SH_TypeID = 1
							Group BY SH_SessionID, SH_ProductID
							HAVING SH_SessionID = @@SPID AND @SortedSearchKeywords = dbo.fnKartrisSearchHelper_GetKeywordsListByProduct(@@SPID, SH_ProductID)
						) T2 
						ON T1.SH_ProductID = T2.SH_ProductID
				) T3
		)
		SELECT Row, P_ID, P_Name, dbo.fnKartrisDB_TruncateDescription(P_Desc) as P_Desc, 
				dbo.fnKartrisProduct_GetMinPriceWithCG(P_ID, @CustomerGroupID) as MinPrice, TotalScore, 
				dbo.fnKartrisSearchHelper_GetKeywordsListByProduct(@@SPID,P_ID) AS KeywordList
		FROM SearchResult INNER JOIN dbo.vKartrisTypeProducts ON SearchResult.ProductID = dbo.vKartrisTypeProducts.P_ID
		WHERE vKartrisTypeProducts.LANG_ID = @LANG_ID AND ROW BETWEEN @StartRowNumber AND @EndRowNumber
		GROUP BY Row, P_ID, P_Name, P_Desc, TotalScore
		ORDER BY TotalScore DESC
		
	END
	
	-- Clear the result of the current search
	DELETE FROM tblKartrisSearchHelper WHERE SH_SessionID=@@SPID;
	
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisDB_GetAttributesToCompare]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisDB_GetAttributesToCompare]
(	@P_List as nvarchar(100),
	@LANG_ID as tinyint,
	@CG_ID as smallint
)
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @SIndx as int;
	DECLARE @CIndx as int;
	SET @SIndx = 0;

	CREATE TABLE #TempTbl(ProductID int)


	WHILE @SIndx <= LEN(@P_List)
	BEGIN
		
		SET @CIndx = CHARINDEX(',', @P_List, @SIndx)
		IF @CIndx = 0 BEGIN SET @CIndx = LEN(@P_List)+1 END
		INSERT INTO #TempTbl VALUES (CAST(SUBSTRING(@P_List, @SIndx, @CIndx - @SIndx) as int));
		SET @SIndx = @CIndx + 1;

	END

	SELECT DISTINCT vKartrisProductsVersions.P_ID, vKartrisProductsVersions.P_Name, 
			dbo.fnKartrisProduct_GetMinPriceWithCG(vKartrisProductsVersions.P_ID, @CG_ID) as P_Price, vKartrisTypeAttributes.ATTRIB_ID 
		  , vKartrisTypeAttributes.ATTRIB_Name, vKartrisTypeAttributeValues.ATTRIBV_Value, ATTRIB_OrderByValue,
		  vKartrisTypeAttributes.ATTRIB_Compare
	FROM         vKartrisTypeAttributes INNER JOIN
						  vKartrisTypeAttributeValues ON vKartrisTypeAttributes.ATTRIB_ID = vKartrisTypeAttributeValues.ATTRIBV_AttributeID RIGHT OUTER JOIN
						  vKartrisProductsVersions ON vKartrisTypeAttributeValues.ATTRIBV_ProductID = vKartrisProductsVersions.P_ID
	WHERE     (vKartrisProductsVersions.LANG_ID = @LANG_ID) AND (vKartrisProductsVersions.P_ID IN
							  (SELECT     ProductID
								FROM         [#TempTbl])) AND (vKartrisTypeAttributes.ATTRIB_Compare <> 'n' OR
								vKartrisTypeAttributes.ATTRIB_Compare IS NULL)
	

	DROP TABLE #TempTbl;

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisProducts_GetMinPriceWithCG]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisProducts_GetMinPriceWithCG](@P_ID as int, @CG_ID as smallint, @MinPrice as real OUTPUT)
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT  @MinPrice = dbo.fnKartrisProduct_GetMinPriceWithCG(@P_ID, @CG_ID);

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisProducts_GetMinPriceByProductID]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisProducts_GetMinPriceByProductID](@LANG_ID as tinyint, @P_ID as int, @CG_ID as smallint)
AS
BEGIN
	
	SET NOCOUNT ON;
	
	SELECT     distinct P_ID, P_Name, dbo.fnKartrisProduct_GetMinPriceWithCG(P_ID, @CG_ID) as P_Price
	FROM         dbo.vKartrisTypeProducts
	WHERE     (LANG_ID = @LANG_ID) AND (P_ID = @P_ID)
	GROUP BY P_ID, P_Name

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisProducts_GetFeaturedProducts]    Script Date: 7/21/2014 10:14:31 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		Medz
-- Reworked:	Paul
-- Last Modified: Mohammad - July 2014
-- Create date: 02/10/2008 13:23:42
-- Description:	Replaces the [spKartris_PROD_Specials]
-- =============================================

CREATE PROCEDURE [dbo].[spKartrisProducts_GetFeaturedProducts]

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	WITH FeaturedProducts AS
	(
		SELECT     P_ID, P_OrderVersionsBy, P_VersionsSortDirection, P_VersionDisplayType, P_Type, 
					dbo.fnKartrisProduct_GetMinPrice(P_ID) AS MinPrice, P_Reviews, 
						  P_Featured, P_CustomerGroupID, MIN(T_Taxrate) AS MinTax
		FROM         vKartrisCategoryProductsVersionsLink
		WHERE     (P_Featured <> 0) AND (P_CustomerGroupID IS NULL)
		GROUP BY P_ID, P_OrderVersionsBy, P_VersionsSortDirection, P_VersionDisplayType, P_Type, P_CustomerGroupID, P_Reviews, P_Featured
		
	)
	SELECT FeaturedProducts.*, LANG_ID, P_Name, P_Desc, P_StrapLine, P_PageTitle
	FROM FeaturedProducts INNER JOIN [dbo].[vKartrisTypeProducts] ON FeaturedProducts.P_ID = vKartrisTypeProducts.P_ID
	ORDER BY P_Featured DESC

END

GO
/****** Object:  StoredProcedure [dbo].[spKartrisProducts_GetByProductID]    Script Date: 7/21/2014 10:14:31 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- ===================================================
-- Author:		Medz
-- Create date: 02/12/2008 13:53:30
-- Last Modified: Mohammad - July 2014
-- Description:	Replaces the [spKartris_PROD_Select]
-- ===================================================
CREATE PROCEDURE [dbo].[spKartrisProducts_GetByProductID]
(
	@P_ID int,
	@LANG_ID tinyint
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	WITH Products AS
	(
		SELECT     P_ID, P_OrderVersionsBy, P_VersionsSortDirection, P_VersionDisplayType, P_Type, MIN(V_Price) AS MinPrice, 
				P_Reviews, P_Featured, P_CustomerGroupID, MIN(T_Taxrate) AS MinTax
		FROM         vKartrisCategoryProductsVersionsLink
		WHERE     (P_ID = @P_ID) AND (V_Type = 'b' OR V_Type = 'v' )
		GROUP BY P_ID, P_OrderVersionsBy, P_VersionsSortDirection, P_VersionDisplayType, P_Type, P_Featured, P_CustomerGroupID, P_Reviews
	)
	SELECT Products.*, P_Name, P_Desc, P_StrapLine, P_PageTitle
	FROM Products INNER JOIN [dbo].[vKartrisTypeProducts] ON Products.P_ID = vKartrisTypeProducts.P_ID
	WHERE LANG_ID = @LANG_ID
END

GO
/****** Object:  StoredProcedure [dbo].[spKartrisProducts_GetSummaryByCatID]    Script Date: 7/21/2014 10:14:31 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		Mohammad
-- Last Modified: Mohammad - July 2014
-- Description:	Replaces the [spKartris_PROD_Select]
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisProducts_GetSummaryByCatID](@CAT_ID as int, @LANG_ID as tinyint)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	WITH CategoryProducts AS
	(
		SELECT     P_ID,  P_OrderVersionsBy, P_VersionsSortDirection,
					 P_VersionDisplayType, P_Featured, P_Type, dbo.fnKartrisProduct_GetMinPrice(P_ID) AS MinPrice, MIN(T_Taxrate) AS MinTaxRate
		FROM         vKartrisCategoryProductsVersionsLink
		WHERE     CAT_ID = @CAT_ID
		GROUP BY P_ID, P_OrderVersionsBy, P_VersionsSortDirection, P_VersionDisplayType,
					P_Featured, P_Type
	)
	SELECT CategoryProducts.*, P_Name, dbo.fnKartrisDB_TruncateDescription(P_Desc) as P_Desc, P_StrapLine, P_PageTitle
	FROM CategoryProducts INNER JOIN [dbo].[vKartrisTypeProducts] ON CategoryProducts.P_ID = vKartrisTypeProducts.P_ID
	WHERE LANG_ID = @LANG_ID
	ORDER BY P_Featured, P_ID DESC
	   
END

GO
/****** Object:  StoredProcedure [dbo].[spKartrisProducts_GetSpecials]    Script Date: 7/21/2014 10:14:31 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		Medz
-- Create date: 02/10/2008 13:23:42
-- Last Modified: Mohammad - July 2014
-- Description:	Replaces the [spKartris_PROD_Specials]
-- =============================================

CREATE PROCEDURE [dbo].[spKartrisProducts_GetSpecials]
(
	@LANG_ID tinyint
)
AS
BEGIN
	WITH SpecialProducts AS
	(
		SELECT     P_ID, P_OrderVersionsBy, P_VersionDisplayType, P_Type, dbo.fnKartrisProduct_GetMinPrice(P_ID) AS MinPrice, MIN(T_Taxrate) AS MinTax
		FROM         vKartrisCategoryProductsVersionsLink
		GROUP BY P_ID, P_OrderVersionsBy, P_VersionDisplayType, P_Type,  P_Featured
		HAVING      (P_Featured = 1)
	)
	SELECT SpecialProducts.*, P_Name, P_Desc, P_StrapLine, P_PageTitle
	FROM SpecialProducts INNER JOIN [dbo].[vKartrisTypeProducts] ON SpecialProducts.P_ID = vKartrisTypeProducts.P_ID
	WHERE     (LANG_ID = @LANG_ID)
END

GO

/****** Object:  StoredProcedure [dbo].[spKartrisProducts_GetRowsBetweenByCatID]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	Replaces "spKartris_PROD_SelectByCAT"
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisProducts_GetRowsBetweenByCatID]
	(
	@LANG_ID as tinyint,
	@CAT_ID as int,
	@PageIndex as tinyint, -- 0 Based index
	@RowsPerPage as smallint,
	@CGroupID as smallint
	)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	
	-- Insert statements for procedure here

	DECLARE @StartRowNumber as int;
	SET @StartRowNumber = (@PageIndex * @RowsPerPage) + 1;
	DECLARE @EndRowNumber as int;
	SET @EndRowNumber = @StartRowNumber + @RowsPerPage - 1;
	
	DECLARE @OrderBy as nvarchar(50), @OrderDirection as char(1)
	SELECT @OrderBy = CAT_OrderProductsBy, @OrderDirection = CAT_ProductsSortDirection
	FROM dbo.tblKartrisCategories
	WHERE CAT_ID = @CAT_ID;

	IF @OrderBy is NULL OR @OrderBy = 'd'
	BEGIN 
		SELECT @OrderBy = CFG_Value FROM tblKartrisConfig WHERE CFG_Name = 'frontend.products.display.sortdefault';
	END;
	IF @OrderDirection is NULL OR @OrderDirection = '' BEGIN 
		SELECT @OrderDirection = CFG_Value FROM tblKartrisConfig WHERE CFG_Name = 'frontend.products.display.sortdirection';
	END;
	
		With ProductList AS 
		(
			SELECT	CASE 
					WHEN (@OrderBy = 'P_ID' AND @OrderDirection = 'A') THEN	ROW_NUMBER() OVER (ORDER BY P_ID ASC) 
					WHEN (@OrderBy = 'P_ID' AND @OrderDirection = 'D') THEN	ROW_NUMBER() OVER (ORDER BY P_ID DESC) 
					WHEN (@OrderBy = 'P_Name' AND @OrderDirection = 'A') THEN ROW_NUMBER() OVER (ORDER BY P_Name ASC) 
					WHEN (@OrderBy = 'P_Name' AND @OrderDirection = 'D') THEN ROW_NUMBER() OVER (ORDER BY P_Name DESC) 
					WHEN (@OrderBy = 'P_DateCreated' AND @OrderDirection = 'A') THEN ROW_NUMBER() OVER (ORDER BY P_DateCreated ASC) 
					WHEN (@OrderBy = 'P_DateCreated' AND @OrderDirection = 'D') THEN ROW_NUMBER() OVER (ORDER BY P_DateCreated DESC) 
					WHEN (@OrderBy = 'P_LastModified' AND @OrderDirection = 'A') THEN ROW_NUMBER() OVER (ORDER BY P_LastModified ASC) 
					WHEN (@OrderBy = 'P_LastModified' AND @OrderDirection = 'D') THEN ROW_NUMBER() OVER (ORDER BY P_LastModified DESC) 
					WHEN (@OrderBy = 'PCAT_OrderNo' AND @OrderDirection = 'A') THEN ROW_NUMBER() OVER (ORDER BY PCAT_OrderNo ASC) 
					WHEN (@OrderBy = 'PCAT_OrderNo' AND @OrderDirection = 'D') THEN ROW_NUMBER() OVER (ORDER BY PCAT_OrderNo DESC) 
					END AS Row,
					vKartrisTypeProducts.P_ID, dbo.fnKartrisProduct_GetMinPriceWithCG(vKartrisTypeProducts.P_ID, @CGroupID) AS MinPrice, MIN(tblKartrisTaxRates.T_Taxrate) AS MinTaxRate, vKartrisTypeProducts.P_Name, 
										  dbo.fnKartrisDB_TruncateDescription(vKartrisTypeProducts.P_Desc) AS P_Desc, vKartrisTypeProducts.P_StrapLine, vKartrisTypeProducts.P_VersionDisplayType, 
										  vKartrisTypeProducts.P_DateCreated, vKartrisTypeProducts.P_LastModified, tblKartrisProductCategoryLink.PCAT_OrderNo
					FROM         tblKartrisProductCategoryLink INNER JOIN
										  vKartrisTypeProducts ON tblKartrisProductCategoryLink.PCAT_ProductID = vKartrisTypeProducts.P_ID INNER JOIN
										  tblKartrisVersions ON vKartrisTypeProducts.P_ID = tblKartrisVersions.V_ProductID LEFT OUTER JOIN
										  tblKartrisTaxRates ON tblKartrisTaxRates.T_ID = tblKartrisVersions.V_Tax
					WHERE     (tblKartrisVersions.V_Live = 1) AND (tblKartrisVersions.V_Type = 'b' OR tblKartrisVersions.V_Type = 'v' ) AND (vKartrisTypeProducts.LANG_ID = @LANG_ID) AND (vKartrisTypeProducts.P_Live = 1) AND 
										  (tblKartrisProductCategoryLink.PCAT_CategoryID = @CAT_ID) AND (vKartrisTypeProducts.P_CustomerGroupID IS NULL OR
										  vKartrisTypeProducts.P_CustomerGroupID = @CGroupID)
					GROUP BY vKartrisTypeProducts.P_Name, vKartrisTypeProducts.P_Desc, vKartrisTypeProducts.P_StrapLine, vKartrisTypeProducts.P_ID, 
										  vKartrisTypeProducts.P_VersionDisplayType, vKartrisTypeProducts.P_DateCreated, vKartrisTypeProducts.P_LastModified, 
										  tblKartrisProductCategoryLink.PCAT_OrderNo
			
		)

		SELECT *
		FROM ProductList
		WHERE Row BETWEEN @StartRowNumber AND @EndRowNumber
		ORDER BY Row ASC
	
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisVersions_GetCombinationVersionID_s]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisVersions_GetCombinationVersionID_s]
(
	@ProductID as int,
	@OptionsList as nvarchar(1000),
	@Return_Value as bigint OUTPUT
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	-- need to sort the options list to match the already sorted options
	--@OptionsList
	DECLARE @SortedOptions as nvarchar(max);
	SELECT @SortedOptions = COALESCE(@SortedOptions + ',', '') + CAST(T._ID as nvarchar(10))
	FROM (	SELECT DISTINCT Top(5000) _ID
			FROM dbo.fnTbl_SplitNumbers(@OptionsList)
			ORDER BY _ID) AS T;

	SELECT @Return_Value = V_ID
	FROM dbo.vKartrisCombinationPrices
	WHERE V_ProductID = @ProductID AND V_OptionsIDs = @SortedOptions;
	
	IF @Return_Value IS NULL BEGIN
		SELECT @Return_Value = V_ID
		FROM tblKartrisVersions
		WHERE V_ProductID = @ProductID AND V_Type = 'b';
	END
	
	IF @Return_Value IS NULL BEGIN
		SET @Return_Value = 0;
	END
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisVersions_GetCombinationPrice_s]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisVersions_GetCombinationPrice_s]
(
	@ProductID as int,
	@OptionsList as nvarchar(1000),
	@Return_Value as real OUTPUT
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	-- need to sort the options' list to match the already sorted options
	--@OptionsList
	DECLARE @SortedOptions as nvarchar(max);
	SELECT @SortedOptions = COALESCE(@SortedOptions + ',', '') + CAST(T._ID as nvarchar(10))
	FROM (	SELECT DISTINCT Top(5000) _ID
			FROM dbo.fnTbl_SplitNumbers(@OptionsList)
			ORDER BY _ID) AS T;

	SELECT @Return_Value = V_Price
	FROM dbo.vKartrisCombinationPrices
	WHERE V_ProductID = @ProductID AND V_OptionsIDs = @SortedOptions;
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisPromotions_GetByProductID]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisPromotions_GetByProductID](@P_ID int, @LANG_ID as tinyint, @NowOffset as datetime, @CP_PromotionID as int)
AS
BEGIN
	
	SET NOCOUNT ON;

	SELECT	tblKartrisPromotions.PROM_ID, tblKartrisPromotions.PROM_StartDate, tblKartrisPromotions.PROM_EndDate, tblKartrisPromotionParts.PP_PartNo, 
			tblKartrisPromotionParts.PP_Type, tblKartrisPromotionParts.PP_Value, tblKartrisPromotionParts.PP_ItemType, tblKartrisPromotionParts.PP_ItemID, 
			PP_ItemName =	CASE tblKartrisPromotionParts.PP_ItemType
							WHEN 'v' THEN		dbo.fnKartrisVersions_GetProductName(PP_ItemID, @LANG_ID) 
											+ ' (' + dbo.fnKartrisVersions_GetName(PP_ItemID, @LANG_ID) + ')'
							WHEN 'p' THEN		dbo.fnKartrisProducts_GetName(PP_ItemID, @LANG_ID)
							WHEN 'c' THEN 	dbo.fnKartrisCategories_GetName(PP_ItemID, @LANG_ID)
							ELSE 'Name NOT Found .. !!'
						END
	FROM	tblKartrisPromotionParts INNER JOIN tblKartrisPromotions ON tblKartrisPromotionParts.PROM_ID = tblKartrisPromotions.PROM_ID 
	WHERE	tblKartrisPromotions.PROM_ID 
			IN 
			(
				SELECT	distinct tblKartrisPromotions.PROM_ID
				FROM	tblKartrisPromotionParts INNER JOIN
						tblKartrisPromotions ON tblKartrisPromotionParts.PROM_ID = tblKartrisPromotions.PROM_ID
				WHERE   (@NowOffset BETWEEN tblKartrisPromotions.PROM_StartDate AND tblKartrisPromotions.PROM_EndDate) 
						AND (tblKartrisPromotions.PROM_Live = 1 OR (tblKartrisPromotions.PROM_ID = @CP_PromotionID AND tblKartrisPromotions.PROM_Live = 0))
						AND (		(PP_ItemType = 'p' AND PP_ItemID = @P_ID) 
								OR	(PP_ItemType = 'v' AND PP_ItemID IN (SELECT V_ID FROM tblKartrisVersions WHERE V_ProductID = @P_ID)) 
								OR	(PP_ItemType = 'c' AND PP_ItemID IN (SELECT PCAT_CategoryID FROM tblKartrisProductCategoryLink WHERE PCAT_ProductID = @P_ID))
							)
			)
	ORDER BY PROM_ID, PP_PartNo ASC	
   
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisPromotions_GetAllDetails]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisPromotions_GetAllDetails](@LANG_ID as tinyint,@NowOffset as datetime,@CP_PromotionID as int)
AS
BEGIN
	
	SET NOCOUNT ON;

	SELECT	tblKartrisPromotions.PROM_ID, tblKartrisPromotions.PROM_MaxQuantity, tblKartrisPromotions.PROM_StartDate, tblKartrisPromotions.PROM_EndDate, tblKartrisPromotionParts.PP_PartNo, 
			tblKartrisPromotionParts.PP_Type, tblKartrisPromotionParts.PP_Value, tblKartrisPromotionParts.PP_ItemType, tblKartrisPromotionParts.PP_ItemID, 
			PP_ItemName =	CASE tblKartrisPromotionParts.PP_ItemType
							WHEN 'v' THEN		dbo.fnKartrisVersions_GetProductName(PP_ItemID, @LANG_ID) 
											+ ' (' + dbo.fnKartrisVersions_GetName(PP_ItemID, @LANG_ID) + ')'
							WHEN 'p' THEN		dbo.fnKartrisProducts_GetName(PP_ItemID, @LANG_ID)
							WHEN 'c' THEN 	dbo.fnKartrisCategories_GetName(PP_ItemID, @LANG_ID)
							ELSE 'Name NOT Found .. !!'
						END
	FROM	tblKartrisPromotionParts INNER JOIN tblKartrisPromotions ON tblKartrisPromotionParts.PROM_ID = tblKartrisPromotions.PROM_ID 
	WHERE	tblKartrisPromotions.PROM_ID 
			IN 
			(
				SELECT DISTINCT vKartrisTypePromotions.PROM_ID
				FROM         tblKartrisPromotionParts INNER JOIN
									  vKartrisTypePromotions ON tblKartrisPromotionParts.PROM_ID = vKartrisTypePromotions.PROM_ID
				WHERE     (@NowOffset BETWEEN vKartrisTypePromotions.PROM_StartDate AND vKartrisTypePromotions.PROM_EndDate) AND (vKartrisTypePromotions.PROM_Live = 1 OR (vKartrisTypePromotions.PROM_ID = @CP_PromotionID AND vKartrisTypePromotions.PROM_Live = 0)) AND 
									  (vKartrisTypePromotions.LANG_ID = @LANG_ID)
						
			)
	ORDER BY PROM_ID, PP_PartNo ASC	
   
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisPromotions_GetAllDetails]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisPromotions_GetAllDetails](@LANG_ID as tinyint)
AS
BEGIN
	
	SET NOCOUNT ON;

	SELECT	tblKartrisPromotions.PROM_ID, tblKartrisPromotions.PROM_StartDate, tblKartrisPromotions.PROM_EndDate, 
			tblKartrisPromotionParts.PP_PartNo, tblKartrisPromotionParts.PP_Type, tblKartrisPromotionParts.PP_Value, 
			tblKartrisPromotionParts.PP_ItemType, tblKartrisPromotionParts.PP_ItemID, tblKartrisPromotions.PROM_Live, 
			PP_ItemName =	CASE tblKartrisPromotionParts.PP_ItemType
							WHEN 'v' THEN		dbo.fnKartrisVersions_GetProductName(PP_ItemID, @LANG_ID) 
											+ ' (' + dbo.fnKartrisVersions_GetName(PP_ItemID, @LANG_ID) + ')'
							WHEN 'p' THEN		dbo.fnKartrisProducts_GetName(PP_ItemID, @LANG_ID)
							WHEN 'c' THEN 	dbo.fnKartrisCategories_GetName(PP_ItemID, @LANG_ID)
							ELSE 'Name NOT Found .. !!'
						END
	FROM	tblKartrisPromotionParts INNER JOIN tblKartrisPromotions ON tblKartrisPromotionParts.PROM_ID = tblKartrisPromotions.PROM_ID 
	WHERE	tblKartrisPromotions.PROM_ID 
			IN 
			(
				SELECT	distinct tblKartrisPromotions.PROM_ID
				FROM	tblKartrisPromotionParts INNER JOIN
						tblKartrisPromotions ON tblKartrisPromotionParts.PROM_ID = tblKartrisPromotions.PROM_ID
						
			)
	ORDER BY PROM_ID, PP_PartNo ASC	
   
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisProducts_DeleteByCategory]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisProducts_DeleteByCategory](@CategoryID as int)
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE productCursor CURSOR FOR 
	SELECT PCAT_ProductID
	FROM dbo.tblKartrisProductCategoryLink
	WHERE PCAT_CategoryID = @CategoryID
		
	DECLARE @ChildProductID as bigint;
	
	OPEN productCursor
	FETCH NEXT FROM productCursor
	INTO @ChildProductID;

	DECLARE @ProductList as nvarchar(250);
	SET @ProductList = '';

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @ProductList = @ProductList + CAST(@ChildProductID as nvarchar(5)) +  ',';
		
		FETCH NEXT FROM productCursor
		INTO @ChildProductID;

	END

	CLOSE productCursor
	DEALLOCATE productCursor;

	DECLARE @SIndx as int;
	DECLARE @CIndx as int;
	DECLARE @ProductIDToDelete as nvarchar(5);
	DECLARE @Counter as int;
	DECLARE @CurrentScore as int;

	SET @SIndx = 0;
	SET @Counter = 0;
	WHILE @SIndx <= LEN(@ProductList)
	BEGIN
		
		SET @Counter = @Counter + 1;
		SET @CIndx = CHARINDEX(',', @ProductList, @SIndx)	-- Next keyword starting index (1-Based Index)
		IF @CIndx = 0 BEGIN SET @CIndx = LEN(@ProductList)+ 1 END	-- If no more keywords, set next starting index to not exist
		SET @ProductIDToDelete = SUBSTRING(@ProductList, @SIndx, @CIndx - @SIndx)
		SET @SIndx = @CIndx + 1;	-- The next starting index
		DECLARE @Product as bigint;
		SET @Product = CAST(@ProductIDToDelete as bigint);
			
			-- delete the link with the selected product
			DELETE FROM tblKartrisProductCategoryLink
			WHERE     (PCAT_CategoryID = @CategoryID) AND (PCAT_ProductID = @Product);
			
		
		DECLARE @NoOfOtherParentCategories as int;
		SET @NoOfOtherParentCategories = 0;
		SELECT @NoOfOtherParentCategories = Count(1)
		FROM dbo.tblKartrisProductCategoryLink
		WHERE (PCAT_ProductID = @Product) AND (PCAT_CategoryID <> @CategoryID)
		
		-- if no other parent categories.
		IF @NoOfOtherParentCategories = 0 
		BEGIN
			EXEC [dbo].[_spKartrisProducts_Delete] 
			@ProductID = @Product;
		END
		-- delete the products, since no other related categories.
		
		
		
	END
	
	
END
GO
/****** Object:  UserDefinedFunction [dbo].[fnKartrisBasketOptionValues_GetCombinationPrice]    Script Date: 01/23/2013 21:59:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date, ,>
-- Description:	Used in spKartrisBasketValues_GetMiniBasket
-- =============================================
CREATE FUNCTION [dbo].[fnKartrisBasketOptionValues_GetCombinationPrice] 
(
	@ProductID as int,
	@BV_ID as bigint	
)
RETURNS real
AS
BEGIN
	-- Declare the return variable here
	DECLARE @Result real;

	DECLARE @SortedOptions as nvarchar(max);
	SELECT @SortedOptions = COALESCE(@SortedOptions + ',', '') + CAST(T.BSKTOPT_OptionID as nvarchar(10))
	FROM (SELECT  DISTINCT TOP(1000) BSKTOPT_OptionID
		  FROM    tblKartrisBasketOptionValues
		  WHERE   BSKTOPT_BasketValueID = @BV_ID
		  ORDER BY BSKTOPT_OptionID) AS T;
			
	SELECT @Result = V_Price
	FROM dbo.vKartrisCombinationPrices
	WHERE V_ProductID = @ProductID AND V_OptionsIDs = @SortedOptions;

	IF @Result is NULL	BEGIN
		SET @Result = 0;
	END
	-- Return the result of the function
	RETURN @Result

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasket_GetPromotions]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 26/May/2008
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisBasket_GetPromotions] (
	@intLanguageID int
) AS
BEGIN

	SET NOCOUNT ON;

	select *,PP_ItemName =CASE PP_ItemType
							WHEN 'v' THEN		dbo.fnKartrisVersions_GetProductName(PP_ItemID, @intLanguageID) 
											+ ' (' + dbo.fnKartrisVersions_GetName(PP_ItemID, @intLanguageID) + ')'
							WHEN 'p' THEN		dbo.fnKartrisProducts_GetName(PP_ItemID, @intLanguageID)
							WHEN 'c' THEN 	dbo.fnKartrisCategories_GetName(PP_ItemID, @intLanguageID)
							ELSE 'Name NOT Found .. !!'
						  END
	from (
		select PP_ItemID as V_ID,* from tblKartrisPromotionParts 
			where PP_PartNo='a' and PP_ItemType='v'
		union
		select V.V_ID,PP.* from tblKartrisPromotionParts PP
			inner join tblKartrisVersions V on PP.PP_ItemID=V.V_ProductID
			where PP.PP_PartNo='a' and PP_ItemType='p'
		union
		select distinct V.V_ID,PP.* from tblKartrisPromotionParts PP
			inner join tblKartrisProductCategoryLink PCL on PP.PP_ItemID=PCL.PCAT_CategoryID
			inner join tblKartrisVersions V on PCL.PCAT_ProductID=V.V_ProductID
			where PP.PP_PartNo='a' and PP_ItemType='c'
	) J
	inner join tblKartrisPromotions P on P.PROM_ID=J.PROM_ID

END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisBasketValues_GetItems]    Script Date: 01/23/2013 21:59:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Joseph
-- Create date: 2008/4/8
-- Description:	
-- Remarks:	Optimization Medz - 2010/7/26
-- Re-Optimized: By Mohammad - 2011/10/13 - Combination Prices
-- Modified: By Mohammad - 2012/1/1 - Remove join with base version, so to fix the SKU for combination version
-- Modified: By Paul - 2014/6/7 - Added reference to new function to pull BaseVersion's download type
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisBasketValues_GetItems] (
	@intLanguageID int,
	@intSessionID int
)
AS
BEGIN

SET NOCOUNT ON;

WITH tblBasketValues as
	(	SELECT BV_ID,BV_VersionID,BV_Quantity,BV_CustomText 
		FROM tblKartrisBasketValues 
		WHERE BV_ParentType='b' and BV_ParentID=@intSessionID
	)
	SELECT DISTINCT P_ID As 'ProductID', P_Type As 'ProductType', V_Type As 'VersionType', T_TaxRate As 'TaxRate', T_TaxRate2 As 'TaxRate2',
		dbo.fnKartrisBasket_GetItemWeight(BV_ID, V_ID, P_ID) As 'Weight', V_RRP As 'RRP', P_Name As 'ProductName', V_ID, tblBasketValues.BV_ID,
		V_Name As 'VersionName', V_CodeNumber As 'CodeNumber', V_Price As 'Price', 
		tblBasketValues.BV_Quantity As 'Quantity', V_QuantityWarnLevel As 'QtyWarnLevel', V_Quantity,
		V_DownloadType, isnull(BV_CustomText,'') As 'CustomText',
		dbo.fnKartrisBasketOptionValues_GetOptionsTotalPrice(P_ID,BV_VersionID,@intSessionID,tblBasketValues.BV_ID) AS OptionsPrice,
		dbo.fnKartrisBasketOptionValues_GetCombinationPrice(P_ID,tblBasketValues.BV_ID) AS CombinationPrice,
		dbo.fnKartrisVersions_GetBaseVersionDownloadType(V_ID) AS BaseVersion_DownloadType,
		V_CustomizationType, V_CustomizationDesc, V_CustomizationCost, tblBasketValues.BV_VersionID 
	FROM tblBasketValues INNER JOIN vKartrisProductsVersions ON BV_VersionID = V_ID
	WHERE LANG_ID = @intLanguageID
	ORDER BY BV_ID
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCategories_Delete]    Script Date: 01/23/2013 21:59:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: 
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisCategories_Delete]
(
	@CAT_ID as int 
)
AS
BEGIN
	
	SET NOCOUNT ON;

	IF @CAT_ID = 0
	BEGIN
		RAISERROR('Can not delete this category.', 16, 0);
		GOTO Exit_sp;
	END

	SELECT * FROM tblKartrisCategories WHERE CAT_ID = @CAT_ID;

	DECLARE @NoOfChildCategories as int;
	SET @NoOfChildCategories = 0;
	SELECT @NoOfChildCategories = Count(1)
	FROM tblKartrisCategoryHierarchy
	WHERE CH_ParentID = @CAT_ID;
	

	IF @NoOfChildCategories = 0
	BEGIN
		
		-- delete category hierarchical data as a child
		DELETE FROM tblKartrisCategoryHierarchy
		WHERE  (CH_ChildID = @CAT_ID);
		
		-- delete related products
		EXEC [dbo].[_spKartrisProducts_DeleteByCategory] 
			@CategoryID = @CAT_ID;
			
		EXEC [dbo].[_spKartrisPromotions_DeleteByParent] 
			@ParentID = @CAT_ID, 
			@ParentType = 'c';

		-- delete the language elements of the category
		DELETE FROM tblKartrisLanguageElements
		WHERE     (LE_ParentID = @CAT_ID) AND (LE_TypeID = 3);

		-- delete the object config settings for this cat
		DELETE tblKartrisObjectConfigValue
		FROM tblKartrisObjectConfig INNER JOIN tblKartrisObjectConfigValue ON tblKartrisObjectConfig.OC_ID = tblKartrisObjectConfigValue.OCV_ObjectConfigID
		WHERE (tblKartrisObjectConfigValue.OCV_ParentID = @CAT_ID) AND (tblKartrisObjectConfig.OC_ObjectType = 'Category');
		
		-- delete the record from the category table
		DELETE FROM tblKartrisCategories
		WHERE     (CAT_ID = @CAT_ID);
		
		
		IF @CAT_ID <> 0 AND @CAT_ID NOT IN (SELECT DELETED_ID FROM dbo.tblKartrisDeletedItems WHERE Deleted_Type = 'c') BEGIN
			
				DECLARE @Timeoffset as int;
				set @Timeoffset = CAST(dbo.fnKartrisConfig_GetValue('general.timeoffset') as int);
				INSERT INTO dbo.tblKartrisDeletedItems VALUES(@CAT_ID, 'c', NULL, DateAdd(hour, @Timeoffset, GetDate()));
			
		END
	END
	ELSE
	BEGIN
		RAISERROR('Can not delete a category that has subcategories.', 16, 0);
	END
	
Exit_sp:
END
GO
/****** Object:  StoredProcedure [dbo].[spKartrisProducts_GetRichSnippetProperties]    Script Date: 2/27/2013 5:29:37 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[spKartrisProducts_GetRichSnippetProperties]
(
	@P_ID as integer,
	@LANG_ID as tinyint
)
AS
BEGIN
	DECLARE @P_Category as nvarchar(max), @P_SKU as nvarchar(25), @P_Type as char(1),
			@P_Price as real, @P_MinPrice as real, @P_MaxPrice as real, 
			@P_StockQuantity as real, @P_WarnLevel as real,
			@P_Rev as char(1), @Rev_Avg as real, @Rev_Total as int;

	SELECT Top(1) @P_Category = vKartrisTypeCategories.CAT_Name
	FROM  vKartrisTypeCategories INNER JOIN tblKartrisProductCategoryLink 
			ON vKartrisTypeCategories.CAT_ID = tblKartrisProductCategoryLink.PCAT_CategoryID
	WHERE (vKartrisTypeCategories.LANG_ID = @LANG_ID) AND (tblKartrisProductCategoryLink.PCAT_ProductID = @P_ID)

	SELECT @P_Type = [P_Type], @P_Rev = [P_Reviews]
	FROM [dbo].[tblKartrisProducts]
	WHERE [P_ID] = @P_ID;

	IF @P_Rev = 'y' BEGIN
		SELECT @Rev_Total = Count(1), @Rev_Avg = AVG([REV_Rating])
		FROM [dbo].[tblKartrisReviews]
		WHERE [REV_ProductID] = @P_ID AND [REV_Live] = 'y'
	END

	IF @P_Type = 's' BEGIN
		SELECT Top(1) @P_SKU = [V_CodeNumber], @P_Price = [V_Price], 
			@P_StockQuantity = [V_Quantity], @P_WarnLevel = [V_QuantityWarnLevel]
		FROM [dbo].[tblKartrisVersions]
		WHERE [V_ProductID] = @P_ID AND [V_Live] = 1;
	END 
	IF @P_Type = 'm' BEGIN
		SELECT Top(1) @P_SKU = [V_CodeNumber], 
			@P_StockQuantity = [V_Quantity], @P_WarnLevel = [V_QuantityWarnLevel]
		FROM [dbo].[tblKartrisVersions]
		WHERE [V_ProductID] = @P_ID AND [V_Live] = 1;
		SELECT @P_MinPrice = [dbo].[fnKartrisProduct_GetMinPrice](@P_ID);
		SELECT @P_MaxPrice = Max(V_Price)
		FROM [dbo].[tblKartrisVersions]
		WHERE [V_ProductID] = @P_ID AND [V_Live] = 1;
	END 
	IF @P_Type = 'o' BEGIN
		SELECT Top(1) @P_SKU = [V_CodeNumber], 
			@P_StockQuantity = [V_Quantity], @P_WarnLevel = [V_QuantityWarnLevel]
		FROM [dbo].[tblKartrisVersions]
		WHERE [V_ProductID] = @P_ID AND [V_Type] = 'b' AND [V_Live] = 1;
		
		SELECT @P_MinPrice = [dbo].[fnKartrisProduct_GetMinPrice](@P_ID);
		SELECT @P_MaxPrice = Max(V_Price)
		FROM [dbo].[tblKartrisVersions]
		WHERE [V_ProductID] = @P_ID AND [V_Type] <> 's' AND [V_Live] = 1;
	END

	SELECT @P_Category As P_Category, @P_SKU As P_SKU, @P_Type As P_Type,
			@P_Price As P_Price, @P_MinPrice As P_MinPrice, @P_MaxPrice As P_MaxPrice, 
			@P_StockQuantity As P_Quanity, @P_WarnLevel As P_WarnLevel,
			@P_Rev As P_Review, @Rev_Avg As P_AverageReview, @Rev_Total As P_TotalReview
END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisCurrencies_UpdateRates]    Script Date: 7/3/2013 10:01:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Mohammad
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisCurrencies_SetDefault]
(
	@CUR_ID tinyint
)
AS
BEGIN
	SET NOCOUNT OFF;

	DECLARE @MinOrderNo as tinyint;
	SELECT @MinOrderNo = MIN(CUR_OrderNo)
	FROM [tblKartrisCurrencies]
	WHERE CUR_Live = 1;

	DECLARE @SwitchOrderNo as int;
	SELECT @SwitchOrderNo = CUR_OrderNo
	FROM [tblKartrisCurrencies]
	WHERE CUR_ID = @CUR_ID;

	UPDATE Top(1) [tblKartrisCurrencies] 
	SET [CUR_OrderNo] = @SwitchOrderNo
	Where CUR_OrderNo = @MinOrderNo;

	UPDATE [tblKartrisCurrencies] 
	SET [CUR_OrderNo] = @MinOrderNo, [CUR_Live] = 1, [CUR_ExchangeRate] = 1
	Where CUR_ID = @CUR_ID;
END
GO

/****** Object:  StoredProcedure [dbo].[_spKartrisOrders_GetByID]    Script Date: 9/9/2013 3:29:46 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisOrders_GetByID]
(
	@OrderID int
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT        tblKartrisOrders.O_ID, tblKartrisOrders.O_CustomerID, tblKartrisOrders.O_Details, tblKartrisOrders.O_ShippingPrice, tblKartrisOrders.O_ShippingTax, 
						 tblKartrisOrders.O_DiscountPercentage, tblKartrisOrders.O_AffiliatePercentage, tblKartrisOrders.O_TotalPrice, tblKartrisOrders.O_Date, 
						 tblKartrisOrders.O_PurchaseOrderNo, tblKartrisOrders.O_SecurityID, tblKartrisOrders.O_Sent, tblKartrisOrders.O_Invoiced, tblKartrisOrders.O_Shipped, 
						 tblKartrisOrders.O_Paid, tblKartrisOrders.O_Status, tblKartrisOrders.O_LastModified, tblKartrisOrders.O_WishListID, tblKartrisOrders.O_CouponCode, 
						 tblKartrisOrders.O_CouponDiscountTotal, tblKartrisOrders.O_PricesIncTax, tblKartrisOrders.O_TaxDue, tblKartrisOrders.O_PaymentGateWay, 
						 tblKartrisOrders.O_ReferenceCode, tblKartrisOrders.O_LanguageID, tblKartrisOrders.O_CurrencyID, tblKartrisOrders.O_TotalPriceGateway, 
						 tblKartrisOrders.O_CurrencyIDGateway, tblKartrisOrders.O_AffiliatePaymentID, tblKartrisOrders.O_AffiliateTotalPrice, 
						 tblKartrisOrders.O_SendOrderUpdateEmail, tblKartrisOrders.O_OrderHandlingCharge, tblKartrisOrders.O_OrderHandlingChargeTax, 
						 tblKartrisOrders.O_CurrencyRate, tblKartrisOrders.O_ShippingMethod, tblKartrisOrders.O_BillingAddress, tblKartrisOrders.O_ShippingAddress, 
						 tblKartrisOrders.O_PromotionDiscountTotal, tblKartrisOrders.O_PromotionDescription, tblKartrisOrders.O_SentToQB, tblKartrisOrders.O_Notes, 
						 tblKartrisOrders.O_Data, tblKartrisOrders.O_Comments, tblKartrisOrders.O_Cancelled, tblKartrisCurrencies.CUR_ISOCode, tblKartrisUsers.U_EmailAddress, 
						 tblKartrisUsers.U_AccountHolderName, tblKartrisUsers.U_Telephone
FROM            tblKartrisUsers INNER JOIN
						 tblKartrisOrders ON tblKartrisUsers.U_ID = tblKartrisOrders.O_CustomerID INNER JOIN
						 tblKartrisCurrencies ON tblKartrisOrders.O_CurrencyID = tblKartrisCurrencies.CUR_ID
WHERE        (tblKartrisOrders.O_ID = @OrderID)
END

GO

/****** Object:  StoredProcedure [dbo].[_spKartrisInvoiceRows_GetByOrderID]    Script Date: 9/9/2013 3:29:46 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisInvoiceRows_GetByOrderID]
(
	@OrderID int
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT tblKartrisInvoiceRows.IR_ID, tblKartrisInvoiceRows.IR_VersionCode, tblKartrisInvoiceRows.IR_VersionName, tblKartrisInvoiceRows.IR_Quantity, 
		   tblKartrisInvoiceRows.IR_PricePerItem, tblKartrisInvoiceRows.IR_TaxPerItem, tblKartrisInvoiceRows.IR_OptionsText, tblKartrisTaxRates.T_Taxrate
	FROM   tblKartrisVersions INNER JOIN
		   tblKartrisTaxRates ON tblKartrisVersions.V_Tax = tblKartrisTaxRates.T_ID INNER JOIN
		   tblKartrisInvoiceRows ON tblKartrisVersions.V_CodeNumber = tblKartrisInvoiceRows.IR_VersionCode 
	WHERE IR_OrderNumberID = @OrderID;
END

GO

/****** Object:  Default [DF__tblKartris__AL_Lo__03317E3D]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisAdminLog] ADD  CONSTRAINT [DF__tblKartris__AL_Lo__03317E3D]  DEFAULT ((0)) FOR [AL_LoginName]
GO
/****** Object:  Default [DF__tblKartris__AFLG___367C1819]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisAffiliateLog] ADD  CONSTRAINT [DF__tblKartris__AFLG___367C1819]  DEFAULT ((0)) FOR [AFLG_AffiliateID]
GO
/****** Object:  Default [DF__tblKartris__AFP_A__30C33EC3]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisAffiliatePayments] ADD  CONSTRAINT [DF__tblKartris__AFP_A__30C33EC3]  DEFAULT ((0)) FOR [AFP_AffiliateID]
GO
/****** Object:  Default [DF_tblKartrisAttributes_ATTRIB_FastEntry]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisAttributes] ADD  CONSTRAINT [DF_tblKartrisAttributes_ATTRIB_FastEntry]  DEFAULT ((0)) FOR [ATTRIB_FastEntry]
GO
/****** Object:  Default [DF__tblKartris__ATTRI__2DE6D218]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisAttributes] ADD  CONSTRAINT [DF__tblKartris__ATTRI__2DE6D218]  DEFAULT ((0)) FOR [ATTRIB_OrderByValue]
GO
/****** Object:  Default [DF_tblKartrisAttributes_ATTRIB_Special]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisAttributes] ADD  CONSTRAINT [DF_tblKartrisAttributes_ATTRIB_Special]  DEFAULT ((0)) FOR [ATTRIB_Special]
GO
/****** Object:  Default [DF__tblKartris__ATTRI__22751F6C]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisAttributeValues] ADD  CONSTRAINT [DF__tblKartris__ATTRI__22751F6C]  DEFAULT ((0)) FOR [ATTRIBV_ProductID]
GO
/****** Object:  Default [DF__tblKartris__ATTRI__236943A5]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisAttributeValues] ADD  CONSTRAINT [DF__tblKartris__ATTRI__236943A5]  DEFAULT ((0)) FOR [ATTRIBV_AttributeID]
GO
/****** Object:  Default [DF_tblKartrisCategories_CAT_ProductSortDirection]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisCategories] ADD  CONSTRAINT [DF_tblKartrisCategories_CAT_ProductSortDirection]  DEFAULT ('a') FOR [CAT_ProductsSortDirection]
GO
/****** Object:  Default [DF__tblKartris__CH_Pa__1332DBDC]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisCategoryHierarchy] ADD  CONSTRAINT [DF__tblKartris__CH_Pa__1332DBDC]  DEFAULT ((0)) FOR [CH_ParentID]
GO
/****** Object:  Default [DF__tblKartris__CH_Ch__14270015]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisCategoryHierarchy] ADD  CONSTRAINT [DF__tblKartris__CH_Ch__14270015]  DEFAULT ((0)) FOR [CH_ChildID]
GO
/****** Object:  Default [DF__tblKartris__CP_Di__7D439ABD]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisCoupons] ADD  CONSTRAINT [DF__tblKartris__CP_Di__7D439ABD]  DEFAULT ((0)) FOR [CP_DiscountValue]
GO
/****** Object:  Default [DF__tblKartris__CUR_E__72C60C4A]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisCurrencies] ADD  CONSTRAINT [DF__tblKartris__CUR_E__72C60C4A]  DEFAULT ((0)) FOR [CUR_ExchangeRate]
GO
/****** Object:  Default [DF_tblKartrisCurrencies_CUR_RoundNumbers]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisCurrencies] ADD  CONSTRAINT [DF_tblKartrisCurrencies_CUR_RoundNumbers]  DEFAULT ((0)) FOR [CUR_RoundNumbers]
GO
/****** Object:  Default [DF__tblKartris__CGP_C__4D5F7D71]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisCustomerGroupPrices] ADD  CONSTRAINT [DF__tblKartris__CGP_C__4D5F7D71]  DEFAULT ((0)) FOR [CGP_CustomerGroupID]
GO
/****** Object:  Default [DF__tblKartris__CGP_V__4E53A1AA]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisCustomerGroupPrices] ADD  CONSTRAINT [DF__tblKartris__CGP_V__4E53A1AA]  DEFAULT ((0)) FOR [CGP_VersionID]
GO
/****** Object:  Default [DF__tblKartris__CGP_P__4F47C5E3]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisCustomerGroupPrices] ADD  CONSTRAINT [DF__tblKartris__CGP_P__4F47C5E3]  DEFAULT ((0)) FOR [CGP_Price]
GO
/****** Object:  Default [DF__tblKartris__CG_Di__619B8048]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisCustomerGroups] ADD  CONSTRAINT [DF__tblKartris__CG_Di__619B8048]  DEFAULT ((0)) FOR [CG_Discount]
GO
/****** Object:  Default [DF__tblKartris__D_Shi__534D60F1]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisDestination] ADD  CONSTRAINT [DF__tblKartris__D_Shi__534D60F1]  DEFAULT ((0)) FOR [D_ShippingZoneID]
GO
/****** Object:  Default [DF__tblKartris__D_Tax__5441852A]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisDestination] ADD  CONSTRAINT [DF__tblKartris__D_Tax__5441852A]  DEFAULT ((0)) FOR [D_Tax]
GO
/****** Object:  Default [DF__tblKartris__IR_Or__49C3F6B7]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisInvoiceRows] ADD  CONSTRAINT [DF__tblKartris__IR_Or__49C3F6B7]  DEFAULT ((0)) FOR [IR_OrderNumberID]
GO
/****** Object:  Default [DF__tblKartris__IR_Qu__4AB81AF0]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisInvoiceRows] ADD  CONSTRAINT [DF__tblKartris__IR_Qu__4AB81AF0]  DEFAULT ((0)) FOR [IR_Quantity]
GO
/****** Object:  Default [DF__tblKartris__IR_Pr__4BAC3F29]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisInvoiceRows] ADD  CONSTRAINT [DF__tblKartris__IR_Pr__4BAC3F29]  DEFAULT ((0)) FOR [IR_PricePerItem]
GO
/****** Object:  Default [DF__tblKartris__IR_Ta__4CA06362]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisInvoiceRows] ADD  CONSTRAINT [DF__tblKartris__IR_Ta__4CA06362]  DEFAULT ((0)) FOR [IR_TaxPerItem]
GO
/****** Object:  Default [DF__tblKartris__LS_Ve__4222D4EF]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisLanguageStrings] ADD  CONSTRAINT [DF__tblKartris__LS_Ve__4222D4EF]  DEFAULT ((0)) FOR [LS_VersionAdded]
GO
/****** Object:  Default [DF__tblKartris__OPTG___5BE2A6F2]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOptionGroups] ADD  CONSTRAINT [DF__tblKartris__OPTG___5BE2A6F2]  DEFAULT ((0)) FOR [OPTG_DefOrderByValue]
GO
/****** Object:  Default [DF__tblKartris__OPT_O__6A30C649]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOptions] ADD  CONSTRAINT [DF__tblKartris__OPT_O__6A30C649]  DEFAULT ((0)) FOR [OPT_OptionGroupID]
GO
/****** Object:  Default [DF_tblKartrisOptions_OPT_CheckBoxValue]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOptions] ADD  CONSTRAINT [DF_tblKartrisOptions_OPT_CheckBoxValue]  DEFAULT ((0)) FOR [OPT_CheckBoxValue]
GO
/****** Object:  Default [DF__tblKartris__OPT_D__6B24EA82]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOptions] ADD  CONSTRAINT [DF__tblKartris__OPT_D__6B24EA82]  DEFAULT ((0)) FOR [OPT_DefPriceChange]
GO
/****** Object:  Default [DF__tblKartris__OPT_D__6C190EBB]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOptions] ADD  CONSTRAINT [DF__tblKartris__OPT_D__6C190EBB]  DEFAULT ((0)) FOR [OPT_DefWeightChange]
GO
/****** Object:  Default [DF__tblKartris__OPT_D__6D0D32F4]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOptions] ADD  CONSTRAINT [DF__tblKartris__OPT_D__6D0D32F4]  DEFAULT ((0)) FOR [OPT_DefOrderByValue]
GO
/****** Object:  Default [DF__tblKartris__O_Cus__2C3393D0]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOrders] ADD  CONSTRAINT [DF__tblKartris__O_Cus__2C3393D0]  DEFAULT ((0)) FOR [O_CustomerID]
GO
/****** Object:  Default [DF__tblKartris__O_Shi__2D27B809]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOrders] ADD  CONSTRAINT [DF__tblKartris__O_Shi__2D27B809]  DEFAULT ((0)) FOR [O_ShippingPrice]
GO
/****** Object:  Default [DF__tblKartris__O_Shi__2E1BDC42]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOrders] ADD  CONSTRAINT [DF__tblKartris__O_Shi__2E1BDC42]  DEFAULT ((0)) FOR [O_ShippingTax]
GO
/****** Object:  Default [DF__tblKartris__O_Dis__2F10007B]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOrders] ADD  CONSTRAINT [DF__tblKartris__O_Dis__2F10007B]  DEFAULT ((0)) FOR [O_DiscountPercentage]
GO
/****** Object:  Default [DF__tblKartris__O_Aff__300424B4]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOrders] ADD  CONSTRAINT [DF__tblKartris__O_Aff__300424B4]  DEFAULT ((0)) FOR [O_AffiliatePercentage]
GO
/****** Object:  Default [DF__tblKartris__O_Tot__30F848ED]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOrders] ADD  CONSTRAINT [DF__tblKartris__O_Tot__30F848ED]  DEFAULT ((0)) FOR [O_TotalPrice]
GO
/****** Object:  Default [DF__tblKartris__O_Sec__31EC6D26]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOrders] ADD  CONSTRAINT [DF__tblKartris__O_Sec__31EC6D26]  DEFAULT ((0)) FOR [O_SecurityID]
GO
/****** Object:  Default [DF__tblKartris__O_Wis__32E0915F]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOrders] ADD  CONSTRAINT [DF__tblKartris__O_Wis__32E0915F]  DEFAULT ((0)) FOR [O_WishListID]
GO
/****** Object:  Default [DF__tblKartris__O_Cou__33D4B598]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOrders] ADD  CONSTRAINT [DF__tblKartris__O_Cou__33D4B598]  DEFAULT ((0)) FOR [O_CouponDiscountTotal]
GO
/****** Object:  Default [DF__tblKartris__O_Tax__34C8D9D1]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOrders] ADD  CONSTRAINT [DF__tblKartris__O_Tax__34C8D9D1]  DEFAULT ((0)) FOR [O_TaxDue]
GO
/****** Object:  Default [DF__tblKartris__O_Lan__35BCFE0A]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOrders] ADD  CONSTRAINT [DF__tblKartris__O_Lan__35BCFE0A]  DEFAULT ((0)) FOR [O_LanguageID]
GO
/****** Object:  Default [DF__tblKartris__O_Cur__36B12243]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOrders] ADD  CONSTRAINT [DF__tblKartris__O_Cur__36B12243]  DEFAULT ((0)) FOR [O_CurrencyID]
GO
/****** Object:  Default [DF__tblKartris__O_Tot__37A5467C]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOrders] ADD  CONSTRAINT [DF__tblKartris__O_Tot__37A5467C]  DEFAULT ((0)) FOR [O_TotalPriceGateway]
GO
/****** Object:  Default [DF__tblKartris__O_Cur__38996AB5]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOrders] ADD  CONSTRAINT [DF__tblKartris__O_Cur__38996AB5]  DEFAULT ((0)) FOR [O_CurrencyIDGateway]
GO
/****** Object:  Default [DF__tblKartris__O_Aff__398D8EEE]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOrders] ADD  CONSTRAINT [DF__tblKartris__O_Aff__398D8EEE]  DEFAULT ((0)) FOR [O_AffiliatePaymentID]
GO
/****** Object:  Default [DF__tblKartris__O_Aff__3A81B327]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOrders] ADD  CONSTRAINT [DF__tblKartris__O_Aff__3A81B327]  DEFAULT ((0)) FOR [O_AffiliateTotalPrice]
GO
/****** Object:  Default [DF__tblKartris__O_Ord__3B75D760]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOrders] ADD  CONSTRAINT [DF__tblKartris__O_Ord__3B75D760]  DEFAULT ((0)) FOR [O_OrderHandlingCharge]
GO
/****** Object:  Default [DF__tblKartris__O_Ord__3C69FB99]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOrders] ADD  CONSTRAINT [DF__tblKartris__O_Ord__3C69FB99]  DEFAULT ((0)) FOR [O_OrderHandlingChargeTax]
GO
/****** Object:  Default [DF__tblKartris__O_Cur__3D5E1FD2]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOrders] ADD  CONSTRAINT [DF__tblKartris__O_Cur__3D5E1FD2]  DEFAULT ((0)) FOR [O_CurrencyRate]
GO
/****** Object:  Default [DF__tblKartris__O_Pro__3E52440B]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOrders] ADD  CONSTRAINT [DF__tblKartris__O_Pro__3E52440B]  DEFAULT ((0)) FOR [O_PromotionDiscountTotal]
GO
/****** Object:  Default [DF_tblKartrisOrders_O_SentToQB]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOrders] ADD  CONSTRAINT [DF_tblKartrisOrders_O_SentToQB]  DEFAULT ((0)) FOR [O_SentToQB]
GO
/****** Object:  Default [DF_tblKartrisPages_PAGE_ParentID]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisPages] ADD  CONSTRAINT [DF_tblKartrisPages_PAGE_ParentID]  DEFAULT ((0)) FOR [PAGE_ParentID]
GO
/****** Object:  Default [DF__tblKartris__PCAT___15502E78]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProductCategoryLink] ADD  CONSTRAINT [DF__tblKartris__PCAT___15502E78]  DEFAULT ((0)) FOR [PCAT_ProductID]
GO
/****** Object:  Default [DF__tblKartris__PCAT___164452B1]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProductCategoryLink] ADD  CONSTRAINT [DF__tblKartris__PCAT___164452B1]  DEFAULT ((0)) FOR [PCAT_CategoryID]
GO
/****** Object:  Default [DF__tblKartris__P_OPT__07020F21]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProductOptionGroupLink] ADD  CONSTRAINT [DF__tblKartris__P_OPT__07020F21]  DEFAULT ((0)) FOR [P_OPTG_ProductID]
GO
/****** Object:  Default [DF__tblKartris__P_OPT__07F6335A]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProductOptionGroupLink] ADD  CONSTRAINT [DF__tblKartris__P_OPT__07F6335A]  DEFAULT ((0)) FOR [P_OPTG_OptionGroupID]
GO
/****** Object:  Default [DF__tblKartris__P_OPT__08EA5793]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProductOptionGroupLink] ADD  CONSTRAINT [DF__tblKartris__P_OPT__08EA5793]  DEFAULT ((0)) FOR [P_OPTG_OrderByValue]
GO
/****** Object:  Default [DF_tblKartrisProductOptionGroupLink_P_OPTG_MustSelected]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProductOptionGroupLink] ADD  CONSTRAINT [DF_tblKartrisProductOptionGroupLink_P_OPTG_MustSelected]  DEFAULT ((0)) FOR [P_OPTG_MustSelected]
GO
/****** Object:  Default [DF__tblKartris__P_OPT__7C8480AE]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProductOptionLink] ADD  CONSTRAINT [DF__tblKartris__P_OPT__7C8480AE]  DEFAULT ((0)) FOR [P_OPT_OptionID]
GO
/****** Object:  Default [DF__tblKartris__P_OPT__7D78A4E7]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProductOptionLink] ADD  CONSTRAINT [DF__tblKartris__P_OPT__7D78A4E7]  DEFAULT ((0)) FOR [P_OPT_ProductID]
GO
/****** Object:  Default [DF__tblKartris__P_OPT__7E6CC920]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProductOptionLink] ADD  CONSTRAINT [DF__tblKartris__P_OPT__7E6CC920]  DEFAULT ((0)) FOR [P_OPT_OrderByValue]
GO
/****** Object:  Default [DF__tblKartris__P_OPT__7F60ED59]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProductOptionLink] ADD  CONSTRAINT [DF__tblKartris__P_OPT__7F60ED59]  DEFAULT ((0)) FOR [P_OPT_PriceChange]
GO
/****** Object:  Default [DF__tblKartris__P_OPT__00551192]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProductOptionLink] ADD  CONSTRAINT [DF__tblKartris__P_OPT__00551192]  DEFAULT ((0)) FOR [P_OPT_WeightChange]
GO
/****** Object:  Default [DF_tblKartrisProductOptionLink_P_OPT_Selected]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProductOptionLink] ADD  CONSTRAINT [DF_tblKartrisProductOptionLink_P_OPT_Selected]  DEFAULT ((0)) FOR [P_OPT_Selected]
GO
/****** Object:  Default [DF__tblKartris__P_Fea__395884C4]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProducts] ADD  CONSTRAINT [DF__tblKartris__P_Fea__395884C4]  DEFAULT ((0)) FOR [P_Featured]
GO
/****** Object:  Default [DF_tblKartrisProducts_P_VersionsSortDirection]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProducts] ADD  CONSTRAINT [DF_tblKartrisProducts_P_VersionsSortDirection]  DEFAULT ('-') FOR [P_VersionsSortDirection]
GO
/****** Object:  Default [DF__tblKartris__P_Sup__3B40CD36]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProducts] ADD  CONSTRAINT [DF__tblKartris__P_Sup__3B40CD36]  DEFAULT ((0)) FOR [P_SupplierID]
GO
/****** Object:  Default [DF__tblKartris__P_Cus__3C34F16F]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProducts] ADD  CONSTRAINT [DF__tblKartris__P_Cus__3C34F16F]  DEFAULT ((0)) FOR [P_CustomerGroupID]
GO
/****** Object:  Default [DF_tblKartrisPromotions_PROM_Live]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisPromotions] ADD  CONSTRAINT [DF_tblKartrisPromotions_PROM_Live]  DEFAULT ((0)) FOR [PROM_Live]
GO
/****** Object:  Default [DF_tblKartrisPromotions2_PROM_OrderByValue]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisPromotions] ADD  CONSTRAINT [DF_tblKartrisPromotions2_PROM_OrderByValue]  DEFAULT ((0)) FOR [PROM_OrderByValue]
GO
/****** Object:  Default [DF_tblKartrisPromotions2_PROM_MaxQuantity]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisPromotions] ADD  CONSTRAINT [DF_tblKartrisPromotions2_PROM_MaxQuantity]  DEFAULT ((0)) FOR [PROM_MaxQuantity]
GO
/****** Object:  Default [DF__tblKartris__QD_Ve__1EA48E88]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisQuantityDiscounts] ADD  CONSTRAINT [DF__tblKartris__QD_Ve__1EA48E88]  DEFAULT ((0)) FOR [QD_VersionID]
GO
/****** Object:  Default [DF__tblKartris__QD_Qu__1F98B2C1]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisQuantityDiscounts] ADD  CONSTRAINT [DF__tblKartris__QD_Qu__1F98B2C1]  DEFAULT ((0)) FOR [QD_Quantity]
GO
/****** Object:  Default [DF__tblKartris__QD_Pr__208CD6FA]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisQuantityDiscounts] ADD  CONSTRAINT [DF__tblKartris__QD_Pr__208CD6FA]  DEFAULT ((0)) FOR [QD_Price]
GO
/****** Object:  Default [DF__tblKartris__RP_Pa__17036CC0]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisRelatedProducts] ADD  CONSTRAINT [DF__tblKartris__RP_Pa__17036CC0]  DEFAULT ((0)) FOR [RP_ParentID]
GO
/****** Object:  Default [DF__tblKartris__RP_Ch__17F790F9]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisRelatedProducts] ADD  CONSTRAINT [DF__tblKartris__RP_Ch__17F790F9]  DEFAULT ((0)) FOR [RP_ChildID]
GO
/****** Object:  Default [DF__tblKartris__REV_P__09A971A2]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisReviews] ADD  CONSTRAINT [DF__tblKartris__REV_P__09A971A2]  DEFAULT ((0)) FOR [REV_ProductID]
GO
/****** Object:  Default [DF__tblKartris__REV_L__0B91BA14]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisReviews] ADD  CONSTRAINT [DF__tblKartris__REV_L__0B91BA14]  DEFAULT ((0)) FOR [REV_LanguageID]
GO
/****** Object:  Default [DF__tblKartris__REV_C__0C85DE4D]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisReviews] ADD  CONSTRAINT [DF__tblKartris__REV_C__0C85DE4D]  DEFAULT ((0)) FOR [REV_CustomerID]
GO
/****** Object:  Default [DF__tblKartris__REV_R__0D7A0286]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisReviews] ADD  CONSTRAINT [DF__tblKartris__REV_R__0D7A0286]  DEFAULT ((0)) FOR [REV_Rating]
GO
/****** Object:  Default [DF__tblKartris__BSKT___0BC6C43E]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisSavedBaskets] ADD  CONSTRAINT [DF__tblKartris__BSKT___0BC6C43E]  DEFAULT ((0)) FOR [SBSKT_UserID]
GO
/****** Object:  Default [DF__tblKartris__SESS___571DF1D5]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisSessions] ADD  CONSTRAINT [DF__tblKartris__SESS___571DF1D5]  DEFAULT ((0)) FOR [SESS_Expiry]
GO
/****** Object:  Default [DF__tblKartris__SESSV__74AE54BC]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisSessionValues] ADD  CONSTRAINT [DF__tblKartris__SESSV__74AE54BC]  DEFAULT ((0)) FOR [SESSV_SessionID]
GO
/****** Object:  Default [DF__tblKartris__SESSV__75A278F5]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisSessionValues] ADD  CONSTRAINT [DF__tblKartris__SESSV__75A278F5]  DEFAULT ((0)) FOR [SESSV_Expiry]
GO
/****** Object:  Default [DF__tblKartris__SM_Or__6FE99F9F]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisShippingMethods] ADD  CONSTRAINT [DF__tblKartris__SM_Or__6FE99F9F]  DEFAULT ((0)) FOR [SM_OrderByValue]
GO
/****** Object:  Default [DF__tblKartris__S_Shi__6477ECF3]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisShippingRates] ADD  CONSTRAINT [DF__tblKartris__S_Shi__6477ECF3]  DEFAULT ((0)) FOR [S_ShippingMethodID]
GO
/****** Object:  Default [DF__tblKartris__S_Shi__656C112C]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisShippingRates] ADD  CONSTRAINT [DF__tblKartris__S_Shi__656C112C]  DEFAULT ((0)) FOR [S_ShippingZoneID]
GO
/****** Object:  Default [DF__tblKartris__S_Bou__6754599E]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisShippingRates] ADD  CONSTRAINT [DF__tblKartris__S_Bou__6754599E]  DEFAULT ((0)) FOR [S_Boundary]
GO
/****** Object:  Default [DF__tblKartris__S_Shi__66603565]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisShippingRates] ADD  CONSTRAINT [DF__tblKartris__S_Shi__66603565]  DEFAULT ((0)) FOR [S_ShippingRate]
GO
/****** Object:  Default [DF__tblKartris__SZ_Or__5EBF139D]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisShippingZones] ADD  CONSTRAINT [DF__tblKartris__SZ_Or__5EBF139D]  DEFAULT ((0)) FOR [SZ_OrderByValue]
GO
/****** Object:  Default [DF__tblKartris__PS_Pr__339FAB6E]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisStatistics] ADD  CONSTRAINT [DF__tblKartris__PS_Pr__339FAB6E]  DEFAULT ((0)) FOR [ST_Type]
GO
/****** Object:  Default [DF_tblKartrisSupportTickets_TIC_SupportTicketTypeID]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisSupportTickets] ADD  CONSTRAINT [DF_tblKartrisSupportTickets_TIC_SupportTicketTypeID]  DEFAULT ((1)) FOR [TIC_SupportTicketTypeID]
GO
/****** Object:  Default [DF_tblKartrisSupportTickets_TIC_TimeSpent]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisSupportTickets] ADD  CONSTRAINT [DF_tblKartrisSupportTickets_TIC_TimeSpent]  DEFAULT ((0)) FOR [TIC_TimeSpent]
GO
/****** Object:  Default [DF__tblKartris__T_Tax__5165187F]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisTaxRates] ADD  CONSTRAINT [DF__tblKartris__T_Tax__5165187F]  DEFAULT ((0)) FOR [T_Taxrate]
GO
/****** Object:  Default [DF__tblKartris__C_Cus__40058253]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisUsers] ADD  CONSTRAINT [DF__tblKartris__C_Cus__40058253]  DEFAULT ((0)) FOR [U_CustomerDiscount]
GO
/****** Object:  Default [DF__tblKartris__C_Aff__42E1EEFE]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisUsers] ADD  CONSTRAINT [DF__tblKartris__C_Aff__42E1EEFE]  DEFAULT ((0)) FOR [U_AffiliateID]
GO
/****** Object:  Default [DF_tblKartrisUsers_U_Approved]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisUsers] ADD  CONSTRAINT [DF_tblKartrisUsers_U_Approved]  DEFAULT ((0)) FOR [U_Approved]
GO
/****** Object:  Default [DF__tblKartris__C_Cus__43D61337]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisUsers] ADD  CONSTRAINT [DF__tblKartris__C_Cus__43D61337]  DEFAULT ((0)) FOR [U_CustomerGroupiD]
GO
/****** Object:  Default [DF__tblKartris__C_IsA__44CA3770]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisUsers] ADD  CONSTRAINT [DF__tblKartris__C_IsA__44CA3770]  DEFAULT ((0)) FOR [U_IsAffiliate]
GO
/****** Object:  Default [DF__tblKartris__C_Aff__45BE5BA9]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisUsers] ADD  CONSTRAINT [DF__tblKartris__C_Aff__45BE5BA9]  DEFAULT ((0)) FOR [U_AffiliateCommission]
GO
/****** Object:  Default [DF__tblKartris__C_Lan__46B27FE2]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisUsers] ADD  CONSTRAINT [DF__tblKartris__C_Lan__46B27FE2]  DEFAULT ((0)) FOR [U_LanguageID]
GO
/****** Object:  Default [DF__tblKartris__C_ML___47A6A41B]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisUsers] ADD  CONSTRAINT [DF__tblKartris__C_ML___47A6A41B]  DEFAULT ('1/1/1900') FOR [U_ML_SignupDateTime]
GO
/****** Object:  Default [DF__tblKartris__C_ML___489AC854]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisUsers] ADD  CONSTRAINT [DF__tblKartris__C_ML___489AC854]  DEFAULT ('1/1/1900') FOR [U_ML_ConfirmationDateTime]
GO
/****** Object:  Default [DF__tblKartris__C_ML___498EEC8D]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisUsers] ADD  CONSTRAINT [DF__tblKartris__C_ML___498EEC8D]  DEFAULT ('n') FOR [U_ML_Format]
GO
/****** Object:  Default [DF__tblKartris__C_ML___4A8310C6]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisUsers] ADD  CONSTRAINT [DF__tblKartris__C_ML___4A8310C6]  DEFAULT ((0)) FOR [U_ML_SendMail]
GO
/****** Object:  Default [DF__tblKartris__V_OPT__440B1D61]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisVersionOptionLink] ADD  CONSTRAINT [DF__tblKartris__V_OPT__440B1D61]  DEFAULT ((0)) FOR [V_OPT_VersionID]
GO
/****** Object:  Default [DF__tblKartris__V_OPT__44FF419A]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisVersionOptionLink] ADD  CONSTRAINT [DF__tblKartris__V_OPT__44FF419A]  DEFAULT ((0)) FOR [V_OPT_OptionID]
GO
/****** Object:  Default [DF__tblKartris__WL_Cu__06CD04F7]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisWishLists] ADD  CONSTRAINT [DF__tblKartris__WL_Cu__06CD04F7]  DEFAULT ((0)) FOR [WL_UserID]
GO
/****** Object:  Check [CK_Attributes_Compare]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisAttributes]  WITH CHECK ADD  CONSTRAINT [CK_Attributes_Compare] CHECK  (([ATTRIB_Compare]='e' OR [ATTRIB_Compare]='o' OR [ATTRIB_Compare]='n' OR [ATTRIB_Compare]='a'))
GO
ALTER TABLE [dbo].[tblKartrisAttributes] CHECK CONSTRAINT [CK_Attributes_Compare]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ATTRIB_Compare valid values are ''e'', ''o'', ''n'', & ''a''' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisAttributes', @level2type=N'CONSTRAINT',@level2name=N'CK_Attributes_Compare'
GO
/****** Object:  Check [CK_Attributes_Type]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisAttributes]  WITH CHECK ADD  CONSTRAINT [CK_Attributes_Type] CHECK  (([ATTRIB_Type]='t' OR [ATTRIB_Type]='c' OR [ATTRIB_Type]='d'))
GO
ALTER TABLE [dbo].[tblKartrisAttributes] CHECK CONSTRAINT [CK_Attributes_Type]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ATTRIB_Type valid values are ''t'', ''c'', & ''d''' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisAttributes', @level2type=N'CONSTRAINT',@level2name=N'CK_Attributes_Type'
GO
/****** Object:  Check [CK_BasketValues_Date]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisBasketValues]  WITH CHECK ADD  CONSTRAINT [CK_BasketValues_Date] CHECK  (([BV_LastUpdated]>=[BV_DateTimeAdded]))
GO
ALTER TABLE [dbo].[tblKartrisBasketValues] CHECK CONSTRAINT [CK_BasketValues_Date]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'BV_LastUpdated should be recent than BV_DateTimeAdded' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisBasketValues', @level2type=N'CONSTRAINT',@level2name=N'CK_BasketValues_Date'
GO
/****** Object:  Check [CK_BasketValues_ParentType]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisBasketValues]  WITH CHECK ADD  CONSTRAINT [CK_BasketValues_ParentType] CHECK  (([BV_ParentType]='s' OR [BV_ParentType]='w' OR [BV_ParentType]='b' OR [BV_ParentType]='r'))
GO
ALTER TABLE [dbo].[tblKartrisBasketValues] CHECK CONSTRAINT [CK_BasketValues_ParentType]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'BV_ParentType valid values are ''s'', ''b'', & ''w''' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisBasketValues', @level2type=N'CONSTRAINT',@level2name=N'CK_BasketValues_ParentType'
GO
/****** Object:  Check [CK_Categories_OrderProductsByValidation]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisCategories]  WITH CHECK ADD  CONSTRAINT [CK_Categories_OrderProductsByValidation] CHECK  (([CAT_OrderProductsBy]='P_ID' OR [CAT_OrderProductsBy]='P_Name' OR [CAT_OrderProductsBy]='P_DateCreated' OR [CAT_OrderProductsBy]='P_LastModified' OR [CAT_OrderProductsBy]='PCAT_OrderNo' OR [CAT_OrderProductsBy]='d'))
GO
ALTER TABLE [dbo].[tblKartrisCategories] CHECK CONSTRAINT [CK_Categories_OrderProductsByValidation]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'CAT_OrderProductsBy Column' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisCategories', @level2type=N'CONSTRAINT',@level2name=N'CK_Categories_OrderProductsByValidation'
GO
/****** Object:  Check [CK_Categories_OrderSubCategoriesBy]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisCategories]  WITH CHECK ADD  CONSTRAINT [CK_Categories_OrderSubCategoriesBy] CHECK  (([CAT_OrderCategoriesBy]='CAT_ID' OR [CAT_OrderCategoriesBy]='CAT_Name' OR [CAT_OrderCategoriesBy]='CH_OrderNo' OR [CAT_OrderCategoriesBy]='d'))
GO
ALTER TABLE [dbo].[tblKartrisCategories] CHECK CONSTRAINT [CK_Categories_OrderSubCategoriesBy]
GO
/****** Object:  Check [CK_Categories_ProductDisplayTypeValidation]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisCategories]  WITH CHECK ADD  CONSTRAINT [CK_Categories_ProductDisplayTypeValidation] CHECK  (([CAT_ProductDisplayType]='d' OR [CAT_ProductDisplayType]='n' OR [CAT_ProductDisplayType]='s' OR [CAT_ProductDisplayType]='e' OR [CAT_ProductDisplayType]='t'))
GO
ALTER TABLE [dbo].[tblKartrisCategories] CHECK CONSTRAINT [CK_Categories_ProductDisplayTypeValidation]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'CAT_ProductDisplayType Column' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisCategories', @level2type=N'CONSTRAINT',@level2name=N'CK_Categories_ProductDisplayTypeValidation'
GO
/****** Object:  Check [CK_Categories_ProductsSortDirectionValidation]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisCategories]  WITH CHECK ADD  CONSTRAINT [CK_Categories_ProductsSortDirectionValidation] CHECK  (([CAT_ProductsSortDirection]='a' OR [CAT_ProductsSortDirection]='d'))
GO
ALTER TABLE [dbo].[tblKartrisCategories] CHECK CONSTRAINT [CK_Categories_ProductsSortDirectionValidation]
GO
/****** Object:  Check [CK_Categories_SubCatDisplayTypeValidation]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisCategories]  WITH CHECK ADD  CONSTRAINT [CK_Categories_SubCatDisplayTypeValidation] CHECK  (([CAT_SubCatDisplayType]='d' OR [CAT_SubCatDisplayType]='n' OR [CAT_SubCatDisplayType]='s' OR [CAT_SubCatDisplayType]='l' OR [CAT_SubCatDisplayType]='t'))
GO
ALTER TABLE [dbo].[tblKartrisCategories] CHECK CONSTRAINT [CK_Categories_SubCatDisplayTypeValidation]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'CAT_SubCatDisplayType Column validation' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisCategories', @level2type=N'CONSTRAINT',@level2name=N'CK_Categories_SubCatDisplayTypeValidation'
GO
/****** Object:  Check [CK_Categories_SubCategoriesSortDirection]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisCategories]  WITH CHECK ADD  CONSTRAINT [CK_Categories_SubCategoriesSortDirection] CHECK  (([CAT_CategoriesSortDirection]='a' OR [CAT_CategoriesSortDirection]='d'))
GO
ALTER TABLE [dbo].[tblKartrisCategories] CHECK CONSTRAINT [CK_Categories_SubCategoriesSortDirection]
GO
/****** Object:  Check [CK_Config_DataTypeValidation]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisConfig]  WITH CHECK ADD  CONSTRAINT [CK_Config_DataTypeValidation] CHECK  (([CFG_DataType]='d' OR [CFG_DataType]='n' OR [CFG_DataType]='s' OR [CFG_DataType]='t'))
GO
ALTER TABLE [dbo].[tblKartrisConfig] CHECK CONSTRAINT [CK_Config_DataTypeValidation]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'CFG_DataType column validation' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig', @level2type=N'CONSTRAINT',@level2name=N'CK_Config_DataTypeValidation'
GO
/****** Object:  Check [CK_Config_DisplayTypeValidation]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisConfig]  WITH CHECK ADD  CONSTRAINT [CK_Config_DisplayTypeValidation] CHECK  (([CFG_DisplayType]='s' OR [CFG_DisplayType]='t' OR [CFG_DisplayType]='n' OR [CFG_DisplayType]='b' OR [CFG_DisplayType]='l'))
GO
ALTER TABLE [dbo].[tblKartrisConfig] CHECK CONSTRAINT [CK_Config_DisplayTypeValidation]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'CFG_DisplayType column validation' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig', @level2type=N'CONSTRAINT',@level2name=N'CK_Config_DisplayTypeValidation'
GO
/****** Object:  Check [CK_Config_VersionAddedValidation]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisConfig]  WITH CHECK ADD  CONSTRAINT [CK_Config_VersionAddedValidation] CHECK  (([CFG_VersionAdded]>=(1)))
GO
ALTER TABLE [dbo].[tblKartrisConfig] CHECK CONSTRAINT [CK_Config_VersionAddedValidation]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'CFG_VersionAdded column Positive Value' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisConfig', @level2type=N'CONSTRAINT',@level2name=N'CK_Config_VersionAddedValidation'
GO
/****** Object:  Check [CK_Currencies_DecimalPointValidation]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisCurrencies]  WITH CHECK ADD  CONSTRAINT [CK_Currencies_DecimalPointValidation] CHECK  (([CUR_DecimalPoint]='.' OR [CUR_DecimalPoint]=','))
GO
ALTER TABLE [dbo].[tblKartrisCurrencies] CHECK CONSTRAINT [CK_Currencies_DecimalPointValidation]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'CUR_DecimalPoint column valid values are ''.'' & '',''' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisCurrencies', @level2type=N'CONSTRAINT',@level2name=N'CK_Currencies_DecimalPointValidation'
GO
/****** Object:  Check [CK_Currencies_ExchangeRateValidation]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisCurrencies]  WITH CHECK ADD  CONSTRAINT [CK_Currencies_ExchangeRateValidation] CHECK  (([CUR_ExchangeRate]>(0) OR ([CUR_ExchangeRate]=(0) AND [CUR_Live]=(0))))
GO
ALTER TABLE [dbo].[tblKartrisCurrencies] CHECK CONSTRAINT [CK_Currencies_ExchangeRateValidation]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'CUR_ExchangeRate should be a positive number for live currencies' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisCurrencies', @level2type=N'CONSTRAINT',@level2name=N'CK_Currencies_ExchangeRateValidation'
GO
/****** Object:  Check [CK_Currencies_RoundNumbers]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisCurrencies]  WITH CHECK ADD  CONSTRAINT [CK_Currencies_RoundNumbers] CHECK  (([CUR_RoundNumbers]>=(0) AND [CUR_RoundNumbers]<=(8)))
GO
ALTER TABLE [dbo].[tblKartrisCurrencies] CHECK CONSTRAINT [CK_Currencies_RoundNumbers]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'CUR_RoundNumbers column validation range between 0 & 8' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisCurrencies', @level2type=N'CONSTRAINT',@level2name=N'CK_Currencies_RoundNumbers'
GO
/****** Object:  Check [CK_Destination_Tax]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisDestination]  WITH CHECK ADD  CONSTRAINT [CK_Destination_Tax] CHECK  (([D_Tax]>=(0)))
GO
ALTER TABLE [dbo].[tblKartrisDestination] CHECK CONSTRAINT [CK_Destination_Tax]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'D_Tax should be positive' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisDestination', @level2type=N'CONSTRAINT',@level2name=N'CK_Destination_Tax'
GO
/****** Object:  Check [CK_Languages_EmailFromValidation]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisLanguages]  WITH CHECK ADD  CONSTRAINT [CK_Languages_EmailFromValidation] CHECK  (([LANG_EmailFrom] like '%@%.%'))
GO
ALTER TABLE [dbo].[tblKartrisLanguages] CHECK CONSTRAINT [CK_Languages_EmailFromValidation]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'LANG_EmailFrom column email validation' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisLanguages', @level2type=N'CONSTRAINT',@level2name=N'CK_Languages_EmailFromValidation'
GO
/****** Object:  Check [CK_Languages_EmailToContactValidation]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisLanguages]  WITH CHECK ADD  CONSTRAINT [CK_Languages_EmailToContactValidation] CHECK  (([LANG_EmailToContact] like '%@%.%'))
GO
ALTER TABLE [dbo].[tblKartrisLanguages] CHECK CONSTRAINT [CK_Languages_EmailToContactValidation]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'LANG_EmailToContact column email validation' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisLanguages', @level2type=N'CONSTRAINT',@level2name=N'CK_Languages_EmailToContactValidation'
GO
/****** Object:  Check [CK_Languages_EmailToValidation]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisLanguages]  WITH CHECK ADD  CONSTRAINT [CK_Languages_EmailToValidation] CHECK  (([LANG_EmailTo] like '%@%.%'))
GO
ALTER TABLE [dbo].[tblKartrisLanguages] CHECK CONSTRAINT [CK_Languages_EmailToValidation]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'LANG_EmailTo column email validation' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisLanguages', @level2type=N'CONSTRAINT',@level2name=N'CK_Languages_EmailToValidation'
GO
/****** Object:  Check [CK_tblKartrisLanguages]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisLanguages]  WITH CHECK ADD  CONSTRAINT [CK_tblKartrisLanguages] CHECK  ((charindex('-',[LANG_Culture])=(3)))
GO
ALTER TABLE [dbo].[tblKartrisLanguages] CHECK CONSTRAINT [CK_tblKartrisLanguages]
GO
/****** Object:  Check [CK_LanguageStrings_FrontBackValidation]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisLanguageStrings]  WITH CHECK ADD  CONSTRAINT [CK_LanguageStrings_FrontBackValidation] CHECK  (([LS_FrontBack]='b' OR [LS_FrontBack]='f'))
GO
ALTER TABLE [dbo].[tblKartrisLanguageStrings] CHECK CONSTRAINT [CK_LanguageStrings_FrontBackValidation]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'LS_FrontBack column valid values are ''f''=>fronend & ''b''=>backend' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisLanguageStrings', @level2type=N'CONSTRAINT',@level2name=N'CK_LanguageStrings_FrontBackValidation'
GO
/****** Object:  Check [CK_LanguageStrings_VersionAddedValidation]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisLanguageStrings]  WITH CHECK ADD  CONSTRAINT [CK_LanguageStrings_VersionAddedValidation] CHECK  (([LS_VersionAdded]>=(1)))
GO
ALTER TABLE [dbo].[tblKartrisLanguageStrings] CHECK CONSTRAINT [CK_LanguageStrings_VersionAddedValidation]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'LS_VersionAdded column valid range is >=1' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisLanguageStrings', @level2type=N'CONSTRAINT',@level2name=N'CK_LanguageStrings_VersionAddedValidation'
GO
/****** Object:  Check [CK_OptionGroupsValidation]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOptionGroups]  WITH CHECK ADD  CONSTRAINT [CK_OptionGroupsValidation] CHECK  (([OPTG_OptionDisplayType]='d' OR [OPTG_OptionDisplayType]='l'))
GO
ALTER TABLE [dbo].[tblKartrisOptionGroups] CHECK CONSTRAINT [CK_OptionGroupsValidation]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'OPTG_OptionDisplayType Valid values ''d'', ''r'' & ''c''' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisOptionGroups', @level2type=N'CONSTRAINT',@level2name=N'CK_OptionGroupsValidation'
GO
/****** Object:  Check [CK_ProductOptionLink_WeightChangeValidation]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProductOptionLink]  WITH CHECK ADD  CONSTRAINT [CK_ProductOptionLink_WeightChangeValidation] CHECK  (([P_OPT_WeightChange]>=(0)))
GO
ALTER TABLE [dbo].[tblKartrisProductOptionLink] CHECK CONSTRAINT [CK_ProductOptionLink_WeightChangeValidation]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'P_OPT_WeightChange should be positive value' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisProductOptionLink', @level2type=N'CONSTRAINT',@level2name=N'CK_ProductOptionLink_WeightChangeValidation'
GO
/****** Object:  Check [CK_Products_AverageRating]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProducts]  WITH CHECK ADD  CONSTRAINT [CK_Products_AverageRating] CHECK  (([P_AverageRating]>(0)))
GO
ALTER TABLE [dbo].[tblKartrisProducts] CHECK CONSTRAINT [CK_Products_AverageRating]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'P_AverageRating should be greater than zero' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisProducts', @level2type=N'CONSTRAINT',@level2name=N'CK_Products_AverageRating'
GO
/****** Object:  Check [CK_Products_Date]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProducts]  WITH CHECK ADD  CONSTRAINT [CK_Products_Date] CHECK  (([P_LastModified]>=[P_DateCreated]))
GO
ALTER TABLE [dbo].[tblKartrisProducts] CHECK CONSTRAINT [CK_Products_Date]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'P_LastModified should be recent than P_DateCreated' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisProducts', @level2type=N'CONSTRAINT',@level2name=N'CK_Products_Date'
GO
/****** Object:  Check [CK_Products_Reviews]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProducts]  WITH CHECK ADD  CONSTRAINT [CK_Products_Reviews] CHECK  (([P_Reviews]='y' OR [P_Reviews]='n' OR [P_Reviews]='v'))
GO
ALTER TABLE [dbo].[tblKartrisProducts] CHECK CONSTRAINT [CK_Products_Reviews]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'P_Reviews valid values are y, n, & v' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisProducts', @level2type=N'CONSTRAINT',@level2name=N'CK_Products_Reviews'
GO
/****** Object:  Check [CK_Products_Type]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProducts]  WITH CHECK ADD  CONSTRAINT [CK_Products_Type] CHECK  (([P_Type]='s' OR [P_Type]='m' OR [P_Type]='o'))
GO
ALTER TABLE [dbo].[tblKartrisProducts] CHECK CONSTRAINT [CK_Products_Type]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'P_Type valid values s, m, & o' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisProducts', @level2type=N'CONSTRAINT',@level2name=N'CK_Products_Type'
GO
/****** Object:  Check [CK_Products_VersionDisplayType]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProducts]  WITH CHECK ADD  CONSTRAINT [CK_Products_VersionDisplayType] CHECK  (([P_VersionDisplayType]='d' OR [P_VersionDisplayType]='r' OR [P_VersionDisplayType]='o' OR [P_VersionDisplayType]='p' OR [P_VersionDisplayType]='l' OR [P_VersionDisplayType]='n'))
GO
ALTER TABLE [dbo].[tblKartrisProducts] CHECK CONSTRAINT [CK_Products_VersionDisplayType]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'P_VersionDisplayType valid values d, n, r, l, o, & p' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisProducts', @level2type=N'CONSTRAINT',@level2name=N'CK_Products_VersionDisplayType'
GO
/****** Object:  Check [CK_PromotionParts_ItemType]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisPromotionParts]  WITH CHECK ADD  CONSTRAINT [CK_PromotionParts_ItemType] CHECK  (([PP_ItemType]='v' OR [PP_ItemType]='p' OR [PP_ItemType]='c' OR [PP_ItemType]='a'))
GO
ALTER TABLE [dbo].[tblKartrisPromotionParts] CHECK CONSTRAINT [CK_PromotionParts_ItemType]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'PP_ItemType valid values are ''v'', ''p'', & ''c''' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisPromotionParts', @level2type=N'CONSTRAINT',@level2name=N'CK_PromotionParts_ItemType'
GO
/****** Object:  Check [CK_PromotionParts_PartNo]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisPromotionParts]  WITH CHECK ADD  CONSTRAINT [CK_PromotionParts_PartNo] CHECK  (([PP_PartNo]='a' OR [PP_PartNo]='b'))
GO
ALTER TABLE [dbo].[tblKartrisPromotionParts] CHECK CONSTRAINT [CK_PromotionParts_PartNo]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'PP_PartNo valid values are ''a'', & ''b''' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisPromotionParts', @level2type=N'CONSTRAINT',@level2name=N'CK_PromotionParts_PartNo'
GO
/****** Object:  Check [CK_PromotionParts_PromotionType]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisPromotionParts]  WITH CHECK ADD  CONSTRAINT [CK_PromotionParts_PromotionType] CHECK  (([PP_Type]='v' OR [PP_Type]='p' OR [PP_Type]='q'))
GO
ALTER TABLE [dbo].[tblKartrisPromotionParts] CHECK CONSTRAINT [CK_PromotionParts_PromotionType]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'valid values are ''v''=>value, ''p''=>percentage & ''q''=>quantity' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisPromotionParts', @level2type=N'CONSTRAINT',@level2name=N'CK_PromotionParts_PromotionType'
GO
/****** Object:  Check [CK_PromotionParts_PromotionValue]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisPromotionParts]  WITH CHECK ADD  CONSTRAINT [CK_PromotionParts_PromotionValue] CHECK  (([PP_Value]>(0)))
GO
ALTER TABLE [dbo].[tblKartrisPromotionParts] CHECK CONSTRAINT [CK_PromotionParts_PromotionValue]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'the value should be greater than zero' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisPromotionParts', @level2type=N'CONSTRAINT',@level2name=N'CK_PromotionParts_PromotionValue'
GO
/****** Object:  Check [CK_Promotions_Date]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisPromotions]  WITH CHECK ADD  CONSTRAINT [CK_Promotions_Date] CHECK  (([PROM_EndDate]>=[PROM_StartDate]))
GO
ALTER TABLE [dbo].[tblKartrisPromotions] CHECK CONSTRAINT [CK_Promotions_Date]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'PROM_EndDate should be recent than the PROM_StartDate' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisPromotions', @level2type=N'CONSTRAINT',@level2name=N'CK_Promotions_Date'
GO
/****** Object:  Check [CK_Reviews_Date]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisReviews]  WITH CHECK ADD  CONSTRAINT [CK_Reviews_Date] CHECK  (([REV_DateLastUpdated]>=[REV_DateCreated]))
GO
ALTER TABLE [dbo].[tblKartrisReviews] CHECK CONSTRAINT [CK_Reviews_Date]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'REV_DateLastUpdated should be recent than REV_DateCreated' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisReviews', @level2type=N'CONSTRAINT',@level2name=N'CK_Reviews_Date'
GO
/****** Object:  Check [CK_Reviews_Rating]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisReviews]  WITH CHECK ADD  CONSTRAINT [CK_Reviews_Rating] CHECK  (([REV_Rating]>=(0) AND [REV_Rating]<=(5)))
GO
ALTER TABLE [dbo].[tblKartrisReviews] CHECK CONSTRAINT [CK_Reviews_Rating]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'REV_Rating should be between 0 and 5' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisReviews', @level2type=N'CONSTRAINT',@level2name=N'CK_Reviews_Rating'
GO
/****** Object:  Check [CK_tblKartrisReviews]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisReviews]  WITH CHECK ADD  CONSTRAINT [CK_tblKartrisReviews] CHECK  (([REV_Live]='a' OR [REV_Live]='y' OR [REV_Live]='n'))
GO
ALTER TABLE [dbo].[tblKartrisReviews] CHECK CONSTRAINT [CK_tblKartrisReviews]
GO
/****** Object:  Check [CK_SavedBaskets_Date]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisSavedBaskets]  WITH CHECK ADD  CONSTRAINT [CK_SavedBaskets_Date] CHECK  (([SBSKT_LastUpdated]>=[SBSKT_DateTimeAdded]))
GO
ALTER TABLE [dbo].[tblKartrisSavedBaskets] CHECK CONSTRAINT [CK_SavedBaskets_Date]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'SBSKT_LastUpdated should be more recent than SBSKT_DateTimeAdded' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisSavedBaskets', @level2type=N'CONSTRAINT',@level2name=N'CK_SavedBaskets_Date'
GO
/****** Object:  Check [CK_Sessions_Expiry]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisSessions]  WITH CHECK ADD  CONSTRAINT [CK_Sessions_Expiry] CHECK  (([SESS_Expiry]>=(0)))
GO
ALTER TABLE [dbo].[tblKartrisSessions] CHECK CONSTRAINT [CK_Sessions_Expiry]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'SESS_Expiry should be positive value' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisSessions', @level2type=N'CONSTRAINT',@level2name=N'CK_Sessions_Expiry'
GO
/****** Object:  Check [CK_SessionValues_Expiry]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisSessionValues]  WITH CHECK ADD  CONSTRAINT [CK_SessionValues_Expiry] CHECK  (([SESSV_Expiry]>=(0)))
GO
ALTER TABLE [dbo].[tblKartrisSessionValues] CHECK CONSTRAINT [CK_SessionValues_Expiry]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'SESSV_Expiry should be positive value' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisSessionValues', @level2type=N'CONSTRAINT',@level2name=N'CK_SessionValues_Expiry'
GO
/****** Object:  Check [CK_TaxRates_TaxRate]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisTaxRates]  WITH CHECK ADD  CONSTRAINT [CK_TaxRates_TaxRate] CHECK  (([T_Taxrate]>=(0)))
GO
ALTER TABLE [dbo].[tblKartrisTaxRates] CHECK CONSTRAINT [CK_TaxRates_TaxRate]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'T_Taxrate should be larger than zero' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisTaxRates', @level2type=N'CONSTRAINT',@level2name=N'CK_TaxRates_TaxRate'
GO
/****** Object:  Check [CK_Versions_RRP]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisVersions]  WITH CHECK ADD  CONSTRAINT [CK_Versions_RRP] CHECK  (([V_RRP]>=(0)))
GO
ALTER TABLE [dbo].[tblKartrisVersions] CHECK CONSTRAINT [CK_Versions_RRP]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'V_RRP should be positive value' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisVersions', @level2type=N'CONSTRAINT',@level2name=N'CK_Versions_RRP'
GO
/****** Object:  Check [CK_Versions_Tax]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisVersions]  WITH CHECK ADD  CONSTRAINT [CK_Versions_Tax] CHECK  (([V_Tax]>(0)))
GO
ALTER TABLE [dbo].[tblKartrisVersions] CHECK CONSTRAINT [CK_Versions_Tax]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'V_Tax should be larger than zero' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisVersions', @level2type=N'CONSTRAINT',@level2name=N'CK_Versions_Tax'
GO
/****** Object:  Check [CK_Versions_Type]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisVersions]  WITH CHECK ADD  CONSTRAINT [CK_Versions_Type] CHECK  (([V_Type]='v' OR [V_Type]='o' OR [V_Type]='b' OR [V_Type]='c' OR [V_Type]='s'))
GO
ALTER TABLE [dbo].[tblKartrisVersions] CHECK CONSTRAINT [CK_Versions_Type]
GO
/****** Object:  Check [CK_Versions_Weight]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisVersions]  WITH CHECK ADD  CONSTRAINT [CK_Versions_Weight] CHECK  (([V_Weight]>=(0)))
GO
ALTER TABLE [dbo].[tblKartrisVersions] CHECK CONSTRAINT [CK_Versions_Weight]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'V_Weight should be larger than zero' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tblKartrisVersions', @level2type=N'CONSTRAINT',@level2name=N'CK_Versions_Weight'
GO
/****** Object:  ForeignKey [FK_tblKartrisAttributeValues_tblKartrisAttributes]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisAttributeValues]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisAttributeValues_tblKartrisAttributes] FOREIGN KEY([ATTRIBV_AttributeID])
REFERENCES [dbo].[tblKartrisAttributes] ([ATTRIB_ID])
GO
ALTER TABLE [dbo].[tblKartrisAttributeValues] CHECK CONSTRAINT [FK_tblKartrisAttributeValues_tblKartrisAttributes]
GO
/****** Object:  ForeignKey [FK_tblKartrisAttributeValues_tblKartrisProducts]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisAttributeValues]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisAttributeValues_tblKartrisProducts] FOREIGN KEY([ATTRIBV_ProductID])
REFERENCES [dbo].[tblKartrisProducts] ([P_ID])
GO
ALTER TABLE [dbo].[tblKartrisAttributeValues] CHECK CONSTRAINT [FK_tblKartrisAttributeValues_tblKartrisProducts]
GO
/****** Object:  ForeignKey [FK_tblKartrisBasketOptionValues_tblKartrisBasketValues]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisBasketOptionValues]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisBasketOptionValues_tblKartrisBasketValues] FOREIGN KEY([BSKTOPT_BasketValueID])
REFERENCES [dbo].[tblKartrisBasketValues] ([BV_ID])
GO
ALTER TABLE [dbo].[tblKartrisBasketOptionValues] CHECK CONSTRAINT [FK_tblKartrisBasketOptionValues_tblKartrisBasketValues]
GO
/****** Object:  ForeignKey [FK_tblKartrisBasketOptionValues_tblKartrisOptions]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisBasketOptionValues]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisBasketOptionValues_tblKartrisOptions] FOREIGN KEY([BSKTOPT_OptionID])
REFERENCES [dbo].[tblKartrisOptions] ([OPT_ID])
GO
ALTER TABLE [dbo].[tblKartrisBasketOptionValues] CHECK CONSTRAINT [FK_tblKartrisBasketOptionValues_tblKartrisOptions]
GO
/****** Object:  ForeignKey [FK_tblKartrisCategories_tblKartrisCustomerGroups]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisCategories]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisCategories_tblKartrisCustomerGroups] FOREIGN KEY([CAT_CustomerGroupID])
REFERENCES [dbo].[tblKartrisCustomerGroups] ([CG_ID])
GO
ALTER TABLE [dbo].[tblKartrisCategories] CHECK CONSTRAINT [FK_tblKartrisCategories_tblKartrisCustomerGroups]
GO
/****** Object:  ForeignKey [FK_tblKartrisCategoryHierarchy_tblKartrisCategories]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisCategoryHierarchy]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisCategoryHierarchy_tblKartrisCategories] FOREIGN KEY([CH_ParentID])
REFERENCES [dbo].[tblKartrisCategories] ([CAT_ID])
GO
ALTER TABLE [dbo].[tblKartrisCategoryHierarchy] CHECK CONSTRAINT [FK_tblKartrisCategoryHierarchy_tblKartrisCategories]
GO
/****** Object:  ForeignKey [FK_tblKartrisCategoryHierarchy_tblKartrisCategories1]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisCategoryHierarchy]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisCategoryHierarchy_tblKartrisCategories1] FOREIGN KEY([CH_ChildID])
REFERENCES [dbo].[tblKartrisCategories] ([CAT_ID])
GO
ALTER TABLE [dbo].[tblKartrisCategoryHierarchy] CHECK CONSTRAINT [FK_tblKartrisCategoryHierarchy_tblKartrisCategories1]
GO
/****** Object:  ForeignKey [FK_tblKartrisCustomerGroupPrices_tblKartrisCustomerGroups]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisCustomerGroupPrices]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisCustomerGroupPrices_tblKartrisCustomerGroups] FOREIGN KEY([CGP_CustomerGroupID])
REFERENCES [dbo].[tblKartrisCustomerGroups] ([CG_ID])
GO
ALTER TABLE [dbo].[tblKartrisCustomerGroupPrices] CHECK CONSTRAINT [FK_tblKartrisCustomerGroupPrices_tblKartrisCustomerGroups]
GO
/****** Object:  ForeignKey [FK_tblKartrisCustomerGroupPrices_tblKartrisVersions]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisCustomerGroupPrices]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisCustomerGroupPrices_tblKartrisVersions] FOREIGN KEY([CGP_VersionID])
REFERENCES [dbo].[tblKartrisVersions] ([V_ID])
GO
ALTER TABLE [dbo].[tblKartrisCustomerGroupPrices] CHECK CONSTRAINT [FK_tblKartrisCustomerGroupPrices_tblKartrisVersions]
GO
/****** Object:  ForeignKey [FK_tblKartrisDestination_tblKartrisShippingZones]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisDestination]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisDestination_tblKartrisShippingZones] FOREIGN KEY([D_ShippingZoneID])
REFERENCES [dbo].[tblKartrisShippingZones] ([SZ_ID])
GO
ALTER TABLE [dbo].[tblKartrisDestination] CHECK CONSTRAINT [FK_tblKartrisDestination_tblKartrisShippingZones]
GO
/****** Object:  ForeignKey [FK_tblKartrisLanguageElements_tblKartrisLanguageElementFieldNames]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisLanguageElements]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisLanguageElements_tblKartrisLanguageElementFieldNames] FOREIGN KEY([LE_FieldID])
REFERENCES [dbo].[tblKartrisLanguageElementFieldNames] ([LEFN_ID])
GO
ALTER TABLE [dbo].[tblKartrisLanguageElements] CHECK CONSTRAINT [FK_tblKartrisLanguageElements_tblKartrisLanguageElementFieldNames]
GO
/****** Object:  ForeignKey [FK_tblKartrisLanguageElements_tblKartrisLanguageElementTypes]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisLanguageElements]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisLanguageElements_tblKartrisLanguageElementTypes] FOREIGN KEY([LE_TypeID])
REFERENCES [dbo].[tblKartrisLanguageElementTypes] ([LET_ID])
GO
ALTER TABLE [dbo].[tblKartrisLanguageElements] CHECK CONSTRAINT [FK_tblKartrisLanguageElements_tblKartrisLanguageElementTypes]
GO
/****** Object:  ForeignKey [FK_tblKartrisLanguageElements_tblKartrisLanguages]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisLanguageElements]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisLanguageElements_tblKartrisLanguages] FOREIGN KEY([LE_LanguageID])
REFERENCES [dbo].[tblKartrisLanguages] ([LANG_ID])
GO
ALTER TABLE [dbo].[tblKartrisLanguageElements] CHECK CONSTRAINT [FK_tblKartrisLanguageElements_tblKartrisLanguages]
GO
/****** Object:  ForeignKey [FK_tblKartrisOptions_tblKartrisOptionGroups]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOptions]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisOptions_tblKartrisOptionGroups] FOREIGN KEY([OPT_OptionGroupID])
REFERENCES [dbo].[tblKartrisOptionGroups] ([OPTG_ID])
GO
ALTER TABLE [dbo].[tblKartrisOptions] CHECK CONSTRAINT [FK_tblKartrisOptions_tblKartrisOptionGroups]
GO
/****** Object:  ForeignKey [FK_tblKartrisOrdersPromotions_tblKartrisOrders]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOrdersPromotions]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisOrdersPromotions_tblKartrisOrders] FOREIGN KEY([OrderID])
REFERENCES [dbo].[tblKartrisOrders] ([O_ID])
GO
ALTER TABLE [dbo].[tblKartrisOrdersPromotions] CHECK CONSTRAINT [FK_tblKartrisOrdersPromotions_tblKartrisOrders]
GO
/****** Object:  ForeignKey [FK_tblKartrisOrdersPromotions_tblKartrisPromotions]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisOrdersPromotions]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisOrdersPromotions_tblKartrisPromotions] FOREIGN KEY([PromotionID])
REFERENCES [dbo].[tblKartrisPromotions] ([PROM_ID])
GO
ALTER TABLE [dbo].[tblKartrisOrdersPromotions] CHECK CONSTRAINT [FK_tblKartrisOrdersPromotions_tblKartrisPromotions]
GO
/****** Object:  ForeignKey [FK_tblKartrisProductCategoryLink_tblKartrisCategories]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProductCategoryLink]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisProductCategoryLink_tblKartrisCategories] FOREIGN KEY([PCAT_CategoryID])
REFERENCES [dbo].[tblKartrisCategories] ([CAT_ID])
GO
ALTER TABLE [dbo].[tblKartrisProductCategoryLink] CHECK CONSTRAINT [FK_tblKartrisProductCategoryLink_tblKartrisCategories]
GO
/****** Object:  ForeignKey [FK_tblKartrisProductCategoryLink_tblKartrisProducts]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProductCategoryLink]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisProductCategoryLink_tblKartrisProducts] FOREIGN KEY([PCAT_ProductID])
REFERENCES [dbo].[tblKartrisProducts] ([P_ID])
GO
ALTER TABLE [dbo].[tblKartrisProductCategoryLink] CHECK CONSTRAINT [FK_tblKartrisProductCategoryLink_tblKartrisProducts]
GO
/****** Object:  ForeignKey [FK_tblKartrisProductOptionGroupLink_tblKartrisOptionGroups]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProductOptionGroupLink]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisProductOptionGroupLink_tblKartrisOptionGroups] FOREIGN KEY([P_OPTG_OptionGroupID])
REFERENCES [dbo].[tblKartrisOptionGroups] ([OPTG_ID])
GO
ALTER TABLE [dbo].[tblKartrisProductOptionGroupLink] CHECK CONSTRAINT [FK_tblKartrisProductOptionGroupLink_tblKartrisOptionGroups]
GO
/****** Object:  ForeignKey [FK_tblKartrisProductOptionGroupLink_tblKartrisProducts]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProductOptionGroupLink]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisProductOptionGroupLink_tblKartrisProducts] FOREIGN KEY([P_OPTG_ProductID])
REFERENCES [dbo].[tblKartrisProducts] ([P_ID])
GO
ALTER TABLE [dbo].[tblKartrisProductOptionGroupLink] CHECK CONSTRAINT [FK_tblKartrisProductOptionGroupLink_tblKartrisProducts]
GO
/****** Object:  ForeignKey [FK_tblKartrisProductOptionLink_tblKartrisOptions]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProductOptionLink]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisProductOptionLink_tblKartrisOptions] FOREIGN KEY([P_OPT_OptionID])
REFERENCES [dbo].[tblKartrisOptions] ([OPT_ID])
GO
ALTER TABLE [dbo].[tblKartrisProductOptionLink] CHECK CONSTRAINT [FK_tblKartrisProductOptionLink_tblKartrisOptions]
GO
/****** Object:  ForeignKey [FK_tblKartrisProductOptionLink_tblKartrisProducts]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProductOptionLink]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisProductOptionLink_tblKartrisProducts] FOREIGN KEY([P_OPT_ProductID])
REFERENCES [dbo].[tblKartrisProducts] ([P_ID])
GO
ALTER TABLE [dbo].[tblKartrisProductOptionLink] CHECK CONSTRAINT [FK_tblKartrisProductOptionLink_tblKartrisProducts]
GO
/****** Object:  ForeignKey [FK_tblKartrisProducts_tblKartrisCustomerGroups]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProducts]  WITH NOCHECK ADD  CONSTRAINT [FK_tblKartrisProducts_tblKartrisCustomerGroups] FOREIGN KEY([P_CustomerGroupID])
REFERENCES [dbo].[tblKartrisCustomerGroups] ([CG_ID])
NOT FOR REPLICATION
GO
ALTER TABLE [dbo].[tblKartrisProducts] CHECK CONSTRAINT [FK_tblKartrisProducts_tblKartrisCustomerGroups]
GO
/****** Object:  ForeignKey [FK_tblKartrisProducts_tblKartrisSuppliers]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisProducts]  WITH NOCHECK ADD  CONSTRAINT [FK_tblKartrisProducts_tblKartrisSuppliers] FOREIGN KEY([P_SupplierID])
REFERENCES [dbo].[tblKartrisSuppliers] ([SUP_ID])
NOT FOR REPLICATION
GO
ALTER TABLE [dbo].[tblKartrisProducts] CHECK CONSTRAINT [FK_tblKartrisProducts_tblKartrisSuppliers]
GO
/****** Object:  ForeignKey [FK_tblKartrisPromotionParts_tblKartrisPromotions]    Script Date: 01/23/2013 21:59:08 ******/
ALTER TABLE [dbo].[tblKartrisPromotionParts]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisPromotionParts_tblKartrisPromotions] FOREIGN KEY([PROM_ID])
REFERENCES [dbo].[tblKartrisPromotions] ([PROM_ID])
GO
ALTER TABLE [dbo].[tblKartrisPromotionParts] CHECK CONSTRAINT [FK_tblKartrisPromotionParts_tblKartrisPromotions]
GO
/****** Object:  ForeignKey [FK_tblKartrisRelatedProducts_tblKartrisProducts]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisRelatedProducts]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisRelatedProducts_tblKartrisProducts] FOREIGN KEY([RP_ParentID])
REFERENCES [dbo].[tblKartrisProducts] ([P_ID])
GO
ALTER TABLE [dbo].[tblKartrisRelatedProducts] CHECK CONSTRAINT [FK_tblKartrisRelatedProducts_tblKartrisProducts]
GO
/****** Object:  ForeignKey [FK_tblKartrisRelatedProducts_tblKartrisProducts1]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisRelatedProducts]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisRelatedProducts_tblKartrisProducts1] FOREIGN KEY([RP_ChildID])
REFERENCES [dbo].[tblKartrisProducts] ([P_ID])
GO
ALTER TABLE [dbo].[tblKartrisRelatedProducts] CHECK CONSTRAINT [FK_tblKartrisRelatedProducts_tblKartrisProducts1]
GO
/****** Object:  ForeignKey [FK_tblKartrisReviews_tblKartrisLanguages]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisReviews]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisReviews_tblKartrisLanguages] FOREIGN KEY([REV_LanguageID])
REFERENCES [dbo].[tblKartrisLanguages] ([LANG_ID])
GO
ALTER TABLE [dbo].[tblKartrisReviews] CHECK CONSTRAINT [FK_tblKartrisReviews_tblKartrisLanguages]
GO
/****** Object:  ForeignKey [FK_tblKartrisReviews_tblKartrisProducts]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisReviews]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisReviews_tblKartrisProducts] FOREIGN KEY([REV_ProductID])
REFERENCES [dbo].[tblKartrisProducts] ([P_ID])
GO
ALTER TABLE [dbo].[tblKartrisReviews] CHECK CONSTRAINT [FK_tblKartrisReviews_tblKartrisProducts]
GO
/****** Object:  ForeignKey [FK_tblKartrisSessionValues_tblKartrisSessions]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisSessionValues]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisSessionValues_tblKartrisSessions] FOREIGN KEY([SESSV_SessionID])
REFERENCES [dbo].[tblKartrisSessions] ([SESS_ID])
GO
ALTER TABLE [dbo].[tblKartrisSessionValues] CHECK CONSTRAINT [FK_tblKartrisSessionValues_tblKartrisSessions]
GO
/****** Object:  ForeignKey [FK_tblKartrisShippingRates_tblKartrisShippingMethods]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisShippingRates]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisShippingRates_tblKartrisShippingMethods] FOREIGN KEY([S_ShippingMethodID])
REFERENCES [dbo].[tblKartrisShippingMethods] ([SM_ID])
GO
ALTER TABLE [dbo].[tblKartrisShippingRates] CHECK CONSTRAINT [FK_tblKartrisShippingRates_tblKartrisShippingMethods]
GO
/****** Object:  ForeignKey [FK_tblKartrisShippingRates_tblKartrisShippingZones]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisShippingRates]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisShippingRates_tblKartrisShippingZones] FOREIGN KEY([S_ShippingZoneID])
REFERENCES [dbo].[tblKartrisShippingZones] ([SZ_ID])
GO
ALTER TABLE [dbo].[tblKartrisShippingRates] CHECK CONSTRAINT [FK_tblKartrisShippingRates_tblKartrisShippingZones]
GO
/****** Object:  ForeignKey [FK_tblKartrisVersionOptionLink_tblKartrisOptions]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisVersionOptionLink]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisVersionOptionLink_tblKartrisOptions] FOREIGN KEY([V_OPT_OptionID])
REFERENCES [dbo].[tblKartrisOptions] ([OPT_ID])
GO
ALTER TABLE [dbo].[tblKartrisVersionOptionLink] CHECK CONSTRAINT [FK_tblKartrisVersionOptionLink_tblKartrisOptions]
GO
/****** Object:  ForeignKey [FK_tblKartrisVersionOptionLink_tblKartrisVersions]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisVersionOptionLink]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisVersionOptionLink_tblKartrisVersions] FOREIGN KEY([V_OPT_VersionID])
REFERENCES [dbo].[tblKartrisVersions] ([V_ID])
GO
ALTER TABLE [dbo].[tblKartrisVersionOptionLink] CHECK CONSTRAINT [FK_tblKartrisVersionOptionLink_tblKartrisVersions]
GO
/****** Object:  ForeignKey [FK_tblKartrisVersions_tblKartrisProducts]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisVersions]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisVersions_tblKartrisProducts] FOREIGN KEY([V_ProductID])
REFERENCES [dbo].[tblKartrisProducts] ([P_ID])
GO
ALTER TABLE [dbo].[tblKartrisVersions] CHECK CONSTRAINT [FK_tblKartrisVersions_tblKartrisProducts]
GO
/****** Object:  ForeignKey [FK_tblKartrisVersions_tblKartrisTaxRates]    Script Date: 01/23/2013 21:59:09 ******/
ALTER TABLE [dbo].[tblKartrisVersions]  WITH CHECK ADD  CONSTRAINT [FK_tblKartrisVersions_tblKartrisTaxRates] FOREIGN KEY([V_Tax])
REFERENCES [dbo].[tblKartrisTaxRates] ([T_ID])
GO
ALTER TABLE [dbo].[tblKartrisVersions] CHECK CONSTRAINT [FK_tblKartrisVersions_tblKartrisTaxRates]
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisOrders_GetTileAppData]    Script Date: 10/08/2013 09:02:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		Medz
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisOrders_GetTileAppData]
(
	@Sent varchar(5),
	@Invoiced varchar(5),
	@Paid varchar(5),
	@Shipped varchar(5),
	@Cancelled varchar(5),
	@DateRangeStart smalldatetime = NULL,
	@DateRangeEnd smalldatetime = NULL,
	@RangeInMinutes int = NULL
)
AS
BEGIN
	
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DECLARE @O_Sent bit;
	DECLARE @O_Invoiced bit;
	DECLARE @O_Paid bit;
	DECLARE @O_Shipped bit ;
	DECLARE @O_Cancelled bit ;
	
	IF @Sent = 'true'
	BEGIN
		SET @O_Sent = 1;
	END
	ELSE IF @Sent = 'false'
	BEGIN
		SET @O_Sent = 0;
	END
	ELSE
	BEGIN
		SET @O_Sent = NULL;
	END
	
	IF @Invoiced = 'true'
	BEGIN
		SET @O_Invoiced = 1;
	END
	ELSE IF @Invoiced = 'false'
	BEGIN
		SET @O_Invoiced = 0;
	END
	ELSE
	BEGIN
		SET @O_Invoiced = NULL;
	END
	
	IF @Paid = 'true'
	BEGIN
		SET @O_Paid = 1;
	END
	ELSE IF @Paid = 'false'
	BEGIN
		SET @O_Paid = 0;
	END
	ELSE
	BEGIN
		SET @O_Paid = NULL;
	END
	
	IF @Shipped = 'true'
	BEGIN
		SET @O_Shipped = 1;
	END
	ELSE IF @Shipped = 'false'
	BEGIN
		SET @O_Shipped = 0;
	END
	ELSE
	BEGIN
		SET @O_Shipped = NULL;
	END
	
	IF @Cancelled = 'true'
	BEGIN
		SET @O_Cancelled = 1;
	END
	ELSE IF @Cancelled = 'false'
	BEGIN
		SET @O_Cancelled = 0;
	END
	ELSE
	BEGIN
		SET @O_Cancelled = NULL;
	END

	IF @RangeInMinutes > 0
		BEGIN
			SET @DateRangeEnd = GETDATE();
			SET @DateRangeStart = DATEADD(MI,-@RangeInMinutes,@DateRangeEnd);
			
		END
	
	
	BEGIN
		SELECT      ROW_NUMBER() OVER (ORDER BY O_ID DESC) AS Row, tblKartrisOrders.O_ID, tblKartrisOrders.O_Date, tblKartrisOrders.O_TotalPrice, tblKartrisOrders.O_CustomerID, tblKartrisOrders.O_Sent, tblKartrisOrders.O_Invoiced, tblKartrisOrders.O_Shipped, 
					  tblKartrisOrders.O_Paid, tblKartrisOrders.O_Cancelled, tblKartrisOrders.O_CurrencyID, SUBSTRING(tblKartrisOrders.O_BillingAddress, 0, CHARINDEX(CHAR(13) + CHAR(10), 
					  tblKartrisOrders.O_BillingAddress)) AS O_BillingName, REPLACE(tblKartrisOrders.O_BillingAddress,CHAR(13) + CHAR(10),'-*-') as O_BillingAddress, tblKartrisOrders.O_LanguageID, tblKartrisClonedOrders.CO_OrderID, tblKartrisCurrencies.CUR_Symbol, 
					  tblKartrisCurrencies.CUR_ISOCode, tblKartrisOrders.O_PaymentGateway
FROM         tblKartrisOrders LEFT OUTER JOIN
					  tblKartrisCurrencies ON tblKartrisOrders.O_CurrencyID = tblKartrisCurrencies.CUR_ID LEFT OUTER JOIN
					  tblKartrisClonedOrders ON tblKartrisOrders.O_ID = tblKartrisClonedOrders.CO_ParentOrderID
WHERE     (tblKartrisOrders.O_Sent = COALESCE (@O_Sent, tblKartrisOrders.O_Sent)) AND (tblKartrisOrders.O_Invoiced = COALESCE (@O_Invoiced, tblKartrisOrders.O_Invoiced)) AND 
					  (tblKartrisOrders.O_Paid = COALESCE (@O_Paid, tblKartrisOrders.O_Paid)) AND (tblKartrisOrders.O_Shipped = COALESCE (@O_Shipped, tblKartrisOrders.O_Shipped)) AND 
					  (tblKartrisOrders.O_Cancelled = COALESCE (@O_Cancelled, tblKartrisOrders.O_Cancelled)) AND (tblKartrisOrders.O_Date >= COALESCE (@DateRangeStart, tblKartrisOrders.O_Date)) AND 
					  (tblKartrisOrders.O_Date <= COALESCE (@DateRangeEnd, tblKartrisOrders.O_Date))
		
	END
		
END
GO
ALTER TABLE tblKartrisAddresses ADD CONSTRAINT CK_AddressesPreventZeroID CHECK (ADR_ID > 0); 
ALTER TABLE tblKartrisAdminLog ADD CONSTRAINT CK_AdminLogPreventZeroID CHECK (AL_ID > 0); 
ALTER TABLE tblKartrisAffiliateLog ADD CONSTRAINT CK_AffiliateLogPreventZeroID CHECK (AFLG_ID > 0); 
ALTER TABLE tblKartrisAffiliatePayments ADD CONSTRAINT CK_AffiliatePaymentsPreventZeroID CHECK (AFP_ID > 0); 
ALTER TABLE tblKartrisAttributes ADD CONSTRAINT CK_AttributesPreventZeroID CHECK (ATTRIB_ID > 0); 
ALTER TABLE tblKartrisAttributeValues ADD CONSTRAINT CK_AttributeValuesPreventZeroID CHECK (ATTRIBV_ID > 0); 
ALTER TABLE tblKartrisBasketOptionValues ADD CONSTRAINT CK_BasketOptionValuesPreventZeroID CHECK (BSKTOPT_ID > 0); 
ALTER TABLE tblKartrisBasketValues ADD CONSTRAINT CK_BasketValuesPreventZeroID CHECK (BV_ID > 0); 
ALTER TABLE tblKartrisCoupons ADD CONSTRAINT CK_CouponsPreventZeroID CHECK (CP_ID > 0); 
ALTER TABLE tblKartrisCreditCards ADD CONSTRAINT CK_CreditCardsPreventZeroID CHECK (CR_ID > 0); 
ALTER TABLE tblKartrisCurrencies ADD CONSTRAINT CK_CurrenciesPreventZeroID CHECK (CUR_ID > 0); 
ALTER TABLE tblKartrisCustomerGroupPrices ADD CONSTRAINT CK_CustomerGroupPricesPreventZeroID CHECK (CGP_ID > 0); 
ALTER TABLE tblKartrisCustomerGroups ADD CONSTRAINT CK_CustomerGroupsPreventZeroID CHECK (CG_ID > 0); 
ALTER TABLE tblKartrisDestination ADD CONSTRAINT CK_DestinationPreventZeroID CHECK (D_ID > 0); 
ALTER TABLE tblKartrisInvoiceRows ADD CONSTRAINT CK_InvoiceRowsPreventZeroID CHECK (IR_ID > 0); 
ALTER TABLE tblKartrisKnowledgeBase ADD CONSTRAINT CK_KnowledgeBasePreventZeroID CHECK (KB_ID > 0); 
ALTER TABLE tblKartrisLanguageElements ADD CONSTRAINT CK_LanguageElementsPreventZeroID CHECK (LE_ID > 0); 
ALTER TABLE tblKartrisLanguages ADD CONSTRAINT CK_LanguagesPreventZeroID CHECK (LANG_ID > 0); 
ALTER TABLE tblKartrisLanguageStrings ADD CONSTRAINT CK_LanguageStringsPreventZeroID CHECK (LS_ID > 0); 
ALTER TABLE tblKartrisLogins ADD CONSTRAINT CK_LoginsPreventZeroID CHECK (LOGIN_ID > 0); 
ALTER TABLE tblKartrisMediaLinks ADD CONSTRAINT CK_MediaLinksPreventZeroID CHECK (ML_ID > 0); 
ALTER TABLE tblKartrisMediaTypes ADD CONSTRAINT CK_MediaTypesPreventZeroID CHECK (MT_ID > 0); 
ALTER TABLE tblKartrisNews ADD CONSTRAINT CK_NewsPreventZeroID CHECK (N_ID > 0); 
ALTER TABLE tblKartrisObjectConfig ADD CONSTRAINT CK_ObjectConfigPreventZeroID CHECK (OC_ID > 0); 
ALTER TABLE tblKartrisOptionGroups ADD CONSTRAINT CK_OptionGroupsPreventZeroID CHECK (OPTG_ID > 0); 
ALTER TABLE tblKartrisOptions ADD CONSTRAINT CK_OptionsPreventZeroID CHECK (OPT_ID > 0); 
ALTER TABLE tblKartrisOrders ADD CONSTRAINT CK_OrdersPreventZeroID CHECK (O_ID > 0); 
ALTER TABLE tblKartrisPages ADD CONSTRAINT CK_PagesPreventZeroID CHECK (PAGE_ID > 0); 
ALTER TABLE tblKartrisPayments ADD CONSTRAINT CK_PaymentsPreventZeroID CHECK (Payment_ID > 0); 
ALTER TABLE tblKartrisProducts ADD CONSTRAINT CK_ProductsPreventZeroID CHECK (P_ID > 0); 
ALTER TABLE tblKartrisPromotionParts ADD CONSTRAINT CK_PromotionPartsPreventZeroID CHECK (PP_ID > 0); 
ALTER TABLE tblKartrisPromotions ADD CONSTRAINT CK_PromotionsPreventZeroID CHECK (PROM_ID > 0); 
ALTER TABLE tblKartrisReviews ADD CONSTRAINT CK_ReviewsPreventZeroID CHECK (REV_ID > 0); 
ALTER TABLE tblKartrisSavedBaskets ADD CONSTRAINT CK_SavedBasketsPreventZeroID CHECK (SBSKT_ID > 0); 
ALTER TABLE tblKartrisSavedExports ADD CONSTRAINT CK_SavedExportsPreventZeroID CHECK (EXPORT_ID > 0); 
ALTER TABLE tblKartrisSearchHelper ADD CONSTRAINT CK_SearchHelperPreventZeroID CHECK (SH_ID > 0); 
ALTER TABLE tblKartrisSearchStatistics ADD CONSTRAINT CK_SearchStatisticsPreventZeroID CHECK (SS_ID > 0); 
ALTER TABLE tblKartrisSessions ADD CONSTRAINT CK_SessionsPreventZeroID CHECK (SESS_ID > 0); 
ALTER TABLE tblKartrisSessionValues ADD CONSTRAINT CK_SessionValuesPreventZeroID CHECK (SESSV_ID > 0); 
ALTER TABLE tblKartrisShippingMethods ADD CONSTRAINT CK_ShippingMethodsPreventZeroID CHECK (SM_ID > 0); 
ALTER TABLE tblKartrisShippingRates ADD CONSTRAINT CK_ShippingRatesPreventZeroID CHECK (S_ID > 0); 
ALTER TABLE tblKartrisShippingZones ADD CONSTRAINT CK_ShippingZonesPreventZeroID CHECK (SZ_ID > 0); 
ALTER TABLE tblKartrisStatistics ADD CONSTRAINT CK_StatisticsPreventZeroID CHECK (ST_ID > 0); 
ALTER TABLE tblKartrisSuppliers ADD CONSTRAINT CK_SuppliersPreventZeroID CHECK (SUP_ID > 0); 
ALTER TABLE tblKartrisSupportTicketMessages ADD CONSTRAINT CK_SupportTicketMessagesPreventZeroID CHECK (STM_ID > 0); 
ALTER TABLE tblKartrisSupportTickets ADD CONSTRAINT CK_SupportTicketsPreventZeroID CHECK (TIC_ID > 0); 
ALTER TABLE tblKartrisSupportTicketTypes ADD CONSTRAINT CK_SupportTicketTypesPreventZeroID CHECK (STT_ID > 0); 
ALTER TABLE tblKartrisTaxRates ADD CONSTRAINT CK_TaxRatesPreventZeroID CHECK (T_ID > 0); 
ALTER TABLE tblKartrisUsers ADD CONSTRAINT CK_UsersPreventZeroID CHECK (U_ID > 0); 
ALTER TABLE tblKartrisVersions ADD CONSTRAINT CK_VersionsPreventZeroID CHECK (V_ID > 0); 
ALTER TABLE tblKartrisWishLists ADD CONSTRAINT CK_WishListsPreventZeroID CHECK (WL_ID > 0); 
GO

/****** Object:  Table [dbo].[tblKartrisLanguageStrings]    Script Date: 9/9/2013 3:29:00 PM ******/
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NoValidShipping', N'No shipping is available for this order to your selected destination.', '', 2.5007, N'No shipping is available for this order to your selected destination.', NULL, N'Shipping', 1)
GO

-- =============================================
-- Author:		Paul
-- Create date: 2014/1/13
-- Description:	
-- Remarks: Adds indexes for support ticket tables to improve speed and performance
-- =============================================

/****** Object:  Index [STM_Various]    Script Date: 01/13/2014 14:29:02 ******/
CREATE NONCLUSTERED INDEX [STM_Various] ON [dbo].[tblKartrisSupportTicketMessages] 
(
	[STM_TicketID] ASC,
	[STM_LoginID] ASC,
	[STM_DateCreated] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO

/****** Object:  Index [TIC_VariousFields]    Script Date: 01/13/2014 14:31:26 ******/
CREATE NONCLUSTERED INDEX [TIC_VariousFields] ON [dbo].[tblKartrisSupportTickets] 
(
	[TIC_UserID] ASC,
	[TIC_LoginID] ASC,
	[TIC_Status] ASC,
	[TIC_DateOpened] ASC,
	[TIC_DateClosed] ASC,
	[TIC_SupportTicketTypeID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO

/****** Object:  Index [TIC_Subject]    Script Date: 01/13/2014 14:31:40 ******/
CREATE NONCLUSTERED INDEX [TIC_Subject] ON [dbo].[tblKartrisSupportTickets] 
(
	[TIC_Subject] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO

/****** Object:  View [dbo].[vKartrisCategoryProductsVersionsLink]    Script Date: 7/21/2014 11:55:36 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vKartrisCategoryProductsVersionsLink]
AS
SELECT        dbo.tblKartrisProducts.P_ID, dbo.tblKartrisProducts.P_OrderVersionsBy, dbo.tblKartrisProducts.P_VersionsSortDirection, 
						 dbo.tblKartrisProducts.P_VersionDisplayType, dbo.tblKartrisProducts.P_Type, tblKartrisTaxRates_1.T_Taxrate, 
						 dbo.tblKartrisProductCategoryLink.PCAT_CategoryID AS CAT_ID, dbo.tblKartrisProducts.P_Live, dbo.tblKartrisCategories.CAT_Live, 
						 dbo.tblKartrisVersions.V_Live, dbo.tblKartrisVersions.V_ID, dbo.tblKartrisVersions.V_CodeNumber, dbo.tblKartrisVersions.V_Price, 
						 dbo.tblKartrisVersions.V_Tax, dbo.tblKartrisVersions.V_Weight, dbo.tblKartrisVersions.V_DeliveryTime, dbo.tblKartrisVersions.V_Quantity, 
						 dbo.tblKartrisVersions.V_QuantityWarnLevel, dbo.tblKartrisVersions.V_DownLoadInfo, dbo.tblKartrisVersions.V_DownloadType, 
						 dbo.tblKartrisVersions.V_RRP, dbo.tblKartrisVersions.V_OrderByValue, dbo.tblKartrisVersions.V_Type, dbo.tblKartrisVersions.V_CustomerGroupID, 
						 dbo.tblKartrisProducts.P_Featured, dbo.tblKartrisProducts.P_SupplierID, dbo.tblKartrisProducts.P_CustomerGroupID, dbo.tblKartrisProducts.P_Reviews, 
						 dbo.tblKartrisProducts.P_AverageRating, dbo.tblKartrisProducts.P_DateCreated, dbo.tblKartrisVersions.V_CustomizationType, 
						 dbo.tblKartrisVersions.V_CustomizationDesc, dbo.tblKartrisVersions.V_CustomizationCost, dbo.tblKartrisTaxRates.T_Taxrate AS T_TaxRate2, 
						 dbo.tblKartrisCategories.CAT_CustomerGroupID
FROM            dbo.tblKartrisCategories INNER JOIN
						 dbo.tblKartrisProductCategoryLink ON dbo.tblKartrisCategories.CAT_ID = dbo.tblKartrisProductCategoryLink.PCAT_CategoryID INNER JOIN
						 dbo.tblKartrisProducts ON dbo.tblKartrisProductCategoryLink.PCAT_ProductID = dbo.tblKartrisProducts.P_ID LEFT OUTER JOIN
						 dbo.tblKartrisVersions LEFT OUTER JOIN
						 dbo.tblKartrisTaxRates AS tblKartrisTaxRates_1 ON dbo.tblKartrisVersions.V_Tax = tblKartrisTaxRates_1.T_ID LEFT OUTER JOIN
						 dbo.tblKartrisTaxRates ON dbo.tblKartrisVersions.V_Tax2 = dbo.tblKartrisTaxRates.T_ID ON 
						 dbo.tblKartrisProducts.P_ID = dbo.tblKartrisVersions.V_ProductID
WHERE        (dbo.tblKartrisCategories.CAT_Live = 1) AND (dbo.tblKartrisVersions.V_Live = 1) AND (dbo.tblKartrisProducts.P_Live = 1)

GO

EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
	  Begin PaneConfiguration = 0
		 NumPanes = 4
		 Configuration = "(H (1[41] 4[21] 2[21] 3) )"
	  End
	  Begin PaneConfiguration = 1
		 NumPanes = 3
		 Configuration = "(H (1[50] 4[25] 3) )"
	  End
	  Begin PaneConfiguration = 2
		 NumPanes = 3
		 Configuration = "(H (1 [50] 2 [25] 3))"
	  End
	  Begin PaneConfiguration = 3
		 NumPanes = 3
		 Configuration = "(H (4 [30] 2 [40] 3))"
	  End
	  Begin PaneConfiguration = 4
		 NumPanes = 2
		 Configuration = "(H (1 [56] 3))"
	  End
	  Begin PaneConfiguration = 5
		 NumPanes = 2
		 Configuration = "(H (2 [66] 3))"
	  End
	  Begin PaneConfiguration = 6
		 NumPanes = 2
		 Configuration = "(H (4 [50] 3))"
	  End
	  Begin PaneConfiguration = 7
		 NumPanes = 1
		 Configuration = "(V (3))"
	  End
	  Begin PaneConfiguration = 8
		 NumPanes = 3
		 Configuration = "(H (1[56] 4[18] 2) )"
	  End
	  Begin PaneConfiguration = 9
		 NumPanes = 2
		 Configuration = "(H (1[63] 4) )"
	  End
	  Begin PaneConfiguration = 10
		 NumPanes = 2
		 Configuration = "(H (1[66] 2) )"
	  End
	  Begin PaneConfiguration = 11
		 NumPanes = 2
		 Configuration = "(H (4 [60] 2))"
	  End
	  Begin PaneConfiguration = 12
		 NumPanes = 1
		 Configuration = "(H (1) )"
	  End
	  Begin PaneConfiguration = 13
		 NumPanes = 1
		 Configuration = "(V (4))"
	  End
	  Begin PaneConfiguration = 14
		 NumPanes = 1
		 Configuration = "(V (2))"
	  End
	  ActivePaneConfig = 9
   End
   Begin DiagramPane = 
	  Begin Origin = 
		 Top = 0
		 Left = 0
	  End
	  Begin Tables = 
		 Begin Table = "tblKartrisCategories"
			Begin Extent = 
			   Top = 263
			   Left = 70
			   Bottom = 393
			   Right = 258
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisProductCategoryLink"
			Begin Extent = 
			   Top = 0
			   Left = 366
			   Bottom = 113
			   Right = 549
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisProducts"
			Begin Extent = 
			   Top = 17
			   Left = 768
			   Bottom = 147
			   Right = 982
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisVersions"
			Begin Extent = 
			   Top = 140
			   Left = 654
			   Bottom = 305
			   Right = 858
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisTaxRates_1"
			Begin Extent = 
			   Top = 60
			   Left = 430
			   Bottom = 173
			   Right = 600
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
		 Begin Table = "tblKartrisTaxRates"
			Begin Extent = 
			   Top = 46
			   Left = 29
			   Bottom = 159
			   Right = 199
			End
			DisplayFlags = 280
			TopColumn = 0
		 End
	  End
   End
   Begin SQLPane = 
	  PaneHidden = 
   End
   Begin DataPane = 
	  PaneHidden = 
	  Begin ParameterDefaults' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisCategoryProductsVersionsLink'
GO

EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N' = ""
	  End
   End
   Begin CriteriaPane = 
	  Begin ColumnWidths = 11
		 Column = 2955
		 Alias = 900
		 Table = 2610
		 Output = 720
		 Append = 1400
		 NewValue = 1170
		 SortType = 1350
		 SortOrder = 1410
		 GroupBy = 1350
		 Filter = 1350
		 Or = 1350
		 Or = 1350
		 Or = 1350
	  End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisCategoryProductsVersionsLink'
GO

EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vKartrisCategoryProductsVersionsLink'
GO
-- =============================================
-- Some new records for adding orders to the
-- back end.
-- =============================================
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'PageTitle_CreateNewOrder', N'Create A New Order', NULL, 2.6000, N'Create A New Order', NULL, N'_Orders', 1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ErrorText_PasswordsMustMatch', N'Passwords must match!', NULL, 2.6000, N'Passwords must match!', NULL, N'_Orders', 1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_NewOrderConfirmation', N'Are you sure you want to create this order?', NULL, 2.6000, N'Are you sure you want to create this order?', NULL, N'_Orders', 1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_PayForThisOrder', N'Pay For This Order', NULL, 2.6000, N'Pay For This Order', NULL, N'_Orders', 1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OrderCreatedByAdmin', N'Order created in the backend by admin account - ', NULL, 2.6000, N'Order created in the backend by admin account - ', NULL, N'_Orders', 1)

-- =============================================
-- New language strings for optional PowerPack
-- =============================================
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_RefineSelection', N'Refine Selection', NULL, 2.6100, N'', NULL, N'Filters', 1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_PriceRange', N'Price Range', NULL, 2.6100, N'', NULL, N'Filters', 1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Custom', N'Custom', NULL, 2.6100, N'', NULL, N'Filters', 1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_Apply', N'Apply', NULL, 2.6100, N'', NULL, N'Filters', 1)
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_SortBy', N'Sort By', NULL, 2.6100, N'', NULL, N'Filters', 1)

/****** Create table for new print shipping label feature ******/
CREATE TABLE dbo.tblKartrisLabelFormats(
							LBF_ID INT PRIMARY KEY IDENTITY,
							LBF_LabelName VARCHAR(20) NOT NULL UNIQUE,
							LBF_LabelDescription VARCHAR(1024) NOT NULL DEFAULT '',
							LBF_PageWidth FLOAT NOT NULL DEFAULT 210.0 CHECK (LBF_PageWidth > 0),
							LBF_PageHeight FLOAT NOT NULL DEFAULT 297.0 CHECK (LBF_PageHeight > 0),
							LBF_TopMargin FLOAT NOT NULL DEFAULT 0.0 CHECK (LBF_TopMargin >= 0.0),
							LBF_LeftMargin FLOAT NOT NULL DEFAULT 0.0 CHECK (LBF_LeftMargin >= 0.0),
							LBF_LabelWidth FLOAT NOT NULL CHECK (LBF_LabelWidth > 0.0),
							LBF_LabelHeight FLOAT NOT NULL CHECK (LBF_LabelHeight > 0.0),
							LBF_LabelPaddingTop FLOAT NOT NULL DEFAULT 0.0 CHECK (LBF_LabelPaddingTop >= 0.0),
							LBF_LabelPaddingBottom FLOAT NOT NULL DEFAULT 0.0 CHECK (LBF_LabelPaddingBottom >= 0.0),
							LBF_LabelPaddingLeft FLOAT NOT NULL DEFAULT 0.0 CHECK (LBF_LabelPaddingLeft >= 0.0),
							LBF_LabelPaddingRight FLOAT NOT NULL DEFAULT 0.0 CHECK (LBF_LabelPaddingRight >= 0.0),
							LBF_VerticalPitch FLOAT NOT NULL CHECK (LBF_VerticalPitch > 0.0),
							LBF_HorizontalPitch FLOAT NOT NULL CHECK (LBF_HorizontalPitch > 0.0),
							LBF_LabelColumnCount INT NOT NULL CHECK (LBF_LabelColumnCount > 0),
							LBF_LabelRowCount INT NOT NULL CHECK (LBF_LabelRowCount > 0)
							)
GO
-- Below is some sample data that has been proven to work well.
INSERT INTO dbo.tblKartrisLabelFormats(LBF_LabelName, LBF_LabelDescription, LBF_PageWidth,
				LBF_PageHeight, LBF_TopMargin, LBF_LeftMargin, LBF_LabelWidth, LBF_LabelHeight, LBF_LabelPaddingTop,
				LBF_LabelPaddingBottom, LBF_LabelPaddingLeft, LBF_LabelPaddingRight, LBF_VerticalPitch,
				LBF_HorizontalPitch, LBF_LabelColumnCount, LBF_LabelRowCount)
SELECT 'L7163','A4 Sheet of 99.1 x 38.1mm address labels', 210.0, 297.0, 15.1, 4.7, 99.1,
		38.1, 5.0, 0.0, 8.0, 0.0, 38.1, 101.6, 2, 7
UNION ALL
SELECT 'L7169','A4 Sheet of 99.1 x 139mm BlockOut (tm) address labels',210.0,297.0,9.5,4.6,
		99.1, 139.0, 5.0, 0.0, 8.0, 0.0, 139.0, 101.6, 2, 2;
		
/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_UpdateCustomerGroupPriceList]    Script Date: 2014-06-11 10:54:43 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		Paul
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_UpdateCustomerGroupPriceList]
(
	@CG_ID as bigint,
	@CGP_VersionID as bigint,
	@CGP_Price as DECIMAL(18,4)
)								
AS
BEGIN
	
	SET NOCOUNT ON;


	UPDATE dbo.tblKartrisCustomerGroupPrices
	SET CGP_Price = @CGP_Price WHERE CGP_VersionID = @CGP_VersionID AND CGP_CustomerGroupID = @CG_ID;

END
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisProducts_CloneRecords]    Script Date: 08/03/2016 14:10:36 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Paul
-- Create date: <Create Date,,>
-- Description:	This is used when cloning
-- products... it does not clone the actual
-- product, it produces all the other associated
-- records such as versions, related products,
-- attributes, quantity discounts, customer
-- group prices and object config settings for
-- products and versions
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisProducts_CloneRecords](
								@P_ID_OLD as int,
								@P_ID_NEW as int
								)
AS
BEGIN
	
	SET NOCOUNT ON;

-- CREATE VERSIONS	
INSERT INTO tblKartrisVersions
	 (V_CodeNumber, V_ProductID, V_Price, V_Tax, V_Weight, V_DeliveryTime, V_Quantity, V_QuantityWarnLevel, V_Live, V_DownLoadInfo, V_DownloadType, V_OrderByValue, V_RRP, V_Type, 
		V_CustomerGroupID, V_CustomizationType, V_CustomizationDesc, V_CustomizationCost, V_Tax2, V_TaxExtra)
SELECT V_CodeNumber + '[clone-' + Cast(@P_ID_NEW as nvarchar(15)) + ']', @P_ID_NEW, V_Price, V_Tax, V_Weight, V_DeliveryTime, V_Quantity, V_QuantityWarnLevel, V_Live, V_DownLoadInfo, V_DownloadType, V_OrderByValue, V_RRP, V_Type, 
		V_CustomerGroupID, V_CustomizationType, V_CustomizationDesc, V_CustomizationCost, V_Tax2, V_TaxExtra
FROM tblKartrisVersions WHERE V_ProductID=@P_ID_OLD

-- CREATE RELATED PRODUCTS
INSERT INTO tblKartrisRelatedProducts(RP_ParentID, RP_ChildID)
SELECT @P_ID_NEW, RP_ChildID
FROM tblKartrisRelatedProducts
WHERE (RP_ParentID = @P_ID_OLD)

-- CREATE OBJECT CONFIG SETTINGS - PRODUCTS
INSERT INTO tblKartrisObjectConfigValue(OCV_ObjectConfigID, OCV_ParentID, OCV_Value)
SELECT OCV_ObjectConfigID, @P_ID_NEW, OCV_Value
FROM tblKartrisObjectConfigValue INNER JOIN tblKartrisObjectConfig ON OCV_ObjectConfigID=OC_ID
WHERE (OCV_ParentID = @P_ID_OLD) AND OC_ObjectType='Product'

-- CREATE ATTRIBUTE VALUES
INSERT INTO tblKartrisAttributeValues(ATTRIBV_ProductID, ATTRIBV_AttributeID)
SELECT @P_ID_NEW, ATTRIBV_AttributeID
FROM tblKartrisAttributeValues
WHERE (ATTRIBV_ProductID = @P_ID_OLD)

-- COUNT ATTRIBUTES CREATED, LOOP THROUGH THEM
-- AND CREATE LANGUAGE ELEMENTS
-- in-memory temp versions table to hold distinct ATTRIBV_ID
DECLARE @i int
DECLARE @ATTRIBV_ID_OLD int
DECLARE @ATTRIBV_ID_NEW int

-- create and populate table with original product's attributes
DECLARE @tblKartrisAttributeValues_MEMORY_OLD TABLE (
	idx smallint Primary Key IDENTITY(1,1), ATTRIBV_ID int)
INSERT INTO @tblKartrisAttributeValues_MEMORY_OLD(ATTRIBV_ID)
SELECT DISTINCT ATTRIBV_ID FROM tblKartrisAttributeValues WHERE ATTRIBV_ProductID=@P_ID_OLD

-- create and populate table with new product's versions
DECLARE @tblKartrisAttributeValues_MEMORY_NEW TABLE (
	idx smallint Primary Key IDENTITY(1,1), ATTRIBV_ID int)
INSERT INTO @tblKartrisAttributeValues_MEMORY_NEW(ATTRIBV_ID)
SELECT DISTINCT ATTRIBV_ID FROM tblKartrisAttributeValues WHERE ATTRIBV_ProductID=@P_ID_NEW

DECLARE @numrows int
SET @i = 1

-- number of versions, should be same in both tables but we just check NEW
SET @numrows = (SELECT COUNT(ATTRIBV_ProductID) FROM tblKartrisAttributeValues WHERE ATTRIBV_ProductID=@P_ID_NEW)
IF @numrows > 0
	WHILE (@i <= (SELECT MAX(idx) FROM @tblKartrisAttributeValues_MEMORY_NEW))
	BEGIN
		-- get the next version's ID, both old and new
		SET @ATTRIBV_ID_OLD = (SELECT ATTRIBV_ID FROM @tblKartrisAttributeValues_MEMORY_OLD WHERE idx= @i)
		SET @ATTRIBV_ID_NEW = (SELECT ATTRIBV_ID FROM @tblKartrisAttributeValues_MEMORY_NEW WHERE idx= @i)

		-- insert new language elements for this version ID
		INSERT INTO tblKartrisLanguageElements
		(LE_LanguageID, LE_TypeID, LE_FieldID, LE_ParentID, LE_Value)
		SELECT LE_LanguageID, LE_TypeID, LE_FieldID, @ATTRIBV_ID_NEW, LE_Value
		FROM tblKartrisLanguageElements
		WHERE (LE_ParentID = @ATTRIBV_ID_OLD) AND (LE_TypeID = 14)

		-- increment counter for next version
		SET @i = @i + 1
	END

	
-- COUNT VERSIONS CREATED, LOOP THROUGH THEM
-- AND CREATE LANGUAGE ELEMENTS
-- in-memory temp versions table to hold distinct V_ID
DECLARE @V_ID_OLD int
DECLARE @V_ID_NEW int

-- create and populate table with original product's versions
DECLARE @tblKartrisVersions_MEMORY_OLD TABLE (
	idx smallint Primary Key IDENTITY(1,1), V_ID int)
INSERT INTO @tblKartrisVersions_MEMORY_OLD(V_ID)
SELECT DISTINCT V_ID FROM tblKartrisVersions WHERE V_ProductID=@P_ID_OLD

-- create and populate table with new product's versions
DECLARE @tblKartrisVersions_MEMORY_NEW TABLE (
	idx smallint Primary Key IDENTITY(1,1), V_ID int)
INSERT INTO @tblKartrisVersions_MEMORY_NEW(V_ID)
SELECT DISTINCT V_ID FROM tblKartrisVersions WHERE V_ProductID=@P_ID_NEW

SET @i = 1

-- number of versions, should be same in both tables but we just check NEW
SET @numrows = (SELECT COUNT(V_ID) FROM tblKartrisVersions WHERE V_ProductID=@P_ID_NEW)
IF @numrows > 0
	WHILE (@i <= (SELECT MAX(idx) FROM @tblKartrisVersions_MEMORY_NEW))
	BEGIN
		-- get the next version's ID, both old and new
		SET @V_ID_OLD = (SELECT V_ID FROM @tblKartrisVersions_MEMORY_OLD WHERE idx= @i)
		SET @V_ID_NEW = (SELECT V_ID FROM @tblKartrisVersions_MEMORY_NEW WHERE idx= @i)

		-- insert new language elements for this version ID
		INSERT INTO tblKartrisLanguageElements
		(LE_LanguageID, LE_TypeID, LE_FieldID, LE_ParentID, LE_Value)
		SELECT LE_LanguageID, LE_TypeID, LE_FieldID, @V_ID_NEW, LE_Value
		FROM tblKartrisLanguageElements
		WHERE (LE_ParentID = @V_ID_OLD) AND (LE_TypeID = 1)

		-- insert new object config settings for this version
		INSERT INTO tblKartrisObjectConfigValue(OCV_ObjectConfigID, OCV_ParentID, OCV_Value)
		SELECT OCV_ObjectConfigID, @V_ID_NEW, OCV_Value
		FROM tblKartrisObjectConfigValue INNER JOIN tblKartrisObjectConfig ON OCV_ObjectConfigID=OC_ID
		WHERE (OCV_ParentID = @V_ID_OLD) AND OC_ObjectType='Version'

		-- insert customer group prices
		INSERT INTO tblKartrisCustomerGroupPrices
		(CGP_CustomerGroupID, CGP_VersionID, CGP_Price)
		SELECT CGP_CustomerGroupID, @V_ID_NEW, CGP_Price
		FROM tblKartrisCustomerGroupPrices
		WHERE (CGP_VersionID = @V_ID_OLD)

		-- insert quantity discounts
		INSERT INTO tblKartrisQuantityDiscounts
		(QD_VersionID, QD_Quantity, QD_Price)
		SELECT @V_ID_NEW, QD_Quantity, QD_Price
		FROM tblKartrisQuantityDiscounts
		WHERE (QD_VersionID = @V_ID_OLD)

		-- increment counter for next version
		SET @i = @i + 1
	END
END
GO

/****** Object:  Table [dbo].[tblKartrisStockNotifications]    Script Date: 30/05/2016 10:12:20 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

SET ANSI_PADDING ON
GO

CREATE TABLE [dbo].[tblKartrisStockNotifications](
	[SNR_ID] [bigint] IDENTITY(1,1) NOT NULL,
	[SNR_UserEmail] [nvarchar](255) NOT NULL,
	[SNR_VersionID] [bigint] NOT NULL,
	[SNR_PageLink] [nvarchar](255) NOT NULL,
	[SNR_ProductName] [nvarchar](255) NOT NULL,
	[SNR_DateCreated] [datetime] NOT NULL,
	[SNR_Status] [varchar](1) NOT NULL CONSTRAINT [DF_tblKartrisStockNotifications_SNR_Status]  DEFAULT ('w'),
	[SNR_DateSettled] [datetime] NULL,
	[SNR_UserIP] [varchar](50) NOT NULL,
	[SNR_LanguageID] [tinyint] NOT NULL,
 CONSTRAINT [PK_tblKartrisStockNotifications] PRIMARY KEY CLUSTERED 
(
	[SNR_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

SET ANSI_PADDING OFF
GO
/****** Object:  Index [SNR_VersionID_Status]    Script Date: 26/05/2016 13:04:22 ******/
CREATE NONCLUSTERED INDEX [SNR_VersionID_Status] ON [dbo].[tblKartrisStockNotifications]
(
	[SNR_VersionID] ASC,
	[SNR_Status] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO

/****** Object:  Index [SNR_UserEmail]    Script Date: 26/05/2016 13:04:48 ******/
CREATE NONCLUSTERED INDEX [SNR_UserEmail] ON [dbo].[tblKartrisStockNotifications]
(
	[SNR_UserEmail] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO

/****** Object:  StoredProcedure [dbo].[spKartrisStockNotification_Add]    Script Date: 27/05/2016 10:05:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Paul
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spKartrisStockNotification_Add]
(
	@UserEmail as nvarchar(255),
	@VersionID as bigint,
	@PageLink as nvarchar(255),
	@ProductName as nvarchar(255),
	@OpenedDate as datetime,
	@UserIP as varchar(50),
	@LanguageID as tinyint,
	@newSNR_ID as bigint OUTPUT
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	INSERT INTO tblKartrisStockNotifications (SNR_UserEmail, SNR_VersionID, SNR_PageLink, SNR_ProductName, SNR_DateCreated, SNR_UserIP, SNR_LanguageID)
	VALUES (@UserEmail, @VersionID, @PageLink, @ProductName, @OpenedDate, @UserIP, @LanguageID);

	SELECT @newSNR_ID  = SCOPE_IDENTITY();
	
END
GO

/****** Object:  StoredProcedure [dbo].[_spKartrisStockNotifications_Search]    Script Date: 28/05/2016 18:28:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Paul
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisStockNotifications_Search]
(
	@VersionID as bigint,
	@strStatus as varchar(1)
)
AS
BEGIN
	SELECT SNR_ID, SNR_UserEmail, SNR_VersionID, SNR_PageLink, SNR_ProductName, SNR_DateCreated, SNR_LanguageID
	  FROM tblKartrisStockNotifications WHERE SNR_VersionID=@VersionID AND SNR_Status=@strStatus
END
GO

/****** Object:  StoredProcedure [dbo].[_spKartrisStockNotification_Update]    Script Date: 30/05/2016 10:38:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Paul
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisStockNotification_Update]
(
	@SNR_ID as bigint,
	@DateSettled as datetime,
	@strStatus as varchar(1)
)
AS
BEGIN
	UPDATE tblKartrisStockNotifications SET SNR_DateSettled=@DateSettled, SNR_Status=@strStatus
	  WHERE SNR_ID=@SNR_ID
END
GO

/****** Object:  StoredProcedure [dbo].[_spKartrisStockNotifications_GetDetails]    Script Date: 31/05/2016 21:24:26 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Paul
-- Create date: <Create Date,,>
-- Description:	Full list of waiting stock
-- notification requests
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisStockNotifications_GetDetails]
(
	@strStatus as varchar(1)
)
AS
BEGIN

	If @strStatus='w'
		SELECT *, dbo.fnKartrisVersions_GetProductID(SNR_VersionID) As P_ID FROM  tblKartrisStockNotifications
		WHERE SNR_Status='w' ORDER BY SNR_DateCreated DESC
	ELSE
		SELECT *, dbo.fnKartrisVersions_GetProductID(SNR_VersionID) As P_ID FROM  tblKartrisStockNotifications
		WHERE SNR_Status='s' ORDER BY SNR_DateSettled DESC
	END
GO

/****** NEW CONFIG SETTING TO TURN ON STOCK NOTIFICATION FEATURES ******/
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES
 (N'general.stocknotification.enabled', N'y', N's', N't', N'y|n', N'Allow customers to request notifications when out of stock item is back in stock', 2.9005, N'y', 0)
GO

/****** Object:  StoredProcedure [dbo].[_spKartrisStockNotifications_GetVersions]    Script Date: 31/05/2016 11:32:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Paul
-- Create date: <Create Date,,>
-- Description:	This sproc finds versions with
-- bulktimestamp value of a date (not null) that
-- is bigger than 1901/1/1. These will be 
-- versions that were imported by the data tool
-- or otherwise via _spKartrisVersions_Update
-- outside of the Kartris back end (ones done
-- via back end will run a check and send for
-- notifications where relevant anyway).
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisStockNotifications_GetVersions]

AS
BEGIN
	SELECT *,
	Coalesce(V_BulkUpdateTimeStamp, '1900/1/1') As BulkUpdateTimeStamp
	FROM tblKartrisVersions WHERE
	Coalesce(V_BulkUpdateTimeStamp, '1900/1/1')>'1901/1/1' AND V_QuantityWarnLevel>0 AND V_Quantity>0 AND V_Live=1 
END
GO

/****** Object:  StoredProcedure [dbo].[_spKartrisVersions_UpdateBulkTimeStamp]    Script Date: 01/06/2016 17:23:40 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Paul
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[_spKartrisVersions_UpdateBulkTimeStamp]
(
	@V_ID as bigint
)							
AS
BEGIN
	
	SET NOCOUNT ON;

	UPDATE tblKartrisVersions SET V_BulkUpdateTimeStamp = NULL
	WHERE V_ID = @V_ID;
END
GO

/****** 2.9005 'Nofity me' and stock warnings ******/
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NotifyMe', N'Notify me', NULL, 2.9005, N'Notify me', NULL, N'StockNotification',1);
GO
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'f', N'ContentText_NotifyMeDetails', N'Enter your email address and we''ll send you a notification when [productname] is back in stock.', NULL, 2.9005, N'Enter your email address and we''ll send you a notification when [productname] is back in stock.', NULL, N'StockNotification',1);
GO
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_StockNotification', N'Back in stock', 'Subject line of stock notification emails', 2.9005, N'Back in stock', NULL, N'_StockNotification',1);
GO
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_StockNotifications', N'Stock Notifications', 'Task list heading for stock notifications', 2.9005, N'Stock Notifications', NULL, N'_StockNotification',1);
GO
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_VersionsAwaitingCheck', N'Awaiting Check: ', '', 2.9005, N'Awaiting Check: ', NULL, N'_StockNotification',1);
GO
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_RunNotificationsCheck', N'Run Notifications Check', '', 2.9005, N'Run Notifications Check', NULL, N'_StockNotification',1);
GO

/****** 2.9006 Ability to update price/weight of products using options ******/
INSERT [dbo].[tblKartrisLanguageStrings] ([LS_FrontBack], [LS_Name], [LS_Value], [LS_Description], [LS_VersionAdded], [LS_DefaultValue], [LS_VirtualPath], [LS_ClassName], [LS_LangID]) VALUES (N'b', N'ContentText_OptionValuesReset', N'Update products using this option with above price and weight?', NULL, 2.9006, N'Update products using this option with above price and weight?', NULL, N'_Options',1);
GO

/****** Object:  2.9006 StoredProcedure [dbo].[_spKartrisProductOptionLink_Update]    Script Date: 09/09/2016 17:04:48 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[_spKartrisProductOptionLink_Update]
(
	@P_OPT_OptionID int,
	@P_OPT_PriceChange decimal(18,4),
	@P_OPT_WeightChange decimal(18,4)
)
AS
	SET NOCOUNT OFF;

	UPDATE	tblKartrisProductOptionLink 
	SET		P_OPT_PriceChange = @P_OPT_PriceChange, 
			P_OPT_WeightChange = @P_OPT_WeightChange
	WHERE	((P_OPT_OptionID = @P_OPT_OptionID));
GO

/****** Set this to tell Data tool which version of db we have ******/
INSERT [dbo].[tblKartrisConfig] ([CFG_Name], [CFG_Value], [CFG_DataType], [CFG_DisplayType], [CFG_DisplayInfo], [CFG_Description], [CFG_VersionAdded], [CFG_DefaultValue], [CFG_Important]) VALUES (N'general.kartrisinfo.versionadded', N'2.9005', N's', N's', N'kartris version', N'', 2.9005, N'2.9005', 0)
GO
/****** Object:  StoredProcedure [dbo].[_spKartrisFeeds_GetItems]    Script Date: 20/10/2016 16:18:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ===================================================
-- Author:		Paul
-- Create date: 20/10/2016 13:53:30
-- Description:	Pulls pages, cats and prods for
-- google sitemap file
-- ===================================================
CREATE PROCEDURE [dbo].[_spKartrisFeeds_GetItems]
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

		SELECT 't' as RecordType, PAGE_ID As ItemID, '' as LANG_Culture, PAGE_Name FROM vKartrisTypePages WHERE PAGE_Live=1
		UNION
		SELECT 'c' as RecordType, CAT_ID As ItemID, LANG_Culture, CAT_Name FROM vKartrisTypeCategories INNER JOIN tblKartrisLanguages ON vKartrisTypeCategories.LANG_ID=tblKartrisLanguages.LANG_ID WHERE CAT_Live=1 AND LANG_LiveFront=1
		UNION
		SELECT 'p' as RecordType, P_ID As ItemID, LANG_Culture, P_Name FROM vKartrisTypeProducts  INNER JOIN tblKartrisLanguages ON vKartrisTypeProducts.LANG_ID=tblKartrisLanguages.LANG_ID WHERE P_Live=1 AND LANG_LiveFront=1
		UNION
		SELECT 'n' as RecordType, N_ID As ItemID, (SELECT LANG_Culture FROM tblKartrisLanguages WHERE tblKartrisLanguages.LANG_ID=vKartrisTypeNews.LANG_ID) AS LANG_Culture, N_Name FROM vKartrisTypeNews
END
GO
/****** Object:  Index [ADR_UserID]    Script Date: 23/10/2016 16:02:53 ******/
CREATE NONCLUSTERED INDEX [ADR_UserID] ON [dbo].[tblKartrisAddresses]
(
	[ADR_UserID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO

