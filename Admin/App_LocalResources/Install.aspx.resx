<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CannotUpdateWebConfigNote" xml:space="preserve">
    <value>&lt;strong&gt;Note:&lt;/strong&gt; The ASP.NET Process Account (NETWORK SERVICE or ASPNET) on your server doesn't have write permissions to the Kartris application folder, preventing this setup page from automatically updating your web.config file. You can still download a copy of the output web.config at the end of the setup and then upload this to your web site root manually.</value>
  </data>
  <data name="ConnectionString.Text" xml:space="preserve">
    <value>Connection String</value>
  </data>
  <data name="Error_CannotReadLicenseText" xml:space="preserve">
    <value>Cannot read license number from License config file in </value>
  </data>
  <data name="Error_ConnectionFailedText" xml:space="preserve">
    <value>Connection failed to database. Error returned:</value>
  </data>
  <data name="Error_InvalidLicensePathEnteredText" xml:space="preserve">
    <value>You've entered an invalid path</value>
  </data>
  <data name="Error_KartrisAlreadyInstalled" xml:space="preserve">
    <value>Kartris is already installed.</value>
  </data>
  <data name="Error_OpeningWebConfig" xml:space="preserve">
    <value>Error opening web.config file. Installation cancelled.</value>
  </data>
  <data name="Error_StillCannotReadLicenseText" xml:space="preserve">
    <value>Still cannot find License config file in </value>
  </data>
  <data name="PageTitle.Text" xml:space="preserve">
    <value>Kartris Installation</value>
  </data>
  <data name="Password.Text" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PressNextToContinue.Text" xml:space="preserve">
    <value>Please press &amp;#39;Next&amp;#39; to continue.</value>
  </data>
  <data name="Step1_Description.Text" xml:space="preserve">
    <value>To continue, please enter in your &lt;strong&gt;license number&lt;/strong&gt; in the box below. This will act as a password for the installation process. If you cannot locate this or don't have a record of it, check your &lt;em&gt;license.config&lt;/em&gt; file - the license number should be clearly listed in the 'licenseinfo' block.</value>
  </data>
  <data name="Step1_Error_CannotFindLicenseFile.Text" xml:space="preserve">
    <value>Cannot find your license config file. Please enter the correct license config path in the box below and hit the &amp;#39;check&amp;#39; button. (e.g. &amp;quot;~/&amp;quot; or &amp;quot;~/licensefolder&amp;quot;)</value>
  </data>
  <data name="Step1_Error_LicenseDontMatchText" xml:space="preserve">
    <value>The license number you entered does not match the one in the license.config file placed on the root of this web site. Check your order email and the license.config file and ensure you copy it exactly, with no leading or trailing spaces.</value>
  </data>
  <data name="Step1_Header.Text" xml:space="preserve">
    <value>Step 1 - Welcome</value>
  </data>
  <data name="Step2_Error_HashKeyRequiredText" xml:space="preserve">
    <value>You need to enter a new Hash Key!</value>
  </data>
  <data name="Step2_Header.Text" xml:space="preserve">
    <value>Step 2 - Hash Salt Key</value>
  </data>
  <data name="Step2_litHashDesc_Text" xml:space="preserve">
    <value>The hash salt key is used to secure passwords within the database. We recommend you use the random value we've created below.</value>
  </data>
  <data name="Step2_YourHashKeyAlreadySetTo" xml:space="preserve">
    <value>Your Hash Key is already set to</value>
  </data>
  <data name="Step2_YourHashKeyAlreadySetTo_2" xml:space="preserve">
    <value>. Just click on the 'Next' button if you want to keep this key. Otherwise, enter a new key.</value>
  </data>
  <data name="Step3_CheckingConnection.Text" xml:space="preserve">
    <value>Checking Database Connection Details...</value>
  </data>
  <data name="Step3_DatabaseName.Text" xml:space="preserve">
    <value>Database Name</value>
  </data>
  <data name="Step3_EnterDetails.Text" xml:space="preserve">
    <value>Enter connection details below</value>
  </data>
  <data name="Step3_FailedText" xml:space="preserve">
    <value>FAILED!</value>
  </data>
  <data name="Step3_Header.Text" xml:space="preserve">
    <value>Step 3 - Connection String</value>
  </data>
  <data name="Step3_ServerName.Text" xml:space="preserve">
    <value>Server Name</value>
  </data>
  <data name="Step3_Success.Text" xml:space="preserve">
    <value>Success!</value>
  </data>
  <data name="Step3_SuccessText" xml:space="preserve">
    <value>SUCCESS!</value>
  </data>
  <data name="Step3_UseWindowsAuthentication" xml:space="preserve">
    <value>Use Windows Authentication</value>
  </data>
  <data name="Step4_AccountGenerated.Text" xml:space="preserve">
    <value>A back end admin account has been generated for you. &lt;strong&gt;Please ensure you keep these details safe&lt;/strong&gt;. You may change them later from the admin area if you wish.</value>
  </data>
  <data name="Step4_ConnectionSuccessful.Text" xml:space="preserve">
    <value>Connection to database successful!</value>
  </data>
  <data name="Step4_DatabaseAlreadyContains.Text" xml:space="preserve">
    <value>Your database already contains the structure and data required to run Kartris.</value>
  </data>
  <data name="Step4_DatabaseNowReady.Text" xml:space="preserve">
    <value>Your database is now ready to be used for Kartris.</value>
  </data>
  <data name="Step4_DatabaseSetupSuccess.Text" xml:space="preserve">
    <value>Setting up your database for Kartris use... success!</value>
  </data>
  <data name="Step4_Header.Text" xml:space="preserve">
    <value>Step 4 - Set Up Database</value>
  </data>
  <data name="Step5_Error_UpdatingConfigSettingsText" xml:space="preserve">
    <value>Error updating Kartris config settings</value>
  </data>
  <data name="Step5_Header.Text" xml:space="preserve">
    <value>Step 5 - Important Config Settings</value>
  </data>
  <data name="Step6_Error_MustDownloadWebConfigText" xml:space="preserve">
    <value>You must download the modified web.config first!</value>
  </data>
  <data name="Step6_Header.Text" xml:space="preserve">
    <value>Step 6 - Folder Permissions</value>
  </data>
  <data name="Step6_RetryTests" xml:space="preserve">
    <value>Retry Tests</value>
  </data>
  <data name="Step6_TestingImages.Text" xml:space="preserve">
    <value>Testing 'Images' Folder...</value>
  </data>
  <data name="Step6_TestingUploads.Text" xml:space="preserve">
    <value>Testing 'Uploads' Folder...</value>
  </data>
  <data name="Step7_CannotUpdateWebConfigText" xml:space="preserve">
    <value>Cannot update web.config file. Click on the 'download web.config' button below to download a copy of the web.config file with the updated settings. You need to manually overwrite the file on your Kartris root folder.</value>
  </data>
  <data name="Step7_HashSaltKey.Text" xml:space="preserve">
    <value>Hash Salt Key:</value>
  </data>
  <data name="Step7_Header.Text" xml:space="preserve">
    <value>Step 7 - Review Settings</value>
  </data>
  <data name="Step7_LicensePath.Text" xml:space="preserve">
    <value>License Path:</value>
  </data>
  <data name="Step7_NoChangesToWebConfigText" xml:space="preserve">
    <value>None of the new settings require changes to the web.config file. Please click 'Finish' to complete the setup.</value>
  </data>
  <data name="Step7_ReviewSettingsDesc" xml:space="preserve">
    <value>The following settings will be saved to your web.config file. Click 'Finish' to commit the changes.</value>
  </data>
  <data name="Step8_Congratulations.Text" xml:space="preserve">
    <value>Congratulations, you&amp;#39;ve successfully set up your Kartris shopping cart.</value>
  </data>
  <data name="Step8_DownloadWebConfigButtonText" xml:space="preserve">
    <value>Download Web.Config</value>
  </data>
  <data name="Step8_Header.Text" xml:space="preserve">
    <value>Step 8 - Setup Complete!</value>
  </data>
  <data name="Step8_ReminderToUploadNewWebConfig" xml:space="preserve">
    <value>&lt;strong&gt;Don't forget!&lt;/strong&gt; You need to upload the web.config file you've downloaded from this setup routine to your site, overwriting the existing one. After doing this, you should be able to access the site using the links below.</value>
  </data>
  <data name="Step8_ViewFrontEnd.Text" xml:space="preserve">
    <value>Store front end (public)</value>
  </data>
  <data name="Step8_YouCanLoginBackend.Text" xml:space="preserve">
    <value>Store admin area (private)</value>
  </data>
  <data name="Username.Text" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="Step1_IntroMessage.Text" xml:space="preserve">
    <value>Please proceed with the setup routine. If you experience any problems, or are unsure of what to enter for any particular fields, the &lt;strong&gt;help&lt;/strong&gt; link at the top right of each page will take you to help for that specific step.</value>
  </data>
  <data name="Step6_TestingPayment.Text" xml:space="preserve">
    <value>Testing 'Plugins' Folder...</value>
  </data>
  <data name="PleaseWait.Text" xml:space="preserve">
    <value>Please wait... this might take a few minutes</value>
  </data>
  <data name="Retry.Text" xml:space="preserve">
    <value>Retry</value>
  </data>
  <data name="Step3_UserInstance" xml:space="preserve">
    <value>Use User Instance (SQL Server Express only) - this simplifies setup by using the .MDF database file within the App_Data folder of the web site&lt;br /&gt;&lt;strong&gt;WARNING: this is rather slow; don't do this with a live web site&lt;/strong&gt;</value>
    <comment>DEPRECATED</comment>
  </data>
  <data name="HelpAndFurtherInfo.Text" xml:space="preserve">
    <value>Help with this step</value>
  </data>
  <data name="Step1_CheckAgain.Text" xml:space="preserve">
    <value>Check Again</value>
  </data>
  <data name="Step1_InvalidLicense.Text" xml:space="preserve">
    <value>Your license file is not valid. Please ensure you don't change the license.config file supplied in any way.</value>
  </data>
  <data name="Step1_LicenseValid.Text" xml:space="preserve">
    <value> </value>
    <comment>Your license file (license.config) is valid. (OLDVALUE)</comment>
  </data>
  <data name="Step3_CreateNewDB.Text" xml:space="preserve">
    <value>Create a new database</value>
  </data>
  <data name="Step3_UseExistingDB.Text" xml:space="preserve">
    <value>Use an existing database</value>
  </data>
  <data name="Step3_ConnectionStringFound.Text" xml:space="preserve">
    <value>This database connection was found:</value>
  </data>
  <data name="Step3_TimeDelay.Text" xml:space="preserve">
    <value>&lt;strong&gt;Please note:&lt;/strong&gt; Creating a new database can take several minutes. Please be aware that once you click 'next' below, it may take a while before the next step appears. Be patient, and let the wizard complete the step.</value>
  </data>
  <data name="Step3_UseThisConnection.Text" xml:space="preserve">
    <value>Continue using this connection</value>
  </data>
  <data name="Step3_Help.Text" xml:space="preserve">
    <value>If you're not sure what to enter here, use the help link on the top right of the page.</value>
  </data>
  <data name="Step6_Error_PermissionsNotSetText" xml:space="preserve">
    <value>Folder permissions check failed! You can still proceed but unless you rectify the permissions issues, you may be unable to upload files such as product images and videos.</value>
  </data>
  <data name="Step5_litTaxRegimeDesc_Text" xml:space="preserve">
    <value>This will set the tax handling in the web.config of your store. You can change this later if necessary by editing the web.config.</value>
  </data>
  <data name="Step5_TaxRegime_Text" xml:space="preserve">
    <value>Tax Regime</value>
  </data>
  <data name="Step7_TaxRegime.Text" xml:space="preserve">
    <value>Tax Regime: </value>
  </data>
  <data name="Error_RequiredField" xml:space="preserve">
    <value>Required!</value>
  </data>
</root>